<?xml version="1.0" encoding="UTF-8"?>
<project name="ProofVisualization" default="build.jars" basedir=".">

<!-- $Format: "<property name=\"version\" value=\"1.$ProjectVersion$\"/>"$ -->
<property name="version" value="1.muerkKeYC.4"/>

	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>

	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="false"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="true"/>
	<property name="javacSource" value="1.4"/>
	<property name="javacTarget" value="1.4"/>
	<property name="compilerArg" value=""/>
	
	<property name="KeYExternalLibraries.location" value="../KeYExternalLibraries"/>
	<property name="KeYPlugin.location" value="../KeYPlugin"/>
	<property name="org.key-project.core.location" value="../org.key-project.core"/>
	  
	 <path id="project.classpath">
	        <path refid="mainproject.classpath"/>
	        <path refid="KeYExternalLibraries.classpath"/>
	        <path refid="KeYPlugin.classpath"/>
	        <path refid="org.key-project.core.classpath"/>
	    </path>
	    <path id="mainproject.classpath">
	        <pathelement location="bin"/>
	        <pathelement location="${eclipse.home}/plugins/org.eclipse.ui_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.swt_3.1.0.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.swt.gtk.linux.x86_3.1.1.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.jface_3.1.1.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.commands_3.1.0.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.workbench_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.resources_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.runtime_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.osgi_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.jface.text_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.text_3.1.1.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.ide_3.1.1.jar"/>
	    </path>
	    <path id="KeYExternalLibraries.classpath">
	        <pathelement location="${KeYExternalLibraries.location}/antlr.jar"/>
	        <pathelement location="${KeYExternalLibraries.location}/dresden-ocl-demo.jar"/>
	        <pathelement location="${KeYExternalLibraries.location}/jargs.jar"/>
	        <pathelement location="${KeYExternalLibraries.location}/javacc.jar"/>
	        <pathelement location="${KeYExternalLibraries.location}/junit.jar"/>
	        <pathelement location="${KeYExternalLibraries.location}/log4j.jar"/>
	        <pathelement location="${KeYExternalLibraries.location}/recoder.jar"/>
	        <pathelement location="${KeYExternalLibraries.location}/xerces.jar"/>
	    </path>
	    <path id="KeYPlugin.classpath">
	        <pathelement location="${KeYPlugin.location}/bin"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.runtime_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.osgi_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.ui_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.swt_3.1.0.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.swt.gtk.linux.x86_3.1.1.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.jface_3.1.1.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.commands_3.1.0.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.workbench_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.jdt.core_3.1.2.jar"/>
	        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.resources_3.1.2.jar"/>
	    </path>
	    <path id="org.key-project.core.classpath">
	        <pathelement location="${org.key-project.core.location}/key.jar"/>
	    </path>
	
	
	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/ProofVisualization">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>

	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: ProofVisualization for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip destfile="${plugin.destination}/ProofVisualization_${version}.jar" basedir="${temp.folder}/ProofVisualization_${version}" filesonly="false" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="ProofVisualization.jar" depends="init" unless="ProofVisualization.jar" description="Create jar: ProofVisualization ProofVisualization.jar.">
		<delete dir="${temp.folder}/ProofVisualization.jar.bin"/>
		<mkdir dir="${temp.folder}/ProofVisualization.jar.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/ProofVisualization.jar.bin" failonerror="${javacFailOnError}" source="${javacSource}" target="${javacTarget}">
			<compilerarg line="${compilerArg}"/>
			<src path="src/"/>
			<classpath refid="project.classpath"/>			
		</javac>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/ProofVisualization.jar.bin" failonerror="true" overwrite="false">
			<fileset dir="src/" excludes="**/*.java, **/package.htm*,null"			/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar destfile="${build.result.folder}/ProofVisualization.jar" basedir="${temp.folder}/ProofVisualization.jar.bin"/>
		<delete dir="${temp.folder}/ProofVisualization.jar.bin"/>
	</target>

	<target name="ProofVisualizationsrc.zip" depends="init" unless="ProofVisualizationsrc.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip destfile="${build.result.folder}/ProofVisualizationsrc.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src/" includes="**/*.java"			/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: ProofVisualization.">
		<available property="ProofVisualization.jar" file="${build.result.folder}/ProofVisualization.jar"/>
		<antcall target="ProofVisualization.jar"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="ProofVisualizationsrc.zip" file="${build.result.folder}/ProofVisualizationsrc.zip"/>
		<antcall target="ProofVisualizationsrc.zip"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/ProofVisualization_${version}"/>
		<copy todir="${destination.temp.folder}/ProofVisualization_${version}" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}" includes="ProofVisualization.jar"			/>
		</copy>
		<copy todir="${destination.temp.folder}/ProofVisualization_${version}" failonerror="true" overwrite="false">
			<fileset dir="${basedir}" includes="plugin.xml,icons/,jars/,ProofVisualization.jar,key.jar"			/>
		</copy>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/ProofVisualization_${version}"/>
		<copy file="${build.result.folder}/ProofVisualizationsrc.zip" todir="${destination.temp.folder}/ProofVisualization_${version}" failonerror="false" overwrite="false"/>
		<copy todir="${destination.temp.folder}/ProofVisualization_${version}" failonerror="false" overwrite="false">
			<fileset dir="${basedir}" includes="src/,plugin.xml,icons/,ProofVisualization.jar"			/>
		</copy>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/ProofVisualization_${version}"/>
		<copy file="${temp.folder}/ProofVisualization.jar.bin.log" todir="${destination.temp.folder}/ProofVisualization_${version}" failonerror="false" overwrite="false"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: ProofVisualization of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/ProofVisualization.jar"/>
		<delete file="${build.result.folder}/ProofVisualizationsrc.zip"/>
		<delete file="${plugin.destination}/ProofVisualization_${version}.jar"/>
		<delete file="${plugin.destination}/ProofVisualization_${version}.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="${basedir}" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: ProofVisualization.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
		</delete>
		<zip destfile="${plugin.destination}/ProofVisualization_${version}.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

</project>
