<?xml version="1.0" encoding="UTF-8"?>
<project name="ProofVisualization" default="build.jars" basedir=".">

	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>

	<property environment="env"/>


	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="true"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="true"/>
	<property name="javacSource" value="1.5"/>
	<property name="javacTarget" value="1.5"/>
	<property name="compilerArg" value=""/>


	<path id="path_bootclasspath">
		<fileset dir="${java.home}/lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	<property name="bootclasspath" refid="path_bootclasspath"/>

	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/ProofVisualization">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>

	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: ProofVisualization for an update site.">
	  <delete dir="${temp.folder}"/>
	  <mkdir dir="${temp.folder}"/>
	  <antcall target="build.jars"/>
	  <antcall target="gather.bin.parts">
	    <param name="destination.temp.folder" value="${temp.folder}/"/>
	  </antcall>
	  <zip destfile="${plugin.destination}/ProofVisualization_${env.KEY_VERSION_SHORT}.jar" basedir="${temp.folder}/ProofVisualization_${env.KEY_VERSION_SHORT}" filesonly="false" whenempty="skip" update="false"/>
	  <delete dir="${temp.folder}"/>
	</target>

	<target name="ProofVisualization.jar" depends="init" unless="ProofVisualization.jar" description="Create jar: ProofVisualization ProofVisualization.jar.">
	  <delete dir="${temp.folder}/ProofVisualization.jar.bin"/>
	  <mkdir dir="${temp.folder}/ProofVisualization.jar.bin"/>
	  <!-- compile the source code -->
	  <javac destdir="${temp.folder}/ProofVisualization.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" source="${javacSource}" target="${javacTarget}"		>
	    <compilerarg line="${compilerArg}"/>
	    <classpath>
	      <pathelement path="../KeYExternalLibraries/jcoverage.jar" />
	      <pathelement path="../KeYExternalLibraries/antlr.jar" />
	      <pathelement path="../KeYExternalLibraries/javacc.jar" />
	      <pathelement path="../KeYExternalLibraries/junit.jar" />
	      <pathelement path="../KeYExternalLibraries/log4j.jar" />
	      <pathelement path="../KeYExternalLibraries/recoderKey.jar" />
	      <pathelement path="../org.key-project.core/key.jar" />
	      <pathelement location="../KeYPlugin"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.ui_3.3.1.M20071128-0800.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.swt_3.3.2.v3349d.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.swt.gtk.linux.x86_3.3.2.v3349.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.jface_3.3.2.M20080207-0800.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.core.commands_3.3.0.I20070605-0010.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.workbench_3.3.2.M20080207-0800.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.core.resources_3.3.1.R33x_v20080205.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.core.runtime_3.3.100.v20070530.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.osgi_3.3.2.R33x_v20080105.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.equinox.common_3.3.0.v20070426.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.core.jobs_3.3.1.R33x_v20070709.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.core.runtime.compatibility.registry_3.2.100.v20070316/runtime_registry_compatibility.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.equinox.registry_3.3.1.R33x_v20070802.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.equinox.preferences_3.2.101.R33x_v20080117.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.core.contenttype_3.2.100.v20070319.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.equinox.app_1.0.1.R33x_v20070828.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.jface.text_3.3.2.r332_20071017-0800.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.text_3.3.0.v20070606-0010.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.ide_3.3.2.M20080207-0800.jar"/>
	      <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.views_3.2.101.M20080207-0800.jar"/>
	    </classpath>
	    <src path="src/"			/>
	  </javac>
	  <!-- Copy necessary resources -->
	  <copy todir="${temp.folder}/ProofVisualization.jar.bin" failonerror="true" overwrite="false">
	    <fileset dir="src/" excludes="**/*.java, **/package.htm*,null"			/>
	  </copy>
	  <mkdir dir="${build.result.folder}"/>
	  <jar destfile="${build.result.folder}/ProofVisualization.jar" basedir="${temp.folder}/ProofVisualization.jar.bin"/>
	  <delete dir="${temp.folder}/ProofVisualization.jar.bin"/>
	</target>

	<target name="ProofVisualizationsrc.zip" depends="init" unless="ProofVisualizationsrc.zip">
	  <mkdir dir="${build.result.folder}"/>
	  <zip destfile="${build.result.folder}/ProofVisualizationsrc.zip" filesonly="false" whenempty="skip" update="false">
	    <fileset dir="src/" includes="**/*.java"			/>
	  </zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: ProofVisualization.">
	  <available property="ProofVisualization.jar" file="${build.result.folder}/ProofVisualization.jar"/>
	  <antcall target="ProofVisualization.jar"/>
	</target>

	<target name="build.sources" depends="init">
	  <available property="ProofVisualizationsrc.zip" file="${build.result.folder}/ProofVisualizationsrc.zip"/>
	  <antcall target="ProofVisualizationsrc.zip"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
	  <mkdir dir="${destination.temp.folder}/ProofVisualization_${env.KEY_VERSION_SHORT}"/>
	  <copy todir="${destination.temp.folder}/ProofVisualization_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false">
	    <fileset dir="${build.result.folder}" includes="ProofVisualization.jar"			/>
	  </copy>
	  <copy todir="${destination.temp.folder}/ProofVisualization_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false">
	    <fileset dir="${basedir}" includes="plugin.xml,icons/,ProofVisualization.jar"		/>
	  </copy>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/ProofVisualization_${env.KEY_VERSION_SHORT}"/>
		<copy file="${build.result.folder}/ProofVisualizationsrc.zip" todir="${destination.temp.folder}/ProofVisualization_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false"/>
		<copy todir="${destination.temp.folder}/ProofVisualization_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false">
			<fileset dir="${basedir}" includes="src/,plugin.xml,icons/,ProofVisualization.jar"			/>
		</copy>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/ProofVisualization_${env.KEY_VERSION_SHORT}"/>
		<copy file="${temp.folder}/ProofVisualization.jar.bin.log" todir="${destination.temp.folder}/ProofVisualization_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: ProofVisualization of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/ProofVisualization.jar"/>
		<delete file="${build.result.folder}/ProofVisualizationsrc.zip"/>
		<delete file="${plugin.destination}/ProofVisualization_${env.KEY_VERSION_SHORT}.jar"/>
		<delete file="${plugin.destination}/ProofVisualization_${env.KEY_VERSION_SHORT}.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="${basedir}" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: ProofVisualization.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
		</delete>
		<zip destfile="${plugin.destination}/ProofVisualization_${env.KEY_VERSION_SHORT}.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

</project>
