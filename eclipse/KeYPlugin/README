KeY plug-in for Eclipse
=======================

This path is the location of the eclipse plug-in for proof invocation
which was introduced at the KeY Workshop 2005.

Functionality
=============

- "Start Proof For Method"
	in the context menu of methods in the java specific views (Outline /
	Package Explorer) 
	allows the user to start a proof for the selected
	method 
	
- "Start Proof For Project"
	in the context menu of java projects in the Package Explorer
	allows the user to start a proof for the selected project


Requirements
============

The plug-in was tested with eclipse SDK 3.0.2 and 3.1M4.
It should work with other versions 3.0.x or 3.1 Mx as well, but probably not
with eclipse 2.1.


Location
========

The eclipse plug-in may be found in the directory eclipse/KeY which contains an
eclipse plug-in project. The file plugin.xml defines and configures the
plug-in's functions.


Building/Installing/Running
===========================

========*========*========*========*========*========*========*========*
For automatic stand-alone builds of the plug-in, a Makefile and an ant
script have been added.

To build the plug-in, simply run
ECLIPSE_HOME=<path to your eclipse installation> make
which will create KeYPlugin_1.0.0.zip.

To install, simply unzip this file in your eclipse installation's
directory.  The plug-in should be active after the next start of
eclipse.

The ant script used to build the plug-in need to contain explicit
version numbers of some of the used eclipse components.
Therefore a special build.xml is needed for every eclipse version
you want to build the plug-in against (using this automatic system).

For the two most common cases, 3.0.2 and 3.1 (release version),
appropriate ant scripts are included.
3.1 is the default, otherwise you have to explicitly pass the eclipse
version to make via
ECLIPSE_HOME=<path> ECLIPSE_VERSION=<version> make
e.g. ECLIPSE_HOME=~/eclipse-3.0.2 ECLIPSE_VERSION=3.0.2 make


Building/Installing manually
============================

At first do a "make dist" in key's system directory. This creates key.jar which
is needed by the plug-in (symlinked from system/ to eclipse/KeYPlugin).

Now open the project by selecting File->Import and "Existing project into
workspace". In the dialog opened via "Browse..." select the directory
eclipse/KeYPlugIn". 
	(This dialog's handling is different in 3.0.2 from 3.1 -
	3.0.2: navigate into eclipse/KeYPlugIn;
	3.1: navigate into eclipse/ and only select KeYPlugIn, no double-click)
Building is now done automatically by eclipse.

For a first test of the plug-in, open plugin.xml in the plug-in project and
select "Launch a runtime workbench" (labelled slightly different in 3.1) in the
lower left of the Overview dialog (see the tabs at the bottom of the editor).

For permanent installation or binary distribution, the eclipse plug-in
development tools provide an "Export Wizard" in the Deployment section in the
lower right of the Overview tab.
It allows multiple targets for deployment, most important are
	* "a single ZIP file" (which must be unpacked in the directory of the
	  eclipse installation) and
	* "a directory structure" (select the eclipse directory of your
	  installation for direct deployment).
	  
After installing the plug-in, you have to restart eclipse to make eclipse load
the plug-in's specification and enable its functionality.


Not working (the way it should) yet
===================================

- on first invocation of "select proof obligations for method", after loading
	the java model a dummy proof (=>true) is created to provide a proof
	environment from which the user-defined proofs are invocated.


Problems/Bugs
=============
*********=*********=*********=*********=*********=*********=*********=*********=
Since the proof obligation selection dialog does not block the KeY prover
window, one can perform "abandon task" and thereby delete the proof environment
before finishing the proof invocation in the dialog. Consequently this will
fail without further notice (throws a NullPointerException swallowed by the SWT
event loop).
