<?xml version="1.0" encoding="UTF-8"?>
<project name="VisualDebugger" default="build.jars" basedir=".">

	<property name="basews" value="${ws}" />
	<property name="baseos" value="${os}" />
	<property name="basearch" value="${arch}" />
	<property name="basenl" value="${nl}" />

	<property environment="env" />

	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="true" />
	<property name="javacDebugInfo" value="on" />
	<property name="javacVerbose" value="true" />
	<property name="javacSource" value="1.5" />
	<property name="javacTarget" value="1.5" />
	<property name="compilerArg" value="" />

    <path id="Plug-in Dependencies.libraryclasspath">
        <pathelement location="../org.key-project.core"/>
        <pathelement location="../KeYPlugin"/>
        <pathelement location="../KeYExternalLibraries"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.ui_3.2.1.M20060913-0800.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.swt_3.2.1.v3235e.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.swt.gtk.linux.x86_3.2.1.v3235.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.jface_3.2.1.M20060908-1000.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.commands_3.2.0.I20060605-1400.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.workbench_3.2.1.M20060906-0800.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.runtime_3.2.0.v20060603.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.osgi_3.2.1.R32x_v20060919.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.equinox.common_3.2.0.v20060603.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.jobs_3.2.0.v20060603.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.runtime.compatibility.registry_3.2.1.R32x_v20060907/runtime_registry_compatibility.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.equinox.registry_3.2.1.R32x_v20060814.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.equinox.preferences_3.2.1.R32x_v20060717.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.contenttype_3.2.0.v20060603.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.jdt.core_3.2.1.v_677_R32x.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.resources_3.2.1.R32x_v20060914.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.editors_3.2.1.r321_v20060721.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.core.filebuffers_3.2.1.r321_v20060721.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.jdt.ui_3.2.1.r321_v20060907.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.ide_3.2.1.M20060915-1030.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.ui.workbench.texteditor_3.2.0.v20060605-1400.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.jface.text_3.2.1.r321_v20060810.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.text_3.2.0.v20060605-1400.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.draw2d_3.2.2.v20070208.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.jdt.launching_3.2.1.r321_v20060731.jar"/>
        <pathelement location="${eclipse_home}/plugins/org.eclipse.jdt.junit_3.2.1.r321_v20060810/junitsupport.jar"/>
	<pathelement path="../org.key-project.core/key.jar" />
        <pathelement path="../KeYPlugin/KeYPlugin.jar "/>
    </path>
    <path id="VisualDebugger.classpath">
        <pathelement location="bin"/>
        <path refid="Plug-in Dependencies.libraryclasspath"/>
    </path>

    <target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder" />
		</condition>
		<property name="pluginTemp" value="${basedir}" />
		<condition property="build.result.folder" value="${pluginTemp}/VisualDebugger">
			<isset property="buildTempFolder" />
		</condition>
		<property name="build.result.folder" value="${basedir}" />
		<property name="temp.folder" value="${basedir}/temp.folder" />
		<property name="plugin.destination" value="${basedir}" />
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />

	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: VisualDebugger for an update site.">
		<delete dir="${temp.folder}" />
		<mkdir dir="${temp.folder}" />
		<antcall target="build.jars" />
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/" />
		</antcall>
		<zip destfile="${plugin.destination}/VisualDebugger_${env.KEY_VERSION_SHORT}.jar" basedir="${temp.folder}/VisualDebugger_${env.KEY_VERSION_SHORT}" filesonly="false" whenempty="skip" update="false" />
		<delete dir="${temp.folder}" />
	</target>

	<target name="VisualDebugger.jar" depends="init" unless="VisualDebugger.jar" description="Create jar: VisualDebugger VisualDebugger.jar.">
		<delete dir="${temp.folder}/VisualDebugger.jar.bin" />
		<mkdir dir="${temp.folder}/VisualDebugger.jar.bin" />
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/VisualDebugger.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" source="${javacSource}" target="${javacTarget}">
			<compilerarg line="${compilerArg}" />
			<src path="src/" />
			<classpath refid="VisualDebugger.classpath" />
		</javac>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/VisualDebugger.jar.bin" failonerror="true" overwrite="false">
			<fileset dir="src/" excludes="**/*.java, **/package.htm*,null" />
		</copy>
		<mkdir dir="${build.result.folder}" />
		<jar destfile="${build.result.folder}/VisualDebugger.jar" basedir="${temp.folder}/VisualDebugger.jar.bin" />
		<delete dir="${temp.folder}/VisualDebugger.jar.bin" />
	</target>

	<target name="VisualDebuggersrc.zip" depends="init" unless="VisualDebuggersrc.zip">
		<mkdir dir="${build.result.folder}" />
		<zip destfile="${build.result.folder}/VisualDebuggersrc.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src/, icons/, META-INF/, plugin.xml" includes="**/*.java" />
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: VisualDebugger.">
		<available property="VisualDebugger.jar" file="${build.result.folder}/VisualDebugger.jar" />
		<antcall target="VisualDebugger.jar" />
	</target>

	<target name="build.sources" depends="init">
		<available property="VisualDebuggersrc.zip" file="${build.result.folder}/VisualDebuggersrc.zip" />
		<antcall target="VisualDebuggersrc.zip" />
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/VisualDebugger_${env.KEY_VERSION_SHORT}" />
		<copy todir="${destination.temp.folder}/VisualDebugger_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}" includes="VisualDebugger.jar" />
		</copy>
		<copy todir="${destination.temp.folder}/VisualDebugger_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false">
			<fileset dir="${basedir}" includes="plugin.xml,README,VisualDebugger.jar,icons/,META-INF/" />
		</copy>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/VisualDebugger_${env.KEY_VERSION_SHORT}" />
		<copy file="${build.result.folder}/VisualDebuggersrc.zip" todir="${destination.temp.folder}/VisualDebugger_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false" />
		<copy todir="${destination.temp.folder}/VisualDebugger_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false">
  	        <fileset dir="${basedir}" includes="src/,plugin.xml" />
		</copy>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/VisualDebugger_${env.KEY_VERSION_SHORT}" />
		<copy file="${temp.folder}/VisualDebugger.jar.bin.log" todir="${destination.temp.folder}/VisualDebugger_${env.KEY_VERSION_SHORT}" failonerror="true" overwrite="false" />
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: VisualDebugger of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/VisualDebugger.jar" />
		<delete file="${build.result.folder}/VisualDebuggersrc.zip" />
		<delete file="${plugin.destination}/VisualDebugger_${env.KEY_VERSION_SHORT}.jar" />
		<delete file="${plugin.destination}/VisualDebugger_${env.KEY_VERSION_SHORT}.zip" />
		<delete dir="${temp.folder}" />
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="${basedir}" property="resourcePath" />
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite" />
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: VisualDebugger.">
		<delete dir="${temp.folder}" />
		<mkdir dir="${temp.folder}" />
		<antcall target="build.jars" />
		<antcall target="build.sources" />
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/" />
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/" />
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log" />
		</delete>
		<zip destfile="${plugin.destination}/VisualDebugger_${env.KEY_VERSION_SHORT}.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false" />
		<delete dir="${temp.folder}" />
	</target>

</project>
