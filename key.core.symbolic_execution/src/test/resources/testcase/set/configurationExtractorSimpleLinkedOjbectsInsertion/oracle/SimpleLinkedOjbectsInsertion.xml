<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call SimpleLinkedOjbectsInsertion.compute(x)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="x.value=1;" pathCondition="true" pathConditionChanged="false">
         <branchCondition name="not(equals(x,null))" pathCondition="not(equals(x,null))" pathConditionChanged="true" branchCondition="not(equals(x,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <statement name="x.next.value=2;" pathCondition="not(equals(x,null))" pathConditionChanged="false">
               <branchCondition name="not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))" pathCondition="and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="true" branchCondition="not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <statement name="x.next.next.value=3;" pathCondition="and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false">
                     <branchCondition name="not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null))" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="true" branchCondition="not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                        <statement name="SimpleLinkedOjbectsInsertion y = new SimpleLinkedOjbectsInsertion ();" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false">
                           <methodCall name="&lt;call SimpleLinkedOjbectsInsertion()&gt;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false">
                              <methodReturn name="&lt;return of SimpleLinkedOjbectsInsertion&gt;" signature="&lt;return of SimpleLinkedOjbectsInsertion()&gt;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="true">
                                 <statement name="y.value=4;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false">
                                    <statement name="y.next=x.next;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false">
                                       <statement name="x.next=y;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false">
                                          <statement name="return x.value+x.next.value+x.next.next.value+x.next.next.next.value;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false">
                                             <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of SimpleLinkedOjbectsInsertion.compute(x)&gt;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))">
                                                <termination name="&lt;end&gt;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),not(equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                                </termination>
                                             </methodReturn>
                                          </statement>
                                       </statement>
                                    </statement>
                                 </statement>
                              </methodReturn>
                              <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0"/>
                           </methodCall>
                        </statement>
                     </branchCondition>
                     <branchCondition name="equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null))" pathConditionChanged="true" branchCondition="equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                        <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call SimpleLinkedOjbectsInsertion.compute(x)&gt;&gt;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null))" pathConditionChanged="false" methodReturnCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null))">
                           <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(and(not(equals(x,null)),not(equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))),equals(SimpleLinkedOjbectsInsertion::select(heap,SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),SimpleLinkedOjbectsInsertion::$next),null))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                           </termination>
                        </exceptionalMethodReturn>
                     </branchCondition>
                  </statement>
               </branchCondition>
               <branchCondition name="equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null)" pathCondition="and(not(equals(x,null)),equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))" pathConditionChanged="true" branchCondition="equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call SimpleLinkedOjbectsInsertion.compute(x)&gt;&gt;" pathCondition="and(not(equals(x,null)),equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))" pathConditionChanged="false" methodReturnCondition="and(not(equals(x,null)),equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))">
                     <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(not(equals(x,null)),equals(SimpleLinkedOjbectsInsertion::select(heap,x,SimpleLinkedOjbectsInsertion::$next),null))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                     </termination>
                  </exceptionalMethodReturn>
               </branchCondition>
            </statement>
         </branchCondition>
         <branchCondition name="equals(x,null)" pathCondition="equals(x,null)" pathConditionChanged="true" branchCondition="equals(x,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
            <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call SimpleLinkedOjbectsInsertion.compute(x)&gt;&gt;" pathCondition="equals(x,null)" pathConditionChanged="false" methodReturnCondition="equals(x,null)">
               <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(x,null)" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
               </termination>
            </exceptionalMethodReturn>
         </branchCondition>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/1/0"/>
      <methodReturnEntry path="/0/0/0/0/1/0"/>
      <methodReturnEntry path="/0/0/1/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/1/0/0"/>
</start>
