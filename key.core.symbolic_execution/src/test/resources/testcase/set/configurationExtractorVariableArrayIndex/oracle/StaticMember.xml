<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call self.compute()&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="this.array[this.index]=42;" pathCondition="true" pathConditionChanged="false">
         <branchCondition name="or(lt(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),geq(int::select(heap,self,VariableArrayIndex::$index),Z(0(#)))),lt(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array)))))" pathCondition="imp(geq(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),geq(int::select(heap,self,VariableArrayIndex::$index),Z(0(#)))),lt(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array)))))" pathConditionChanged="true" branchCondition="or(lt(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),geq(int::select(heap,self,VariableArrayIndex::$index),Z(0(#)))),lt(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array)))))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <statement name="return this.array[this.index];" pathCondition="imp(geq(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),geq(int::select(heap,self,VariableArrayIndex::$index),Z(0(#)))),lt(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array)))))" pathConditionChanged="false">
               <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute()&gt;" pathCondition="imp(geq(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),geq(int::select(heap,self,VariableArrayIndex::$index),Z(0(#)))),lt(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array)))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="imp(geq(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),geq(int::select(heap,self,VariableArrayIndex::$index),Z(0(#)))),lt(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array)))))">
                  <termination name="&lt;end&gt;" pathCondition="imp(geq(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),geq(int::select(heap,self,VariableArrayIndex::$index),Z(0(#)))),lt(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array)))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                  </termination>
               </methodReturn>
            </statement>
         </branchCondition>
         <branchCondition name="equals(int[]::select(heap,self,VariableArrayIndex::$array),null)" pathCondition="equals(int[]::select(heap,self,VariableArrayIndex::$array),null)" pathConditionChanged="true" branchCondition="equals(int[]::select(heap,self,VariableArrayIndex::$array),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
            <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call self.compute()&gt;&gt;" pathCondition="equals(int[]::select(heap,self,VariableArrayIndex::$array),null)" pathConditionChanged="false" methodReturnCondition="equals(int[]::select(heap,self,VariableArrayIndex::$array),null)">
               <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(int[]::select(heap,self,VariableArrayIndex::$array),null)" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
               </termination>
            </exceptionalMethodReturn>
         </branchCondition>
         <branchCondition name="or(lt(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),or(leq(int::select(heap,self,VariableArrayIndex::$index),Z(neglit(1(#)))),geq(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array))))))" pathCondition="imp(geq(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),or(leq(int::select(heap,self,VariableArrayIndex::$index),Z(neglit(1(#)))),geq(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array))))))" pathConditionChanged="true" branchCondition="or(lt(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),or(leq(int::select(heap,self,VariableArrayIndex::$index),Z(neglit(1(#)))),geq(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array))))))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <exceptionalMethodReturn name="&lt;throw java.lang.ArrayIndexOutOfBoundsException&gt;" signature="&lt;exceptional return of &lt;call self.compute()&gt;&gt;" pathCondition="imp(geq(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),or(leq(int::select(heap,self,VariableArrayIndex::$index),Z(neglit(1(#)))),geq(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array))))))" pathConditionChanged="false" methodReturnCondition="imp(geq(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),or(leq(int::select(heap,self,VariableArrayIndex::$index),Z(neglit(1(#)))),geq(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array))))))">
               <termination name="&lt;uncaught java.lang.ArrayIndexOutOfBoundsException&gt;" pathCondition="imp(geq(length(int[]::select(heap,self,VariableArrayIndex::$array)),Z(0(#))),and(not(equals(int[]::select(heap,self,VariableArrayIndex::$array),null)),or(leq(int::select(heap,self,VariableArrayIndex::$index),Z(neglit(1(#)))),geq(int::select(heap,self,VariableArrayIndex::$index),length(int[]::select(heap,self,VariableArrayIndex::$array))))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
               </termination>
            </exceptionalMethodReturn>
         </branchCondition>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/1/0"/>
      <methodReturnEntry path="/0/0/2/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/1/0/0"/>
   <terminationEntry path="/0/0/2/0/0"/>
</start>
