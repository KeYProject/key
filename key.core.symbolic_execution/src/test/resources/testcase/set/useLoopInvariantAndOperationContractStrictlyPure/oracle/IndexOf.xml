<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call IndexOf.indexOf(array, toSearch, comperator)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="int index = -1;" pathCondition="true" pathConditionChanged="false">
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <loopInvariant name="invariant: (i &gt;= 0 &amp; i &lt;= array.length)&lt;&lt;SC&gt;&gt;;
variant: array.length - i
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <branchCondition name="and(and(lt(index_1_0,Z(0(#))),or(or(lt(length(array),Z(0(#))),gt(index_1_0,Z(neglit(1(#))))),and(geq(i_0,Z(0(#))),geq(length(array),i_0)))),or(not(equals(array,null)),gt(index_1_0,Z(neglit(1(#))))))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(leq(index_1_0,Z(neglit(1(#)))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="and(and(lt(index_1_0,Z(0(#))),or(or(lt(length(array),Z(0(#))),gt(index_1_0,Z(neglit(1(#))))),and(geq(i_0,Z(0(#))),geq(length(array),i_0)))),or(not(equals(array,null)),gt(index_1_0,Z(neglit(1(#))))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
                  <branchCondition name="not(equals(array,null))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(not(equals(array,null)),leq(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="not(equals(array,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <loopCondition name="index_1 &lt; 0 &amp;&amp; i &lt;= array.length;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(not(equals(array,null)),leq(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" blockOpened="false">
                        <branchStatement name="if (!comperator.equals(array[i], toSearch))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(not(equals(array,null)),leq(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" blockOpened="true">
                           <branchCondition name="gt(length(array),i_0)" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(not(equals(array,null)),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="gt(length(array),i_0)" mergedBranchCondition="false" isBranchConditionComputed="true">
                              <operationContract name="result_equals = var.equals(var_1, var_2) catch(exc_0)
pre: (  var.&lt;inv&gt;&lt;&lt;impl&gt;&gt;
 &amp; (((!var_1 = null)&lt;&lt;impl&gt;&gt; &amp; (!var_2 = null)&lt;&lt;impl&gt;&gt;)&lt;&lt;SC&gt;&gt;))&lt;&lt;SC&gt;&gt;
post: var.&lt;inv&gt;&lt;&lt;impl&gt;&gt; &amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;
mod: {}&lt;&lt;impl&gt;&gt;, creates no new objects
termination: diamond" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(not(equals(array,null)),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" resultTerm="result_equals" exceptionTerm="exc_0" selfTerm="var" contractParameters="var_1, var_2" preconditionComplied="false" hasNotNullCheck="true" notNullCheckComplied="false">
                                 <branchCondition name="and(equals(exc_0,null),not(equals(comperator,null)))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(and(and(not(equals(array,null)),equals(exc_0,null)),not(equals(comperator,null))),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="and(equals(exc_0,null),not(equals(comperator,null)))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Post (equals)">
                                    <branchCondition name="not(equals(result_equals,TRUE))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(and(and(and(not(equals(result_equals,TRUE)),not(equals(array,null))),equals(exc_0,null)),not(equals(comperator,null))),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="not(equals(result_equals,TRUE))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                       <statement name="index_1 = i;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(and(and(and(not(equals(result_equals,TRUE)),not(equals(array,null))),equals(exc_0,null)),not(equals(comperator,null))),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false">
                                          <statement name="i++;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(and(and(and(not(equals(result_equals,TRUE)),not(equals(array,null))),equals(exc_0,null)),not(equals(comperator,null))),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false">
                                             <termination name="&lt;loop body end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(and(and(and(not(equals(result_equals,TRUE)),not(equals(array,null))),equals(exc_0,null)),not(equals(comperator,null))),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                             </termination>
                                          </statement>
                                       </statement>
                                    </branchCondition>
                                    <branchCondition name="equals(result_equals,TRUE)" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(and(and(and(equals(result_equals,TRUE),not(equals(array,null))),equals(exc_0,null)),not(equals(comperator,null))),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="equals(result_equals,TRUE)" mergedBranchCondition="false" isBranchConditionComputed="true">
                                       <statement name="i++;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(and(and(and(equals(result_equals,TRUE),not(equals(array,null))),equals(exc_0,null)),not(equals(comperator,null))),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false">
                                          <termination name="&lt;loop body end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(and(and(and(equals(result_equals,TRUE),not(equals(array,null))),equals(exc_0,null)),not(equals(comperator,null))),leq(index_1_0,Z(neglit(1(#))))),gt(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                          </termination>
                                       </statement>
                                    </branchCondition>
                                 </branchCondition>
                              </operationContract>
                              <completedBlockEntry path="/0/0/0/0/0/0/0/0" conditionString="true"/>
                           </branchCondition>
                           <branchCondition name="leq(length(array),i_0)" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(not(equals(array,null)),leq(index_1_0,Z(neglit(1(#))))),leq(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="leq(length(array),i_0)" mergedBranchCondition="false" isBranchConditionComputed="true">
                              <exceptionalMethodReturn name="&lt;throw java.lang.Throwable&gt;" signature="&lt;exceptional return of &lt;call IndexOf.indexOf(array, toSearch, comperator)&gt;&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(not(equals(array,null)),leq(index_1_0,Z(neglit(1(#))))),leq(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" methodReturnCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(not(equals(array,null)),leq(index_1_0,Z(neglit(1(#))))),leq(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))">
                                 <termination name="&lt;uncaught java.lang.ArrayIndexOutOfBoundsException&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(and(not(equals(array,null)),leq(index_1_0,Z(neglit(1(#))))),leq(length(array),i_0)),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                                 </termination>
                              </exceptionalMethodReturn>
                              <completedBlockEntry path="/0/0/0/0/0/0/0/0" conditionString="true"/>
                           </branchCondition>
                           <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0"/>
                           <blockCompletionEntry path="/0/0/0/0/0/0/0/0/1"/>
                        </branchStatement>
                     </loopCondition>
                  </branchCondition>
                  <branchCondition name="equals(array,null)" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(equals(array,null),leq(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="equals(array,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <loopCondition name="index_1 &lt; 0 &amp;&amp; i &lt;= array.length;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(equals(array,null),leq(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" blockOpened="false">
                        <exceptionalMethodReturn name="&lt;throw java.lang.Throwable&gt;" signature="&lt;exceptional return of &lt;call IndexOf.indexOf(array, toSearch, comperator)&gt;&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(equals(array,null),leq(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" methodReturnCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(equals(array,null),leq(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))">
                           <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(equals(array,null),leq(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),geq(length(array),i_0))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                           </termination>
                        </exceptionalMethodReturn>
                     </loopCondition>
                  </branchCondition>
               </branchCondition>
               <branchCondition name="and(and(or(or(lt(length(array),Z(0(#))),lt(index_1_0,Z(0(#)))),and(geq(i_0,Z(0(#))),geq(length(array),i_0))),gt(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),gt(index_1_0,Z(neglit(1(#))))))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(index_1_0,Z(0(#))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="and(and(or(or(lt(length(array),Z(0(#))),lt(index_1_0,Z(0(#)))),and(geq(i_0,Z(0(#))),geq(length(array),i_0))),gt(index_1_0,Z(neglit(1(#))))),or(not(equals(array,null)),gt(index_1_0,Z(neglit(1(#))))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
                  <statement name="return i;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(index_1_0,Z(0(#))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathConditionChanged="false">
                     <methodReturn name="&lt;return of indexOf&gt;" signature="&lt;return of IndexOf.indexOf(array, toSearch, comperator)&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(index_1_0,Z(0(#))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(index_1_0,Z(0(#))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))">
                        <termination name="&lt;end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(index_1_0,Z(0(#))),or(not(equals(array,null)),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                  </statement>
               </branchCondition>
            </loopInvariant>
         </statement>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/1/0"/>
      <methodReturnEntry path="/0/0/0/0/0/1/0/0"/>
      <methodReturnEntry path="/0/0/0/0/1/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/0/0/0/1/0/0/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0/0"/>
</start>
