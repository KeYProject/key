<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call VariableNestedOperationContractUse.main(x)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="return doubleMagic(magic(x));" pathCondition="true" pathConditionChanged="false">
         <operationContract name="result_magic = magic(x) catch(exc_0)
post: result_magic &gt;  x &amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;
mod: {}&lt;&lt;impl&gt;&gt;, creates no new objects
termination: diamond" pathCondition="true" pathConditionChanged="false" resultTerm="result_magic" exceptionTerm="exc_0" contractParameters="x" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
            <operationContract name="result_doubleMagic = doubleMagic(var) catch(exc_1)
post: result_doubleMagic = var + var &amp; (exc_1 = null)&lt;&lt;impl&gt;&gt;
mod: {}&lt;&lt;impl&gt;&gt;, creates no new objects
termination: diamond" pathCondition="true" pathConditionChanged="false" resultTerm="result_doubleMagic" exceptionTerm="exc_1" contractParameters="var" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
               <methodReturn name="&lt;return of main&gt;" signature="&lt;return of VariableNestedOperationContractUse.main(x)&gt;" pathCondition="true" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="true">
                  <termination name="&lt;end&gt;" pathCondition="true" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                  </termination>
               </methodReturn>
            </operationContract>
         </operationContract>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0"/>
</start>
