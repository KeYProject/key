<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call BlockContractPreconditionNotVerified.main(_x)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="return magic(_x);" pathCondition="true" pathConditionChanged="false">
         <callStackEntry path="/0"/>
         <methodCall name="&lt;call BlockContractPreconditionNotVerified.magic(x_3)&gt;" pathCondition="true" pathConditionChanged="false">
            <callStackEntry path="/0"/>
            <blockContract name="result_0 = magic()) catch(exc_0)
pre measuredByEmpty &amp; x_3 = 4711
post   returned = TRUE
&amp; exc_0 = null
&amp; (returned = TRUE -&gt; result_0 = -2)
mod {}&lt;&lt;impl&gt;&gt;termination diamond" pathCondition="true" pathConditionChanged="false" preconditionComplied="false">
               <callStackEntry path="/0/0/0"/>
               <callStackEntry path="/0"/>
               <branchCondition name="and(and(and(and(equals(returned,TRUE),equals(exc_0,null)),imp(equals(returned,TRUE),equals(result_0,Z(neglit(2(#)))))),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE))),or(not(equals(returned,TRUE)),equals(exc_0,null)))" pathCondition="and(and(and(and(equals(returned,TRUE),equals(exc_0,null)),imp(equals(returned,TRUE),equals(result_0,Z(neglit(2(#)))))),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE))),or(not(equals(returned,TRUE)),equals(exc_0,null)))" pathConditionChanged="true" branchCondition="and(and(and(and(equals(returned,TRUE),equals(exc_0,null)),imp(equals(returned,TRUE),equals(result_0,Z(neglit(2(#)))))),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE))),or(not(equals(returned,TRUE)),equals(exc_0,null)))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Usage">
                  <callStackEntry path="/0/0/0"/>
                  <callStackEntry path="/0"/>
                  <branchCondition name="true" pathCondition="and(and(and(and(equals(returned,TRUE),equals(exc_0,null)),imp(equals(returned,TRUE),equals(result_0,Z(neglit(2(#)))))),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE))),or(not(equals(returned,TRUE)),equals(exc_0,null)))" pathConditionChanged="true" branchCondition="true" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <callStackEntry path="/0/0/0"/>
                     <callStackEntry path="/0"/>
                     <methodReturn name="&lt;return of magic&gt;" signature="&lt;return of BlockContractPreconditionNotVerified.magic(x_3)&gt;" pathCondition="and(and(and(and(equals(returned,TRUE),equals(exc_0,null)),imp(equals(returned,TRUE),equals(result_0,Z(neglit(2(#)))))),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE))),or(not(equals(returned,TRUE)),equals(exc_0,null)))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return Z(neglit(2(#))) as result of magic&gt;" signatureIncludingReturnValue="&lt;return Z(neglit(2(#))) as result of BlockContractPreconditionNotVerified.magic(x_3)&gt;" isReturnValueComputed="true" methodReturnCondition="and(and(and(and(equals(returned,TRUE),equals(exc_0,null)),imp(equals(returned,TRUE),equals(result_0,Z(neglit(2(#)))))),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE))),or(not(equals(returned,TRUE)),equals(exc_0,null)))">
                        <methodReturnValue name="Z(neglit(2(#)))" returnValueString="Z(neglit(2(#)))" hasCondition="false">
                        </methodReturnValue>
                        <callStackEntry path="/0/0/0"/>
                        <callStackEntry path="/0"/>
                        <methodReturn name="&lt;return of main&gt;" signature="&lt;return of BlockContractPreconditionNotVerified.main(_x)&gt;" pathCondition="and(and(and(and(equals(returned,TRUE),equals(exc_0,null)),imp(equals(returned,TRUE),equals(result_0,Z(neglit(2(#)))))),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE))),or(not(equals(returned,TRUE)),equals(exc_0,null)))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return Z(neglit(2(#))) as result of main&gt;" signatureIncludingReturnValue="&lt;return Z(neglit(2(#))) as result of BlockContractPreconditionNotVerified.main(_x)&gt;" isReturnValueComputed="true" methodReturnCondition="and(and(and(and(equals(returned,TRUE),equals(exc_0,null)),imp(equals(returned,TRUE),equals(result_0,Z(neglit(2(#)))))),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE))),or(not(equals(returned,TRUE)),equals(exc_0,null)))">
                           <methodReturnValue name="Z(neglit(2(#)))" returnValueString="Z(neglit(2(#)))" hasCondition="false">
                           </methodReturnValue>
                           <callStackEntry path="/0"/>
                           <termination name="&lt;end&gt;" pathCondition="and(and(and(and(equals(returned,TRUE),equals(exc_0,null)),imp(equals(returned,TRUE),equals(result_0,Z(neglit(2(#)))))),or(equals(exc_0,null),equals(boolean::select(heap,exc_0,java.lang.Object::&lt;created&gt;),TRUE))),or(not(equals(returned,TRUE)),equals(exc_0,null)))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                           </termination>
                        </methodReturn>
                     </methodReturn>
                  </branchCondition>
               </branchCondition>
            </blockContract>
            <methodReturnEntry path="/0/0/0/0/0/0/0"/>
         </methodCall>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0"/>
</start>
