<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call WhileWithMethodCallAsCondition.size(array)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="int result = 0;" pathCondition="true" pathConditionChanged="false">
         <callStackEntry path="/0"/>
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <callStackEntry path="/0"/>
            <loopInvariant name="invariant: ((i &gt;= 0 &amp; i &lt;= array.length)&lt;&lt;SC&gt;&gt; &amp; result_1 = i)&lt;&lt;SC&gt;&gt;;
variant: javaSubInt(array.length, i)
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <callStackEntry path="/0"/>
               <methodCall name="&lt;call WhileWithMethodCallAsCondition.goOnNice(array_2,i_2)&gt;" pathCondition="true" pathConditionChanged="false">
                  <callStackEntry path="/0"/>
                  <statement name="throw new RuntimeException ();" pathCondition="true" pathConditionChanged="false">
                     <callStackEntry path="/0/0/0/0/0"/>
                     <callStackEntry path="/0"/>
                     <exceptionalMethodReturn name="&lt;throw java.lang.RuntimeException&gt;" signature="&lt;exceptional return of &lt;call WhileWithMethodCallAsCondition.goOnNice(array_2,i_2)&gt;&gt;" pathCondition="true" pathConditionChanged="false" methodReturnCondition="true">
                        <callStackEntry path="/0/0/0/0/0"/>
                        <callStackEntry path="/0"/>
                        <exceptionalMethodReturn name="&lt;throw java.lang.Throwable&gt;" signature="&lt;exceptional return of &lt;call WhileWithMethodCallAsCondition.size(array)&gt;&gt;" pathCondition="true" pathConditionChanged="false" methodReturnCondition="true">
                           <callStackEntry path="/0"/>
                           <termination name="&lt;uncaught java.lang.RuntimeException&gt;" pathCondition="true" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                           </termination>
                        </exceptionalMethodReturn>
                     </exceptionalMethodReturn>
                  </statement>
                  <methodReturnEntry path="/0/0/0/0/0/0/0"/>
               </methodCall>
            </loopInvariant>
         </statement>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0"/>
</start>
