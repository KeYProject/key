<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call SimpleObjectQuery.main(x)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="int magicValue = magic(x);" pathCondition="true" pathConditionChanged="false">
         <operationContract name="result_magic = magic(x) catch(exc_0)
pre: (SimpleObjectQuery.&lt;$inv&gt;&lt;&lt;impl&gt;&gt; &amp; (!x = null)&lt;&lt;impl&gt;&gt;)&lt;&lt;SC&gt;&gt;
post:   (result_magic = SimpleObjectQuery.subMagic(x)
&amp; SimpleObjectQuery.&lt;$inv&gt;&lt;&lt;impl&gt;&gt;)&lt;&lt;SC&gt;&gt;
&amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;
mod: {}
termination: diamond" pathCondition="true" pathConditionChanged="false" resultTerm="result_magic" exceptionTerm="exc_0" contractParameters="x" preconditionComplied="false" hasNotNullCheck="false" notNullCheckComplied="false">
            <branchCondition name="equals(exc_0,null)" pathCondition="equals(exc_0,null)" pathConditionChanged="true" branchCondition="equals(exc_0,null)" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Post (magic)">
               <statement name="return magicValue;" pathCondition="equals(exc_0,null)" pathConditionChanged="false">
                  <methodReturn name="&lt;return of main&gt;" signature="&lt;return of SimpleObjectQuery.main(x)&gt;" pathCondition="equals(exc_0,null)" pathConditionChanged="false" nameIncludingReturnValue="&lt;return 
	res_subMagic {equals(x,null)}, 
	Z(2(4(#))) {and(not(equals(x,null)),equals(java.lang.Object::select(heap,null,SimpleObjectQuery::$INSTANCE),x))}, 
	Z(neglit(1(1(7(4(#)))))) {and(not(equals(x,null)),not(equals(java.lang.Object::select(heap,null,SimpleObjectQuery::$INSTANCE),x)))}
as result of main&gt;" signatureIncludingReturnValue="&lt;return 
	res_subMagic {equals(x,null)}, 
	Z(2(4(#))) {and(not(equals(x,null)),equals(java.lang.Object::select(heap,null,SimpleObjectQuery::$INSTANCE),x))}, 
	Z(neglit(1(1(7(4(#)))))) {and(not(equals(x,null)),not(equals(java.lang.Object::select(heap,null,SimpleObjectQuery::$INSTANCE),x)))}
as result of SimpleObjectQuery.main(x)&gt;" isReturnValueComputed="true" methodReturnCondition="equals(exc_0,null)">
                     <methodReturnValue name="res_subMagic {equals(x,null)}" returnValueString="res_subMagic" hasCondition="true" conditionString="equals(x,null)">
                     </methodReturnValue>
                     <methodReturnValue name="Z(2(4(#))) {and(not(equals(x,null)),equals(java.lang.Object::select(heap,null,SimpleObjectQuery::$INSTANCE),x))}" returnValueString="Z(2(4(#)))" hasCondition="true" conditionString="and(not(equals(x,null)),equals(java.lang.Object::select(heap,null,SimpleObjectQuery::$INSTANCE),x))">
                     </methodReturnValue>
                     <methodReturnValue name="Z(neglit(1(1(7(4(#)))))) {and(not(equals(x,null)),not(equals(java.lang.Object::select(heap,null,SimpleObjectQuery::$INSTANCE),x)))}" returnValueString="Z(neglit(1(1(7(4(#))))))" hasCondition="true" conditionString="and(not(equals(x,null)),not(equals(java.lang.Object::select(heap,null,SimpleObjectQuery::$INSTANCE),x)))">
                     </methodReturnValue>
                     <termination name="&lt;end&gt;" pathCondition="equals(exc_0,null)" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                     </termination>
                  </methodReturn>
               </statement>
            </branchCondition>
         </operationContract>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0"/>
</start>
