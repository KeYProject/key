<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call self.main(x)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="int magicValue = magic(x);" pathCondition="true" pathConditionChanged="false">
         <operationContract name="result_magic = self.magic(x) catch(exc_0)
pre: self.&lt;inv&gt;&lt;&lt;impl&gt;&gt;
post:   (result_magic = self.subMagic(x)
&amp; self.&lt;inv&gt;&lt;&lt;impl&gt;&gt;)&lt;&lt;SC&gt;&gt;
&amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;
mod: {}
termination: diamond" pathCondition="true" pathConditionChanged="false" resultTerm="result_magic" exceptionTerm="exc_0" selfTerm="self" contractParameters="x" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
            <statement name="return magicValue;" pathCondition="true" pathConditionChanged="false">
               <methodReturn name="&lt;return of main&gt;" signature="&lt;return of self.main(x)&gt;" pathCondition="true" pathConditionChanged="false" nameIncludingReturnValue="&lt;return 
	Z(6(6(1(1(2(4(#))))))) {and(gt(x,Z(neglit(1(#)))),and(equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#)))),equals(int::select(heap,null,QueryWithFields::$classField),Z(6(6(#))))))}, 
	Z(2(4(#))) {or(and(and(geq(x,Z(0(#))),not(equals(int::select(heap,null,QueryWithFields::$classField),Z(6(6(#)))))),equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#))))),and(geq(x,Z(0(#))),not(equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#)))))))}, 
	Z(neglit(1(1(7(4(#)))))) {lt(x,Z(0(#)))}
as result of main&gt;" signatureIncludingReturnValue="&lt;return 
	Z(6(6(1(1(2(4(#))))))) {and(gt(x,Z(neglit(1(#)))),and(equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#)))),equals(int::select(heap,null,QueryWithFields::$classField),Z(6(6(#))))))}, 
	Z(2(4(#))) {or(and(and(geq(x,Z(0(#))),not(equals(int::select(heap,null,QueryWithFields::$classField),Z(6(6(#)))))),equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#))))),and(geq(x,Z(0(#))),not(equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#)))))))}, 
	Z(neglit(1(1(7(4(#)))))) {lt(x,Z(0(#)))}
as result of self.main(x)&gt;" isReturnValueComputed="true" methodReturnCondition="true">
                  <methodReturnValue name="Z(6(6(1(1(2(4(#))))))) {and(gt(x,Z(neglit(1(#)))),and(equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#)))),equals(int::select(heap,null,QueryWithFields::$classField),Z(6(6(#))))))}" returnValueString="Z(6(6(1(1(2(4(#)))))))" hasCondition="true" conditionString="and(gt(x,Z(neglit(1(#)))),and(equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#)))),equals(int::select(heap,null,QueryWithFields::$classField),Z(6(6(#))))))">
                  </methodReturnValue>
                  <methodReturnValue name="Z(2(4(#))) {or(and(and(geq(x,Z(0(#))),not(equals(int::select(heap,null,QueryWithFields::$classField),Z(6(6(#)))))),equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#))))),and(geq(x,Z(0(#))),not(equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#)))))))}" returnValueString="Z(2(4(#)))" hasCondition="true" conditionString="or(and(and(geq(x,Z(0(#))),not(equals(int::select(heap,null,QueryWithFields::$classField),Z(6(6(#)))))),equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#))))),and(geq(x,Z(0(#))),not(equals(int::select(heap,self,QueryWithFields::$instanceField),Z(1(1(#)))))))">
                  </methodReturnValue>
                  <methodReturnValue name="Z(neglit(1(1(7(4(#)))))) {lt(x,Z(0(#)))}" returnValueString="Z(neglit(1(1(7(4(#))))))" hasCondition="true" conditionString="lt(x,Z(0(#)))">
                  </methodReturnValue>
                  <termination name="&lt;end&gt;" pathCondition="true" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                  </termination>
               </methodReturn>
            </statement>
         </operationContract>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0"/>
</start>
