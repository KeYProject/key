<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <variable name="heapAtPre" isArrayIndex="false">
      <value name="heapAtPre {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
      </value>
   </variable>
   <methodCall name="&lt;call ArrayCreationTest.main(n)&gt;" pathCondition="true" pathConditionChanged="false">
      <variable name="exc" isArrayIndex="false">
         <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
         </value>
      </variable>
      <statement name="array=new int[n];" pathCondition="true" pathConditionChanged="false">
         <variable name="n" isArrayIndex="false">
            <value name="n {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
            </value>
         </variable>
         <variable name="exc" isArrayIndex="false">
            <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
            </value>
         </variable>
         <statement name="array[0]=100;" pathCondition="true" pathConditionChanged="false">
            <variable name="n" isArrayIndex="false">
               <value name="n {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="exc" isArrayIndex="false">
               <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
               </value>
            </variable>
            <variable name="ArrayCreationTest::array" isArrayIndex="false">
               <value name="ArrayCreationTest::array {true}" typeString="int[]" valueString="x_arr_2" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                  <variable name="length" isArrayIndex="false">
                     <value name="length {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="x_arr_2[*]" isArrayIndex="false">
                     <value name="x_arr_2[*] {and(geq(*,Z(0(#))),gt(n,*))}" typeString="int" valueString="Z(0(#))" isValueAnObject="false" isValueUnknown="false" conditionString="and(geq(*,Z(0(#))),gt(n,*))">
                     </value>
                  </variable>
               </value>
            </variable>
            <statement name="array[1]=array[2];" pathCondition="true" pathConditionChanged="false">
               <variable name="n" isArrayIndex="false">
                  <value name="n {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <variable name="exc" isArrayIndex="false">
                  <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <variable name="ArrayCreationTest::array" isArrayIndex="false">
                  <value name="ArrayCreationTest::array {true}" typeString="int[]" valueString="x_arr_2" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                     <variable name="length" isArrayIndex="false">
                        <value name="length {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="x_arr_2[*]" isArrayIndex="false">
                        <value name="x_arr_2[*] {and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#))))}" typeString="int" valueString="Z(0(0(1(#))))" isValueAnObject="false" isValueUnknown="false" conditionString="and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#))))">
                        </value>
                        <value name="x_arr_2[*] {and(and(geq(*,Z(0(#))),gt(n,*)),not(equals(*,Z(0(#)))))}" typeString="int" valueString="Z(0(#))" isValueAnObject="false" isValueUnknown="false" conditionString="and(and(geq(*,Z(0(#))),gt(n,*)),not(equals(*,Z(0(#)))))">
                        </value>
                     </variable>
                  </value>
               </variable>
               <statement name="array[3]=array[0];" pathCondition="true" pathConditionChanged="false">
                  <variable name="n" isArrayIndex="false">
                     <value name="n {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="exc" isArrayIndex="false">
                     <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="ArrayCreationTest::array" isArrayIndex="false">
                     <value name="ArrayCreationTest::array {true}" typeString="int[]" valueString="x_arr_2" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                        <variable name="length" isArrayIndex="false">
                           <value name="length {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <variable name="x_arr_2[*]" isArrayIndex="false">
                           <value name="x_arr_2[*] {and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#))))}" typeString="int" valueString="Z(0(0(1(#))))" isValueAnObject="false" isValueUnknown="false" conditionString="and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#))))">
                           </value>
                           <value name="x_arr_2[*] {and(and(geq(*,Z(0(#))),gt(n,*)),not(equals(*,Z(0(#)))))}" typeString="int" valueString="Z(0(#))" isValueAnObject="false" isValueUnknown="false" conditionString="and(and(geq(*,Z(0(#))),gt(n,*)),not(equals(*,Z(0(#)))))">
                           </value>
                        </variable>
                     </value>
                  </variable>
                  <statement name="return array;" pathCondition="true" pathConditionChanged="false">
                     <variable name="n" isArrayIndex="false">
                        <value name="n {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="exc" isArrayIndex="false">
                        <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="ArrayCreationTest::array" isArrayIndex="false">
                        <value name="ArrayCreationTest::array {true}" typeString="int[]" valueString="x_arr_2" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                           <variable name="length" isArrayIndex="false">
                              <value name="length {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <variable name="x_arr_2[*]" isArrayIndex="false">
                              <value name="x_arr_2[*] {or(and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#)))),and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),equals(*,Z(3(#))))))}" typeString="int" valueString="Z(0(0(1(#))))" isValueAnObject="false" isValueUnknown="false" conditionString="or(and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#)))),and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),equals(*,Z(3(#))))))">
                              </value>
                              <value name="x_arr_2[*] {and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),not(equals(*,Z(3(#))))))}" typeString="int" valueString="Z(0(#))" isValueAnObject="false" isValueUnknown="false" conditionString="and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),not(equals(*,Z(3(#))))))">
                              </value>
                           </variable>
                        </value>
                     </variable>
                     <methodReturn name="&lt;return of main&gt;" signature="&lt;return of ArrayCreationTest.main(n)&gt;" pathCondition="true" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="true">
                        <variable name="n" isArrayIndex="false">
                           <value name="n {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <variable name="exc" isArrayIndex="false">
                           <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                        <variable name="ArrayCreationTest::array" isArrayIndex="false">
                           <value name="ArrayCreationTest::array {true}" typeString="int[]" valueString="x_arr_2" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                              <variable name="length" isArrayIndex="false">
                                 <value name="length {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                                 </value>
                              </variable>
                              <variable name="x_arr_2[*]" isArrayIndex="false">
                                 <value name="x_arr_2[*] {or(and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#)))),and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),equals(*,Z(3(#))))))}" typeString="int" valueString="Z(0(0(1(#))))" isValueAnObject="false" isValueUnknown="false" conditionString="or(and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#)))),and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),equals(*,Z(3(#))))))">
                                 </value>
                                 <value name="x_arr_2[*] {and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),not(equals(*,Z(3(#))))))}" typeString="int" valueString="Z(0(#))" isValueAnObject="false" isValueUnknown="false" conditionString="and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),not(equals(*,Z(3(#))))))">
                                 </value>
                              </variable>
                           </value>
                        </variable>
                        <termination name="&lt;end&gt;" pathCondition="true" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                           <variable name="exc" isArrayIndex="false">
                              <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <variable name="ArrayCreationTest::array" isArrayIndex="false">
                              <value name="ArrayCreationTest::array {true}" typeString="int[]" valueString="x_arr_2" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                                 <variable name="length" isArrayIndex="false">
                                    <value name="length {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                                    </value>
                                 </variable>
                                 <variable name="x_arr_2[*]" isArrayIndex="false">
                                    <value name="x_arr_2[*] {or(and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#)))),and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),equals(*,Z(3(#))))))}" typeString="int" valueString="Z(0(0(1(#))))" isValueAnObject="false" isValueUnknown="false" conditionString="or(and(and(geq(*,Z(0(#))),gt(n,*)),equals(*,Z(0(#)))),and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),equals(*,Z(3(#))))))">
                                    </value>
                                    <value name="x_arr_2[*] {and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),not(equals(*,Z(3(#))))))}" typeString="int" valueString="Z(0(#))" isValueAnObject="false" isValueUnknown="false" conditionString="and(and(geq(*,Z(0(#))),gt(n,*)),and(not(equals(*,Z(0(#)))),not(equals(*,Z(3(#))))))">
                                    </value>
                                 </variable>
                              </value>
                           </variable>
                        </termination>
                        <callStateVariable name="n" isArrayIndex="false">
                           <value name="n {true}" typeString="int" valueString="n" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </callStateVariable>
                        <callStateVariable name="exc" isArrayIndex="false">
                           <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </callStateVariable>
                        <callStateVariable name="heapBefore_main" isArrayIndex="false">
                           <value name="heapBefore_main {true}" typeString="Heap" valueString="heap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </callStateVariable>
                        <callStateVariable name="savedHeapBefore_main" isArrayIndex="false">
                           <value name="savedHeapBefore_main {true}" typeString="Heap" valueString="savedHeap" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </callStateVariable>
                     </methodReturn>
                  </statement>
               </statement>
            </statement>
         </statement>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0"/>
</start>
