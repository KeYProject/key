<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call self.down2()&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="ImmutableList current = this.next;" pathCondition="true" pathConditionChanged="false">
         <loopStatement name="for ( int i = 1; i&lt;2; i++ )" pathCondition="true" pathConditionChanged="false" blockOpened="true">
            <statement name="int i = 1;" pathCondition="true" pathConditionChanged="false">
               <loopInvariant name="invariant: (  ((i &gt;= 1
 &amp; i &lt;= 2)&lt;&lt;SC&gt;&gt;
 &amp; !current = null)&lt;&lt;SC&gt;&gt;
 &amp; !current = self)&lt;&lt;SC&gt;&gt;;
variant: i
mod: {}" pathCondition="true" pathConditionChanged="false" initiallyValid="false">
                  <branchCondition name="and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(1(#)))),or(or(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE)))" pathCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(1(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))" pathConditionChanged="true" branchCondition="and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(1(#)))),or(or(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE)))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
                     <loopCondition name="i&lt;2" pathCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(1(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))" pathConditionChanged="false" blockOpened="false">
                        <statement name="current=current.next;" pathCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(1(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))" pathConditionChanged="false">
                           <statement name="i++;" pathCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(1(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))" pathConditionChanged="false">
                              <termination name="&lt;loop body end&gt;" pathCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(1(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="false">
                              </termination>
                           </statement>
                        </statement>
                     </loopCondition>
                  </branchCondition>
                  <branchCondition name="and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(2(#)))),or(or(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE)))" pathCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(2(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))" pathConditionChanged="true" branchCondition="and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(2(#)))),or(or(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE)))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
                     <statement name="return current;" pathCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(2(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))" pathConditionChanged="false">
                        <methodReturn name="&lt;return of down2&gt;" signature="&lt;return of self.down2()&gt;" pathCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(2(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(2(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))">
                           <termination name="&lt;end&gt;" pathCondition="imp(equals(boolean::select(anon_heap_LOOP,current_0,java.lang.Object::&lt;created&gt;),java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;),and(and(and(not(equals(current_0,null)),not(equals(self,current_0))),equals(i_0,Z(2(#)))),or(or(equals(java_lang_Object_created__0&lt;&lt;selectSK&gt;&gt;,TRUE),equals(current_0,null)),equals(boolean::select(heap,current_0,java.lang.Object::&lt;created&gt;),TRUE))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                           </termination>
                        </methodReturn>
                     </statement>
                  </branchCondition>
               </loopInvariant>
               <completedBlockEntry path="/0/0/0" conditionString="true"/>
            </statement>
            <blockCompletionEntry path="/0/0/0/0"/>
         </loopStatement>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/1/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/1/0/0/0"/>
</start>
