<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call Arrays.indexOf(array, filter)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="int acceptedIndex = -1;" pathCondition="true" pathConditionChanged="false">
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <loopInvariant name="invariant: (i &gt;= 0 &amp; i &lt;= array.length)&lt;&lt;SC&gt;&gt;;
variant: array.length - i
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <branchCondition name="and(lt(acceptedIndex_0,Z(0(#))),or(or(lt(length(array),Z(0(#))),gt(acceptedIndex_0,Z(neglit(1(#))))),and(geq(i_0,Z(0(#))),gt(length(array),i_0))))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(leq(acceptedIndex_0,Z(neglit(1(#)))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="true" branchCondition="and(lt(acceptedIndex_0,Z(0(#))),or(or(lt(length(array),Z(0(#))),gt(acceptedIndex_0,Z(neglit(1(#))))),and(geq(i_0,Z(0(#))),gt(length(array),i_0))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
                  <loopCondition name="acceptedIndex &lt; 0 &amp;&amp; i &lt; array.length;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(leq(acceptedIndex_0,Z(neglit(1(#)))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="false" blockOpened="false">
                     <branchStatement name="if (filter.accept(array[i]))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(leq(acceptedIndex_0,Z(neglit(1(#)))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="false" blockOpened="false">
                        <operationContract name="result_accept = var.accept(var_1) catch(exc_0)
pre: var.&lt;inv&gt;&lt;&lt;impl&gt;&gt;
post: var.&lt;inv&gt;&lt;&lt;impl&gt;&gt; &amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;
mod: {}&lt;&lt;impl&gt;&gt;, creates no new objects
termination: diamond" pathCondition="imp(geq(length(array),Z(0(#))),and(and(leq(acceptedIndex_0,Z(neglit(1(#)))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="false" resultTerm="result_accept" exceptionTerm="exc_0" selfTerm="var" contractParameters="var_1" preconditionComplied="true" hasNotNullCheck="true" notNullCheckComplied="true">
                           <branchCondition name="equals(result_accept,TRUE)" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(equals(result_accept,TRUE),leq(acceptedIndex_0,Z(neglit(1(#))))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="true" branchCondition="equals(result_accept,TRUE)" mergedBranchCondition="false" isBranchConditionComputed="true">
                              <statement name="acceptedIndex = i;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(equals(result_accept,TRUE),leq(acceptedIndex_0,Z(neglit(1(#))))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="false">
                                 <statement name="i++;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(equals(result_accept,TRUE),leq(acceptedIndex_0,Z(neglit(1(#))))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="false">
                                    <termination name="&lt;loop body end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(equals(result_accept,TRUE),leq(acceptedIndex_0,Z(neglit(1(#))))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                    </termination>
                                 </statement>
                              </statement>
                           </branchCondition>
                           <branchCondition name="not(equals(result_accept,TRUE))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(not(equals(result_accept,TRUE)),leq(acceptedIndex_0,Z(neglit(1(#))))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="true" branchCondition="not(equals(result_accept,TRUE))" mergedBranchCondition="false" isBranchConditionComputed="true">
                              <statement name="i++;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(not(equals(result_accept,TRUE)),leq(acceptedIndex_0,Z(neglit(1(#))))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="false">
                                 <termination name="&lt;loop body end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(not(equals(result_accept,TRUE)),leq(acceptedIndex_0,Z(neglit(1(#))))),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(geq(acceptedIndex_0,Z(0(#))),gt(length(array),i_0))))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                 </termination>
                              </statement>
                           </branchCondition>
                        </operationContract>
                     </branchStatement>
                  </loopCondition>
               </branchCondition>
               <branchCondition name="and(or(or(lt(length(array),Z(0(#))),lt(acceptedIndex_0,Z(0(#)))),and(geq(i_0,Z(0(#))),geq(length(array),i_0))),or(or(lt(length(array),Z(0(#))),gt(acceptedIndex_0,Z(neglit(1(#))))),and(geq(i_0,Z(0(#))),equals(length(array),i_0))))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(or(geq(acceptedIndex_0,Z(0(#))),equals(length(array),i_0)),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathConditionChanged="true" branchCondition="and(or(or(lt(length(array),Z(0(#))),lt(acceptedIndex_0,Z(0(#)))),and(geq(i_0,Z(0(#))),geq(length(array),i_0))),or(or(lt(length(array),Z(0(#))),gt(acceptedIndex_0,Z(neglit(1(#))))),and(geq(i_0,Z(0(#))),equals(length(array),i_0))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
                  <statement name="return acceptedIndex;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(or(geq(acceptedIndex_0,Z(0(#))),equals(length(array),i_0)),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathConditionChanged="false">
                     <methodReturn name="&lt;return of indexOf&gt;" signature="&lt;return of Arrays.indexOf(array, filter)&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(or(geq(acceptedIndex_0,Z(0(#))),equals(length(array),i_0)),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return acceptedIndex_0 as result of indexOf&gt;" signatureIncludingReturnValue="&lt;return acceptedIndex_0 as result of Arrays.indexOf(array, filter)&gt;" isReturnValueComputed="true" methodReturnCondition="imp(geq(length(array),Z(0(#))),and(and(and(or(geq(acceptedIndex_0,Z(0(#))),equals(length(array),i_0)),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(length(array),i_0))))">
                        <methodReturnValue name="acceptedIndex_0" returnValueString="acceptedIndex_0" hasCondition="false">
                        </methodReturnValue>
                        <termination name="&lt;end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(or(geq(acceptedIndex_0,Z(0(#))),equals(length(array),i_0)),or(geq(acceptedIndex_0,Z(0(#))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(i_0,Z(0(#))))),or(leq(acceptedIndex_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                  </statement>
               </branchCondition>
            </loopInvariant>
         </statement>
      </statement>
      <methodReturnEntry path="/0/0/0/0/1/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0/0"/>
</start>
