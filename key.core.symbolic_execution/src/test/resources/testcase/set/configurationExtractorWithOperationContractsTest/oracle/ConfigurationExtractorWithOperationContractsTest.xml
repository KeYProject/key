<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call ConfigurationExtractorWithOperationContractsTest.compute(x,y)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="x.value=2;" pathCondition="true" pathConditionChanged="false">
         <branchCondition name="not(equals(x,null))" pathCondition="not(equals(x,null))" pathConditionChanged="true" branchCondition="not(equals(x,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <statement name="y.value=3;" pathCondition="not(equals(x,null))" pathConditionChanged="false">
               <branchCondition name="not(equals(y,null))" pathCondition="and(not(equals(x,null)),not(equals(y,null)))" pathConditionChanged="true" branchCondition="not(equals(y,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <statement name="int add = sub(x,y);" pathCondition="and(not(equals(x,null)),not(equals(y,null)))" pathConditionChanged="false">
                     <operationContract name="result_0 = sub(x, y) catch(exc_0)
pre: ((!x = null)&lt;&lt;impl&gt;&gt; &amp; (!y = null)&lt;&lt;impl&gt;&gt;)&lt;&lt;SC&gt;&gt;
post: result_0 = javaAddInt(x.value, y.value)
&amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;
mod: {}, creates no new objects
termination: diamond" pathCondition="and(not(equals(x,null)),not(equals(y,null)))" pathConditionChanged="false" resultTerm="result_0" exceptionTerm="exc_0" contractParameters="x, y" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
                        <statement name="return add_1;" pathCondition="and(not(equals(x,null)),not(equals(y,null)))" pathConditionChanged="false">
                           <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of ConfigurationExtractorWithOperationContractsTest.compute(x,y)&gt;" pathCondition="and(not(equals(x,null)),not(equals(y,null)))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(not(equals(x,null)),not(equals(y,null)))">
                              <termination name="&lt;end&gt;" pathCondition="and(not(equals(x,null)),not(equals(y,null)))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                              </termination>
                           </methodReturn>
                        </statement>
                     </operationContract>
                  </statement>
               </branchCondition>
               <branchCondition name="equals(y,null)" pathCondition="and(not(equals(x,null)),equals(y,null))" pathConditionChanged="true" branchCondition="equals(y,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call ConfigurationExtractorWithOperationContractsTest.compute(x,y)&gt;&gt;" pathCondition="and(not(equals(x,null)),equals(y,null))" pathConditionChanged="false" methodReturnCondition="and(not(equals(x,null)),equals(y,null))">
                     <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(not(equals(x,null)),equals(y,null))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                     </termination>
                  </exceptionalMethodReturn>
               </branchCondition>
            </statement>
         </branchCondition>
         <branchCondition name="equals(x,null)" pathCondition="equals(x,null)" pathConditionChanged="true" branchCondition="equals(x,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
            <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call ConfigurationExtractorWithOperationContractsTest.compute(x,y)&gt;&gt;" pathCondition="equals(x,null)" pathConditionChanged="false" methodReturnCondition="equals(x,null)">
               <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(x,null)" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
               </termination>
            </exceptionalMethodReturn>
         </branchCondition>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/1/0"/>
      <methodReturnEntry path="/0/0/1/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/1/0/0"/>
</start>
