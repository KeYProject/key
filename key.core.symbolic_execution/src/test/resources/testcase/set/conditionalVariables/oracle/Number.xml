<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call self.equals(n)&gt;" pathCondition="true" pathConditionChanged="false">
      <branchStatement name="if (this.content==n.content)" pathCondition="true" pathConditionChanged="false" blockOpened="true">
         <branchCondition name="not(equals(n,null))" pathCondition="not(equals(n,null))" pathConditionChanged="true" branchCondition="not(equals(n,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <branchCondition name="equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content))" pathCondition="and(not(equals(n,null)),equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content)))" pathConditionChanged="true" branchCondition="equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content))" mergedBranchCondition="false" isBranchConditionComputed="true">
               <statement name="return true;" pathCondition="and(not(equals(n,null)),equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content)))" pathConditionChanged="false">
                  <methodReturn name="&lt;return of equals&gt;" signature="&lt;return of self.equals(n)&gt;" pathCondition="and(not(equals(n,null)),equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content)))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(not(equals(n,null)),equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content)))">
                     <termination name="&lt;end&gt;" pathCondition="and(not(equals(n,null)),equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content)))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                     </termination>
                  </methodReturn>
                  <completedBlockEntry path="/0/0" conditionString="and(not(equals(n,null)),equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content)))"/>
               </statement>
            </branchCondition>
            <branchCondition name="not(equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content)))" pathCondition="and(not(equals(n,null)),not(equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content))))" pathConditionChanged="true" branchCondition="not(equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content)))" mergedBranchCondition="false" isBranchConditionComputed="true">
               <statement name="return false;" pathCondition="and(not(equals(n,null)),not(equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content))))" pathConditionChanged="false">
                  <methodReturn name="&lt;return of equals&gt;" signature="&lt;return of self.equals(n)&gt;" pathCondition="and(not(equals(n,null)),not(equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(not(equals(n,null)),not(equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content))))">
                     <termination name="&lt;end&gt;" pathCondition="and(not(equals(n,null)),not(equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                     </termination>
                  </methodReturn>
                  <completedBlockEntry path="/0/0" conditionString="and(not(equals(n,null)),not(equals(int::select(heap,self,Number::$content),int::select(heap,n,Number::$content))))"/>
               </statement>
            </branchCondition>
         </branchCondition>
         <branchCondition name="equals(n,null)" pathCondition="equals(n,null)" pathConditionChanged="true" branchCondition="equals(n,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
            <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call self.equals(n)&gt;&gt;" pathCondition="equals(n,null)" pathConditionChanged="false" methodReturnCondition="equals(n,null)">
               <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(n,null)" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
               </termination>
               <completedBlockEntry path="/0/0" conditionString="equals(n,null)"/>
            </exceptionalMethodReturn>
         </branchCondition>
         <blockCompletionEntry path="/0/0/0/0/0"/>
         <blockCompletionEntry path="/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/1/0"/>
      </branchStatement>
      <methodReturnEntry path="/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/1/0/0"/>
      <methodReturnEntry path="/0/0/1/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/1/0/0/0"/>
   <terminationEntry path="/0/0/1/0/0"/>
</start>
