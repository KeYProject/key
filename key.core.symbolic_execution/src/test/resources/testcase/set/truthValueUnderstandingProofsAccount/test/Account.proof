\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jun 15 15:52:36 CEST 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=methodExpansion-methodExpansion:noRestriction,assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Mon Jun 15 15:52:36 CEST 2015
name=Account[Account\\:\\:checkAndWithdraw(int)].JML normal_behavior operation contract.0
contract=Account[Account\\:\\:checkAndWithdraw(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "690460161")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "8") (term "0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "8") (term "0,0,0,0,0,1"))
(rule "polySimp_homoEq" (formula "8") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,1"))
(rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0,1"))
(rule "elementOfSingleton" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "5"))
(rule "times_zero_1" (formula "5") (term "1,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "polySimp_sepNegMonomial" (formula "8") (term "0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "Class_invariant_axiom_for_Account" (formula "6") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "true_left" (formula "6"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_checkAndWithdraw,savedHeapBefore_checkAndWithdraw"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "ifElseUnfold" (formula "7") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x"))
   (builtin "Use Operation Contract" (formula "7") (newnames "heapBefore_canWithdraw,result_0,exc_0,heapAfter_canWithdraw,anon_heap_canWithdraw") (contract "Account[Account::canWithdraw(int)].JML normal_behavior operation contract.0"))
   (branch "Post (canWithdraw)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "9"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "Class_invariant_axiom_for_Account" (formula "9") (inst "sk=sk_2") (ifseqformula "3"))
      (branch "Use Axiom"
         (rule "true_left" (formula "9"))
         (rule "ifElseSplit" (formula "10"))
         (branch "if x true"
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "1"))
            (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_withdraw,exc_1,heapAfter_withdraw,anon_heap_withdraw") (contract "Account[Account::withdraw(int)].JML normal_behavior operation contract.0"))
            (branch "Post (withdraw)"
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "translateJavaSubInt" (formula "11") (term "1,0,0,1,1"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "polySimp_elimSub" (formula "13") (term "1"))
               (rule "polySimp_addComm0" (formula "13") (term "1"))
               (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=Account_balance_0"))
               (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0,0") (ifseqformula "8"))
               (rule "replace_known_left" (formula "13") (term "0,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "polySimp_homoEq" (formula "14"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "polySimp_addComm0" (formula "14") (term "0,0"))
               (rule "elementOfSingleton" (formula "13") (term "0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "applyEqReverse" (formula "14") (term "0,0,0,0") (ifseqformula "13"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "polySimp_addComm0" (formula "13") (term "0,0"))
               (rule "polySimp_sepPosMonomial" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1"))
               (rule "polySimp_rightDist" (formula "13") (term "1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "13") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
               (rule "polySimp_elimOne" (formula "13") (term "0,1"))
               (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=Account_balance_1"))
               (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "polySimp_homoEq" (formula "13"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "polySimp_sepPosMonomial" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1"))
               (rule "polySimp_rightDist" (formula "13") (term "1"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "13") (term "0,1"))
               (rule "Class_invariant_axiom_for_Account" (formula "14") (inst "sk=sk_4") (ifseqformula "4"))
               (branch "Use Axiom"
                  (rule "true_left" (formula "14"))
                  (rule "methodCallReturn" (formula "15") (term "1"))
                  (rule "assignment" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "methodCallEmpty" (formula "15") (term "1"))
                  (rule "tryEmpty" (formula "15") (term "1"))
                  (rule "emptyModality" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "replaceKnownSelect_taclet00000_0" (formula "15") (term "1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_1" (formula "15") (term "1,1,0,0"))
                  (rule "eqSymm" (formula "15") (term "1,0,0,1"))
                  (rule "polySimp_homoEq" (formula "15") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                  (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "13"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "15") (term "0,0,0"))
                  (rule "add_literals" (formula "15") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "Class_invariant_axiom_for_Account" (formula "15") (term "0") (inst "sk=sk_5") (ifseqformula "4"))
                  (branch "Use Axiom"
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "allRight" (formula "15") (inst "sk=f_0"))
                     (rule "allRight" (formula "15") (inst "sk=o_0"))
                     (rule "orRight" (formula "15"))
                     (rule "orRight" (formula "15"))
                     (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "9"))
                     (rule "eqSymm" (formula "18"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "commute_and" (formula "16"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_canWithdraw<<anonHeapFunction>> = TRUE) TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "orRight" (formula "15"))
                        (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "20"))
                        (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "16")))
                        (rule "closeTrue" (formula "19"))
                     )
                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_canWithdraw<<anonHeapFunction>> = TRUE) FALSE"
                        (rule "close" (formula "19") (ifseqformula "1"))
                     )
                  )
                  (branch "Show Axiom Satisfiability"
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "closeTrue" (formula "15"))
                  )
               )
               (branch "Show Axiom Satisfiability"
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "closeTrue" (formula "15"))
               )
            )
            (branch "Exceptional Post (withdraw)"
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "translateJavaSubInt" (formula "11") (term "1,0,0,1,1"))
               (rule "andLeft" (formula "11"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "0,1,0") (ifseqformula "8"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "12"))
               (rule "close" (formula "15") (ifseqformula "14"))
            )
            (branch "Pre (withdraw)"
               (builtin "One Step Simplification" (formula "11"))
               (rule "wellFormedAnonEQ" (formula "11") (term "1") (ifseqformula "8"))
               (rule "replace_known_left" (formula "11") (term "1,1") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "2")))
               (rule "inEqSimp_gtToGeq" (formula "11") (term "0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0"))
               (rule "mul_literals" (formula "11") (term "1,0"))
               (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "Class_invariant_axiom_for_Account" (formula "11") (inst "sk=sk_3") (ifseqformula "4"))
               (branch "Use Axiom"
                  (rule "closeTrue" (formula "11"))
               )
               (branch "Show Axiom Satisfiability"
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "closeTrue" (formula "11"))
               )
            )
         )
         (branch "if x false"
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "blockReturn" (formula "11") (term "1"))
            (rule "methodCallReturn" (formula "11") (term "1"))
            (rule "assignment" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "methodCallEmpty" (formula "11") (term "1"))
            (rule "tryEmpty" (formula "11") (term "1"))
            (rule "emptyModality" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "eqSymm" (formula "11") (term "0,1,0"))
            (rule "eqSymm" (formula "11") (term "1,0,0,1"))
            (rule "polySimp_homoEq" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "11") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0"))
            (rule "inEqSimp_contradEq7" (formula "11") (term "0,1,0") (ifseqformula "5"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
            (rule "leq_literals" (formula "11") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "false_right" (formula "11"))
            (opengoal " ")
         )
      )
      (branch "Show Axiom Satisfiability"
         (builtin "One Step Simplification" (formula "10"))
         (rule "closeTrue" (formula "10"))
      )
   )
   (branch "Exceptional Post (canWithdraw)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "7"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "8"))
      (rule "close" (formula "11") (ifseqformula "10"))
   )
   (branch "Pre (canWithdraw)"
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
      (rule "inEqSimp_gtToGeq" (formula "7") (term "0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0"))
      (rule "mul_literals" (formula "7") (term "1,0"))
      (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "Class_invariant_axiom_for_Account" (formula "7") (inst "sk=sk_1") (ifseqformula "3"))
      (branch "Use Axiom"
         (rule "closeTrue" (formula "7"))
      )
      (branch "Show Axiom Satisfiability"
         (builtin "One Step Simplification" (formula "7"))
         (rule "closeTrue" (formula "7"))
      )
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)

}
