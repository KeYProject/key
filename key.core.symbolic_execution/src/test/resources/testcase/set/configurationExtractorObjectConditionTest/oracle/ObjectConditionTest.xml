<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call self.compute(a)&gt;" pathCondition="true" pathConditionChanged="false">
      <branchStatement name="if (this.x==1)" pathCondition="true" pathConditionChanged="false" blockOpened="true">
         <branchCondition name="equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))" pathCondition="equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))" pathConditionChanged="true" branchCondition="equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <branchStatement name="if (this.next.x==2)" pathCondition="equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))" pathConditionChanged="false" blockOpened="true">
               <branchCondition name="not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))" pathCondition="and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" pathConditionChanged="true" branchCondition="not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <branchCondition name="equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))" pathCondition="and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))" pathConditionChanged="true" branchCondition="equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <branchStatement name="if (this.next.next.x==3)" pathCondition="and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))" pathConditionChanged="false" blockOpened="true">
                        <branchCondition name="not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))" pathCondition="and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))" pathConditionChanged="true" branchCondition="not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <branchCondition name="equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))" pathCondition="and(and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                              <branchStatement name="if (ObjectConditionTest.instance.x==4)" pathCondition="and(and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" blockOpened="true">
                                 <branchCondition name="not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null))" pathCondition="and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <branchCondition name="equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))" pathCondition="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                       <branchStatement name="if (ObjectConditionTest.instance.next.x==5)" pathCondition="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" blockOpened="true">
                                          <branchCondition name="not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))" pathCondition="and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                             <branchCondition name="equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))" pathCondition="and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                                <branchStatement name="if (ObjectConditionTest.instance.next.next.x==6)" pathCondition="and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" blockOpened="true">
                                                   <branchCondition name="not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))" pathCondition="and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                                      <branchCondition name="equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))" pathCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))" pathConditionChanged="true" branchCondition="equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                                         <statement name="return 42;" pathCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))" pathConditionChanged="false">
                                                            <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute(a)&gt;" pathCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))">
                                                               <termination name="&lt;end&gt;" pathCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                                               </termination>
                                                            </methodReturn>
                                                            <completedBlockEntry path="/0/0" conditionString="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))"/>
                                                            <completedBlockEntry path="/0/0/0/0" conditionString="and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))"/>
                                                            <completedBlockEntry path="/0/0/0/0/0/0/0" conditionString="and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))"/>
                                                            <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0" conditionString="and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))"/>
                                                            <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0" conditionString="and(and(and(not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))"/>
                                                            <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0" conditionString="and(not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))"/>
                                                         </statement>
                                                      </branchCondition>
                                                      <branchCondition name="not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))" pathCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))" pathConditionChanged="true" branchCondition="not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                                         <statement name="return -600;" pathCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))" pathConditionChanged="false">
                                                            <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute(a)&gt;" pathCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))">
                                                               <termination name="&lt;end&gt;" pathCondition="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                                               </termination>
                                                            </methodReturn>
                                                            <completedBlockEntry path="/0/0" conditionString="and(and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))"/>
                                                            <completedBlockEntry path="/0/0/0/0" conditionString="and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))"/>
                                                            <completedBlockEntry path="/0/0/0/0/0/0/0" conditionString="and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))"/>
                                                            <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0" conditionString="and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))"/>
                                                            <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0" conditionString="and(and(and(not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))"/>
                                                            <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0" conditionString="and(not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(6(#)))))"/>
                                                         </statement>
                                                      </branchCondition>
                                                   </branchCondition>
                                                   <branchCondition name="equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)" pathCondition="and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                                                      <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call self.compute(a)&gt;&gt;" pathCondition="and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" methodReturnCondition="and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))">
                                                         <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                                                         </termination>
                                                         <completedBlockEntry path="/0/0" conditionString="and(and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                                         <completedBlockEntry path="/0/0/0/0" conditionString="and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                                         <completedBlockEntry path="/0/0/0/0/0/0/0" conditionString="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                                         <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0" conditionString="and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))"/>
                                                         <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0" conditionString="and(and(not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))"/>
                                                         <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0" conditionString="equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$next),null)"/>
                                                      </exceptionalMethodReturn>
                                                   </branchCondition>
                                                   <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
                                                   <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                                   <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                                </branchStatement>
                                             </branchCondition>
                                             <branchCondition name="not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))" pathCondition="and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                                <statement name="return -500;" pathCondition="and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false">
                                                   <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute(a)&gt;" pathCondition="and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))">
                                                      <termination name="&lt;end&gt;" pathCondition="and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                                      </termination>
                                                   </methodReturn>
                                                   <completedBlockEntry path="/0/0" conditionString="and(and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                                   <completedBlockEntry path="/0/0/0/0" conditionString="and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                                   <completedBlockEntry path="/0/0/0/0/0/0/0" conditionString="and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                                   <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0" conditionString="and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))))"/>
                                                   <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0" conditionString="and(not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(5(#)))))"/>
                                                </statement>
                                             </branchCondition>
                                          </branchCondition>
                                          <branchCondition name="equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)" pathCondition="and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                                             <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call self.compute(a)&gt;&gt;" pathCondition="and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" methodReturnCondition="and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))">
                                                <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                                                </termination>
                                                <completedBlockEntry path="/0/0" conditionString="and(and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                                <completedBlockEntry path="/0/0/0/0" conditionString="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                                <completedBlockEntry path="/0/0/0/0/0/0/0" conditionString="and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                                <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0" conditionString="and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)),equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))"/>
                                                <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0" conditionString="equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$next),null)"/>
                                             </exceptionalMethodReturn>
                                          </branchCondition>
                                          <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
                                          <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                          <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                          <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                          <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                       </branchStatement>
                                    </branchCondition>
                                    <branchCondition name="not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))" pathCondition="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                       <statement name="return -400;" pathCondition="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false">
                                          <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute(a)&gt;" pathCondition="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))">
                                             <termination name="&lt;end&gt;" pathCondition="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                             </termination>
                                          </methodReturn>
                                          <completedBlockEntry path="/0/0" conditionString="and(and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                          <completedBlockEntry path="/0/0/0/0" conditionString="and(and(and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                          <completedBlockEntry path="/0/0/0/0/0/0/0" conditionString="and(and(and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#))))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                          <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0" conditionString="and(not(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)),not(equals(int::select(heap,ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),ObjectConditionTest::$x),Z(4(#)))))"/>
                                       </statement>
                                    </branchCondition>
                                 </branchCondition>
                                 <branchCondition name="equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)" pathCondition="and(and(and(and(and(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="true" branchCondition="equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call self.compute(a)&gt;&gt;" pathCondition="and(and(and(and(and(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" methodReturnCondition="and(and(and(and(and(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))">
                                       <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(and(and(and(and(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                                       </termination>
                                       <completedBlockEntry path="/0/0" conditionString="and(and(and(and(and(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                       <completedBlockEntry path="/0/0/0/0" conditionString="and(and(and(and(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null),not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null))),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                       <completedBlockEntry path="/0/0/0/0/0/0/0" conditionString="and(and(equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))"/>
                                       <completedBlockEntry path="/0/0/0/0/0/0/0/0/0/0" conditionString="equals(ObjectConditionTest::select(heap,null,ObjectConditionTest::$instance),null)"/>
                                    </exceptionalMethodReturn>
                                 </branchCondition>
                                 <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
                                 <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                 <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                 <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                 <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                 <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                                 <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/1/0"/>
                              </branchStatement>
                           </branchCondition>
                           <branchCondition name="not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" pathCondition="and(and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))))" pathConditionChanged="true" branchCondition="not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                              <statement name="return -300;" pathCondition="and(and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))))" pathConditionChanged="false">
                                 <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute(a)&gt;" pathCondition="and(and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))))">
                                    <termination name="&lt;end&gt;" pathCondition="and(and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                    </termination>
                                 </methodReturn>
                                 <completedBlockEntry path="/0/0" conditionString="and(and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))))"/>
                                 <completedBlockEntry path="/0/0/0/0" conditionString="and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))))"/>
                                 <completedBlockEntry path="/0/0/0/0/0/0/0" conditionString="and(not(equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)),not(equals(int::select(heap,ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),ObjectConditionTest::$x),Z(3(#)))))"/>
                              </statement>
                           </branchCondition>
                        </branchCondition>
                        <branchCondition name="equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)" pathCondition="and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))" pathConditionChanged="true" branchCondition="equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call self.compute(a)&gt;&gt;" pathCondition="and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))" pathConditionChanged="false" methodReturnCondition="and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))">
                              <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                              </termination>
                              <completedBlockEntry path="/0/0" conditionString="and(and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))"/>
                              <completedBlockEntry path="/0/0/0/0" conditionString="and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)),equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))"/>
                              <completedBlockEntry path="/0/0/0/0/0/0/0" conditionString="equals(ObjectConditionTest::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$next),null)"/>
                           </exceptionalMethodReturn>
                        </branchCondition>
                        <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
                        <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                        <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                        <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                        <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                        <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
                        <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/1/0"/>
                        <blockCompletionEntry path="/0/0/0/0/0/0/0/0/1/0"/>
                        <blockCompletionEntry path="/0/0/0/0/0/0/0/1/0"/>
                     </branchStatement>
                  </branchCondition>
                  <branchCondition name="not(equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))" pathCondition="and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))))" pathConditionChanged="true" branchCondition="not(equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <statement name="return -200;" pathCondition="and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))))" pathConditionChanged="false">
                        <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute(a)&gt;" pathCondition="and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))))">
                           <termination name="&lt;end&gt;" pathCondition="and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                           </termination>
                        </methodReturn>
                        <completedBlockEntry path="/0/0" conditionString="and(and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#)))),not(equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))))"/>
                        <completedBlockEntry path="/0/0/0/0" conditionString="and(not(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)),not(equals(int::select(heap,ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),ObjectConditionTest::$x),Z(2(#)))))"/>
                     </statement>
                  </branchCondition>
               </branchCondition>
               <branchCondition name="equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)" pathCondition="and(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" pathConditionChanged="true" branchCondition="equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call self.compute(a)&gt;&gt;" pathCondition="and(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" pathConditionChanged="false" methodReturnCondition="and(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))">
                     <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                     </termination>
                     <completedBlockEntry path="/0/0" conditionString="and(equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null),equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))"/>
                     <completedBlockEntry path="/0/0/0/0" conditionString="equals(ObjectConditionTest::select(heap,self,ObjectConditionTest::$next),null)"/>
                  </exceptionalMethodReturn>
               </branchCondition>
               <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
               <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
               <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
               <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
               <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
               <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
               <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/1/0"/>
               <blockCompletionEntry path="/0/0/0/0/0/0/0/0/1/0"/>
               <blockCompletionEntry path="/0/0/0/0/0/0/0/1/0"/>
               <blockCompletionEntry path="/0/0/0/0/0/1/0"/>
               <blockCompletionEntry path="/0/0/0/0/1/0"/>
            </branchStatement>
         </branchCondition>
         <branchCondition name="not(equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" pathCondition="not(equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" pathConditionChanged="true" branchCondition="not(equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <statement name="return -100;" pathCondition="not(equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" pathConditionChanged="false">
               <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute(a)&gt;" pathCondition="not(equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="not(equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))">
                  <termination name="&lt;end&gt;" pathCondition="not(equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                  </termination>
               </methodReturn>
               <completedBlockEntry path="/0/0" conditionString="not(equals(int::select(heap,self,ObjectConditionTest::$x),Z(1(#))))"/>
            </statement>
         </branchCondition>
         <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
         <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/0/0/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/0/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/1/0"/>
      </branchStatement>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0/1/0/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/1/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/1/0/0"/>
      <methodReturnEntry path="/0/0/0/0/0/0/0/1/0"/>
      <methodReturnEntry path="/0/0/0/0/0/1/0/0"/>
      <methodReturnEntry path="/0/0/0/0/1/0"/>
      <methodReturnEntry path="/0/0/1/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/1/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/0/1/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/0/0/0/1/0/0/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0"/>
   <terminationEntry path="/0/0/1/0/0/0"/>
</start>
