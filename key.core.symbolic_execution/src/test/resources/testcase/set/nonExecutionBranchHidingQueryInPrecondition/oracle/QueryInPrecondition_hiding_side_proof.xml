<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call QueryInPrecondition.main(x, y)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="int magicValue = magic(x, y);" pathCondition="true" pathConditionChanged="false">
         <operationContract name="result_magic = magic(x, y) catch(exc_0)
pre:   (QueryInPrecondition.xPre(x) = TRUE &amp; y &lt; 0)&lt;&lt;SC&gt;&gt;
| !((QueryInPrecondition.xPre(x) = TRUE &amp; y &lt; 0)&lt;&lt;SC&gt;&gt;)
post:   (   (    QueryInPrecondition.xPre(x)@heapBefore_magic
         = TRUE
       &amp; y &lt; 0)&lt;&lt;SC&gt;&gt;
   -&gt;     result_magic
        = QueryInPrecondition.subFirst(x, y)
      &amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;)
&amp; (   !((    QueryInPrecondition.xPre(x)
               @heapBefore_magic
           = TRUE
         &amp; y &lt; 0)&lt;&lt;SC&gt;&gt;)
   -&gt;     result_magic
        = QueryInPrecondition.subSecond(x, y)
      &amp; (exc_0 = null)&lt;&lt;impl&gt;&gt;)
mod: {}
termination: diamond" pathCondition="true" pathConditionChanged="false" resultTerm="result_magic" exceptionTerm="exc_0" contractParameters="x, y" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
            <statement name="return magicValue;" pathCondition="true" pathConditionChanged="false">
               <methodReturn name="&lt;return of main&gt;" signature="&lt;return of QueryInPrecondition.main(x, y)&gt;" pathCondition="true" pathConditionChanged="false" nameIncludingReturnValue="&lt;return 
	Z(neglit(1(1(7(4(#)))))) {or(or(and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),leq(x,Z(neglit(1(#))))),leq(y,Z(neglit(1(#))))),and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),geq(x,Z(0(#)))),geq(y,Z(0(#))))),and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),leq(x,Z(neglit(1(#))))),geq(y,Z(0(#)))))}, 
	Z(2(4(#))) {not(equals(result_magic,Z(neglit(1(1(7(4(#))))))))}
as result of main&gt;" signatureIncludingReturnValue="&lt;return 
	Z(neglit(1(1(7(4(#)))))) {or(or(and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),leq(x,Z(neglit(1(#))))),leq(y,Z(neglit(1(#))))),and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),geq(x,Z(0(#)))),geq(y,Z(0(#))))),and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),leq(x,Z(neglit(1(#))))),geq(y,Z(0(#)))))}, 
	Z(2(4(#))) {not(equals(result_magic,Z(neglit(1(1(7(4(#))))))))}
as result of QueryInPrecondition.main(x, y)&gt;" isReturnValueComputed="true" methodReturnCondition="true">
                  <methodReturnValue name="Z(neglit(1(1(7(4(#)))))) {or(or(and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),leq(x,Z(neglit(1(#))))),leq(y,Z(neglit(1(#))))),and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),geq(x,Z(0(#)))),geq(y,Z(0(#))))),and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),leq(x,Z(neglit(1(#))))),geq(y,Z(0(#)))))}" returnValueString="Z(neglit(1(1(7(4(#))))))" hasCondition="true" conditionString="or(or(and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),leq(x,Z(neglit(1(#))))),leq(y,Z(neglit(1(#))))),and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),geq(x,Z(0(#)))),geq(y,Z(0(#))))),and(and(equals(result_magic,Z(neglit(1(1(7(4(#))))))),leq(x,Z(neglit(1(#))))),geq(y,Z(0(#)))))">
                  </methodReturnValue>
                  <methodReturnValue name="Z(2(4(#))) {not(equals(result_magic,Z(neglit(1(1(7(4(#))))))))}" returnValueString="Z(2(4(#)))" hasCondition="true" conditionString="not(equals(result_magic,Z(neglit(1(1(7(4(#))))))))">
                  </methodReturnValue>
                  <termination name="&lt;end&gt;" pathCondition="true" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                  </termination>
               </methodReturn>
            </statement>
         </operationContract>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0"/>
</start>
