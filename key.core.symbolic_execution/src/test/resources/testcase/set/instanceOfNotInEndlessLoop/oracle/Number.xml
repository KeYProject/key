<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call self.equals(n)&gt;" pathCondition="true" pathConditionChanged="false">
      <branchStatement name="if (n instanceof Number)" pathCondition="true" pathConditionChanged="false" blockOpened="true">
         <branchCondition name="and(not(equals(n,null)),equals(Number::instance(n),TRUE))" pathCondition="and(not(equals(n,null)),equals(Number::instance(n),TRUE))" pathConditionChanged="true" branchCondition="and(not(equals(n,null)),equals(Number::instance(n),TRUE))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <branchStatement name="if (this.content==((Number)n).content)" pathCondition="and(not(equals(n,null)),equals(Number::instance(n),TRUE))" pathConditionChanged="false" blockOpened="true">
               <branchCondition name="equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content))" pathCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content)))" pathConditionChanged="true" branchCondition="equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <statement name="return true;" pathCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content)))" pathConditionChanged="false">
                     <methodReturn name="&lt;return of equals&gt;" signature="&lt;return of self.equals(n)&gt;" pathCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content)))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content)))">
                        <termination name="&lt;end&gt;" pathCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content)))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                     <completedBlockEntry path="/0/0" conditionString="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content)))"/>
                     <completedBlockEntry path="/0/0/0/0" conditionString="equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content))"/>
                  </statement>
               </branchCondition>
               <branchCondition name="not(equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content)))" pathCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),not(equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content))))" pathConditionChanged="true" branchCondition="not(equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content)))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <statement name="return false;" pathCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),not(equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content))))" pathConditionChanged="false">
                     <methodReturn name="&lt;return of equals&gt;" signature="&lt;return of self.equals(n)&gt;" pathCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),not(equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content))))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),not(equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content))))">
                        <termination name="&lt;end&gt;" pathCondition="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),not(equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                     <completedBlockEntry path="/0/0" conditionString="and(and(not(equals(n,null)),equals(Number::instance(n),TRUE)),not(equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content))))"/>
                     <completedBlockEntry path="/0/0/0/0" conditionString="not(equals(int::select(heap,n,Number::$content),int::select(heap,self,Number::$content)))"/>
                  </statement>
               </branchCondition>
               <blockCompletionEntry path="/0/0/0/0/0/0"/>
               <blockCompletionEntry path="/0/0/0/0/1/0"/>
            </branchStatement>
         </branchCondition>
         <branchCondition name="or(not(equals(Number::instance(n),TRUE)),equals(n,null))" pathCondition="imp(equals(Number::instance(n),TRUE),equals(n,null))" pathConditionChanged="true" branchCondition="or(not(equals(Number::instance(n),TRUE)),equals(n,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <statement name="return false;" pathCondition="imp(equals(Number::instance(n),TRUE),equals(n,null))" pathConditionChanged="false">
               <methodReturn name="&lt;return of equals&gt;" signature="&lt;return of self.equals(n)&gt;" pathCondition="imp(equals(Number::instance(n),TRUE),equals(n,null))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="imp(equals(Number::instance(n),TRUE),equals(n,null))">
                  <termination name="&lt;end&gt;" pathCondition="imp(equals(Number::instance(n),TRUE),equals(n,null))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                  </termination>
               </methodReturn>
               <completedBlockEntry path="/0/0" conditionString="imp(equals(Number::instance(n),TRUE),equals(n,null))"/>
            </statement>
         </branchCondition>
         <blockCompletionEntry path="/0/0/0/0/0/0"/>
         <blockCompletionEntry path="/0/0/0/0/1/0"/>
         <blockCompletionEntry path="/0/0/1/0"/>
      </branchStatement>
      <methodReturnEntry path="/0/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/1/0/0"/>
      <methodReturnEntry path="/0/0/1/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0/0"/>
   <terminationEntry path="/0/0/1/0/0/0"/>
</start>
