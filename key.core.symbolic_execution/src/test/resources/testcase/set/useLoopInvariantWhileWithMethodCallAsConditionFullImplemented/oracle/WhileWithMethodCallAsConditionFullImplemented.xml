<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="&lt;call WhileWithMethodCallAsConditionFullImplemented.size(array)&gt;" pathCondition="true" pathConditionChanged="false">
      <statement name="int result = 0;" pathCondition="true" pathConditionChanged="false">
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <loopInvariant name="invariant: ((i &gt;= 0 &amp; i &lt;= array.length)&lt;&lt;SC&gt;&gt; &amp; result_1 = i)&lt;&lt;SC&gt;&gt;;
variant: javaSubInt(array.length, i)
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <branchCondition name="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))" pathCondition="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))" pathConditionChanged="true" branchCondition="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
                  <branchCondition name="not(equals(array,null))" pathCondition="not(or(not(or(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i))))))),equals(array,null)))" pathConditionChanged="true" branchCondition="not(equals(array,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <loopCondition name="goOnNice(array,i);" pathCondition="not(or(not(or(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i))))))),equals(array,null)))" pathConditionChanged="false" blockOpened="false">
                        <methodCall name="&lt;call WhileWithMethodCallAsConditionFullImplemented.goOnNice(array_2,i_2)&gt;" pathCondition="not(or(not(or(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i))))))),equals(array,null)))" pathConditionChanged="false">
                           <branchStatement name="if (i_2&lt;0)" pathCondition="not(or(not(or(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i))))))),equals(array,null)))" pathConditionChanged="false" blockOpened="true">
                              <statement name="return i_2&lt;array_2.length;" pathCondition="not(or(not(or(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i))))))),equals(array,null)))" pathConditionChanged="false">
                                 <methodReturn name="&lt;return of goOnNice&gt;" signature="&lt;return of WhileWithMethodCallAsConditionFullImplemented.goOnNice(array_2,i_2)&gt;" pathCondition="not(or(not(or(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i))))))),equals(array,null)))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return TRUE as result of goOnNice&gt;" signatureIncludingReturnValue="&lt;return TRUE as result of WhileWithMethodCallAsConditionFullImplemented.goOnNice(array_2,i_2)&gt;" isReturnValueComputed="true" methodReturnCondition="true">
                                    <methodReturnValue name="TRUE" returnValueString="TRUE" hasCondition="false">
                                    </methodReturnValue>
                                    <statement name="result_1++;" pathCondition="not(or(not(or(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i))))))),equals(array,null)))" pathConditionChanged="false">
                                       <statement name="i++;" pathCondition="not(or(not(or(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i))))))),equals(array,null)))" pathConditionChanged="false">
                                          <termination name="&lt;loop body end&gt;" pathCondition="not(or(not(or(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i))))))),equals(array,null)))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                          </termination>
                                       </statement>
                                    </statement>
                                 </methodReturn>
                                 <completedBlockEntry path="/0/0/0/0/0/0/0/0/0" conditionString="true"/>
                              </statement>
                              <blockCompletionEntry path="/0/0/0/0/0/0/0/0/0/0"/>
                           </branchStatement>
                           <methodReturnEntry path="/0/0/0/0/0/0/0/0/0/0/0"/>
                        </methodCall>
                     </loopCondition>
                  </branchCondition>
                  <branchCondition name="equals(array,null)" pathCondition="not(or(not(equals(array,null)),not(imp(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))))))" pathConditionChanged="true" branchCondition="equals(array,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <loopCondition name="goOnNice(array,i);" pathCondition="not(or(not(equals(array,null)),not(imp(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))))))" pathConditionChanged="false" blockOpened="false">
                        <methodCall name="&lt;call WhileWithMethodCallAsConditionFullImplemented.goOnNice(array_2,i_2)&gt;" pathCondition="not(or(not(equals(array,null)),not(imp(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))))))" pathConditionChanged="false">
                           <branchStatement name="if (i_2&lt;0)" pathCondition="not(or(not(equals(array,null)),not(imp(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))))))" pathConditionChanged="false" blockOpened="true">
                              <statement name="return i_2&lt;array_2.length;" pathCondition="not(or(not(equals(array,null)),not(imp(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))))))" pathConditionChanged="false">
                                 <exceptionalMethodReturn name="&lt;throw java.lang.NullPointerException&gt;" signature="&lt;exceptional return of &lt;call WhileWithMethodCallAsConditionFullImplemented.goOnNice(array_2,i_2)&gt;&gt;" pathCondition="not(or(not(equals(array,null)),not(imp(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))))))" pathConditionChanged="false" methodReturnCondition="true">
                                    <exceptionalMethodReturn name="&lt;throw java.lang.Throwable&gt;" signature="&lt;exceptional return of &lt;call WhileWithMethodCallAsConditionFullImplemented.size(array)&gt;&gt;" pathCondition="not(or(not(equals(array,null)),not(imp(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))))))" pathConditionChanged="false" methodReturnCondition="not(or(not(equals(array,null)),not(imp(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))))))">
                                       <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="not(or(not(equals(array,null)),not(imp(equals(array,null),update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\[{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\] (and(equals(b,TRUE),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                                       </termination>
                                    </exceptionalMethodReturn>
                                    <completedBlockEntry path="/0/0/0/0/0/1/0/0/0" conditionString="true"/>
                                 </exceptionalMethodReturn>
                              </statement>
                              <blockCompletionEntry path="/0/0/0/0/0/1/0/0/0/0/0"/>
                           </branchStatement>
                           <methodReturnEntry path="/0/0/0/0/0/1/0/0/0/0/0"/>
                        </methodCall>
                     </loopCondition>
                  </branchCondition>
               </branchCondition>
               <branchCondition name="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\&gt; (and(not(equals(b,TRUE)),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))" pathCondition="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\&gt; (and(not(equals(b,TRUE)),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))" pathConditionChanged="true" branchCondition="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\&gt; (and(not(equals(b,TRUE)),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
                  <statement name="return result_1;" pathCondition="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\&gt; (and(not(equals(b,TRUE)),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))" pathConditionChanged="false">
                     <methodReturn name="&lt;return of size&gt;" signature="&lt;return of WhileWithMethodCallAsConditionFullImplemented.size(array)&gt;" pathCondition="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\&gt; (and(not(equals(b,TRUE)),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return i_0 as result of size&gt;" signatureIncludingReturnValue="&lt;return i_0 as result of WhileWithMethodCallAsConditionFullImplemented.size(array)&gt;" isReturnValueComputed="true" methodReturnCondition="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\&gt; (and(not(equals(b,TRUE)),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))">
                        <methodReturnValue name="i_0" returnValueString="i_0" hasCondition="false">
                        </methodReturnValue>
                        <termination name="&lt;end&gt;" pathCondition="update-application(parallel-upd(elem-update(i)(i_0),elem-update(result_1)(result_1_0)),\&lt;{method-frame(source=size(int[])@WhileWithMethodCallAsConditionFullImplemented): {
    b=goOnNice(array,i);
  }
}\&gt; (and(not(equals(b,TRUE)),and(and(geq(i,Z(0(#))),geq(length(array),i))&lt;&lt;SC&gt;&gt;,equals(result_1,i)))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                  </statement>
               </branchCondition>
            </loopInvariant>
         </statement>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/1/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/1/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/1/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/1/0/0/0"/>
</start>
