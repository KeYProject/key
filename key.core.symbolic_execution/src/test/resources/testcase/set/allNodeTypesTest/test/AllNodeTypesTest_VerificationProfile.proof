\profile "Java Profile for Symbolic Execution";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 25 22:57:42 CEST 2023
[Choice]DefaultChoices=JavaCard-JavaCard\\:off, Strings-Strings\\:on, assertions-assertions\\:on, bigint-bigint\\:on, floatRules-floatRules\\:strictfpOnly, initialisation-initialisation\\:disableStaticInitialisation, intRules-intRules\\:arithmeticSemanticsIgnoringOF, integerSimplificationRules-integerSimplificationRules\\:full, javaLoopTreatment-javaLoopTreatment\\:efficient, mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off, methodExpansion-methodExpansion\\:noRestriction, modelFields-modelFields\\:showSatisfiability, moreSeqRules-moreSeqRules\\:off, permissions-permissions\\:off, programRules-programRules\\:Java, reach-reach\\:on, runtimeExceptions-runtimeExceptions\\:allow, sequences-sequences\\:on, wdChecks-wdChecks\\:off, wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=500
[Strategy]Timeout=-1
"
}

\javaSource ".";

\proofObligation {
	"addSymbolicExecutionLabel": true,
	"class": "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
	"contract": "AllNodeTypesTest[AllNodeTypesTest::main(AllNodeTypesTest)].JML normal_behavior operation contract.0",
	"name": "AllNodeTypesTest[AllNodeTypesTest::main(AllNodeTypesTest)].JML normal_behavior operation contract.0",
 }

\proof {
(keyLog "0" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "2" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "3" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "4" (keyUser "bubel" ) (keyVersion "0ac6d7f2f89621db5bcd223c76470fdcc857ac4d"))

(autoModeTime "2114")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "assignment" (formula "4") (term "1"))
 (builtin "One Step Simplification" (formula "4"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_main,savedHeapBefore_main,_objBefore_main"))
 (builtin "One Step Simplification" (formula "4"))
(rule "assignment_write_attribute" (formula "4") (term "1"))
(branch "Normal Execution (_obj != null)"
    (builtin "One Step Simplification" (formula "5"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "4"))
    (builtin "One Step Simplification" (formula "2"))
   (rule "eval_order_access4" (formula "5") (term "1") (inst "#v1=x") (inst "#v0=a"))
   (rule "variableDeclarationAssign" (formula "5") (term "1"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "a"))
   (rule "assignment" (formula "5") (term "1"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "variableDeclarationAssign" (formula "5") (term "1"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "x"))
    (builtin "Use Operation Contract" (formula "5") (newnames "heapBefore_doubleValue,result_0,exc_0,heapAfter_doubleValue,anon_heap_doubleValue") (contract "AllNodeTypesTest[AllNodeTypesTest::doubleValue(int)].JML normal_behavior operation contract.0") (modality "diamond"))
   (branch "Post (doubleValue)"
       (builtin "One Step Simplification" (formula "5"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "add_literals" (formula "5") (term "1,0,1,1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "7"))
      (rule "assignment" (formula "9") (term "1"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "assignment_write_attribute" (formula "9") (term "1"))
      (branch "Normal Execution (a != null)"
          (builtin "One Step Simplification" (formula "10"))
          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
         (rule "false_right" (formula "9"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "result"))
         (rule "assignment" (formula "9") (term "1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "applyEq" (formula "9") (term "3,0,1,0,0") (ifseqformula "7"))
         (rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
         (rule "assignment" (formula "9") (term "1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "elim_double_block_3" (formula "9") (term "1"))
         (rule "loopUnwind" (formula "9") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
         (rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=b"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "b"))
         (rule "equality_comparison_simple" (formula "9") (term "1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "ifSplit" (formula "9"))
         (branch "if b true"
             (builtin "One Step Simplification" (formula "10"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "postincrement" (formula "9") (term "1"))
            (rule "compound_int_cast_expression" (formula "9") (term "1") (inst "#v=i_1"))
            (rule "variableDeclarationAssign" (formula "9") (term "1"))
            (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_1"))
            (rule "remove_parentheses_right" (formula "9") (term "1"))
            (rule "assignmentAdditionInt" (formula "9") (term "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaAddInt" (formula "9") (term "0,1,0"))
            (rule "add_zero_left" (formula "9") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "9") (term "1"))
            (rule "assignment" (formula "9") (term "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "blockEmpty" (formula "9") (term "1"))
            (rule "postincrement" (formula "9") (term "1"))
            (rule "compound_int_cast_expression" (formula "9") (term "1") (inst "#v=i_2"))
            (rule "variableDeclarationAssign" (formula "9") (term "1"))
            (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_2"))
            (rule "remove_parentheses_right" (formula "9") (term "1"))
            (rule "assignmentAdditionInt" (formula "9") (term "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaAddInt" (formula "9") (term "0,1,0"))
            (rule "add_zero_left" (formula "9") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "9") (term "1"))
            (rule "assignment" (formula "9") (term "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "blockEmpty" (formula "9") (term "1"))
            (rule "elim_double_block_3" (formula "9") (term "1"))
            (rule "loopUnwind" (formula "9") (term "1") (inst "#outerLabel=_label5") (inst "#innerLabel=_label4"))
            (rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=b_1"))
            (rule "variableDeclaration" (formula "9") (term "1") (newnames "b_1"))
            (rule "equality_comparison_simple" (formula "9") (term "1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "equal_literals" (formula "9") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "ifSplit" (formula "9"))
            (branch "if b_1 true"
                (builtin "One Step Simplification" (formula "10"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if b_1 false"
                (builtin "One Step Simplification" (formula "10"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "methodCallWithAssignmentWithinClass" (formula "9") (term "1") (inst "#v0=i_3"))
               (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_3"))
               (rule "variableDeclarationAssign" (formula "9") (term "1"))
               (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_1"))
               (rule "assignment" (formula "9") (term "1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_doubleValue_0,savedHeapBefore_doubleValue"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "returnUnfold" (formula "9") (term "1") (inst "#v0=i_4"))
               (rule "variableDeclarationAssign" (formula "9") (term "1"))
               (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_4"))
               (rule "assignmentAdditionInt" (formula "9") (term "1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "translateJavaAddInt" (formula "9") (term "0,1,0"))
               (rule "add_literals" (formula "9") (term "0,1,0"))
               (rule "methodCallReturn" (formula "9") (term "1"))
               (rule "assignment" (formula "9") (term "1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "methodCallEmpty" (formula "9") (term "1"))
               (rule "blockEmpty" (formula "9") (term "1"))
               (rule "assignment" (formula "9") (term "1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label7") (inst "#innerLabel=_label6"))
               (rule "variableDeclarationAssign" (formula "9") (term "1"))
               (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_5"))
               (rule "assignment" (formula "9") (term "1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "elim_double_block_3" (formula "9") (term "1"))
               (rule "loopUnwind" (formula "9") (term "1") (inst "#outerLabel=_label9") (inst "#innerLabel=_label8"))
               (rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=b_2"))
               (rule "variableDeclaration" (formula "9") (term "1") (newnames "b_2"))
               (rule "equality_comparison_simple" (formula "9") (term "1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "ifSplit" (formula "9"))
               (branch "if b_2 true"
                   (builtin "One Step Simplification" (formula "10"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "postincrement" (formula "9") (term "1"))
                  (rule "compound_int_cast_expression" (formula "9") (term "1") (inst "#v=i_6"))
                  (rule "variableDeclarationAssign" (formula "9") (term "1"))
                  (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_6"))
                  (rule "remove_parentheses_right" (formula "9") (term "1"))
                  (rule "assignmentAdditionInt" (formula "9") (term "1"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "translateJavaAddInt" (formula "9") (term "0,1,0"))
                  (rule "add_literals" (formula "9") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "9") (term "1"))
                  (rule "assignment" (formula "9") (term "1"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "blockEmpty" (formula "9") (term "1"))
                  (rule "postincrement" (formula "9") (term "1"))
                  (rule "compound_int_cast_expression" (formula "9") (term "1") (inst "#v=i_7"))
                  (rule "variableDeclarationAssign" (formula "9") (term "1"))
                  (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_7"))
                  (rule "remove_parentheses_right" (formula "9") (term "1"))
                  (rule "assignmentAdditionInt" (formula "9") (term "1"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "translateJavaAddInt" (formula "9") (term "0,1,0"))
                  (rule "add_zero_left" (formula "9") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "9") (term "1"))
                  (rule "assignment" (formula "9") (term "1"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "blockEmpty" (formula "9") (term "1"))
                  (rule "elim_double_block_3" (formula "9") (term "1"))
                  (rule "loopUnwind" (formula "9") (term "1") (inst "#outerLabel=_label11") (inst "#innerLabel=_label10"))
                  (rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=b_3"))
                  (rule "variableDeclaration" (formula "9") (term "1") (newnames "b_3"))
                  (rule "equality_comparison_simple" (formula "9") (term "1"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "equal_literals" (formula "9") (term "0,0,1,0"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "ifSplit" (formula "9"))
                  (branch "if b_3 true"
                      (builtin "One Step Simplification" (formula "10"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if b_3 false"
                      (builtin "One Step Simplification" (formula "10"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "methodCallReturn" (formula "9") (term "1"))
                     (rule "assignment" (formula "9") (term "1"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "methodCallEmpty" (formula "9") (term "1"))
                     (rule "tryEmpty" (formula "9") (term "1"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "emptyModality" (formula "9") (term "1"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "closeTrue" (formula "9"))
                  )
               )
               (branch "if b_2 false"
                   (builtin "One Step Simplification" (formula "10"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "if b false"
             (builtin "One Step Simplification" (formula "10"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (a = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (doubleValue)"
       (builtin "One Step Simplification" (formula "7"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "add_literals" (formula "5") (term "1,0,1,1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "6"))
      (rule "close" (formula "9") (ifseqformula "8"))
   )
   (branch "Pre (doubleValue)"
       (builtin "One Step Simplification" (formula "5"))
      (rule "wellFormedStorePrimitive" (formula "5") (term "1"))
      (rule "qeq_literals" (formula "5") (term "0"))
       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "5"))
   )
)
(branch "Null Reference (_obj = null)"
    (builtin "One Step Simplification" (formula "1"))
   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
   (rule "throwUnfold" (formula "4") (term "1") (inst "#v0=n"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "n"))
   (rule "instanceCreationAssignment" (formula "4") (term "1") (inst "#v0=n_1"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "n_1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=n_2"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "n_2"))
   (rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "__NEW__"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=n_3"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "n_3"))
   (rule "allocateInstance" (formula "4"))
    (builtin "One Step Simplification" (formula "5"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "7") (term "1"))
   (rule "assignment" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "assignment_write_attribute_this" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallWithinClass" (formula "7") (term "1"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallSuper" (formula "7") (term "1"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallSuper" (formula "7") (term "1"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallSuper" (formula "7") (term "1"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallSuper" (formula "7") (term "1"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "blockEmpty" (formula "7") (term "1"))
   (rule "assignment_write_attribute_this" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "assignment_write_attribute_this" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "blockEmpty" (formula "7") (term "1"))
   (rule "methodCallReturnIgnoreResult" (formula "7") (term "1"))
   (rule "methodCallReturn" (formula "7") (term "1"))
   (rule "assignment" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "blockEmpty" (formula "7") (term "1"))
   (rule "assignment" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallSuper" (formula "7") (term "1"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallSuper" (formula "7") (term "1"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallSuper" (formula "7") (term "1"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallSuper" (formula "7") (term "1"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "blockEmpty" (formula "7") (term "1"))
   (rule "assignment_write_attribute_this" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "assignment_write_attribute_this" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "methodCallEmpty" (formula "7") (term "1"))
   (rule "blockEmpty" (formula "7") (term "1"))
   (rule "assignment_write_attribute" (formula "7") (term "1"))
   (branch "Normal Execution (n_1 != null)"
       (builtin "One Step Simplification" (formula "8"))
       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
      (rule "false_right" (formula "7"))
      (rule "assignment" (formula "7") (term "1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallParamThrow" (formula "7") (term "1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "tryCatchThrow" (formula "7") (term "1"))
      (rule "ifElseUnfold" (formula "7") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_11"))
      (rule "equality_comparison_simple" (formula "7") (term "1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "replace_known_right" (formula "7") (term "0,0,1,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "ifElseSplit" (formula "7"))
      (branch "if x_11 true"
          (builtin "One Step Simplification" (formula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_11 false"
          (builtin "One Step Simplification" (formula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "7"))
         (branch "if n instanceof java.lang.Throwable true"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "7") (term "1") (newnames "e"))
            (rule "delete_unnecessary_cast" (formula "7") (term "1"))
             (builtin "One Step Simplification" (formula "8"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "7") (term "1"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "emptyModality" (formula "7") (term "1"))
             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
            (rule "false_right" (formula "7"))
             (opengoal " (  java.lang.NullPointerException::exactInstance(n_3)   = TRUE)<<origin(\"<none> (implicit)\",\"[ensures (implicit), assignable (implicit)]\")>>,  (obj = null)<<origin(\"<none> (implicit)\",\"[ensures (implicit), assignable (implicit)]\")>>,  wellFormed(heap)<<origin(\"requires (implicit)\", \"[]\")>>,  measuredByEmpty<<origin(\"requires (implicit)\", \"[]\")>> ==>  (n_3 = null)<<origin(\"<none> (implicit)\",\"[ensures (implicit), assignable (implicit)]\")>>,  (  boolean::select(heap,                     n_3,                     java.lang.Object::<created>)   = TRUE)<<origin(\"<none> (implicit)\",\"[ensures (implicit), assignable (implicit)]\")>>")
         )
         (branch "if n instanceof java.lang.Throwable false"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (n_1 = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
