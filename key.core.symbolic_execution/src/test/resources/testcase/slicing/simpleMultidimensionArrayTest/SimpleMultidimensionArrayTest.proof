\profile "Java Profile for Symbolic Execution";

\settings {
"#Proof-Settings-Config-File
#Fri Jul 15 10:24:10 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=methodExpansion-methodExpansion:noRestriction,wdChecks-wdChecks\\:off , JavaCard-JavaCard\\:off , bigint-bigint\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:allow , integerSimplificationRules-integerSimplificationRules\\:full , Strings-Strings\\:on , reach-reach\\:on , assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , modelFields-modelFields\\:showSatisfiability , wdOperator-wdOperator\\:L , permissions-permissions\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=Symbolic Execution Strategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Fri Jul 15 10:24:10 CEST 2016
name=SimpleMultidimensionArrayTest[SimpleMultidimensionArrayTest\\:\\:main([[I)].JML normal_behavior operation contract.0
addSymbolicExecutionLabel=true
contract=SimpleMultidimensionArrayTest[SimpleMultidimensionArrayTest\\:\\:main([[I)].JML normal_behavior operation contract.0
addUninterpretedPredicate=true
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "3803")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "array,result,exc,heapAtPre,SETAccumulate,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "nonNull" (formula "10") (inst "i=i"))
(rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "greater_literals" (formula "10") (term "0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "11"))
(builtin "One Step Simplification" (formula "2"))
(rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "11"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
(rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
(rule "mul_literals" (formula "10") (term "1,1,0,0"))
(rule "nnf_imp2or" (formula "10") (term "0"))
(rule "nnf_notAnd" (formula "10") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
(rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "10") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
(rule "mul_literals" (formula "10") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
(rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
(rule "mul_literals" (formula "10") (term "1,0,0,0"))
(rule "allLeft" (formula "10") (inst "t=Z(1(#))"))
(rule "leq_literals" (formula "10") (term "0,0"))
(builtin "One Step Simplification" (formula "10"))
(rule "qeq_literals" (formula "10") (term "0"))
(builtin "One Step Simplification" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "allLeft" (formula "10") (inst "t=Z(3(#))"))
(rule "leq_literals" (formula "10") (term "0,0"))
(builtin "One Step Simplification" (formula "10"))
(rule "qeq_literals" (formula "10") (term "0"))
(builtin "One Step Simplification" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "allLeft" (formula "10") (inst "t=Z(2(#))"))
(rule "leq_literals" (formula "10") (term "0,0"))
(builtin "One Step Simplification" (formula "10"))
(rule "qeq_literals" (formula "10") (term "0"))
(builtin "One Step Simplification" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "allLeft" (formula "10") (inst "t=Z(0(#))"))
(rule "leq_literals" (formula "10") (term "0,0"))
(builtin "One Step Simplification" (formula "10"))
(rule "qeq_literals" (formula "10") (term "0"))
(builtin "One Step Simplification" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "arrayLengthNotNegative" (formula "5") (term "0"))
(rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
(rule "qeq_literals" (formula "5"))
(rule "true_left" (formula "5"))
(rule "arrayLengthIsAnInt" (formula "5") (term "0"))
(builtin "One Step Simplification" (formula "5"))
(rule "true_left" (formula "5"))
(rule "arrayLengthIsAnInt" (formula "6") (term "0"))
(builtin "One Step Simplification" (formula "6"))
(rule "true_left" (formula "6"))
(rule "arrayLengthNotNegative" (formula "6") (term "0"))
(rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
(rule "qeq_literals" (formula "6"))
(rule "true_left" (formula "6"))
(rule "arrayLengthNotNegative" (formula "7") (term "0"))
(rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
(rule "qeq_literals" (formula "7"))
(rule "true_left" (formula "7"))
(rule "arrayLengthIsAnInt" (formula "7") (term "0"))
(builtin "One Step Simplification" (formula "7"))
(rule "true_left" (formula "7"))
(rule "arrayLengthIsAnInt" (formula "8") (term "0"))
(builtin "One Step Simplification" (formula "8"))
(rule "true_left" (formula "8"))
(rule "arrayLengthNotNegative" (formula "8") (term "0"))
(rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
(rule "qeq_literals" (formula "8"))
(rule "true_left" (formula "8"))
(rule "arrayLengthIsAnInt" (formula "9") (term "0"))
(builtin "One Step Simplification" (formula "9"))
(rule "true_left" (formula "9"))
(rule "arrayLengthNotNegative" (formula "9") (term "0"))
(rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
(rule "qeq_literals" (formula "9"))
(rule "true_left" (formula "9"))
(rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0,0") (ifseqformula "1"))
(rule "replace_known_right" (formula "6") (term "0") (ifseqformula "12"))
(builtin "One Step Simplification" (formula "6"))
(rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "1"))
(rule "replace_known_right" (formula "8") (term "0") (ifseqformula "16"))
(builtin "One Step Simplification" (formula "8"))
(rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,0") (ifseqformula "1"))
(rule "replace_known_right" (formula "10") (term "0") (ifseqformula "15"))
(builtin "One Step Simplification" (formula "10"))
(rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,0") (ifseqformula "1"))
(rule "replace_known_right" (formula "12") (term "0") (ifseqformula "17"))
(builtin "One Step Simplification" (formula "12"))
(rule "assignment" (formula "20") (term "1"))
(builtin "One Step Simplification" (formula "20"))
(rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_main,savedHeapBefore_main"))
(builtin "One Step Simplification" (formula "20"))
(rule "eval_order_array_access1" (formula "20") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr"))
(rule "assignment_array2" (formula "20") (term "1"))
(branch "Normal Execution (_array != null)"
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
   (builtin "One Step Simplification" (formula "21"))
   (rule "less_literals" (formula "20") (term "1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "inEqSimp_leqRight" (formula "20"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
   (rule "add_literals" (formula "1") (term "0"))
   (rule "qeq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "assignment_to_primitive_array_component" (formula "20") (term "1"))
   (branch "Normal Execution (x_arr != null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
      (builtin "One Step Simplification" (formula "21"))
      (rule "qeq_literals" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_ltToLeq" (formula "1"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
      (rule "mul_literals" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "eval_order_array_access1" (formula "20") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_1"))
      (rule "assignment_array2" (formula "20") (term "1"))
      (branch "Normal Execution (_array != null)"
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
         (builtin "One Step Simplification" (formula "21"))
         (rule "less_literals" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_leqRight" (formula "20"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "equal_literals" (formula "1") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
         (rule "add_literals" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "assignment_to_primitive_array_component" (formula "20") (term "1"))
         (branch "Normal Execution (x_arr_1 != null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (builtin "One Step Simplification" (formula "21"))
            (rule "qeq_literals" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_ltToLeq" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "10"))
            (rule "mul_literals" (formula "1") (term "1,0"))
            (rule "add_literals" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "eval_order_array_access1" (formula "20") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_2"))
            (rule "assignment_array2" (formula "20") (term "1"))
            (branch "Normal Execution (_array != null)"
               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
               (builtin "One Step Simplification" (formula "21"))
               (rule "less_literals" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "inEqSimp_leqRight" (formula "20"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "equal_literals" (formula "1") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "equal_literals" (formula "1") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment_to_primitive_array_component" (formula "20") (term "1"))
               (branch "Normal Execution (x_arr_2 != null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "qeq_literals" (formula "1") (term "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "12"))
                  (rule "mul_literals" (formula "1") (term "1,0"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "eval_order_array_access1" (formula "20") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_3"))
                  (rule "assignment_array2" (formula "20") (term "1"))
                  (branch "Normal Execution (_array != null)"
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "less_literals" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_leqRight" (formula "20"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "equal_literals" (formula "1") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "equal_literals" (formula "1") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "equal_literals" (formula "1") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "eval_order_array_access3" (formula "20") (term "1") (inst "#v0=x_arr_4") (inst "#v2=x") (inst "#v1=x_1"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_4"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or" (formula "14") (term "0,0"))
                     (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "arrayLengthIsAnInt" (formula "5") (term "0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "arrayLengthIsAnInt" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                     (rule "qeq_literals" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "arrayLengthIsAnInt" (formula "13") (term "0"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                     (rule "qeq_literals" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_1"))
                     (rule "compound_addition_2" (formula "20") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_2"))
                     (rule "eval_order_array_access4" (formula "20") (term "1") (inst "#v0=x_arr_5"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_5"))
                     (rule "assignment_array2" (formula "20") (term "1"))
                     (branch "Normal Execution (_array != null)"
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "less_literals" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_leqRight" (formula "20"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "equal_literals" (formula "1") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "equal_literals" (formula "1") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment_array2" (formula "20") (term "1"))
                        (branch "Normal Execution (x_arr_5 != null)"
                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "less_literals" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_leqRight" (formula "20"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "equal_literals" (formula "1") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "equal_literals" (formula "1") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "8"))
                           (rule "add_literals" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_3"))
                           (rule "eval_order_array_access4" (formula "20") (term "1") (inst "#v0=x_arr_5"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_6"))
                           (rule "assignment_array2" (formula "20") (term "1"))
                           (branch "Normal Execution (_array != null)"
                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "less_literals" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_leqRight" (formula "20"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_5"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "equal_literals" (formula "1") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet000_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "1") (term "2,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                              (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment_array2" (formula "20") (term "1"))
                              (branch "Normal Execution (x_arr_6 != null)"
                                 (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "18")))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "less_literals" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_leqRight" (formula "20"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_6"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "equal_literals" (formula "1") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "10"))
                                 (rule "add_literals" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                 (rule "translateJavaAddInt" (formula "20") (term "0,0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "add_literals" (formula "20") (term "0,1,0"))
                                 (rule "assignment_to_primitive_array_component" (formula "20") (term "1"))
                                 (branch "Normal Execution (x_arr_4 != null)"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "qeq_literals" (formula "1") (term "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                    (rule "mul_literals" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "returnUnfold" (formula "20") (term "1") (inst "#v0=x"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_4"))
                                    (rule "eval_order_array_access4" (formula "20") (term "1") (inst "#v0=x_arr"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_7"))
                                    (rule "assignment_array2" (formula "20") (term "1"))
                                    (branch "Normal Execution (_array != null)"
                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "less_literals" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_leqRight" (formula "20"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet0000000_5" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000000_8" (formula "1") (term "2,0"))
                                       (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                       (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "6"))
                                       (rule "add_literals" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "assignment_array2" (formula "20") (term "1"))
                                       (branch "Normal Execution (x_arr_7 != null)"
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "17")))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "less_literals" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_leqRight" (formula "20"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_8"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "14"))
                                          (rule "add_literals" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "methodCallReturn" (formula "20") (term "1"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "methodCallEmpty" (formula "20") (term "1"))
                                          (rule "tryEmpty" (formula "20") (term "1"))
                                          (rule "emptyModality" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (opengoal " ")
                                       )
                                       (branch "Null Reference (x_arr_7 = null)"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (x_arr_7 != null, but 3 Out of Bounds!)"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "less_literals" (formula "1") (term "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Null Reference (_array = null)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (_array != null, but 3 Out of Bounds!)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                       (rule "less_literals" (formula "1") (term "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Null Reference (x_arr_4 = null)"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_4 != null, but x Out of Bounds!)"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "less_literals" (formula "1") (term "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Null Reference (x_arr_6 = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_6 != null, but 1 Out of Bounds!)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "less_literals" (formula "1") (term "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Null Reference (_array = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (_array != null, but 1 Out of Bounds!)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "less_literals" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Null Reference (x_arr_5 = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_5 != null, but 0 Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "less_literals" (formula "1") (term "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Null Reference (_array = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (_array != null, but 0 Out of Bounds!)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "less_literals" (formula "1") (term "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (_array = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_array != null, but 3 Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                     (rule "less_literals" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr_2 = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr_2 != null, but 2 Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "less_literals" (formula "1") (term "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (_array = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (_array != null, but 2 Out of Bounds!)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "less_literals" (formula "1") (term "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (x_arr_1 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (x_arr_1 != null, but 1 Out of Bounds!)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (builtin "One Step Simplification" (formula "21"))
            (rule "less_literals" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (_array = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_array != null, but 1 Out of Bounds!)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
         (rule "less_literals" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (x_arr = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (x_arr != null, but 0 Out of Bounds!)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
      (builtin "One Step Simplification" (formula "21"))
      (rule "less_literals" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (_array = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
   (rule "closeFalse" (formula "1"))
)
(branch "Index Out of Bounds (_array != null, but 0 Out of Bounds!)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
   (rule "less_literals" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
   (rule "leq_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)

}
