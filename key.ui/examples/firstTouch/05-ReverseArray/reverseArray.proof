\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Aug 14 09:13:58 CEST 2020
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[Choice]DefaultChoices=javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L , integerSimplificationRules-integerSimplificationRules\\:full , reach-reach\\:on , sequences-sequences\\:on , bigint-bigint\\:on , modelFields-modelFields\\:treatAsAxiom , Strings-Strings\\:on , JavaCard-JavaCard\\:on , runtimeExceptions-runtimeExceptions\\:ban , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , assertions-assertions\\:on
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Labels]UseOriginLabels=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[SMTSettings]explicitTypeHierarchy=false
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Fri Aug 14 09:13:58 CEST 2020
name=ReverseArray[ReverseArray\\:\\:reverse()].JML normal_behavior operation contract.0
contract=ReverseArray[ReverseArray\\:\\:reverse()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {

(autoModeTime "16200")

(branch "dummy ID"
(rule "elementOfAllFields" (formula "1") (term "0,0,0,0,1,0,1,1") (newnames "self,exc,heapAtPre,o,f"))
(rule "inInt" (formula "1") (term "1,0,0,0,0,0,0,1,1"))
(rule "concrete_and_3" (formula "1") (term "0,0,0,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,1,1,0,0,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,2,1,1,0,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "1,1,0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,2,0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,2,0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "0,0,2,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
(rule "Class_invariant_axiom_for_ReverseArray" (formula "6") (ifseqformula "3"))
(rule "notLeft" (formula "6"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_reverse,savedHeapBefore_reverse"))
(rule "simplifyUpdate2" (formula "8") (term "1"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "i"))
(rule "assignment" (formula "8") (term "1"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "variableDeclarationFinalAssign" (formula "8") (term "1"))
(rule "variableDeclarationFinal" (formula "8") (term "1") (newnames "length_1"))
(rule "remove_parentheses_right" (formula "8") (term "1"))
(rule "compound_division_1" (formula "8") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x"))
(rule "eval_order_access2" (formula "8") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr"))
(rule "assignment_read_attribute_this" (formula "8"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "assignment_read_length" (formula "8"))
(branch "Normal Execution (x_arr != null)"
   (rule "sequentialToParallel2" (formula "8"))
   (rule "simplifyUpdate2" (formula "8"))
   (rule "simplifyUpdate3" (formula "8") (term "1,0"))
   (rule "applyOnElementary" (formula "8") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "8") (term "0,1,0"))
   (rule "applyOnPV" (formula "8") (term "0,0,1,0"))
   (rule "assignmentDivisionInt" (formula "8"))
   (branch "Case 1"
      (rule "translateJavaDivInt" (formula "8") (term "0,0,1"))
      (rule "sequentialToParallel2" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate3" (formula "8") (term "1,0"))
      (rule "applyOnElementary" (formula "8") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "0,1,0"))
      (rule "applyOnPV" (formula "8") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0"))
      (rule "loopScopeInvDia" (formula "8") (term "1") (newnames "i_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
      (branch "Invariant Initially Valid"
         (rule "inInt" (formula "8") (term "1,0,0,1,0,0,0,1"))
         (rule "concrete_and_3" (formula "8") (term "0,0,1,0,0,0,1"))
         (rule "inInt" (formula "8") (term "1,0,0,0,0,0,0,1"))
         (rule "concrete_and_3" (formula "8") (term "0,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "8") (term "0,2,1,1,1,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "8") (term "0,2,1,0,1,0,1,0,0,0,1"))
         (rule "translateJavaDivInt" (formula "8") (term "0,2,0,1,1,0,0,1"))
         (rule "translateJavaMod" (formula "8") (term "0,0,0,1,0,0,1"))
         (rule "translateJavaSubInt" (formula "8") (term "0,2,0,0,1,0,0,0,0,0,1"))
         (rule "translateJavaSubInt" (formula "8") (term "0,2,0,0,1,0,1,0,0,0,1"))
         (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0,0,0,0,0,1"))
         (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,0,1,0,1,0,0,0,1"))
         (rule "translateJavaAddInt" (formula "8") (term "1,0,2,0,0,1,0,0,0,0,0,1"))
         (rule "translateJavaAddInt" (formula "8") (term "1,0,2,0,0,1,0,1,0,0,0,1"))
         (rule "simplifyUpdate2" (formula "8"))
         (rule "eqSymm" (formula "8") (term "1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "8") (term "0,2,1,0,1,0,1,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "8") (term "0,2,0,0,1,0,1,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "8") (term "0,2,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "8") (term "0,2,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,2,1,0,1,0,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,2,0,0,1,0,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,2,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,2,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "8") (term "1,1,0,2,1,0,1,0,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "8") (term "1,1,0,2,0,0,1,0,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "8") (term "1,1,0,2,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "8") (term "1,1,0,2,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,2,1,0,1,0,1,0,0,0,1"))
         (rule "mul_literals" (formula "8") (term "0,1,0,2,1,0,1,0,1,0,0,0,1"))
         (rule "eqSymm" (formula "8") (term "0,1,0,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,2,0,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "8") (term "0,1,0,2,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,2,0,1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "8") (term "0,1,0,2,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,2,1,0,1,0,1,0,0,0,1"))
         (rule "mul_literals" (formula "8") (term "0,1,0,2,1,0,1,0,1,0,0,0,1"))
         (rule "eqSymm" (formula "8") (term "0,1,0,1,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "8") (term "0,0,2,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "8") (term "0,0,2,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,0,1,0,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "8") (term "0,0,2,0,0,1,0,1,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,2,1,0,1,0,1,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "8") (term "0,0,2,1,0,1,0,1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0,0,0,1"))
         (rule "applyOnRigidFormula" (formula "8"))
         (rule "simplifyUpdate2" (formula "8") (term "1"))
         (rule "applyOnRigidFormula" (formula "8") (term "0"))
         (rule "simplifyUpdate2" (formula "8") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1"))
         (rule "simplifyUpdate1" (formula "8") (term "0,1"))
         (rule "applyOnPV" (formula "8") (term "1,1"))
         (rule "applyOnPV" (formula "8") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,0"))
         (rule "simplifyUpdate2" (formula "8") (term "1,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,0"))
         (rule "qeq_literals" (formula "8") (term "1,0"))
         (rule "concrete_and_3" (formula "8") (term "0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,0"))
         (rule "simplifyUpdate2" (formula "8") (term "0,1,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,0"))
         (rule "simplifyUpdate2" (formula "8") (term "0,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,1,0"))
         (rule "eqSymm" (formula "8") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,1,1,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "0,0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,1,0,0"))
         (rule "simplifyUpdate2" (formula "8") (term "1,0,1,0,0"))
         (rule "simplifyUpdate2" (formula "8") (term "0,0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,0,0,0"))
         (rule "simplifyUpdate2" (formula "8") (term "1,0,0,0,0"))
         (rule "simplifyUpdate2" (formula "8") (term "0,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "2,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,1,1,1,1,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "2,0,1,1,0"))
         (rule "applyOnPV" (formula "8") (term "0,2,0,1,1,0"))
         (rule "eqSymm" (formula "8") (term "1,1,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,0,1,0,0"))
         (rule "simplifyUpdate2" (formula "8") (term "1,0,0,1,0,0"))
         (rule "simplifyUpdate2" (formula "8") (term "0,0,0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,0,0,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,0,0,0,0"))
         (rule "simplifyUpdate2" (formula "8") (term "0,0,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,2,0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,1,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,1,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,1,0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,0,0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,0,0,1,0,0"))
         (rule "applyOnPV" (formula "8") (term "1,0,0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "0,0,0,0,1,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,1,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "0,1,1,0,0,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "0,1,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0,0,0,0"))
         (rule "applyOnRigidFormula" (formula "8") (term "1,0,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,0,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,1,0,1,0,0"))
         (rule "applyOnPV" (formula "8") (term "0,0,0,1,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,1,1,0,1,0,0"))
         (rule "applyOnPV" (formula "8") (term "0,0,1,1,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,0,1,1,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,1,0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,1,1,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,1,1,1,0,0,0,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,1,1,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,1,0,0,0,0"))
         (rule "applyOnPV" (formula "8") (term "0,0,0,1,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,1,0,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "1"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,0,2,0,1,1,0"))
         (rule "applyOnPV" (formula "8") (term "0,0,0,0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,0,0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,0,0,0,2,0,1,1,0"))
         (rule "eqClose" (formula "8") (term "1,1,0"))
         (rule "concrete_impl_4" (formula "8") (term "1,0"))
         (rule "concrete_and_3" (formula "8") (term "0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,0,1,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,1,0,1,1,0,1,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,0,1,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,0,1,1,0,1,0"))
         (rule "eqClose" (formula "8") (term "1,1,0,1,0"))
         (rule "concrete_and_3" (formula "8") (term "1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,1,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "0,0,0,1,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "0,0,0,1,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,1,1,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,1,1,1,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,1,1,1,0,0,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,1,1,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,0,0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,0,0,1,0,0,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,0,0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,1,0,0,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "2,0,0,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,0,1,0,1,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,1,0,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "2,0,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,0,0,1,0,0,0,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
         (rule "times_zero_2" (formula "8") (term "1,0,0,1,0,0,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,0,0,1,0,0,1,0"))
         (rule "applyOnPV" (formula "8") (term "0,1,0,0,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,1,0,0,1,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,2,0,0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,2,0,0,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,2,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,2,0,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,2,0,0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "0,0,0,2,0,0,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,0,2,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "0,0,0,2,0,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,0,0,2,0,0,1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "1,0,0,2,0,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,1,0,0,2,0,0,1,0,0,0"))
         (rule "applyOnPV" (formula "8") (term "0,0,1,0,0,2,0,0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0,0,2,0,0,1,0,0,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,0,1,0,0,2,0,0,1,0,0,0"))
         (rule "eq_and" (formula "8") (term "1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "8") (term "0,1,0,0,2,0,1,0,1,0"))
         (rule "applyOnPV" (formula "8") (term "0,0,1,0,0,2,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0,0,2,0,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "8") (term "2,0,1,0,0,2,0,1,0,1,0"))
         (rule "eqClose" (formula "8") (term "1,0,1,0"))
         (rule "concrete_impl_4" (formula "8") (term "0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,1,0,0,0,0"))
         (rule "all_unused" (formula "8") (term "1,0"))
         (rule "concrete_and_3" (formula "8") (term "0"))
         (rule "nnf_imp2or" (formula "8") (term "0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,1,0,0,0"))
         (rule "neq_or_2" (formula "8") (term "0,0,0"))
         (rule "concrete_or_1" (formula "8") (term "0,0"))
         (rule "all_unused" (formula "8") (term "0"))
         (rule "concrete_and_1" (formula "8"))
         (rule "inEqSimp_geqRight" (formula "8"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "arrayLengthIsAShort" (formula "6") (term "0"))
         (rule "inShort" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "arrayLengthNotNegative" (formula "6") (term "0"))
         (rule "jdiv_axiom" (formula "1") (term "0"))
         (rule "eqSymm" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
         (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
         (rule "qeq_literals" (formula "1") (term "0,1,1"))
         (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
         (rule "equal_literals" (formula "1") (term "0"))
         (rule "concrete_or_2" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1,1,1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_addComm1" (formula "3") (term "1"))
         (rule "add_literals" (formula "3") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1"))
         (rule "polySimp_rightDist" (formula "3") (term "1"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
         (rule "mul_literals" (formula "3") (term "0,1"))
         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
         (rule "times_zero_1" (formula "10") (term "0,0"))
         (rule "add_zero_left" (formula "10") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1"))
         (rule "inEqSimp_contradInEq3" (formula "10") (ifseqformula "5"))
         (rule "mul_literals" (formula "10") (term "0,1,0"))
         (rule "greater_literals" (formula "10") (term "0,0"))
         (rule "concrete_impl_1" (formula "10") (term "0"))
         (rule "qeq_literals" (formula "10") (term "0"))
         (rule "concrete_and_2" (formula "10"))
         (rule "closeFalse" (formula "10"))
      )
      (branch "Invariant Preserved and Used"
         (rule "false_to_not_true" (formula "9") (term "0,1,0,1,1,1,1"))
         (rule "concrete_and_3" (formula "9") (term "0,1,1,1"))
         (rule "inInt" (formula "9") (term "1,0,0,1,0,0,0,0,1,1,1"))
         (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,1,1,1"))
         (rule "inInt" (formula "9") (term "1,0,0,0,0,0,0,0,1,1,1"))
         (rule "concrete_and_3" (formula "9") (term "0,0,0,0,0,0,0,1,1,1"))
         (rule "elementOfAllFields" (formula "9") (term "0,0,0,0,1,0,1,1,0,1,1,1,1"))
         (rule "inInt" (formula "9") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "concrete_and_3" (formula "9") (term "0,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "inInt" (formula "9") (term "1,0,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "concrete_and_3" (formula "9") (term "0,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,1,1,1,0,1,1,1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,2,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,0,1,1"))
         (rule "translateJavaDivInt" (formula "9") (term "0,2,0,1,1,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,2,1,1,1,0,0,0,0,0,0,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1,0,1,0,0,0,0,1,1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1,0,2,0,0,1,0,0,0,0,0,0,1,1,1"))
         (rule "translateJavaDivInt" (formula "9") (term "0,2,0,1,1,0,0,0,1,1,1"))
         (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,0,0,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,2,1,0,1,0,1,0,0,0,0,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1,0,2,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1,0,2,1,1,1,0,0,0,0,0,0,1,1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1,0,2,0,0,1,0,1,0,0,0,0,1,1,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,2,0,0,1,0,0,0,0,0,0,1,1,1"))
         (rule "translateJavaAddInt" (formula "9") (term "1,0,2,1,0,1,0,1,0,0,0,0,1,1,1"))
         (rule "eqSymm" (formula "9") (term "1,0,0,1,0,1,1,0,1,1,1,1"))
         (rule "eqSymm" (formula "9") (term "1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "eqSymm" (formula "9") (term "1,1,0,0,0,0,0,0,1,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,1,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,0,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,2,0,0,1,0,1,0,0,0,0,1,1,1"))
         (rule "eqSymm" (formula "9") (term "0,1,0,1,0,0,0,0,1,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,2,0,0,1,0,0,0,0,0,0,1,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,2,0,1,1,0,0,0,0,0,0,1,1,1"))
         (rule "polySimp_elimSub" (formula "9") (term "0,2,0,0,1,0,1,0,0,0,0,1,1,1"))
         (rule "eqSymm" (formula "9") (term "0,1,0,1,0,0,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,2,0,0,1,0,0,0,0,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,2,0,1,1,0,0,0,0,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,2,1,0,1,0,1,0,0,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,2,0,0,1,0,1,0,0,0,0,1,1,1"))
         (rule "sequentialToParallel2" (formula "9") (term "1"))
         (rule "simplifyUpdate3" (formula "9") (term "1,0,1"))
         (rule "applyOnElementary" (formula "9") (term "1,0,1"))
         (rule "sequentialToParallel2" (formula "9"))
         (rule "simplifyUpdate2" (formula "9"))
         (rule "simplifyUpdate3" (formula "9") (term "1,0"))
         (rule "impRight" (formula "9"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "simplifyUpdate3" (formula "1") (term "1,0"))
         (rule "andLeft" (formula "1"))
         (rule "simplifyUpdate2" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "simplifyUpdate2" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "simplifyUpdate2" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnParallel" (formula "14") (term "1,0"))
         (rule "simplifyUpdate3" (formula "14") (term "0,1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,1,0"))
         (rule "sequentialToParallel1" (formula "14") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,1,1,0"))
         (rule "simplifyUpdate3" (formula "14") (term "0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "eqSymm" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "2") (term "1,1,0,2,0,0,1,0,1"))
         (rule "eqSymm" (formula "2") (term "0,1,0,1"))
         (rule "polySimp_addComm0" (formula "1") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "1") (term "1,1,0,2,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "eqSymm" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "2") (term "1,1,0,2,0,0,1,0,1"))
         (rule "eqSymm" (formula "2") (term "0,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "1") (term "0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,2,0,1,1,0,1"))
         (rule "mul_literals" (formula "1") (term "0,1,0,2,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "eqSymm" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "2") (term "0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,2,1,0,1,0,1"))
         (rule "mul_literals" (formula "2") (term "0,1,0,2,1,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "eqSymm" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "applyOnRigidFormula" (formula "5"))
         (rule "simplifyUpdate1" (formula "5") (term "1"))
         (rule "simplifyUpdate1" (formula "5") (term "0"))
         (rule "applyOnPV" (formula "5") (term "1"))
         (rule "applyOnPV" (formula "5") (term "0"))
         (rule "applyOnRigidFormula" (formula "4"))
         (rule "simplifyUpdate1" (formula "4") (term "1"))
         (rule "applyOnPV" (formula "4") (term "0"))
         (rule "applyOnRigidFormula" (formula "3"))
         (rule "simplifyUpdate2" (formula "3") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,1,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,0,1,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,0,1,0,1"))
         (rule "applyOnRigidTerm" (formula "14") (term "0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,2,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0,2,1,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,0,2,1,0,1,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "applyOnRigidFormula" (formula "3") (term "1"))
         (rule "simplifyUpdate1" (formula "3") (term "1,1"))
         (rule "simplifyUpdate1" (formula "3") (term "0,1"))
         (rule "eqSymm" (formula "3") (term "1"))
         (rule "applyOnRigidFormula" (formula "3") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1,1,0,1"))
         (rule "applyOnRigidTerm" (formula "14") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,1,0,1,1,0"))
         (rule "applyOnPV" (formula "14") (term "0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "applyOnRigidFormula" (formula "2"))
         (rule "applyOnRigidTerm" (formula "3") (term "0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "1,0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "2,0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "0,0,1"))
         (rule "applyOnPV" (formula "3") (term "0,0,1"))
         (rule "applyOnRigidTerm" (formula "3") (term "1,1"))
         (rule "applyOnPV" (formula "3") (term "0,1,1"))
         (rule "applyOnRigidFormula" (formula "3") (term "0,0"))
         (rule "simplifyUpdate1" (formula "3") (term "1,0,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "1,0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "1") (term "0"))
         (rule "simplifyUpdate2" (formula "1") (term "0,0"))
         (rule "simplifyUpdate2" (formula "1") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "2") (term "0"))
         (rule "simplifyUpdate2" (formula "2") (term "1,0"))
         (rule "simplifyUpdate2" (formula "2") (term "0,0"))
         (rule "applyOnRigidTerm" (formula "3") (term "1,0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "2,1,0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "1,1,0,1"))
         (rule "applyOnPV" (formula "3") (term "0,1,0,1"))
         (rule "applyOnRigidTerm" (formula "3") (term "2,0,1"))
         (rule "applyOnPV" (formula "3") (term "0,2,0,1"))
         (rule "eqSymm" (formula "3") (term "1"))
         (rule "applyOnRigidTerm" (formula "3") (term "0,0,0"))
         (rule "simplifyUpdate1" (formula "3") (term "1,0,0,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0,1,1,0"))
         (rule "applyOnPV" (formula "14") (term "0,0,1,0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "1") (term "0,0"))
         (rule "simplifyUpdate2" (formula "1") (term "0,0,0"))
         (rule "applyOnRigidFormula" (formula "1") (term "1,0"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "applyOnRigidFormula" (formula "2") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "2") (term "0,0"))
         (rule "simplifyUpdate2" (formula "2") (term "1,0,0"))
         (rule "simplifyUpdate2" (formula "2") (term "0,0,0"))
         (rule "applyOnRigidTerm" (formula "3") (term "1,0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "2,1,0,1"))
         (rule "applyOnPV" (formula "3") (term "0,1,0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "1,1,0,1"))
         (rule "applyOnRigidTerm" (formula "3") (term "2,0,1"))
         (rule "applyOnRigidTerm" (formula "3") (term "0,0,0,0"))
         (rule "applyOnRigidFormula" (formula "1") (term "1,0,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,1,0,0"))
         (rule "applyOnRigidFormula" (formula "1") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "0,0,1,0"))
         (rule "applyOnRigidFormula" (formula "1") (term "1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "2") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "0,0,1,0"))
         (rule "applyOnRigidFormula" (formula "2") (term "1,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,1,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "0,1,1,0"))
         (rule "applyOnRigidFormula" (formula "2") (term "1,0,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,1,0,0"))
         (rule "applyOnRigidFormula" (formula "2") (term "0,0,0"))
         (rule "applyOnPV" (formula "2") (term "1,0,0,0"))
         (rule "simplifyUpdate1" (formula "2") (term "0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "3") (term "0,2,0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "1,0,2,0,1"))
         (rule "applyOnRigidTerm" (formula "3") (term "0,0,0,0,0"))
         (rule "applyOnPV" (formula "3") (term "0,0,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "3") (term "1,0,0,0,0,0"))
         (rule "simplifyUpdate1" (formula "3") (term "2,0,0,0,0,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,1,0,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,1,0,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,1,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,1,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,1,0,1,0"))
         (rule "eqSymm" (formula "2") (term "0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,1,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "2,1,1,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,1,1,1,0"))
         (rule "eqSymm" (formula "2") (term "1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "0,1,0,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "3") (term "0,0,2,0,1"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "1") (term "0,0,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,1,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,1,1,0,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,1,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,1,0,0,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,1,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,1,1,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,1,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,0,1,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,1,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,1,0,1,0"))
         (rule "eqSymm" (formula "2") (term "0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,1,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "2,1,1,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,1,0,1,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,1,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "2,1,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "2") (term "0,0,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "3") (term "0,0,0,2,0,1"))
         (rule "applyOnPV" (formula "3") (term "0,0,0,0,2,0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "1,0,0,0,2,0,1"))
         (rule "simplifyUpdate1" (formula "3") (term "2,0,0,0,2,0,1"))
         (rule "eqSymm" (formula "3") (term "1"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,1,0,0,1,0,0"))
         (rule "applyOnPV" (formula "1") (term "0,1,0,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,0,2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "2,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,1,0,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,1,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "2,1,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,1,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "2,1,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,1,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "2,1,1,1,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,1,1,1,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,1,1,1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,0,0,1,0,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,1,0,0,1,0,0"))
         (rule "applyOnPV" (formula "2") (term "0,1,0,0,1,0,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "0,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "0,0,0,2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "0,2,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,0,2,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "1,0,0,2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "0,0,2,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "0,0,0,2,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "0,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,1,0,0,2,0,0,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,0,1,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "1") (term "0,1,0,0,2,0,1,1,0"))
         (rule "applyOnPV" (formula "1") (term "0,0,1,0,0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "1,0,1,0,0,2,0,1,1,0"))
         (rule "simplifyUpdate1" (formula "1") (term "2,0,1,0,0,2,0,1,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,0,0,2,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "1,0,0,2,0,0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "0,1,0,0,2,1,0,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,0,1,0,0,2,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "2,0,1,0,0,2,1,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,0,1,0,0,2,1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "2") (term "0,1,0,0,2,0,0,1,0"))
         (rule "applyOnPV" (formula "2") (term "0,0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "1,0,1,0,0,2,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "2") (term "2,0,1,0,0,2,0,0,1,0"))
         (rule "eqSymm" (formula "2") (term "0,1,0"))
         (rule "pullOutSelect" (formula "14") (term "0,1,0,1,1,0") (inst "selectSK=ReverseArray_a_0"))
         (rule "applyEq" (formula "2") (term "1,1,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "1"))
         (rule "applyEq" (formula "3") (term "1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "3") (term "1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "3") (term "0,1,0,0,2,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "0,1,0,0,2,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
         (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "3") (term "0,1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
         (rule "concrete_not_2" (formula "1") (term "0,1,0,0"))
         (rule "concrete_and_1" (formula "1") (term "1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "9"))
         (rule "concrete_not_1" (formula "1") (term "1,0,0"))
         (rule "concrete_or_4" (formula "1") (term "0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "14"))
         (rule "concrete_and_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "2") (term "0,1,0,0,2,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "3") (term "0,1,0,0,2,1,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "3") (term "1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "1,1,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "4") (term "1,0,1") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "3") (term "1,1,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "15") (term "0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "2") (term "1,0,1,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "eqSymm" (formula "2") (term "0,1,0"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_1"))
         (rule "jmod_axiom" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
         (rule "polySimp_sepNegMonomial" (formula "3") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnon" (formula "3"))
         (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
         (rule "elementOfAllFields" (formula "3") (term "0,0,0,0"))
         (rule "eqClose" (formula "3") (term "0,0,0,0"))
         (rule "concrete_and_1" (formula "3") (term "0,0,0"))
         (rule "equalUnique" (formula "3") (term "0,0,0,0"))
         (rule "concrete_not_2" (formula "3") (term "0,0,0"))
         (rule "concrete_or_1" (formula "3") (term "0,0"))
         (rule "ifthenelse_true" (formula "3") (term "0"))
         (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "nnf_imp2or" (formula "1") (term "0"))
         (rule "nnf_imp2or" (formula "2") (term "0"))
         (rule "nnf_notAnd" (formula "1") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "2") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "14") (term "0,0,0,0,0,0,0,1,1,0,1"))
         (rule "arrayLengthIsAShort" (formula "11") (term "0"))
         (rule "inShort" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "arrayLengthNotNegative" (formula "11") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0,1,0,0,0,0,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0,0,0,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0,1"))
         (rule "jdiv_axiom" (formula "5") (term "0"))
         (rule "eqSymm" (formula "5"))
         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "12"))
         (rule "ifthenelse_true" (formula "5") (term "0"))
         (rule "eqSymm" (formula "5"))
         (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
         (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "5"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
         (rule "applyEq" (formula "3") (term "0,2,0,1") (ifseqformula "5"))
         (rule "applyEq" (formula "2") (term "1,1,0,0") (ifseqformula "5"))
         (rule "applyEq" (formula "3") (term "0,2,1,1") (ifseqformula "5"))
         (rule "commute_and" (formula "2") (term "1,0"))
         (rule "cnf_rightDist" (formula "1") (term "0"))
         (rule "distr_forallAnd" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "commute_or" (formula "2") (term "0"))
         (rule "cnf_rightDist" (formula "3") (term "0"))
         (rule "distr_forallAnd" (formula "3"))
         (rule "andLeft" (formula "3"))
         (rule "commute_or" (formula "4") (term "0"))
         (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x_2"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
         (rule "less_than_comparison_simple" (formula "17") (term "1"))
         (rule "sequentialToParallel2" (formula "17"))
         (rule "simplifyUpdate3" (formula "17") (term "1,0"))
         (rule "applyOnElementary" (formula "17") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
         (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "17") (term "0,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
         (rule "applyOnPV" (formula "17") (term "1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0"))
         (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_0"))
         (rule "mul_literals" (formula "7") (term "1,1,1,1,1"))
         (rule "qeq_literals" (formula "7") (term "0,1,1"))
         (rule "ifthenelse_true_for" (formula "7") (term "1,1"))
         (rule "equal_literals" (formula "7") (term "0"))
         (rule "concrete_or_2" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "polySimp_addComm1" (formula "9") (term "1"))
         (rule "add_literals" (formula "9") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "8"))
         (rule "inEqSimp_homoInEq1" (formula "9"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0"))
         (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "7"))
         (rule "applyEq" (formula "20") (term "0,0,0,1,0") (ifseqformula "7"))
         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,1,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_commuteGeq" (formula "11"))
         (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "7"))
         (rule "eqSymm" (formula "5") (term "0,0"))
         (rule "applyEq" (formula "20") (term "0,1,0,0,0") (ifseqformula "7"))
         (rule "applyEq" (formula "5") (term "0,2,0,1") (ifseqformula "7"))
         (rule "applyEq" (formula "4") (term "1,1,0,0") (ifseqformula "7"))
         (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "7"))
         (rule "applyEq" (formula "10") (term "1") (ifseqformula "7"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1"))
         (rule "polySimp_rightDist" (formula "9") (term "1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
         (rule "mul_literals" (formula "9") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "9"))
         (rule "times_zero_1" (formula "17") (term "0,0"))
         (rule "add_zero_left" (formula "17") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17"))
         (rule "mul_literals" (formula "17") (term "1"))
         (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
         (rule "leq_literals" (formula "17") (term "0,0"))
         (rule "concrete_or_2" (formula "17") (term "0"))
         (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0"))
         (rule "leq_literals" (formula "17") (term "0"))
         (rule "concrete_or_2" (formula "17"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "11"))
         (rule "times_zero_1" (formula "6") (term "0,0"))
         (rule "add_zero_left" (formula "6") (term "0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0,0") (ifseqformula "13"))
         (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "21"))
         (rule "concrete_or_2" (formula "18"))
         (rule "ifElseSplit" (formula "22"))
         (branch "if x_2 true"
            (rule "simplifyUpdate2" (formula "23"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "ifthenelse_concrete3" (formula "1"))
            (rule "boolean_not_equal_2" (formula "1") (term "1"))
            (rule "concrete_or_4" (formula "1"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "tmp"))
            (rule "eval_order_array_access4" (formula "23") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_1"))
            (rule "assignment_read_attribute_this" (formula "23"))
            (rule "sequentialToParallel2" (formula "23"))
            (rule "simplifyUpdate3" (formula "23") (term "1,0"))
            (rule "applyOnElementary" (formula "23") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "23") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0"))
            (rule "replaceKnownSelect_taclet100_0" (formula "23") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "23") (term "0,1,0"))
            (rule "assignment_array2" (formula "23"))
            (branch "Normal Execution (x_arr_1 != null)"
               (rule "sequentialToParallel2" (formula "23"))
               (rule "simplifyUpdate2" (formula "23"))
               (rule "simplifyUpdate3" (formula "23") (term "1,0"))
               (rule "applyOnElementary" (formula "23") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "23") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "23") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "23") (term "1,0,1,0"))
               (rule "applyOnRigidTerm" (formula "23") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "23") (term "0,2,0,1,0"))
               (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "eqClose" (formula "1") (term "0,0,0,0"))
               (rule "concrete_and_1" (formula "1") (term "0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "0,0,0"))
               (rule "concrete_or_1" (formula "1") (term "0,0"))
               (rule "ifthenelse_true" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eval_order_array_access1" (formula "23") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_2"))
               (rule "assignment_read_attribute_this" (formula "23"))
               (rule "sequentialToParallel2" (formula "23"))
               (rule "simplifyUpdate3" (formula "23") (term "1,0"))
               (rule "applyOnElementary" (formula "23") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "23") (term "2,0,1,0"))
               (rule "replaceKnownSelect_taclet100_0" (formula "23") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "23") (term "0,1,0"))
               (rule "eval_order_array_access3" (formula "23") (term "1") (inst "#v1=x_3") (inst "#v2=x_2") (inst "#v0=x_arr_3"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_3"))
               (rule "assignment" (formula "23") (term "1"))
               (rule "sequentialToParallel2" (formula "23"))
               (rule "simplifyUpdate2" (formula "23"))
               (rule "simplifyUpdate3" (formula "23") (term "1,0"))
               (rule "applyOnElementary" (formula "23") (term "1,0"))
               (rule "applyOnPV" (formula "23") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_4"))
               (rule "assignment" (formula "23") (term "1"))
               (rule "sequentialToParallel2" (formula "23"))
               (rule "simplifyUpdate3" (formula "23") (term "1,0"))
               (rule "applyOnElementary" (formula "23") (term "1,0"))
               (rule "applyOnPV" (formula "23") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_3"))
               (rule "eval_order_array_access4" (formula "23") (term "1") (inst "#v0=x_arr_4"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_4"))
               (rule "assignment_read_attribute_this" (formula "23"))
               (rule "sequentialToParallel2" (formula "23"))
               (rule "simplifyUpdate3" (formula "23") (term "1,0"))
               (rule "applyOnElementary" (formula "23") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "23") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "23") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "23") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "23") (term "0,0,1,0"))
               (rule "replaceKnownSelect_taclet100_0" (formula "23") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "23") (term "0,1,0"))
               (rule "eval_order_array_access5" (formula "23") (term "1") (inst "#v1=x_5") (inst "#ar1=x_arr_5"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_5"))
               (rule "assignment" (formula "23") (term "1"))
               (rule "sequentialToParallel2" (formula "23"))
               (rule "simplifyUpdate2" (formula "23"))
               (rule "simplifyUpdate3" (formula "23") (term "1,0"))
               (rule "applyOnElementary" (formula "23") (term "1,0"))
               (rule "applyOnPV" (formula "23") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_5"))
               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (rule "concrete_or_1" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
               (rule "mul_literals" (formula "7") (term "0,0"))
               (rule "add_zero_left" (formula "7") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "7"))
               (rule "leq_literals" (formula "18") (term "0"))
               (rule "concrete_or_1" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "compound_subtraction_2" (formula "22") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
               (rule "variableDeclarationAssign" (formula "22") (term "1"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_6"))
               (rule "eval_order_access2" (formula "22") (term "1") (inst "#v0=x_arr_6"))
               (rule "variableDeclarationAssign" (formula "22") (term "1"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_arr_6"))
               (rule "assignment_read_attribute_this" (formula "22"))
               (rule "sequentialToParallel2" (formula "22"))
               (rule "simplifyUpdate3" (formula "22") (term "1,0"))
               (rule "applyOnElementary" (formula "22") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
               (rule "applyOnPV" (formula "22") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0"))
               (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "0,1,0"))
               (rule "assignment_read_length" (formula "22"))
               (branch "Normal Execution (x_arr_6 != null)"
                  (rule "sequentialToParallel2" (formula "22"))
                  (rule "simplifyUpdate2" (formula "22"))
                  (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                  (rule "applyOnElementary" (formula "22") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                  (rule "applyOnPV" (formula "22") (term "0,0,1,0"))
                  (rule "variableDeclarationAssign" (formula "22") (term "1"))
                  (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_7"))
                  (rule "remove_parentheses_right" (formula "22") (term "1"))
                  (rule "assignmentAdditionInt" (formula "22") (term "1"))
                  (rule "translateJavaAddInt" (formula "22") (term "0,0,1"))
                  (rule "sequentialToParallel2" (formula "22"))
                  (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                  (rule "applyOnElementary" (formula "22") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "22") (term "1,0,1,0"))
                  (rule "assignmentSubtractionInt" (formula "22") (term "1"))
                  (rule "translateJavaSubInt" (formula "22") (term "0,0,1"))
                  (rule "polySimp_elimSub" (formula "22") (term "0,0,1"))
                  (rule "sequentialToParallel2" (formula "22"))
                  (rule "simplifyUpdate2" (formula "22"))
                  (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                  (rule "applyOnElementary" (formula "22") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0"))
                  (rule "applyOnPV" (formula "22") (term "0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "22") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "22") (term "1,1,0,1,0"))
                  (rule "applyOnPV" (formula "22") (term "0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                  (rule "assignment_array2" (formula "22"))
                  (branch "Normal Execution (x_arr_5 != null)"
                     (rule "sequentialToParallel2" (formula "22"))
                     (rule "simplifyUpdate2" (formula "22"))
                     (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                     (rule "applyOnElementary" (formula "22") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "22") (term "1,0,1,0"))
                     (rule "applyOnPV" (formula "22") (term "0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "22") (term "2,0,1,0"))
                     (rule "applyOnPV" (formula "22") (term "0,2,0,1,0"))
                     (rule "pullOutSelect" (formula "22") (term "0,1,0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                     (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                     (rule "eqClose" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                     (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "1") (term "0,0"))
                     (rule "ifthenelse_true" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "assignment_to_primitive_array_component" (formula "22"))
                     (branch "Normal Execution (x_arr_3 != null)"
                        (rule "sequentialToParallel2" (formula "22"))
                        (rule "simplifyUpdate2" (formula "22"))
                        (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                        (rule "applyOnElementary" (formula "22") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "22") (term "3,0,1,0"))
                        (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "22") (term "3,0,1,0"))
                        (rule "applyOnPV" (formula "22") (term "1,0,1,0"))
                        (rule "applyOnPV" (formula "22") (term "0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "22") (term "2,0,1,0"))
                        (rule "applyOnPV" (formula "22") (term "0,2,0,1,0"))
                        (rule "eval_order_array_access1" (formula "22") (term "1") (inst "#v0=x_arr"))
                        (rule "variableDeclarationAssign" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_arr_7"))
                        (rule "assignment_read_attribute_this" (formula "22"))
                        (rule "sequentialToParallel2" (formula "22"))
                        (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                        (rule "applyOnElementary" (formula "22") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0"))
                        (rule "applyOnPV" (formula "22") (term "0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,1,0"))
                        (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "0,1,0"))
                        (rule "eval_order_array_access2" (formula "22") (term "1") (inst "#v0=x_2") (inst "#ar1=x_arr_8"))
                        (rule "variableDeclarationAssign" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_arr_8"))
                        (rule "assignment" (formula "22") (term "1"))
                        (rule "sequentialToParallel2" (formula "22"))
                        (rule "simplifyUpdate2" (formula "22"))
                        (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                        (rule "applyOnElementary" (formula "22") (term "1,0"))
                        (rule "applyOnPV" (formula "22") (term "0,1,0"))
                        (rule "variableDeclarationAssign" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_8"))
                        (rule "compound_subtraction_2" (formula "22") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
                        (rule "variableDeclarationAssign" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_9"))
                        (rule "eval_order_access2" (formula "22") (term "1") (inst "#v0=x_arr_9"))
                        (rule "variableDeclarationAssign" (formula "22") (term "1"))
                        (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_arr_9"))
                        (rule "assignment_read_attribute_this" (formula "22"))
                        (rule "sequentialToParallel2" (formula "22"))
                        (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                        (rule "applyOnElementary" (formula "22") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0"))
                        (rule "applyOnPV" (formula "22") (term "0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "22") (term "0,1,0"))
                        (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "0,1,0"))
                        (rule "assignment_read_length" (formula "22"))
                        (branch "Normal Execution (x_arr_9 != null)"
                           (rule "sequentialToParallel2" (formula "22"))
                           (rule "simplifyUpdate2" (formula "22"))
                           (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                           (rule "applyOnElementary" (formula "22") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                           (rule "applyOnPV" (formula "22") (term "0,0,1,0"))
                           (rule "variableDeclarationAssign" (formula "22") (term "1"))
                           (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_10"))
                           (rule "remove_parentheses_right" (formula "22") (term "1"))
                           (rule "assignmentAdditionInt" (formula "22") (term "1"))
                           (rule "translateJavaAddInt" (formula "22") (term "0,0,1"))
                           (rule "sequentialToParallel2" (formula "22"))
                           (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                           (rule "applyOnElementary" (formula "22") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "1,0,1,0"))
                           (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                           (rule "applyOnPV" (formula "22") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0"))
                           (rule "assignmentSubtractionInt" (formula "22") (term "1"))
                           (rule "translateJavaSubInt" (formula "22") (term "0,0,1"))
                           (rule "polySimp_elimSub" (formula "22") (term "0,0,1"))
                           (rule "sequentialToParallel2" (formula "22"))
                           (rule "simplifyUpdate2" (formula "22"))
                           (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                           (rule "applyOnElementary" (formula "22") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "1,0,1,0"))
                           (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0"))
                           (rule "applyOnPV" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                           (rule "applyOnRigidTerm" (formula "22") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "22") (term "1,1,0,1,0"))
                           (rule "applyOnPV" (formula "22") (term "0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                           (rule "assignment_to_primitive_array_component" (formula "22"))
                           (branch "Normal Execution (x_arr_8 != null)"
                              (rule "sequentialToParallel2" (formula "22"))
                              (rule "simplifyUpdate2" (formula "22"))
                              (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                              (rule "applyOnElementary" (formula "22") (term "1,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "3,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0"))
                              (rule "applyOnPV" (formula "22") (term "1,0,1,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,0"))
                              (rule "applyOnPV" (formula "22") (term "3,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "2,0,1,0"))
                              (rule "applyOnPV" (formula "22") (term "0,2,0,1,0"))
                              (rule "postincrement" (formula "22") (term "1"))
                              (rule "compound_int_cast_expression" (formula "22") (term "1") (inst "#v=x_2"))
                              (rule "variableDeclarationAssign" (formula "22") (term "1"))
                              (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_11"))
                              (rule "remove_parentheses_right" (formula "22") (term "1"))
                              (rule "assignmentAdditionInt" (formula "22") (term "1"))
                              (rule "translateJavaAddInt" (formula "22") (term "0,0,1"))
                              (rule "sequentialToParallel2" (formula "22"))
                              (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                              (rule "applyOnElementary" (formula "22") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "1,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,0"))
                              (rule "applyOnPV" (formula "22") (term "1,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0"))
                              (rule "widening_identity_cast_5" (formula "22") (term "1"))
                              (rule "assignment" (formula "22") (term "1"))
                              (rule "sequentialToParallel2" (formula "22"))
                              (rule "simplifyUpdate2" (formula "22"))
                              (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                              (rule "applyOnElementary" (formula "22") (term "1,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0"))
                              (rule "blockEmpty" (formula "22") (term "1"))
                              (rule "lsContinue" (formula "22") (term "1"))
                              (rule "sequentialToParallel2" (formula "22"))
                              (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                              (rule "applyOnRigidFormula" (formula "22"))
                              (rule "simplifyUpdate2" (formula "22") (term "0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,1"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,1"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,0"))
                              (rule "boolean_not_equal_2" (formula "22") (term "0,0"))
                              (rule "concrete_impl_2" (formula "22") (term "0"))
                              (rule "concrete_and_1" (formula "22"))
                              (rule "impRight" (formula "22"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "23"))
                              (rule "simplifyUpdate2" (formula "23") (term "0"))
                              (rule "simplifyUpdate2" (formula "23") (term "1"))
                              (rule "applyOnRigidFormula" (formula "20"))
                              (rule "simplifyUpdate1" (formula "20") (term "1"))
                              (rule "applyOnPV" (formula "20") (term "0"))
                              (rule "boolean_not_equal_2" (formula "20"))
                              (rule "false_right" (formula "20"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,1"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1"))
                              (rule "applyOnPV" (formula "22") (term "1,1"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,1"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,1,0,0"))
                              (rule "applyOnPV" (formula "22") (term "1,1,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,1"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,1"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,1"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,1"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,1,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,0,0"))
                              (rule "precOfInt" (formula "22") (term "1"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,0,1,1"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0,1,1"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0,1,1"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,0,1,1"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,1,0,1"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,1,0,1"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,1,0,1"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,1,1,0,1"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,0,0,1,0"))
                              (rule "eqSymm" (formula "22") (term "1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,0,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,0,0,1,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,1,0,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,1,1,0,0,0,0"))
                              (rule "eqSymm" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,1"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,1,1,0,1"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,0,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,0,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,0,0,0,0,1,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,0,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,1,0,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,1,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,1,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1,1"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "0,1,0,1,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "0,1,0,1,1"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,1,1,0,1"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "0,1,1,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "0,1,1,0,1"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,1,1,0,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,1,0,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,0,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "22") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,1,1,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "2,1,1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,0,1,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "2,0,1,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,2,0,1,1,0,0,0,0"))
                              (rule "eqSymm" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,0,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,0,0,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,1,1,0,0,0,1,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,0,1,1,0,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,0,1,1,0,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,0,1,1,0,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,1,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,1,0,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "1,1,0,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,0,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,0,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,1,0,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "22") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,1"))
                              (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,1"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,1,1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,2,0,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,2,0,1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,0,0,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,1,1,0,1,0,0,0,0,0"))
                              (rule "eqSymm" (formula "22") (term "1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,0,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "1,1,0,0,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,1,0,0,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,1"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,1,1,1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "1,1,1,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "1,1,1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,2,0,1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,0,0,0,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,0,0,0,0,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,0,0,0,0,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,0,0,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "1,0,0,0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,1,0,0,0,1,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "22") (term "1,0,0,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,1,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,1,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,0,1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,1,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,1,1,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,1,1,0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,1,1"))
                              (rule "add_literals" (formula "22") (term "1,1,0,1,1"))
                              (rule "times_zero_1" (formula "22") (term "1,0,1,1"))
                              (rule "add_zero_right" (formula "22") (term "0,1,1"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,0,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "eqSymm" (formula "22") (term "0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,1,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,0,2,0,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,0,0,2,0,1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,0,0,2,0,1,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,0,0,2,0,1,1,0,0,0,0"))
                              (rule "eqSymm" (formula "22") (term "1,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                              (rule "add_literals" (formula "22") (term "0,0,0,1,1"))
                              (rule "add_zero_left" (formula "22") (term "0,0,1,1"))
                              (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1,1"))
                              (rule "add_literals" (formula "22") (term "1,0,1,1"))
                              (rule "times_zero_1" (formula "22") (term "0,1,1"))
                              (rule "leq_literals" (formula "22") (term "1,1"))
                              (rule "concrete_and_3" (formula "22") (term "1"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "eqSymm" (formula "22") (term "0,1,0,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0,0,1,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "0,0,0,0,0,1,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "0,0,0,0,0,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1,0,1,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "1,0,1,1,0,1,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "1,0,1,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,2,1,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,2,1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,0,2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "1,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,2,1,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,0,2,1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "0,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,0,2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,0,2,1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "1,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "1,1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,0,0,2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0,0,2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0,0,2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,0,0,2,0,0,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,0,0,2,1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,0,0,2,1,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0,0,2,1,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0,0,2,1,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "22") (term "0,1,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "22") (term "0,0,1,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "1,0,1,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "22") (term "2,0,1,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "eqSymm" (formula "22") (term "0,1,0,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "0,1,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "0,1,0,0,2,0,1,1,0,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet100_0" (formula "22") (term "0,1,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "22") (term "0,1,0,0,2,0,0,1,0,1,0,0,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "1"))
                              (rule "mul_literals" (formula "22") (term "1,0,1"))
                              (rule "add_zero_right" (formula "22") (term "0,1"))
                              (rule "applyEq" (formula "22") (term "0,2,1,1,1,0,0,0,0") (ifseqformula "12"))
                              (rule "jmod_axiom" (formula "22") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,0,0"))
                              (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,0,0,0,0") (ifseqformula "12"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                              (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "1"))
                              (rule "concrete_and_3" (formula "22") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "22") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                              (rule "mul_literals" (formula "22") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                              (rule "inEqSimp_subsumption1" (formula "22") (term "1,0,0") (ifseqformula "8"))
                              (rule "leq_literals" (formula "22") (term "0,1,0,0"))
                              (rule "concrete_or_1" (formula "22") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "22") (term "0,0"))
                              (rule "pullOutSelect" (formula "22") (term "0,1,1,0,0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "3"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "1") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                              (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "1") (term "0,0"))
                              (rule "ifthenelse_true" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "cut_direct" (formula "7") (term "0,0"))
                              (branch "CUT: self.a.length = quotient_0 * 2 TRUE"
                                 (rule "concrete_not_1" (formula "8") (term "0"))
                                 (rule "concrete_impl_2" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "replace_known_left" (formula "23") (term "0,0,1,0,0") (ifseqformula "7"))
                                 (rule "concrete_not_1" (formula "23") (term "0,1,0,0"))
                                 (rule "concrete_impl_2" (formula "23") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "23") (term "0,0"))
                                 (rule "applyEq" (formula "23") (term "1,0,2,3,0,0,0,0,1,0,1,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,2,3,0,0,0,0,1,0,1,0,0"))
                                 (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "23") (term "1,0,2,0,0,0,1,0,1,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,2,0,0,0,1,0,1,0,0"))
                                 (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0"))
                                 (rule "qeq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,3,0,0,0,1,0,0,1,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,3,0,0,0,1,0,0,1,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,0,0,1,0,0,1,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,0,0,1,0,0,1,0"))
                                 (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                 (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "7"))
                                 (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "11") (term "0"))
                                 (rule "add_literals" (formula "11") (term "1,0"))
                                 (rule "times_zero_1" (formula "11") (term "0"))
                                 (rule "leq_literals" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEq" (formula "21") (term "1,0,2,0,0,1,1,0,0,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,2,0,0,1,1,0,0,0,0"))
                                 (rule "applyEq" (formula "21") (term "1,0,2,0,0,1,1,0,1,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,2,0,0,1,1,0,1,0,0"))
                                 (rule "applyEq" (formula "21") (term "1,0,2,3,0,0,0,1,1,0,0,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,2,3,0,0,0,1,1,0,0,0,0"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "21") (term "1,0,2,3,0,0,0,1,1,0,1,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,2,3,0,0,0,1,1,0,1,0,0"))
                                 (rule "applyEq" (formula "3") (term "1,0,0,2,0,1,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "6") (term "1,0,0,2,0,1,0") (ifseqformula "7"))
                                 (rule "eqSymm" (formula "6") (term "1,0"))
                                 (rule "applyEq" (formula "4") (term "1,0,0,2,0,1,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,2,0,0,1,0,1,0,0") (ifseqformula "7"))
                                 (rule "eqSymm" (formula "21") (term "0,1,0,1,0,0"))
                                 (rule "applyEq" (formula "21") (term "1,0,2,0,1,0,1,0,0,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,2,0,1,0,1,0,0,0,0"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,2,0,0,1,0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "21") (term "1,0,2,3,0,0,1,0,1,0,0,0,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,2,3,0,0,1,0,1,0,0,0,0"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,2,0,1,1,0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "21") (term "1,0,0,2,0,0,1,0,1,0,0") (ifseqformula "7"))
                                 (rule "eqSymm" (formula "21") (term "0,1,0,1,0,0"))
                                 (rule "applyEq" (formula "6") (term "1,0,0,2,0,1,0") (ifseqformula "7"))
                                 (rule "eqSymm" (formula "6") (term "1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                 (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "8"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0"))
                                 (rule "greater_literals" (formula "18") (term "0,0"))
                                 (rule "concrete_and_1" (formula "18") (term "0"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                 (rule "concrete_or_1" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "10") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "10") (term "0"))
                                 (rule "polySimp_homoEq" (formula "10"))
                                 (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "10") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "10") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "1,0"))
                                 (rule "times_zero_1" (formula "10") (term "0"))
                                 (rule "eqClose" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "jdiv_axiom" (formula "10") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11"))
                                 (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "8"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "10") (term "0,0,0"))
                                 (rule "leq_literals" (formula "10") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "10") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "10") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "10") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "10") (term "0"))
                                 (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0"))
                                 (rule "add_literals" (formula "10") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "0,0,0"))
                                 (rule "div_literals" (formula "10") (term "0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0"))
                                 (rule "eqClose" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "i_0 = -1 + quotient_0 TRUE"
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "19") (term "1,1,1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,1,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "1,1,0,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "5") (term "1,1,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,1,0,0,0"))
                                    (rule "applyEqRigid" (formula "19") (term "0,1,0,2,3,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "19") (term "0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "1,0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,2,3,0,0,0,1,1,0,1,0,0"))
                                    (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "19") (term "0,1"))
                                    (rule "add_literals" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                    (rule "applyEqRigid" (formula "19") (term "0,1,0,2,0,0,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,2,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,2,0,0,0,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,2,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,2,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,2,0,0,0,1,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,2,0,0,0,1,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,2,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "19") (term "0,2,0,0,0,1,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "1,0,2,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,2,0,0,0,1,0,1,0,0"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,2,0,0,1,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,2,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,2,0,0,1,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,2,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,2,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,2,0,0,1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,2,0,0,1,1,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,2,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "19") (term "0,2,0,0,1,1,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "1,0,2,0,0,1,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,2,0,0,1,1,0,1,0,0"))
                                    (rule "applyEqRigid" (formula "19") (term "0,1,0,2,3,0,0,0,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "19") (term "0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "19") (term "1,0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,2,3,0,0,0,1,0,0,1,0"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,2,3,0,0,0,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "19") (term "0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "1,0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,2,3,0,0,0,0,1,0,1,0,0"))
                                    (rule "applyEqRigid" (formula "3") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEqRigid" (formula "18") (term "0,2,0,0,0,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "18") (term "0,1,0,2,3,0,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "18") (term "0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,2,3,0,0,0,1,1,0,0,0,0"))
                                    (rule "applyEq" (formula "18") (term "0,2,3,0,0,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,2,0,0,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,2,0,0,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,2,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,2,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,2,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,2,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,2,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,2,0,0,1,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "18") (term "0,2,0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,0,2,0,0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,2,0,0,1,0,0,1,0"))
                                    (rule "applyEq" (formula "18") (term "0,2,0,0,0,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "0,2,3,0,0,1,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "0,2,3,0,0,1,0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "18") (term "0,1,0,2,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,2,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "18") (term "0,2,0,0,1,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,2,0,0,1,1,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "0,2,0,0,0,1,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "18") (term "0,2,0,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "3") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "18") (term "0,2,3,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "1,1,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,1,0,0,0"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,2,3,0,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "18") (term "0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,2,3,0,0,1,0,1,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "18") (term "0,1,0,2,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,2,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,2,0,1,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,2,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,2,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,2,0,1,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,2,0,1,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,2,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "18") (term "0,2,0,1,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,0,2,0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,2,0,1,0,1,0,0,0,0"))
                                    (rule "applyEq" (formula "18") (term "0,2,3,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "18") (term "0,2,0,0,1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (term "1") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "17") (term "0,1"))
                                    (rule "concrete_or_1" (formula "17") (term "1"))
                                    (rule "concrete_and_3" (formula "17"))
                                    (rule "inEqSimp_or_antiSymm0" (formula "4") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "1,0,1,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "4") (term "0,0,0"))
                                    (rule "ifthenelse_true_for" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_or_antiSymm0" (formula "5") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "1,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "5") (term "0,0,0"))
                                    (rule "ifthenelse_true_for" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "1,0,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "0,1,0,0,1,0"))
                                    (rule "leq_literals" (formula "17") (term "1,0,0,1,0"))
                                    (rule "concrete_or_3" (formula "17") (term "0,0,1,0"))
                                    (rule "concrete_or_1" (formula "17") (term "0,1,0"))
                                    (rule "all_unused" (formula "17") (term "1,0"))
                                    (rule "concrete_and_3" (formula "17") (term "0"))
                                    (rule "commute_or" (formula "4") (term "0"))
                                    (rule "elim_forall4" (formula "4"))
                                    (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_5"))
                                    (rule "simplifySelectOfAnon" (formula "4"))
                                    (rule "elementOfFreshLocs" (formula "4") (term "1,0,0"))
                                    (rule "elementOfAllFields" (formula "4") (term "0,0,0,0"))
                                    (rule "eqClose" (formula "4") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "4") (term "0,0,0"))
                                    (rule "equalUnique" (formula "4") (term "0,0,0,0"))
                                    (rule "concrete_not_2" (formula "4") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "4") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "4") (term "0"))
                                    (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "17") (term "3,0,0,1,0,0,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "17") (term "3,0,0,1,1,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "17") (term "3,0,1,0,1,0,0") (ifseqformula "4"))
                                    (rule "commute_or" (formula "5") (term "0"))
                                    (rule "elim_forall4" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,2,1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,2,1"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,2,1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,2,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,2,1"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,2,1"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,2,1"))
                                    (rule "add_zero_left" (formula "5") (term "0,0,2,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "5") (term "0,2,1"))
                                    (rule "add_literals" (formula "5") (term "1,0,2,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0,2,1"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,2,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,2,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,2,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0,2,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "5") (term "0,2,0"))
                                    (rule "add_literals" (formula "5") (term "1,0,2,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0,2,0"))
                                    (rule "replaceKnownSelect_taclet0000000100_10" (formula "5") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000000100_11" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "17") (term "3,0,0,0,1,0,0,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "17") (term "3,0,0,0,1,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "17") (term "3,0,0,1,0,1,0,0") (ifseqformula "5"))
                                    (rule "andRight" (formula "17"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "17") (inst "sk=j_0"))
                                       (rule "orRight" (formula "17"))
                                       (rule "orRight" (formula "17"))
                                       (rule "eqSymm" (formula "19") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "17"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "pullOutSelect" (formula "19") (term "0,1") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "20") (term "1"))
                                       (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "20") (term "0,0") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "21") (term "0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_8"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "2") (term "0,0"))
                                       (rule "equalUnique" (formula "2") (term "1,0,0"))
                                       (rule "eqClose" (formula "2") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "2") (term "0,0"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_contradEq3" (formula "2") (term "0,0") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                       (rule "concrete_and_2" (formula "2") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "2") (term "0"))
                                       (rule "simplifySelectOfAnon" (formula "2"))
                                       (rule "elementOfFreshLocs" (formula "2") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "2") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "2") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "2") (term "0,0,0"))
                                       (rule "equalUnique" (formula "2") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "2") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "2") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "2") (term "0"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_9"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "4") (term "0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "commute_and" (formula "21"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "j_0 = -1 + quotient_0 TRUE"
                                          (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "eqSymm" (formula "21") (term "0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,0"))
                                          (rule "times_zero_1" (formula "2") (term "0"))
                                          (rule "qeq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqRigid" (formula "19") (term "0,1,0,2,0,1") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,2,0,1"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,2,0,1"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,2,0,1"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "19") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "19") (term "1,0,2,0,1"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0,2,0,1"))
                                          (rule "eqClose" (formula "19") (term "1"))
                                          (rule "concrete_and_3" (formula "19"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "19") (term "0,2,1") (ifseqformula "1"))
                                          (rule "eqClose" (formula "19"))
                                          (rule "closeTrue" (formula "19"))
                                       )
                                       (branch "j_0 = -1 + quotient_0 FALSE"
                                          (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "21") (term "0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "20") (term "1"))
                                          (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "17"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                          (rule "add_literals" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                          (rule "concrete_and_2" (formula "17"))
                                          (rule "false_right" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                          (rule "concrete_or_1" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "commute_and" (formula "19"))
                                          (rule "allLeft" (formula "5") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet0000000000100_21" (formula "5") (term "1,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000000100_22" (formula "5") (term "1,1"))
                                          (rule "eqSymm" (formula "5") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "5") (term "0,0"))
                                          (rule "concrete_or_2" (formula "5") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "5") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,0"))
                                          (rule "concrete_and_2" (formula "5") (term "0"))
                                          (rule "concrete_or_2" (formula "5"))
                                          (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "5"))
                                          (rule "concrete_and_1" (formula "20"))
                                          (rule "allLeft" (formula "7") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet0000000000100_19" (formula "7") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000000000100_20" (formula "7") (term "0,1"))
                                          (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "21"))
                                          (rule "concrete_or_4" (formula "7"))
                                          (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,1"))
                                          (rule "leq_literals" (formula "7") (term "0,1"))
                                          (rule "concrete_and_2" (formula "7") (term "1"))
                                          (rule "concrete_or_4" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                          (rule "concrete_and_2" (formula "7"))
                                          (rule "closeFalse" (formula "7"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "17") (inst "sk=f_0"))
                                       (rule "allRight" (formula "17") (inst "sk=o_0"))
                                       (rule "orRight" (formula "17"))
                                       (rule "orRight" (formula "17"))
                                       (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "20"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                       (rule "concrete_and_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                       (rule "concrete_and_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                                       (rule "concrete_and_2" (formula "1") (term "0,0,0"))
                                       (rule "concrete_or_2" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "19"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "close" (formula "20") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "i_0 = -1 + quotient_0 FALSE"
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "16"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                    (rule "add_literals" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                    (rule "concrete_and_2" (formula "16"))
                                    (rule "false_right" (formula "16"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "8") (term "0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (rule "concrete_or_1" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "cut_direct" (formula "18") (term "1"))
                                    (branch "CUT: i_0 <= -1 + quotient_0 * 2 TRUE"
                                       (rule "concrete_and_3" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "9") (term "0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "9") (term "1,1,0"))
                                       (rule "greater_literals" (formula "9") (term "0,0"))
                                       (rule "concrete_and_1" (formula "9") (term "0"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                       (rule "concrete_or_1" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "andRight" (formula "19"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "19"))
                                          (branch "Case 1"
                                             (rule "allRight" (formula "19") (inst "sk=j_0"))
                                             (rule "orRight" (formula "19"))
                                             (rule "orRight" (formula "19"))
                                             (rule "eqSymm" (formula "21") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "19"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "20"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "pullOutSelect" (formula "21") (term "0,1") (inst "selectSK=arr_5"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "22") (term "1"))
                                             (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                             (rule "pullOutSelect" (formula "22") (term "0,0") (inst "selectSK=arr_6"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "23") (term "0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_7"))
                                             (rule "simplifySelectOfStore" (formula "2"))
                                             (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                             (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "2") (term "0,0"))
                                             (rule "eqClose" (formula "2") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "2") (term "0,0"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_9"))
                                             (rule "simplifySelectOfAnon" (formula "3"))
                                             (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
                                             (rule "elementOfAllFields" (formula "3") (term "0,0,0,0"))
                                             (rule "eqClose" (formula "3") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "3") (term "0,0,0"))
                                             (rule "equalUnique" (formula "3") (term "0,0,0,0"))
                                             (rule "concrete_not_2" (formula "3") (term "0,0,0"))
                                             (rule "concrete_or_1" (formula "3") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "3") (term "0"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                             (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                                             (rule "concrete_or_1" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "commute_and" (formula "25"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "j_0 = -1 + quotient_0 * 2 + i_0 * -1 TRUE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                                                (rule "ifthenelse_true" (formula "2") (term "0"))
                                                (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "24") (term "1"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                (rule "polySimp_pullOutFactor3b" (formula "4") (term "0"))
                                                (rule "applyEq" (formula "24") (term "0,2,0,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                                (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor3b" (formula "3") (term "0,0,0"))
                                                (rule "applyEq" (formula "1") (term "0,2,2,0") (ifseqformula "2"))
                                                (rule "ifthenelse_same_branches" (formula "1") (term "0"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "23") (term "0,1,0,2,1,1") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,2,1,1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,2,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,2,1,1"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,0,2,1,1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,1,0,2,1,1"))
                                                (rule "mul_literals" (formula "23") (term "0,0,1,0,2,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,2,1,1"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,2,1,1"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,2,1,1"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,2,1,1"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0,2,1,1"))
                                                (rule "add_zero_left" (formula "23") (term "0,0,0,2,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,2,1,1"))
                                                (rule "add_literals" (formula "23") (term "1,0,0,2,1,1"))
                                                (rule "times_zero_1" (formula "23") (term "0,0,2,1,1"))
                                                (rule "add_zero_left" (formula "23") (term "0,2,1,1"))
                                                (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "5"))
                                                (rule "greater_literals" (formula "3") (term "0,0"))
                                                (rule "concrete_impl_1" (formula "3") (term "0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0"))
                                                (rule "mul_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "j_0 = -1 + quotient_0 * 2 + i_0 * -1 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "22"))
                                                (rule "ifthenelse_false" (formula "2") (term "0"))
                                                (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "allLeft" (formula "9") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet00100_4" (formula "9") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00100_5" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "9") (term "0,0"))
                                                (rule "concrete_or_2" (formula "9") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "leq_literals" (formula "9") (term "0,0"))
                                                (rule "concrete_and_2" (formula "9") (term "0"))
                                                (rule "concrete_or_2" (formula "9"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "9"))
                                                (rule "allLeft" (formula "11") (inst "t=i_0"))
                                                (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "11") (term "0,0"))
                                                (rule "concrete_or_2" (formula "11") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0"))
                                                (rule "leq_literals" (formula "11") (term "0,0"))
                                                (rule "concrete_and_2" (formula "11") (term "0"))
                                                (rule "concrete_or_2" (formula "11"))
                                                (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=arr_11"))
                                                (rule "simplifySelectOfAnon" (formula "11"))
                                                (rule "elementOfFreshLocs" (formula "11") (term "1,0,0"))
                                                (rule "elementOfAllFields" (formula "11") (term "0,0,0,0"))
                                                (rule "eqClose" (formula "11") (term "0,0,0,0"))
                                                (rule "concrete_and_1" (formula "11") (term "0,0,0"))
                                                (rule "equalUnique" (formula "11") (term "0,0,0,0"))
                                                (rule "concrete_not_2" (formula "11") (term "0,0,0"))
                                                (rule "concrete_or_1" (formula "11") (term "0,0"))
                                                (rule "ifthenelse_true" (formula "11") (term "0"))
                                                (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
                                                (rule "hideAuxiliaryEq" (formula "11"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "11"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "j_0 = i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "qeq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "24") (term "0,1,0,2,0,1") (ifseqformula "1"))
                                                   (rule "eqClose" (formula "24") (term "1"))
                                                   (rule "concrete_and_3" (formula "24"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                   (rule "polySimp_homoEq" (formula "20"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "20") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "23") (term "0,2,0") (ifseqformula "1"))
                                                   (rule "eqClose" (formula "23"))
                                                   (rule "closeTrue" (formula "23"))
                                                )
                                                (branch "j_0 = i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "eqSymm" (formula "26") (term "0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                                                   (rule "ifthenelse_false" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "25") (term "1"))
                                                   (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "21"))
                                                   (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "qeq_literals" (formula "21") (term "0"))
                                                   (rule "concrete_and_2" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "2") (term "0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                                   (rule "leq_literals" (formula "14") (term "0"))
                                                   (rule "concrete_or_1" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                   (rule "mul_literals" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                                   (rule "leq_literals" (formula "14") (term "0"))
                                                   (rule "concrete_or_1" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                                   (rule "mul_literals" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "2"))
                                                   (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "3") (term "0,0"))
                                                   (rule "concrete_and_1" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                   (rule "concrete_or_1" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "commute_and" (formula "24"))
                                                   (rule "allLeft" (formula "7") (inst "t=j_0"))
                                                   (rule "replaceKnownSelect_taclet000100000000100_19" (formula "7") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet000100000000100_20" (formula "7") (term "1,1"))
                                                   (rule "eqSymm" (formula "7") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                   (rule "concrete_and_2" (formula "7") (term "0,0"))
                                                   (rule "concrete_or_2" (formula "7") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "7") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "7") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "7") (term "0"))
                                                   (rule "concrete_or_2" (formula "7"))
                                                   (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "7"))
                                                   (rule "concrete_and_1" (formula "25"))
                                                   (rule "allLeft" (formula "9") (inst "t=j_0"))
                                                   (rule "replaceKnownSelect_taclet000100000000100_17" (formula "9") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet000100000000100_18" (formula "9") (term "0,1"))
                                                   (rule "replace_known_right" (formula "9") (term "1") (ifseqformula "26"))
                                                   (rule "concrete_or_4" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "9") (term "0"))
                                                   (rule "concrete_or_2" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "19") (inst "sk=j_0"))
                                             (rule "orRight" (formula "19"))
                                             (rule "orRight" (formula "19"))
                                             (rule "inEqSimp_geqRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "pullOutSelect" (formula "21") (term "0,1") (inst "selectSK=arr_5"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "22") (term "1"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "pullOutSelect" (formula "22") (term "0,0") (inst "selectSK=arr_6"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "23") (term "0"))
                                             (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_2" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_false" (formula "1") (term "0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_7"))
                                             (rule "simplifySelectOfStore" (formula "2"))
                                             (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "2") (term "0,0"))
                                             (rule "eqClose" (formula "2") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "2") (term "0,0"))
                                             (rule "equalUnique" (formula "2") (term "0,0"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "4"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0,0"))
                                             (rule "concrete_and_2" (formula "2") (term "0,0"))
                                             (rule "ifthenelse_false" (formula "2") (term "0"))
                                             (rule "simplifySelectOfAnon" (formula "2"))
                                             (rule "elementOfFreshLocs" (formula "2") (term "1,0,0"))
                                             (rule "elementOfAllFields" (formula "2") (term "0,0,0,0"))
                                             (rule "eqClose" (formula "2") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "2") (term "0,0,0"))
                                             (rule "equalUnique" (formula "2") (term "0,0,0,0"))
                                             (rule "concrete_not_2" (formula "2") (term "0,0,0"))
                                             (rule "concrete_or_1" (formula "2") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "2") (term "0"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                             (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                                             (rule "concrete_or_1" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "commute_and" (formula "23"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "j_0 = -1 + quotient_0 * 2 + i_0 * -1 TRUE"
                                                (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "23") (term "0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                                (rule "ifthenelse_true" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "22") (term "1"))
                                                (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "polySimp_pullOutFactor3b" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,0"))
                                                (rule "applyEqRigid" (formula "22") (term "0,2,1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "22") (term "0,1,0,2,1,1") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,2,1,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,2,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,2,1,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1,0,2,1,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0,2,1,1"))
                                                (rule "mul_literals" (formula "22") (term "0,0,1,0,2,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,2,1,1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,1,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0,2,1,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,2,1,1"))
                                                (rule "add_zero_left" (formula "22") (term "0,0,0,2,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,2,1,1"))
                                                (rule "add_literals" (formula "22") (term "1,0,0,2,1,1"))
                                                (rule "times_zero_1" (formula "22") (term "0,0,2,1,1"))
                                                (rule "add_zero_left" (formula "22") (term "0,2,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "3"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_zero_right" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch "j_0 = -1 + quotient_0 * 2 + i_0 * -1 FALSE"
                                                (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "23") (term "0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "20"))
                                                (rule "ifthenelse_false" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "22") (term "1"))
                                                (rule "allLeft" (formula "8") (inst "t=i_0"))
                                                (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "8") (term "0,0"))
                                                (rule "concrete_or_2" (formula "8") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0"))
                                                (rule "leq_literals" (formula "8") (term "0,0"))
                                                (rule "concrete_and_2" (formula "8") (term "0"))
                                                (rule "concrete_or_2" (formula "8"))
                                                (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_9"))
                                                (rule "simplifySelectOfAnon" (formula "8"))
                                                (rule "elementOfFreshLocs" (formula "8") (term "1,0,0"))
                                                (rule "elementOfAllFields" (formula "8") (term "0,0,0,0"))
                                                (rule "eqClose" (formula "8") (term "0,0,0,0"))
                                                (rule "concrete_and_1" (formula "8") (term "0,0,0"))
                                                (rule "equalUnique" (formula "8") (term "0,0,0,0"))
                                                (rule "concrete_not_2" (formula "8") (term "0,0,0"))
                                                (rule "concrete_or_1" (formula "8") (term "0,0"))
                                                (rule "ifthenelse_true" (formula "8") (term "0"))
                                                (rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "allLeft" (formula "9") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet100100000000100_19" (formula "9") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100100000000100_20" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                (rule "concrete_and_2" (formula "9") (term "1,0"))
                                                (rule "concrete_or_4" (formula "9") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "leq_literals" (formula "9") (term "0,0"))
                                                (rule "concrete_and_2" (formula "9") (term "0"))
                                                (rule "concrete_or_2" (formula "9"))
                                                (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "9"))
                                                (rule "concrete_and_3" (formula "24"))
                                                (rule "allLeft" (formula "7") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet100100000000100_17" (formula "7") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100100000000100_18" (formula "7") (term "0,1"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "25"))
                                                (rule "concrete_or_4" (formula "7"))
                                                (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "7") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "7") (term "0,0,1"))
                                                (rule "leq_literals" (formula "7") (term "0,1"))
                                                (rule "concrete_and_2" (formula "7") (term "1"))
                                                (rule "concrete_or_4" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0"))
                                                (rule "add_literals" (formula "7") (term "0"))
                                                (rule "leq_literals" (formula "7"))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "19") (inst "sk=f_0"))
                                          (rule "allRight" (formula "19") (inst "sk=o_0"))
                                          (rule "orRight" (formula "19"))
                                          (rule "orRight" (formula "19"))
                                          (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_0_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                          (rule "concrete_and_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                          (rule "concrete_and_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                          (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                          (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
                                          (rule "concrete_or_4" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                          (rule "concrete_and_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "close" (formula "22") (ifseqformula "1"))
                                       )
                                    )
                                    (branch "CUT: i_0 <= -1 + quotient_0 * 2 FALSE"
                                       (rule "concrete_and_4" (formula "19"))
                                       (rule "false_right" (formula "19"))
                                       (rule "inEqSimp_leqRight" (formula "18"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                       (rule "concrete_and_2" (formula "9"))
                                       (rule "closeFalse" (formula "9"))
                                    )
                                 )
                              )
                              (branch "CUT: self.a.length = quotient_0 * 2 FALSE"
                                 (rule "concrete_not_2" (formula "7") (term "0"))
                                 (rule "concrete_impl_1" (formula "7"))
                                 (rule "replace_known_right" (formula "24") (term "0,0,1,0,0") (ifseqformula "21"))
                                 (rule "concrete_not_2" (formula "24") (term "0,1,0,0"))
                                 (rule "concrete_impl_1" (formula "24") (term "1,0,0"))
                                 (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "7"))
                                 (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "21"))
                                 (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "11"))
                                 (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                 (rule "concrete_and_2" (formula "21"))
                                 (rule "false_right" (formula "21"))
                                 (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "12"))
                                 (rule "applyEq" (formula "24") (term "1,0,2,0,0,1,1,0,1,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,2,0,0,1,1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,2,0,0,1,1,0,1,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,2,0,0,1,1,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,2,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,1"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,1"))
                                 (rule "applyEq" (formula "24") (term "1,0,2,3,0,0,0,1,1,0,1,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,2,3,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,2,3,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,2,3,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,2,3,0,0,0,1,1,0,1,0,0,0"))
                                 (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq1" (formula "12"))
                                 (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0"))
                                 (rule "leq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq0" (formula "12"))
                                 (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0"))
                                 (rule "qeq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,3,0,0,0,1,1,0,0,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,3,0,0,0,1,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,3,0,0,0,1,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,3,0,0,0,1,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,3,0,0,0,1,1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,0,0,1,1,0,0,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,0,0,1,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,0,0,1,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,0,0,1,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,0,0,1,1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,3,0,0,0,1,0,0,1,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,3,0,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,3,0,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,3,0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,3,0,0,0,1,0,0,1,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,0,0,0,1,0,1,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,0,0,0,1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,0,0,0,1,0,1,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,0,0,0,1,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,0,0,0,1,0,1,0,0,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,3,0,0,0,0,1,0,1,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,3,0,0,0,0,1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,3,0,0,0,0,1,0,1,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,3,0,0,0,0,1,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,3,0,0,0,0,1,0,1,0,0,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,0,0,1,0,0,1,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,0,0,1,0,0,1,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,0,2,0,1,1,0,0,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,0,1,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,0,1,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,0,1,1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "4") (term "1,0,0,2,0,1,0") (ifseqformula "11"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,2,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,2,0,1,0"))
                                 (rule "add_zero_left" (formula "4") (term "0,0,2,0,1,0"))
                                 (rule "applyEq" (formula "6") (term "1,0,0,2,0,1,0") (ifseqformula "11"))
                                 (rule "eqSymm" (formula "6") (term "1,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,2,1,1,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,2,1,1,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,2,1,1,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,0,1,0,1,0,0,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,0,1,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,0,1,0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,0,1,0,1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "3") (term "1,0,0,2,0,1,0") (ifseqformula "11"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,2,0,1,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,2,0,1,0"))
                                 (rule "add_zero_left" (formula "3") (term "0,0,2,0,1,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,0,2,0,0,1,0,0,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,0,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,0,0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,0,0,1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,3,0,0,1,0,1,0,0,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,2,3,0,0,1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,3,0,0,1,0,1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,3,0,0,1,0,1,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,3,0,0,1,0,1,0,0,0,0,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,0,2,0,0,1,0,1,0,0,0") (ifseqformula "11"))
                                 (rule "eqSymm" (formula "22") (term "0,1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,1,0,1,0,1,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,1,0,1,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,1,0,1,0,1,0,0,0"))
                                 (rule "applyEq" (formula "22") (term "1,0,0,2,0,0,1,0,1,0,0,0") (ifseqformula "11"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,2,0,0,1,0,1,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,2,0,0,1,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,2,0,0,1,0,1,0,0,0"))
                                 (rule "eqSymm" (formula "22") (term "0,1,0,1,0,0,0"))
                                 (rule "applyEq" (formula "6") (term "1,0,0,2,0,1,0") (ifseqformula "11"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,2,0,1,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,2,0,1,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,2,0,1,0"))
                                 (rule "eqSymm" (formula "6") (term "1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                 (rule "concrete_and_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "22") (term "1,1,0,0") (ifseqformula "1"))
                                 (rule "eqClose" (formula "22") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "22") (term "0,0"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0"))
                                 (rule "greater_literals" (formula "18") (term "0,0"))
                                 (rule "concrete_and_1" (formula "18") (term "0"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                 (rule "concrete_or_1" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "9") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "9") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                 (rule "div_literals" (formula "9") (term "0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0"))
                                 (rule "eqClose" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "jdiv_axiom" (formula "10") (term "0"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                 (rule "mul_literals" (formula "10") (term "0,0,0,2,0"))
                                 (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0"))
                                 (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "10") (term "0,0,0"))
                                 (rule "leq_literals" (formula "10") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "10") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "10") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=quotient_0"))
                                 (rule "equal_literals" (formula "10") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "10") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                 (rule "polySimp_homoEq" (formula "10"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "10") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "1,0"))
                                 (rule "times_zero_1" (formula "10") (term "0"))
                                 (rule "eqClose" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "cut_direct" (formula "19") (term "1"))
                                 (branch "CUT: i_0 <= quotient_0 * 2 TRUE"
                                    (rule "concrete_and_3" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "9") (term "0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0"))
                                    (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "8"))
                                    (rule "greater_literals" (formula "9") (term "0,0"))
                                    (rule "concrete_and_1" (formula "9") (term "0"))
                                    (rule "mul_literals" (formula "9") (term "1,0"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (rule "concrete_or_1" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "andRight" (formula "20"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "20"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "20") (inst "sk=j_0"))
                                          (rule "orRight" (formula "20"))
                                          (rule "orRight" (formula "20"))
                                          (rule "eqSymm" (formula "22") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "20"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "21"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "pullOutSelect" (formula "22") (term "0,1") (inst "selectSK=arr_5"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "23") (term "1"))
                                          (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "pullOutSelect" (formula "23") (term "0,0") (inst "selectSK=arr_6"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "24") (term "0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_7"))
                                          (rule "simplifySelectOfStore" (formula "2"))
                                          (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                          (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "2") (term "0,0"))
                                          (rule "eqClose" (formula "2") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "2") (term "0,0"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                                          (rule "mul_literals" (formula "6") (term "0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_9"))
                                          (rule "simplifySelectOfAnon" (formula "3"))
                                          (rule "elementOfFreshLocs" (formula "3") (term "1,0,0"))
                                          (rule "elementOfAllFields" (formula "3") (term "0,0,0,0"))
                                          (rule "eqClose" (formula "3") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "3") (term "0,0,0"))
                                          (rule "equalUnique" (formula "3") (term "0,0,0,0"))
                                          (rule "concrete_not_2" (formula "3") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "3") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "3") (term "0"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                          (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                          (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "commute_and" (formula "26"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "j_0 = quotient_0 * 2 + i_0 * -1 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                                             (rule "ifthenelse_true" (formula "2") (term "0"))
                                             (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "25") (term "1"))
                                             (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                             (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor3b" (formula "3") (term "0,0,0"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                             (rule "polySimp_pullOutFactor3b" (formula "4") (term "0"))
                                             (rule "applyEqRigid" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                             (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor3b" (formula "1") (term "0,0,0"))
                                             (rule "applyEqRigid" (formula "25") (term "0,2,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "0,2,2,0") (ifseqformula "2"))
                                             (rule "ifthenelse_same_branches" (formula "1") (term "0"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEqRigid" (formula "24") (term "0,1,0,2,1,1") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,2,1,1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,2,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,2,1,1"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,2,1,1"))
                                             (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0,2,1,1"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,2,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,2,1,1"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,2,1,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,2,1,1"))
                                             (rule "add_literals" (formula "24") (term "1,0,0,2,1,1"))
                                             (rule "times_zero_1" (formula "24") (term "0,0,2,1,1"))
                                             (rule "add_zero_left" (formula "24") (term "0,2,1,1"))
                                             (rule "polySimp_sepPosMonomial" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                             (rule "inEqSimp_contradInEq3" (formula "3") (ifseqformula "5"))
                                             (rule "greater_literals" (formula "3") (term "0,0"))
                                             (rule "concrete_impl_1" (formula "3") (term "0"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0"))
                                             (rule "mul_literals" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_zero_right" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "j_0 = quotient_0 * 2 + i_0 * -1 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "23"))
                                             (rule "ifthenelse_false" (formula "2") (term "0"))
                                             (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "allLeft" (formula "10") (inst "t=i_0"))
                                             (rule "inEqSimp_homoInEq0" (formula "10") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "10") (term "0,0"))
                                             (rule "concrete_or_2" (formula "10") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "10") (term "0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0"))
                                             (rule "leq_literals" (formula "10") (term "0,0"))
                                             (rule "concrete_and_2" (formula "10") (term "0"))
                                             (rule "concrete_or_2" (formula "10"))
                                             (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=arr_11"))
                                             (rule "simplifySelectOfAnon" (formula "10"))
                                             (rule "elementOfFreshLocs" (formula "10") (term "1,0,0"))
                                             (rule "elementOfAllFields" (formula "10") (term "0,0,0,0"))
                                             (rule "eqClose" (formula "10") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "10") (term "0,0,0"))
                                             (rule "equalUnique" (formula "10") (term "0,0,0,0"))
                                             (rule "concrete_not_2" (formula "10") (term "0,0,0"))
                                             (rule "concrete_or_1" (formula "10") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "10") (term "0"))
                                             (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "10"))
                                             (rule "allLeft" (formula "9") (inst "t=i_0"))
                                             (rule "replaceKnownSelect_taclet00100_4" (formula "9") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00100_5" (formula "9") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "9") (term "0,0"))
                                             (rule "concrete_or_2" (formula "9") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,0"))
                                             (rule "leq_literals" (formula "9") (term "0,0"))
                                             (rule "concrete_and_2" (formula "9") (term "0"))
                                             (rule "concrete_or_2" (formula "9"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "9"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "j_0 = i_0 TRUE"
                                                (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                (rule "ifthenelse_true" (formula "2") (term "0"))
                                                (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "qeq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "polySimp_homoEq" (formula "22"))
                                                (rule "polySimp_pullOutFactor3b" (formula "22") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                                (rule "applyEq" (formula "25") (term "0,1,0,2,0,1") (ifseqformula "1"))
                                                (rule "eqClose" (formula "25") (term "1"))
                                                (rule "concrete_and_3" (formula "25"))
                                                (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "24") (term "0,2,0") (ifseqformula "1"))
                                                (rule "eqClose" (formula "24"))
                                                (rule "closeTrue" (formula "24"))
                                             )
                                             (branch "j_0 = i_0 FALSE"
                                                (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "27") (term "1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "23"))
                                                (rule "ifthenelse_false" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "26") (term "0"))
                                                (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "22"))
                                                (rule "inEqSimp_contradEq3" (formula "22") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0"))
                                                (rule "qeq_literals" (formula "22") (term "0"))
                                                (rule "concrete_and_2" (formula "22"))
                                                (rule "false_right" (formula "22"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_1" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "2") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (rule "concrete_or_1" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                                (rule "mul_literals" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "1"))
                                                (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "2"))
                                                (rule "greater_literals" (formula "3") (term "0,0"))
                                                (rule "concrete_and_1" (formula "3") (term "0"))
                                                (rule "mul_literals" (formula "3") (term "1,0"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "commute_and" (formula "25"))
                                                (rule "allLeft" (formula "8") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet00010000000100_17" (formula "8") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00010000000100_18" (formula "8") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                (rule "concrete_and_2" (formula "8") (term "1,0"))
                                                (rule "concrete_or_4" (formula "8") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "8") (term "0,0"))
                                                (rule "concrete_and_2" (formula "8") (term "0"))
                                                (rule "concrete_or_2" (formula "8"))
                                                (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "8"))
                                                (rule "concrete_and_3" (formula "26"))
                                                (rule "allLeft" (formula "7") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet00010000000100_19" (formula "7") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00010000000100_20" (formula "7") (term "1,1"))
                                                (rule "eqSymm" (formula "7") (term "1"))
                                                (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "27"))
                                                (rule "concrete_or_4" (formula "7"))
                                                (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "7") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "7") (term "0,0,1"))
                                                (rule "leq_literals" (formula "7") (term "0,1"))
                                                (rule "concrete_and_2" (formula "7") (term "1"))
                                                (rule "concrete_or_4" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "7") (term "0"))
                                                (rule "concrete_and_2" (formula "7"))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "20") (inst "sk=j_0"))
                                          (rule "orRight" (formula "20"))
                                          (rule "orRight" (formula "20"))
                                          (rule "inEqSimp_geqRight" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "pullOutSelect" (formula "22") (term "0,1") (inst "selectSK=arr_5"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "23") (term "1"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "pullOutSelect" (formula "23") (term "0,0") (inst "selectSK=arr_6"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "24") (term "0"))
                                          (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_7"))
                                          (rule "simplifySelectOfStore" (formula "2"))
                                          (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "2") (term "0,0"))
                                          (rule "eqClose" (formula "2") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "2") (term "0,0"))
                                          (rule "equalUnique" (formula "2") (term "0,0"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "eqSymm" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "4"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0,0"))
                                          (rule "concrete_and_2" (formula "2") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "2") (term "0"))
                                          (rule "simplifySelectOfAnon" (formula "2"))
                                          (rule "elementOfFreshLocs" (formula "2") (term "1,0,0"))
                                          (rule "elementOfAllFields" (formula "2") (term "0,0,0,0"))
                                          (rule "eqClose" (formula "2") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "2") (term "0,0,0"))
                                          (rule "equalUnique" (formula "2") (term "0,0,0,0"))
                                          (rule "concrete_not_2" (formula "2") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "2") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "2") (term "0"))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                          (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                          (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "0,0,0"))
                                          (rule "concrete_or_1" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                          (rule "concrete_or_1" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "13") (term "0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                          (rule "mul_literals" (formula "13") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (rule "concrete_or_1" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "commute_and" (formula "24"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "j_0 = quotient_0 * 2 + i_0 * -1 TRUE"
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "24") (term "0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                             (rule "ifthenelse_true" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "23") (term "1"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                             (rule "polySimp_pullOutFactor3b" (formula "3") (term "0"))
                                             (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                             (rule "applyEqRigid" (formula "23") (term "0,2,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "0,1,0,2,1,1") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,2,1,1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,2,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,2,1,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,2,1,1"))
                                             (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,2,1,1"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,2,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,2,1,1"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,2,1,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,2,1,1"))
                                             (rule "add_literals" (formula "23") (term "1,0,0,2,1,1"))
                                             (rule "times_zero_1" (formula "23") (term "0,0,2,1,1"))
                                             (rule "add_zero_left" (formula "23") (term "0,2,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "2"))
                                             (rule "greater_literals" (formula "3") (term "0,0"))
                                             (rule "concrete_and_1" (formula "3") (term "0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                             (rule "concrete_or_1" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_zero_right" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "j_0 = quotient_0 * 2 + i_0 * -1 FALSE"
                                             (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "24") (term "0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                             (rule "ifthenelse_false" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "23") (term "1"))
                                             (rule "allLeft" (formula "8") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet10010000000100_19" (formula "8") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10010000000100_20" (formula "8") (term "0,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "8") (term "0,1,0"))
                                             (rule "concrete_and_2" (formula "8") (term "1,0"))
                                             (rule "concrete_or_4" (formula "8") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,0"))
                                             (rule "concrete_and_2" (formula "8") (term "0"))
                                             (rule "concrete_or_2" (formula "8"))
                                             (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "8"))
                                             (rule "concrete_and_3" (formula "24"))
                                             (rule "allLeft" (formula "7") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet10010000000100_17" (formula "7") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10010000000100_18" (formula "7") (term "0,1"))
                                             (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "25"))
                                             (rule "concrete_or_4" (formula "7"))
                                             (rule "inEqSimp_contradInEq0" (formula "7") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "7") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "7") (term "0,0,1"))
                                             (rule "leq_literals" (formula "7") (term "0,1"))
                                             (rule "concrete_and_2" (formula "7") (term "1"))
                                             (rule "concrete_or_4" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "2"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0"))
                                             (rule "add_literals" (formula "7") (term "0"))
                                             (rule "leq_literals" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "20") (inst "sk=f_0"))
                                       (rule "allRight" (formula "20") (inst "sk=o_0"))
                                       (rule "orRight" (formula "20"))
                                       (rule "orRight" (formula "20"))
                                       (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "23"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                       (rule "concrete_and_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                       (rule "concrete_and_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
                                       (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
                                       (rule "concrete_or_4" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                       (rule "concrete_and_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "close" (formula "23") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "CUT: i_0 <= quotient_0 * 2 FALSE"
                                    (rule "concrete_and_4" (formula "20"))
                                    (rule "false_right" (formula "20"))
                                    (rule "inEqSimp_leqRight" (formula "19"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (x_arr_8 = null)"
                              (rule "false_right" (formula "23"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "applyOnPV" (formula "1") (term "0"))
                              (rule "simplifyUpdate1" (formula "1") (term "1"))
                              (rule "close" (formula "22") (ifseqformula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_8 != null, but x_8 Out of Bounds!)"
                              (rule "false_right" (formula "23"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "simplifyUpdate2" (formula "1") (term "1"))
                              (rule "applyOnRigidFormula" (formula "21"))
                              (rule "applyOnPV" (formula "21") (term "0"))
                              (rule "simplifyUpdate1" (formula "21") (term "1"))
                              (rule "applyOnRigidFormula" (formula "1") (term "0"))
                              (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                              (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                              (rule "applyOnPV" (formula "1") (term "1,0"))
                              (rule "applyOnRigidFormula" (formula "1") (term "1"))
                              (rule "applyOnPV" (formula "1") (term "0,1"))
                              (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                              (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                              (rule "applyOnPV" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "1") (term "0,0"))
                              (rule "concrete_and_2" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                              (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                              (rule "mul_literals" (formula "21") (term "0,0"))
                              (rule "add_zero_left" (formula "21") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                              (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "1,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "11"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                              (rule "concrete_and_2" (formula "8"))
                              (rule "closeFalse" (formula "8"))
                           )
                        )
                        (branch "Null Reference (x_arr_9 = null)"
                           (rule "false_right" (formula "23"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "simplifyUpdate1" (formula "1") (term "1"))
                           (rule "applyOnPV" (formula "1") (term "0"))
                           (rule "close" (formula "22") (ifseqformula "1"))
                        )
                     )
                     (branch "Null Reference (x_arr_3 = null)"
                        (rule "false_right" (formula "23"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "close" (formula "22") (ifseqformula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr_3 != null, but x_4 Out of Bounds!)"
                        (rule "false_right" (formula "23"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "simplifyUpdate2" (formula "1") (term "1"))
                        (rule "applyOnRigidFormula" (formula "21"))
                        (rule "applyOnPV" (formula "21") (term "0"))
                        (rule "simplifyUpdate1" (formula "21") (term "1"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                        (rule "applyOnPV" (formula "1") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "1"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                        (rule "applyOnPV" (formula "1") (term "0,1"))
                        (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                        (rule "applyOnPV" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (rule "concrete_and_2" (formula "1") (term "1"))
                        (rule "concrete_or_4" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                        (rule "mul_literals" (formula "20") (term "0,0"))
                        (rule "add_zero_left" (formula "20") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                        (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                        (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                        (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "1,1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "11"))
                        (rule "qeq_literals" (formula "8") (term "0"))
                        (rule "concrete_and_2" (formula "8"))
                        (rule "closeFalse" (formula "8"))
                     )
                  )
                  (branch "Null Reference (x_arr_5 = null)"
                     (rule "false_right" (formula "23"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "close" (formula "22") (ifseqformula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr_5 != null, but x_5 Out of Bounds!)"
                     (rule "false_right" (formula "23"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1") (term "1"))
                     (rule "applyOnRigidFormula" (formula "21"))
                     (rule "applyOnPV" (formula "21") (term "0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1"))
                     (rule "applyOnRigidFormula" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                     (rule "applyOnPV" (formula "1") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                     (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                     (rule "applyOnPV" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
                     (rule "qeq_literals" (formula "1") (term "0,0"))
                     (rule "concrete_and_2" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                     (rule "mul_literals" (formula "20") (term "0,0"))
                     (rule "add_zero_left" (formula "20") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                     (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                     (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "8"))
                     (rule "qeq_literals" (formula "11") (term "0"))
                     (rule "concrete_and_2" (formula "11"))
                     (rule "closeFalse" (formula "11"))
                  )
               )
               (branch "Null Reference (x_arr_6 = null)"
                  (rule "false_right" (formula "23"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "close" (formula "22") (ifseqformula "1"))
               )
            )
            (branch "Null Reference (x_arr_1 = null)"
               (rule "false_right" (formula "24"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "close" (formula "23") (ifseqformula "1"))
            )
            (branch "Index Out of Bounds (x_arr_1 != null, but i Out of Bounds!)"
               (rule "false_right" (formula "24"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate2" (formula "1") (term "1"))
               (rule "applyOnRigidFormula" (formula "22"))
               (rule "applyOnPV" (formula "22") (term "0"))
               (rule "simplifyUpdate1" (formula "22") (term "1"))
               (rule "applyOnRigidFormula" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1,0"))
               (rule "simplifyUpdate1" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "1") (term "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1,1"))
               (rule "applyOnPV" (formula "1") (term "0,1"))
               (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "8"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
               (rule "concrete_and_2" (formula "1") (term "1"))
               (rule "concrete_or_4" (formula "1"))
               (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
               (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0"))
               (rule "qeq_literals" (formula "13") (term "0"))
               (rule "concrete_or_1" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
               (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
               (rule "times_zero_1" (formula "8") (term "0,0"))
               (rule "add_zero_left" (formula "8") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "8"))
               (rule "leq_literals" (formula "20") (term "0"))
               (rule "concrete_or_1" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
               (rule "times_zero_1" (formula "21") (term "0,0"))
               (rule "add_zero_left" (formula "21") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
               (rule "polySimp_mulAssoc" (formula "11") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0"))
               (rule "polySimp_addComm0" (formula "11") (term "0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
               (rule "add_literals" (formula "11") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "8"))
               (rule "qeq_literals" (formula "11") (term "0"))
               (rule "concrete_and_2" (formula "11"))
               (rule "closeFalse" (formula "11"))
            )
         )
         (branch "if x_2 false"
            (rule "false_to_not_true" (formula "1") (term "1"))
            (rule "simplifyUpdate2" (formula "23"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "20"))
            (rule "simplifyUpdate1" (formula "20") (term "1"))
            (rule "applyOnPV" (formula "20") (term "0"))
            (rule "ifthenelse_concrete3" (formula "20"))
            (rule "boolean_not_equal_2" (formula "20") (term "1"))
            (rule "concrete_or_4" (formula "20"))
            (rule "inEqSimp_leqRight" (formula "20"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "12"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,0"))
            (rule "times_zero_1" (formula "2") (term "0"))
            (rule "leq_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "5") (term "1,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "11"))
            (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "1,0"))
            (rule "times_zero_1" (formula "11") (term "0"))
            (rule "qeq_literals" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "applyEq" (formula "2") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "21") (term "0,0,0,1,1,0") (ifseqformula "1"))
            (rule "inEqSimp_or_tautInEq0" (formula "4") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "4") (term "0,1,0,0"))
            (rule "add_literals" (formula "4") (term "1,0,1,0,0"))
            (rule "times_zero_1" (formula "4") (term "0,1,0,0"))
            (rule "leq_literals" (formula "4") (term "1,0,0"))
            (rule "concrete_or_3" (formula "4") (term "0,0"))
            (rule "concrete_or_1" (formula "4") (term "0"))
            (rule "inEqSimp_or_tautInEq0" (formula "5") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,0"))
            (rule "add_literals" (formula "5") (term "1,0,1,0,0"))
            (rule "times_zero_1" (formula "5") (term "0,1,0,0"))
            (rule "leq_literals" (formula "5") (term "1,0,0"))
            (rule "concrete_or_3" (formula "5") (term "0,0"))
            (rule "concrete_or_1" (formula "5") (term "0"))
            (rule "all_unused" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "elim_double_block_2" (formula "19") (term "1"))
            (rule "blockBreak" (formula "19") (term "1"))
            (rule "lsBreak" (formula "19") (term "1"))
            (rule "assignment" (formula "19") (term "1"))
            (rule "sequentialToParallel2" (formula "19"))
            (rule "simplifyUpdate3" (formula "19") (term "1,0"))
            (rule "methodCallEmpty" (formula "19") (term "1"))
            (rule "tryEmpty" (formula "19") (term "1"))
            (rule "emptyModality" (formula "19") (term "1"))
            (rule "applyOnRigidFormula" (formula "19"))
            (rule "simplifyUpdate2" (formula "19") (term "1"))
            (rule "simplifyUpdate2" (formula "19") (term "0"))
            (rule "applyOnRigidFormula" (formula "19") (term "1"))
            (rule "simplifyUpdate2" (formula "19") (term "0,1"))
            (rule "simplifyUpdate2" (formula "19") (term "1,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "0"))
            (rule "simplifyUpdate2" (formula "19") (term "1,0"))
            (rule "simplifyUpdate2" (formula "19") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "1,1"))
            (rule "simplifyUpdate2" (formula "19") (term "1,1,1"))
            (rule "simplifyUpdate2" (formula "19") (term "0,1,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "1,0"))
            (rule "simplifyUpdate2" (formula "19") (term "1,1,0"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "1,0,0"))
            (rule "applyOnPV" (formula "19") (term "0,0,0"))
            (rule "boolean_equal" (formula "19") (term "0,0"))
            (rule "concrete_impl_1" (formula "19") (term "0"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,0,1"))
            (rule "applyOnPV" (formula "19") (term "0,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "1,0,0,1"))
            (rule "boolean_equal" (formula "19") (term "0,0,1"))
            (rule "concrete_not_1" (formula "19") (term "0,1"))
            (rule "concrete_impl_2" (formula "19") (term "1"))
            (rule "concrete_and_3" (formula "19"))
            (rule "applyOnRigidFormula" (formula "19") (term "1"))
            (rule "applyOnRigidFormula" (formula "19") (term "0"))
            (rule "simplifyUpdate2" (formula "19") (term "1,0"))
            (rule "simplifyUpdate2" (formula "19") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "1,0"))
            (rule "simplifyUpdate1" (formula "19") (term "1,1,0"))
            (rule "applyOnPV" (formula "19") (term "0,1,0"))
            (rule "eqClose" (formula "19") (term "1,0"))
            (rule "concrete_and_3" (formula "19") (term "0"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,0,1"))
            (rule "simplifyUpdate2" (formula "19") (term "0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "0"))
            (rule "simplifyUpdate2" (formula "19") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "0,1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,0"))
            (rule "applyOnRigidFormula" (formula "19") (term "1,0"))
            (rule "simplifyUpdate1" (formula "19") (term "1,1,0"))
            (rule "applyOnPV" (formula "19") (term "0,1,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "2,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "1,1,1,0,0,1"))
            (rule "applyOnPV" (formula "19") (term "0,1,1,0,0,1"))
            (rule "eqSymm" (formula "19") (term "1,0,0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "0,0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,0,1"))
            (rule "simplifyUpdate2" (formula "19") (term "0,1,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,0,0"))
            (rule "simplifyUpdate2" (formula "19") (term "0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "2,1,1,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "1,1,1,0,0,1"))
            (rule "applyOnPV" (formula "19") (term "0,1,1,0,0,1"))
            (rule "applyOnRigidTerm" (formula "19") (term "1,0,0,0,0,1"))
            (rule "applyOnPV" (formula "19") (term "0,1,0,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "2,1,0,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "1,1,0,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "1,1,0,0,0,1"))
            (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "0,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,0,0,0"))
            (rule "simplifyUpdate2" (formula "19") (term "0,0,0,0,0"))
            (rule "applyOnRigidFormula" (formula "19") (term "0,1,1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "1,0,1,1,0,0,0,1"))
            (rule "applyOnRigidTerm" (formula "19") (term "1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "2,1,1,0,0,0"))
            (rule "applyOnPV" (formula "19") (term "0,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,0,0"))
            (rule "applyOnPV" (formula "19") (term "0,0,1,0,0,0"))
            (rule "applyOnRigidFormula" (formula "19") (term "1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "0,1,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "0,0,1,1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "2,0,0,1,1,0,0,0,1"))
            (rule "simplifyUpdate1" (formula "19") (term "1,0,0,1,1,0,0,0,1"))
            (rule "applyOnPV" (formula "19") (term "0,0,0,1,1,0,0,0,1"))
            (rule "applyOnRigidTerm" (formula "19") (term "1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "1,1,1,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "2,1,1,1,0,0,0"))
            (rule "applyOnPV" (formula "19") (term "0,1,1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet100_0" (formula "19") (term "1,1,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "19") (term "1,1,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "1,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "2,1,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "1,1,0,1,0,0,0"))
            (rule "applyOnPV" (formula "19") (term "0,1,0,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "2,0,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "1,1,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "0,2,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "1,0,2,0,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "0,1,1,0,0,0,0"))
            (rule "applyOnPV" (formula "19") (term "0,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "1,0,1,1,0,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "2,0,1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet100_0" (formula "19") (term "0,1,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "19") (term "0,1,1,0,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "0,0,2,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "0,0,0,2,0,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "1,0,0,2,0,1,0,0,0"))
            (rule "applyOnRigidTerm" (formula "19") (term "0,1,0,0,2,0,1,0,0,0"))
            (rule "applyOnPV" (formula "19") (term "0,0,1,0,0,2,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0,0,2,0,1,0,0,0"))
            (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0,0,2,0,1,0,0,0"))
            (rule "Class_invariant_axiom_for_ReverseArray" (formula "19") (term "1,0") (ifseqformula "12"))
            (rule "replaceKnownSelect_taclet100_0" (formula "19") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet100_1" (formula "19") (term "0,0,1,0"))
            (rule "replace_known_right" (formula "19") (term "0,1,0") (ifseqformula "18"))
            (rule "concrete_not_2" (formula "19") (term "1,0"))
            (rule "concrete_and_3" (formula "19") (term "0"))
            (rule "andRight" (formula "19"))
            (branch "Case 1"
               (rule "allRight" (formula "19") (inst "sk=j_0"))
               (rule "orRight" (formula "19"))
               (rule "orRight" (formula "19"))
               (rule "eqSymm" (formula "21"))
               (rule "polySimp_addComm1" (formula "21") (term "0,2,1"))
               (rule "inEqSimp_leqRight" (formula "19"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "20"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "eqClose" (formula "1") (term "0,0,0,0"))
               (rule "concrete_and_1" (formula "1") (term "0,0,0"))
               (rule "equalUnique" (formula "1") (term "0,0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "0,0,0"))
               (rule "concrete_or_1" (formula "1") (term "0,0"))
               (rule "ifthenelse_true" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
               (rule "mul_literals" (formula "3") (term "0,0"))
               (rule "add_zero_left" (formula "3") (term "0"))
               (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "18"))
               (rule "mul_literals" (formula "3") (term "1,1,0"))
               (rule "greater_literals" (formula "3") (term "0,0"))
               (rule "concrete_and_1" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3") (term "0"))
               (rule "concrete_or_1" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "cut_direct" (formula "7") (term "0,0"))
               (branch "CUT: self.a.length = quotient_0 * 2 TRUE"
                  (rule "concrete_not_1" (formula "8") (term "0"))
                  (rule "concrete_impl_2" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_homoInEq1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,0"))
                  (rule "times_zero_1" (formula "9") (term "0"))
                  (rule "leq_literals" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_homoInEq0" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0"))
                  (rule "add_literals" (formula "9") (term "0"))
                  (rule "qeq_literals" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
                  (rule "applyEq" (formula "20") (term "1,0,2,1") (ifseqformula "7"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,2,1"))
                  (rule "applyEq" (formula "6") (term "1,0,0,2,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "5") (term "1,0,0,2,0,1,0") (ifseqformula "7"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "15"))
                  (rule "greater_literals" (formula "17") (term "0,0"))
                  (rule "concrete_and_1" (formula "17") (term "0"))
                  (rule "mul_literals" (formula "17") (term "1,0"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (rule "concrete_or_1" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "polyDiv_pullOut" (formula "7") (term "0") (inst "polyDivCoeff=quotient_0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0"))
                  (rule "equal_literals" (formula "7") (term "0,0"))
                  (rule "ifthenelse_false" (formula "7") (term "0"))
                  (rule "polySimp_homoEq" (formula "7"))
                  (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "7") (term "1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "7") (term "0,0,0,1,0"))
                  (rule "div_literals" (formula "7") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "7") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "1,0"))
                  (rule "times_zero_1" (formula "7") (term "0"))
                  (rule "eqClose" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                  (rule "mul_literals" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                  (rule "concrete_or_2" (formula "2") (term "0"))
                  (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (rule "concrete_or_2" (formula "2"))
                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                  (rule "leq_literals" (formula "14") (term "0"))
                  (rule "concrete_or_1" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "jdiv_axiom" (formula "8") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "8"))
                  (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_subsumption6" (formula "8") (term "0,0") (ifseqformula "2"))
                  (rule "greater_literals" (formula "8") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "8") (term "0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "8") (term "0,0"))
                  (rule "ifthenelse_true" (formula "8") (term "0"))
                  (rule "polyDiv_pullOut" (formula "8") (term "0") (inst "polyDivCoeff=quotient_0"))
                  (rule "equal_literals" (formula "8") (term "0,0"))
                  (rule "ifthenelse_false" (formula "8") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_homoEq" (formula "8"))
                  (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "8") (term "1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "8") (term "0,0,0,1,0"))
                  (rule "div_literals" (formula "8") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "8") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "1,0"))
                  (rule "times_zero_1" (formula "8") (term "0"))
                  (rule "eqClose" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "allLeft" (formula "5") (inst "t=add(add(Z(neglit(1(#))), mul(quotient_0, Z(2(#)))),
    mul(j_0, Z(neglit(1(#)))))"))
                  (rule "eqSymm" (formula "5") (term "1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,2,1,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,2,1,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,2,1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,2,1,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1,0,2,1,1"))
                  (rule "mul_literals" (formula "5") (term "0,0,1,0,2,1,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,2,1,1"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,2,1,1"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,2,1,1"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0,2,1,1"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,2,1,1"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0,2,1,1"))
                  (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,2,1,1"))
                  (rule "add_literals" (formula "5") (term "1,0,0,2,1,1"))
                  (rule "times_zero_1" (formula "5") (term "0,0,2,1,1"))
                  (rule "add_zero_left" (formula "5") (term "0,2,1,1"))
                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "5") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1,0,1,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (term "0,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "5") (term "0,0,0"))
                  (rule "concrete_and_2" (formula "5") (term "0,0"))
                  (rule "concrete_or_2" (formula "5") (term "0"))
                  (rule "pullOutSelect" (formula "5") (term "0,1") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfAnon" (formula "5"))
                  (rule "elementOfFreshLocs" (formula "5") (term "1,0,0"))
                  (rule "elementOfAllFields" (formula "5") (term "0,0,0,0"))
                  (rule "eqClose" (formula "5") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "5") (term "0,0,0"))
                  (rule "equalUnique" (formula "5") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "5") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "5") (term "0,0"))
                  (rule "ifthenelse_true" (formula "5") (term "0"))
                  (rule "applyEqReverse" (formula "6") (term "0,1") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "cut_direct" (formula "5") (term "0"))
                  (branch "CUT: j_0 <= -1 + quotient_0 TRUE"
                     (rule "concrete_or_1" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                     (rule "mul_literals" (formula "3") (term "0,0"))
                     (rule "add_zero_left" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "allLeft" (formula "7") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet001100_6" (formula "7") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet001100_7" (formula "7") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "7") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "7") (term "0,0"))
                     (rule "concrete_or_2" (formula "7") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "7") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,0"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (rule "concrete_and_2" (formula "7") (term "0"))
                     (rule "concrete_or_2" (formula "7"))
                     (rule "allLeft" (formula "6") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet01100_4" (formula "6") (term "1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet01100_5" (formula "6") (term "1,1"))
                     (rule "eqSymm" (formula "6") (term "1"))
                     (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "20"))
                     (rule "concrete_or_4" (formula "6"))
                     (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "6") (term "0,0"))
                     (rule "concrete_and_2" (formula "6") (term "0"))
                     (rule "concrete_or_2" (formula "6"))
                     (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "5"))
                     (rule "andLeft" (formula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "1,1,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0"))
                     (rule "add_literals" (formula "6") (term "0"))
                     (rule "leq_literals" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
                  (branch "CUT: j_0 <= -1 + quotient_0 FALSE"
                     (rule "concrete_or_2" (formula "5"))
                     (rule "inEqSimp_leqRight" (formula "16"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "allLeft" (formula "8") (inst "t=add(add(Z(neglit(1(#))), mul(quotient_0, Z(2(#)))),
    mul(j_0, Z(neglit(1(#)))))"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,2,0,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,2,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,2,0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,2,0,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1,0,2,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,2,0,1"))
                     (rule "mul_literals" (formula "8") (term "0,0,1,0,2,0,1"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,1"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,2,0,1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0,2,0,1"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0,2,0,1"))
                     (rule "add_zero_left" (formula "8") (term "0,0,0,2,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,2,0,1"))
                     (rule "add_literals" (formula "8") (term "1,0,0,2,0,1"))
                     (rule "times_zero_1" (formula "8") (term "0,0,2,0,1"))
                     (rule "add_zero_left" (formula "8") (term "0,2,0,1"))
                     (rule "replaceKnownSelect_taclet01100_4" (formula "8") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet01100_5" (formula "8") (term "0,1"))
                     (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "20"))
                     (rule "concrete_or_4" (formula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1,0,1"))
                     (rule "mul_literals" (formula "8") (term "0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
                     (rule "mul_literals" (formula "8") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "8") (term "0,0,1"))
                     (rule "leq_literals" (formula "8") (term "0,1"))
                     (rule "concrete_and_2" (formula "8") (term "1"))
                     (rule "concrete_or_4" (formula "8"))
                     (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "2"))
                     (rule "andLeft" (formula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,1,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0"))
                     (rule "add_literals" (formula "8") (term "0"))
                     (rule "leq_literals" (formula "8"))
                     (rule "closeFalse" (formula "8"))
                  )
               )
               (branch "CUT: self.a.length = quotient_0 * 2 FALSE"
                  (rule "concrete_not_2" (formula "7") (term "0"))
                  (rule "concrete_impl_1" (formula "7"))
                  (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "20"))
                  (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "9"))
                  (rule "polySimp_mulAssoc" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0"))
                  (rule "leq_literals" (formula "20") (term "0"))
                  (rule "concrete_and_2" (formula "20"))
                  (rule "false_right" (formula "20"))
                  (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "10"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "10"))
                  (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,0"))
                  (rule "times_zero_1" (formula "10") (term "0"))
                  (rule "leq_literals" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "9"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "9"))
                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq0" (formula "10"))
                  (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,0"))
                  (rule "times_zero_1" (formula "10") (term "0"))
                  (rule "qeq_literals" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "applyEq" (formula "5") (term "1,0,0,2,0,1,0") (ifseqformula "9"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,2,0,1,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,2,0,1,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,2,0,1,0"))
                  (rule "applyEq" (formula "6") (term "1,0,0,2,0,1,0") (ifseqformula "9"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,2,0,1,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,2,0,1,0"))
                  (rule "add_zero_left" (formula "6") (term "0,0,2,0,1,0"))
                  (rule "applyEq" (formula "21") (term "1,0,2,1") (ifseqformula "9"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,2,1"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,2,1"))
                  (rule "add_literals" (formula "21") (term "0,0,0,2,1"))
                  (rule "add_zero_left" (formula "21") (term "0,0,2,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "15"))
                  (rule "greater_literals" (formula "17") (term "0,0"))
                  (rule "concrete_and_1" (formula "17") (term "0"))
                  (rule "mul_literals" (formula "17") (term "1,0"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (rule "concrete_or_1" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "polyDiv_pullOut" (formula "7") (term "0") (inst "polyDivCoeff=quotient_0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0"))
                  (rule "equal_literals" (formula "7") (term "0,0"))
                  (rule "ifthenelse_false" (formula "7") (term "0"))
                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0"))
                  (rule "div_literals" (formula "7") (term "0,0"))
                  (rule "add_zero_left" (formula "7") (term "0"))
                  (rule "eqClose" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "jdiv_axiom" (formula "8") (term "0"))
                  (rule "eqSymm" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0,2,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,2,0"))
                  (rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,0"))
                  (rule "inEqSimp_subsumption6" (formula "8") (term "0,0") (ifseqformula "15"))
                  (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                  (rule "greater_literals" (formula "8") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "8") (term "0,0,0"))
                  (rule "leq_literals" (formula "8") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "8") (term "0,0"))
                  (rule "ifthenelse_true" (formula "8") (term "0"))
                  (rule "polyDiv_pullOut" (formula "8") (term "0") (inst "polyDivCoeff=quotient_0"))
                  (rule "equal_literals" (formula "8") (term "0,0"))
                  (rule "ifthenelse_false" (formula "8") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "div_literals" (formula "8") (term "0,0"))
                  (rule "add_zero_left" (formula "8") (term "0"))
                  (rule "eqClose" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "allLeft" (formula "4") (inst "t=add(mul(quotient_0, Z(2(#))),
    mul(j_0, Z(neglit(1(#)))))"))
                  (rule "eqSymm" (formula "4") (term "1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,2,1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,2,1,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,2,1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,0,2,1,1"))
                  (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,2,1,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,2,1,1"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,1"))
                  (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,2,1,1"))
                  (rule "add_literals" (formula "4") (term "1,0,0,2,1,1"))
                  (rule "times_zero_1" (formula "4") (term "0,0,2,1,1"))
                  (rule "add_zero_left" (formula "4") (term "0,2,1,1"))
                  (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,0"))
                  (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,1,0"))
                  (rule "add_literals" (formula "4") (term "1,0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                  (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0,0"))
                  (rule "concrete_and_2" (formula "4") (term "0,0"))
                  (rule "concrete_or_2" (formula "4") (term "0"))
                  (rule "pullOutSelect" (formula "4") (term "0,1") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfAnon" (formula "4"))
                  (rule "elementOfFreshLocs" (formula "4") (term "1,0,0"))
                  (rule "elementOfAllFields" (formula "4") (term "0,0,0,0"))
                  (rule "eqClose" (formula "4") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "4") (term "0,0,0"))
                  (rule "equalUnique" (formula "4") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "4") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "4") (term "0,0"))
                  (rule "ifthenelse_true" (formula "4") (term "0"))
                  (rule "applyEqReverse" (formula "5") (term "0,1") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "cut_direct" (formula "4") (term "0"))
                  (branch "CUT: j_0 <= quotient_0 TRUE"
                     (rule "concrete_or_1" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "2") (term "0,0"))
                     (rule "add_zero_left" (formula "2") (term "0"))
                     (rule "allLeft" (formula "6") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet101100_6" (formula "6") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet101100_7" (formula "6") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "6") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "6") (term "0,0"))
                     (rule "concrete_or_2" (formula "6") (term "0"))
                     (rule "cut_direct" (formula "6") (term "0"))
                     (branch "CUT: j_0 >= quotient_0 TRUE"
                        (rule "concrete_or_1" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "4"))
                        (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,0"))
                        (rule "times_zero_1" (formula "7") (term "0"))
                        (rule "leq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor0" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "applyEqRigid" (formula "17") (term "0,2,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "5"))
                        (rule "eqSymm" (formula "17"))
                        (rule "applyEq" (formula "17") (term "0,1,0,2,0") (ifseqformula "3"))
                        (rule "polySimp_pullOutFactor0" (formula "17") (term "0,2,0"))
                        (rule "add_literals" (formula "17") (term "1,0,2,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0,2,0"))
                        (rule "eqClose" (formula "17"))
                        (rule "closeTrue" (formula "17"))
                     )
                     (branch "CUT: j_0 >= quotient_0 FALSE"
                        (rule "concrete_or_2" (formula "6"))
                        (rule "inEqSimp_geqRight" (formula "18"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                        (rule "concrete_or_1" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                        (rule "mul_literals" (formula "3") (term "0,0"))
                        (rule "add_zero_left" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "3"))
                        (rule "leq_literals" (formula "17") (term "0"))
                        (rule "concrete_or_1" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "allLeft" (formula "6") (inst "t=j_0"))
                        (rule "replaceKnownSelect_taclet01100_4" (formula "6") (term "1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01100_5" (formula "6") (term "1,1"))
                        (rule "eqSymm" (formula "6") (term "1"))
                        (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "21"))
                        (rule "concrete_or_4" (formula "6"))
                        (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "6") (term "0,0"))
                        (rule "concrete_and_2" (formula "6") (term "0"))
                        (rule "concrete_or_2" (formula "6"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "CUT: j_0 <= quotient_0 FALSE"
                     (rule "concrete_or_2" (formula "4"))
                     (rule "inEqSimp_leqRight" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
                     (rule "leq_literals" (formula "17") (term "0"))
                     (rule "concrete_or_1" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "allLeft" (formula "8") (inst "t=add(mul(quotient_0, Z(2(#))),
    mul(j_0, Z(neglit(1(#)))))"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,2,0,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,2,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,2,0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,2,0,1"))
                     (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,2,0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,2,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,2,0,1"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,2,0,1"))
                     (rule "add_literals" (formula "8") (term "1,0,0,2,0,1"))
                     (rule "times_zero_1" (formula "8") (term "0,0,2,0,1"))
                     (rule "add_zero_left" (formula "8") (term "0,2,0,1"))
                     (rule "replaceKnownSelect_taclet01100_4" (formula "8") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet01100_5" (formula "8") (term "0,1"))
                     (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "21"))
                     (rule "concrete_or_4" (formula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1"))
                     (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                     (rule "polySimp_pullOutFactor1" (formula "8") (term "0,0,1"))
                     (rule "add_literals" (formula "8") (term "1,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,0"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (rule "concrete_and_2" (formula "8") (term "0"))
                     (rule "concrete_or_2" (formula "8"))
                     (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "2"))
                     (rule "andLeft" (formula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "8"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,1,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0"))
                     (rule "add_literals" (formula "8") (term "0"))
                     (rule "leq_literals" (formula "8"))
                     (rule "closeFalse" (formula "8"))
                  )
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "19") (inst "sk=f_0"))
               (rule "allRight" (formula "19") (inst "sk=o_0"))
               (rule "orRight" (formula "19"))
               (rule "orRight" (formula "19"))
               (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (rule "elementOfFreshLocs" (formula "1") (term "1,0,0"))
               (rule "elementOfAllFields" (formula "1") (term "0,0,0,0"))
               (rule "eqSymm" (formula "22"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
               (rule "concrete_or_4" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
               (rule "concrete_and_2" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "close" (formula "22") (ifseqformula "1"))
            )
         )
      )
   )
   (branch "Case 2"
      (rule "equal_literals" (formula "8") (term "0,1"))
      (rule "concrete_not_2" (formula "8") (term "1"))
      (rule "closeTrue" (formula "8"))
   )
)
(branch "Null Reference (x_arr = null)"
   (rule "false_right" (formula "9"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "close" (formula "8") (ifseqformula "1"))
)
)
}
