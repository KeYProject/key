/**
This problem should be solved automatically by Yices.
The complexity of this problem is based on the fact,
that the external prover must use several different
 types of taclets. Furthermore the term (6) can only 
be proved by using a taclet containing 3 different generic sorts.
Options:
- Choose all supported taclets.
- Maximum number of generic sorts: 3.
*/


\sorts {
  MySort;
}


\functions {
  boolean b;
  MySort f;
  java.lang.Object o;


}



\problem {

  TRUE != FALSE   							// (1)
  &
  (b != FALSE -> b = TRUE) 						// (2)
  &
  f = (MySort) f 							// (3)
   
  &
  short_HALFRANGE > byte_HALFRANGE  					// (4)
  &
  (wellFormed(heap) & java.lang.Object.<classInitializationInProgress>=TRUE
     -> java.lang.Object.<classPrepared>=TRUE)   			// (5)
  &  (java.util.List::instance(o)=TRUE
   -> java.util.Collection::instance(o)=TRUE)   			// (6)

&
	(wellFormed(heap) -> java.lang.Object.<nextToCreate> >=0) 	// (7)
	
  &   
  	java.lang.Exception::<get>(0) != java.lang.Object::<get>(0)  	// (8)
  &
 	java.lang.Exception::<get>(27) != java.lang.Exception::<get>(28) // (9)
   
          
    
  
     


}