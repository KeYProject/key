\profile "Java with Permissions Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Feb 15 15:28:26 CET 2022
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:on , moreSeqRules-moreSeqRules\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , floatRules-floatRules\\:strictfpOnly , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation {
	"contract": "Plotter[ThreadSpec2::joinTransfer()].JML accessible clause.0",
	"name": "Plotter[ThreadSpec2::joinTransfer()].JML accessible clause.0",
	"class": "de.uka.ilkd.key.proof.init.DependencyContractPO",
 }

\proof {
(keyLog "0" (keyUser "lukas" ) (keyVersion "4044cf2700"))

(autoModeTime "3218")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "self,heapAtPre,permissionsAtPre,anon_heap,anon_heapAtPre,anon_permissions,anon_permissionsAtPre"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "20"))
(rule "createdOnHeapImpliesCreatedOnPermissions" (formula "11") (term "0") (ifseqformula "1") (ifseqformula "5") (ifseqformula "15") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "11"))
(rule "true_left" (formula "11"))
(rule "createdOnHeapImpliesCreatedOnPermissions" (formula "11") (term "0") (ifseqformula "3") (ifseqformula "7") (ifseqformula "15") (ifseqformula "10"))
 (builtin "One Step Simplification" (formula "11"))
(rule "true_left" (formula "11"))
(rule "Definition_axiom_for_stateInv_in_Plotter" (formula "15") (term "0"))
 (builtin "One Step Simplification" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "17"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "17"))
(rule "notLeft" (formula "15"))
(rule "eqSymm" (formula "22"))
(rule "eqSymm" (formula "21"))
(rule "eqSymm" (formula "20"))
(rule "readPermission" (formula "17"))
(rule "readPermission" (formula "16"))
(rule "readPermission" (formula "15"))
(rule "Definition_axiom_for_stateInv_in_Plotter" (formula "23") (term "0"))
 (builtin "One Step Simplification" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "notLeft" (formula "25"))
(rule "andLeft" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "notLeft" (formula "25"))
(rule "notLeft" (formula "23"))
(rule "eqSymm" (formula "30"))
(rule "eqSymm" (formula "29"))
(rule "eqSymm" (formula "28"))
(rule "readPermission" (formula "25"))
(rule "readPermission" (formula "24"))
(rule "readPermission" (formula "23"))
(rule "Definition_axiom_for_workingPermissions_in_Plotter" (formula "38") (term "1,1,3,0"))
(rule "Definition_axiom_for_staticPermissions_in_Plotter" (formula "38") (term "1,1,1,0"))
(rule "commuteUnion_2" (formula "38") (term "1,1,1,0"))
(rule "commuteUnion" (formula "38") (term "0,1,1,1,0"))
(rule "Definition_axiom_for_joinTransfer_in_Plotter" (formula "38") (term "1"))
(rule "eqSymm" (formula "38") (term "1,0,0,1"))
(rule "eqSymm" (formula "38") (term "1,0,1"))
(rule "eqSymm" (formula "38") (term "0,0,0,1"))
(rule "eqSymm" (formula "38"))
(rule "applyEq" (formula "38") (term "0,2,2,2,0,0,0,0,0") (ifseqformula "28"))
(rule "Definition_axiom_for_stateInv_in_BFilter" (formula "19") (term "0"))
 (builtin "One Step Simplification" (formula "19"))
(rule "andLeft" (formula "19"))
(rule "notLeft" (formula "20"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "19"))
(rule "notLeft" (formula "21"))
(rule "notLeft" (formula "19"))
(rule "eqSymm" (formula "22"))
(rule "applyEq" (formula "21") (term "2,0") (ifseqformula "23"))
(rule "applyEq" (formula "36") (term "0") (ifseqformula "23"))
(rule "applyEq" (formula "34") (term "0") (ifseqformula "25"))
(rule "applyEq" (formula "34") (term "0") (ifseqformula "23"))
(rule "applyEq" (formula "22") (term "1") (ifseqformula "25"))
(rule "applyEq" (formula "22") (term "1,0") (ifseqformula "23"))
(rule "readPermission" (formula "20"))
(rule "readPermission" (formula "19"))
(rule "Definition_axiom_for_stateInv_in_AFilter" (formula "18") (term "0"))
 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "34")) (ifInst ""  (formula "21")) (ifInst ""  (formula "35")))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "18"))
(rule "notLeft" (formula "18"))
(rule "eqSymm" (formula "20"))
(rule "applyEq" (formula "36") (term "0") (ifseqformula "26"))
(rule "applyEq" (formula "24") (term "0") (ifseqformula "20"))
(rule "applyEq" (formula "20") (term "1") (ifseqformula "25"))
(rule "readPermission" (formula "19"))
(rule "readPermission" (formula "18"))
(rule "Definition_axiom_for_stateInv_in_BFilter" (formula "31") (term "0"))
 (builtin "One Step Simplification" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "notLeft" (formula "32"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "andLeft" (formula "31"))
(rule "notLeft" (formula "33"))
(rule "notLeft" (formula "31"))
(rule "eqSymm" (formula "40"))
(rule "eqSymm" (formula "34"))
(rule "applyEq" (formula "33") (term "2,0") (ifseqformula "35"))
(rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
(rule "applyEq" (formula "38") (term "0") (ifseqformula "35"))
(rule "applyEq" (formula "34") (term "1") (ifseqformula "37"))
(rule "applyEq" (formula "39") (term "1") (ifseqformula "35"))
(rule "applyEq" (formula "34") (term "1,0") (ifseqformula "35"))
(rule "readPermission" (formula "32"))
(rule "readPermission" (formula "31"))
(rule "Definition_axiom_for_stateInv_in_AFilter" (formula "30") (term "0"))
 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "38")) (ifInst ""  (formula "33")))
(rule "andLeft" (formula "30"))
(rule "notLeft" (formula "31"))
(rule "andLeft" (formula "30"))
(rule "andLeft" (formula "30"))
(rule "andLeft" (formula "30"))
(rule "notLeft" (formula "30"))
(rule "eqSymm" (formula "41"))
(rule "eqSymm" (formula "32"))
(rule "applyEq" (formula "40") (term "0") (ifseqformula "38"))
(rule "applyEq" (formula "36") (term "0") (ifseqformula "32"))
(rule "applyEq" (formula "32") (term "1") (ifseqformula "37"))
(rule "readPermission" (formula "31"))
(rule "readPermission" (formula "30"))
(rule "Definition_axiom_for_staticPermissions_in_AFilter" (formula "50") (term "1,0,1,1,1,1"))
(rule "commuteUnion" (formula "50") (term "1,0,1,1,1,1"))
(rule "Definition_axiom_for_staticPermissions_in_Plotter" (formula "50") (term "1,1,0,1"))
(rule "commuteUnion" (formula "50") (term "1,1,0,1"))
(rule "Definition_axiom_for_staticPermissions_in_BFilter" (formula "50") (term "1,1,1,1,1"))
(rule "applyEq" (formula "50") (term "2,0,1,1,1,1,1") (ifseqformula "24"))
(rule "commuteUnion" (formula "50") (term "1,1,1,1,1"))
(rule "Definition_axiom_for_workingPermissions_in_Plotter" (formula "50") (term "1,1,2,1"))
(rule "Definition_axiom_for_stateInv_in_Sampler" (formula "23") (term "0"))
 (builtin "One Step Simplification" (formula "23"))
(rule "andLeft" (formula "23"))
(rule "notLeft" (formula "23"))
(rule "applyEq" (formula "39") (term "0") (ifseqformula "20"))
(rule "readPermission" (formula "23"))
(rule "Definition_axiom_for_stateInv_in_Sampler" (formula "35") (term "0"))
 (builtin "One Step Simplification" (formula "35"))
(rule "andLeft" (formula "35"))
(rule "notLeft" (formula "35"))
(rule "applyEq" (formula "39") (term "0") (ifseqformula "32"))
(rule "readPermission" (formula "35"))
(rule "Definition_axiom_for_staticPermissions_in_Sampler" (formula "50") (term "1,1,0,1,1,1,1"))
(rule "Definition_axiom_for_staticPermissions_in_BFilter" (formula "50") (term "1,1,1,1,0,1"))
(rule "applyEq" (formula "50") (term "2,0,1,1,1,1,0,1") (ifseqformula "36"))
(rule "commuteUnion" (formula "50") (term "1,1,1,1,0,1"))
(rule "Definition_axiom_for_staticPermissions_in_AFilter" (formula "50") (term "0,1,1,1,0,1"))
(rule "commuteUnion" (formula "50") (term "0,1,1,1,0,1"))
(rule "Definition_axiom_for_staticPermissions_in_Sampler" (formula "50") (term "1,1,1,1,1,1"))
(rule "Definition_axiom_for_staticPermissions_in_Sampler" (formula "50") (term "1,1,1,1,1,0,1"))
(rule "commuteUnion_2" (formula "50") (term "1,1,1,0,1"))
(rule "Definition_axiom_for_staticPermissions_in_Sampler" (formula "50") (term "1,1,1,1,0,1"))
(rule "Definition_axiom_for_joinTransfer_in_Plotter" (formula "50") (term "1"))
(rule "eqSymm" (formula "50") (term "1,0,1"))
(rule "eqSymm" (formula "50") (term "0,0,0,1"))
(rule "eqSymm" (formula "50") (term "1,0,0,1"))
(rule "eqSymm" (formula "50"))
(rule "pullOutSelect" (formula "50") (term "1,0,0,0,0") (inst "selectSK=Buffer_inp_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "pullOutSelect" (formula "51") (term "2,2,2,2,2,0,0,0,0,0") (inst "selectSK=Buffer_inp_1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "pullOutSelect" (formula "52") (term "2,2,0,1,0,0") (inst "selectSK=Buffer_outb_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "pullOutSelect" (formula "53") (term "1,0,2,2,2,0,0,0,0,0") (inst "selectSK=Plotter_tb_0"))
(rule "applyEq" (formula "54") (term "0,2,0,0,0,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "54") (term "1,2,2,2,0,0,0,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "54") (term "0,2,0,1,0,0") (ifseqformula "1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "13")))
(rule "elementOfSetMinus" (formula "1") (term "0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "ifthenelse_negated" (formula "1") (term "0"))
(rule "elementOfUnion" (formula "1") (term "0,0"))
(rule "elementOfUnion" (formula "1") (term "0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "54") (term "1,2,2,2,0,0,0,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "54") (term "1,0,2,2,2,0,0,0,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "54") (term "0,2,0,0,0,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "54") (term "0,2,0,1,0,0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "pullOutSelect" (formula "53") (term "1,1,1,0,0") (inst "selectSK=Plotter_buffer_0"))
(rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "1"))
(rule "applyEq" (formula "54") (term "1,1,1,0,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "13")))
(rule "eqSymm" (formula "4") (term "0,0,0,0"))
(rule "elementOfSetMinus" (formula "1") (term "0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "ifthenelse_negated" (formula "1") (term "0"))
(rule "elementOfUnion" (formula "1") (term "0,0"))
(rule "elementOfUnion" (formula "1") (term "0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "4") (term "1,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "47")))
(rule "applyEqReverse" (formula "54") (term "1,1,1,0,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "54") (term "1,1,1,0,0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "ifthenelse_negated" (formula "3") (term "0"))
(rule "pullOutSelect" (formula "53") (term "1,0,2,2,2,2,0,0,0,0,0") (inst "selectSK=Plotter_ta_0"))
(rule "applyEq" (formula "54") (term "0,2,2,0,0,0,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "54") (term "1,2,2,2,2,0,0,0,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "54") (term "0,2,0,1,0,0,0") (ifseqformula "1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "13")))
(rule "elementOfSetMinus" (formula "1") (term "0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "ifthenelse_negated" (formula "1") (term "0"))
(rule "elementOfUnion" (formula "1") (term "0,0"))
(rule "elementOfUnion" (formula "1") (term "0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "pullOutSelect" (formula "54") (term "1,2,2,0,1,0,0,0") (inst "selectSK=Plotter_buffer_1"))
(rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "3") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "1"))
(rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "15")))
(rule "eqSymm" (formula "3") (term "0,0,0,0"))
(rule "eqSymm" (formula "4") (term "0,0,0,0"))
(rule "elementOfUnion" (formula "2") (term "0,0,0"))
(rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "applyEqReverse" (formula "55") (term "0,2,2,0,0,0,0,0") (ifseqformula "2"))
(rule "applyEqReverse" (formula "55") (term "1,0,2,2,2,2,0,0,0,0,0") (ifseqformula "2"))
(rule "applyEqReverse" (formula "55") (term "0,2,0,1,0,0,0") (ifseqformula "2"))
(rule "applyEqReverse" (formula "55") (term "1,2,2,2,2,0,0,0,0,0") (ifseqformula "2"))
(rule "hideAuxiliaryEq" (formula "2"))
(rule "elementOfSetMinus" (formula "1") (term "0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "ifthenelse_negated" (formula "1") (term "0"))
(rule "elementOfUnion" (formula "1") (term "0,0"))
(rule "elementOfUnion" (formula "1") (term "1,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0"))
(rule "elementOfUnion" (formula "1") (term "1,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,1,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "1,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "1,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "1,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "1,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "applyEqReverse" (formula "2") (term "1,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "2"))
(rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "54") (term "1,2,2,0,1,0,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "3") (term "1,0,0,0,0") (ifseqformula "1"))
 (builtin "One Step Simplification" (formula "3"))
(rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
(rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "1"))
(rule "hideAuxiliaryEq" (formula "1"))
(rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
 (builtin "One Step Simplification" (formula "1"))
(rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "49"))
 (builtin "One Step Simplification" (formula "2"))
(rule "ifthenelse_negated" (formula "1") (term "0"))
(rule "ifthenelse_negated" (formula "2") (term "0"))
(rule "pullOutSelect" (formula "53") (term "0,2,2,2,0,0,0,0,0") (inst "selectSK=BFilter_sampler_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
(rule "applyEq" (formula "1") (term "2,0") (ifseqformula "40"))
(rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "1,1,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "pullOutSelect" (formula "54") (term "1,1,0,0,0") (inst "selectSK=Buffer_outa_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
(rule "elementOfUnion" (formula "2") (term "0,1,0,0,0,0"))
(rule "elementOfSingleton" (formula "2") (term "0,0,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "elementOfSingleton" (formula "2") (term "0,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "pullOutSelect" (formula "55") (term "1,1,0,0") (inst "selectSK=Buffer_outb_1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
(rule "elementOfSetMinus" (formula "2") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "elementOfUnion" (formula "3") (term "1,0,0,0,0"))
(rule "elementOfSingleton" (formula "3") (term "1,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "3"))
(rule "ifthenelse_negated" (formula "3") (term "0"))
(rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "2") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "elementOfSingleton" (formula "2") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "2"))
(rule "ifthenelse_negated" (formula "2") (term "0"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "ifthenelse_negated" (formula "1") (term "0"))
(rule "pullOutSelect" (formula "56") (term "0,2,2,2,2,0,0,0,0,0") (inst "selectSK=AFilter_sampler_0"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
(rule "eqSymm" (formula "57"))
(rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "1,0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "1,1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "ifthenelse_negated" (formula "1") (term "0"))
(rule "pullOutSelect" (formula "57") (term "2,2,0,1,0,0,1") (inst "selectSK=Buffer_outa_1"))
(rule "simplifySelectOfAnon" (formula "1"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
(rule "elementOfSetMinus" (formula "1") (term "0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
(rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "ifthenelse_negated" (formula "1") (term "0"))
(rule "commute_and" (formula "58") (term "0,0,0"))
(rule "commute_and_2" (formula "58") (term "0,0"))
(rule "commute_and" (formula "58") (term "0,0,1"))
(rule "commute_and_2" (formula "58") (term "0,1"))
(rule "ifthenelse_split" (formula "8") (term "0"))
(branch "(self.buffer@heap).<created>@permissions = TRUE TRUE"
   (rule "applyEqReverse" (formula "59") (term "1,1,0,1") (ifseqformula "9"))
   (rule "hideAuxiliaryEq" (formula "9"))
   (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "8"))
    (builtin "One Step Simplification" (formula "4"))
   (rule "applyEqReverse" (formula "58") (term "1,0,0,0,1") (ifseqformula "4"))
   (rule "hideAuxiliaryEq" (formula "4"))
   (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "applyEqReverse" (formula "57") (term "1,1,0,0,1") (ifseqformula "3"))
   (rule "hideAuxiliaryEq" (formula "3"))
   (rule "ifthenelse_split" (formula "4") (term "0"))
   (branch " (self.buffer@heapAtPre).<created>@permissionsAtPre = TRUE TRUE"
      (rule "applyEqReverse" (formula "57") (term "2,2,0,1,0,0,1") (ifseqformula "5"))
      (rule "hideAuxiliaryEq" (formula "5"))
      (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "applyEqReverse" (formula "56") (term "2,2,2,2,2,0,1,0,1") (ifseqformula "5"))
      (rule "hideAuxiliaryEq" (formula "5"))
      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "55") (term "2,2,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "ifthenelse_split" (formula "2") (term "0"))
      (branch "self.tb.<created> = TRUE TRUE"
         (rule "applyEqReverse" (formula "55") (term "0,2,2,2,0,1,0,1") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "self.ta.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "55") (term "0,2,2,2,2,0,1,0,1") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "closeTrue" (formula "55"))
         )
         (branch "self.ta.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "49"))
            (rule "close" (formula "43") (ifseqformula "5"))
         )
      )
      (branch "self.tb.<created> = TRUE FALSE"
         (rule "referencedObjectIsCreatedRight" (formula "43") (ifseqformula "50"))
         (rule "close" (formula "43") (ifseqformula "5"))
      )
   )
   (branch " (self.buffer@heapAtPre).<created>@permissionsAtPre = TRUE FALSE"
      (rule "applyEqReverse" (formula "57") (term "2,2,0,1,0,0,1") (ifseqformula "4"))
      (rule "hideAuxiliaryEq" (formula "4"))
      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "44"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "56") (term "2,2,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "43"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "applyEqReverse" (formula "55") (term "2,2,2,2,2,0,1,0,1") (ifseqformula "3"))
      (rule "hideAuxiliaryEq" (formula "3"))
      (rule "ifthenelse_split" (formula "2") (term "0"))
      (branch "self.tb.<created> = TRUE TRUE"
         (rule "applyEqReverse" (formula "55") (term "0,2,2,2,0,1,0,1") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "self.ta.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "55") (term "0,2,2,2,2,0,1,0,1") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "ifthenelse_split" (formula "54") (term "0"))
            (branch " returnPermission(self, currentThread, returnPermission(self.ta, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outa))) = Permission::select(permissions, self.buffer, Buffer::$outa) & returnPermission(self, currentThread, returnPermission(self.tb, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outb))) = Permission::select(permissions, self.buffer, Buffer::$outb) & returnPermission(self, currentThread, returnPermission(self.tb, self, returnPermission(self.ta, self, returnPermission(self.ta.sampler, self.tb, returnPermission(self.ta.sampler, self.ta, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$inp)))))) = Permission::select(permissions, self.buffer, Buffer::$inp) TRUE"
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "57"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "1,1") (ifseqformula "7"))
               (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "4")))
               (rule "true_left" (formula "36"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "7"))
               (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
               (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "39"))
               (rule "createdOnHeapImpliesCreatedOnPermissions" (formula "6") (term "0") (ifseqformula "7") (ifseqformula "11") (ifseqformula "19") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1,1") (ifseqformula "6"))
               (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "53"))
                (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "5")))
               (rule "true_left" (formula "40"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "1") (ifseqformula "6"))
               (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "37")))
               (rule "true_left" (formula "38"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "1,0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "47"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,1") (ifseqformula "8"))
               (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "56"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "8"))
               (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "27"))
               (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "56"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "27"))
               (rule "createdOnHeapImpliesCreatedOnPermissions" (formula "48") (term "0") (ifseqformula "8") (ifseqformula "12") (ifseqformula "19") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "closeTrue" (formula "48"))
            )
            (branch " returnPermission(self, currentThread, returnPermission(self.ta, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outa))) = Permission::select(permissions, self.buffer, Buffer::$outa) & returnPermission(self, currentThread, returnPermission(self.tb, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outb))) = Permission::select(permissions, self.buffer, Buffer::$outb) & returnPermission(self, currentThread, returnPermission(self.tb, self, returnPermission(self.ta, self, returnPermission(self.ta.sampler, self.tb, returnPermission(self.ta.sampler, self.ta, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$inp)))))) = Permission::select(permissions, self.buffer, Buffer::$inp) FALSE"
               (rule "eqSymm" (formula "55"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "notRight" (formula "55"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "1,1") (ifseqformula "7"))
               (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "52")))
               (rule "true_left" (formula "36"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "1") (ifseqformula "7"))
               (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "createdOnHeapImpliesCreatedOnPermissions" (formula "6") (term "0") (ifseqformula "7") (ifseqformula "11") (ifseqformula "19") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "6"))
               (rule "applyEq" (formula "38") (term "1,0,1") (ifseqformula "39"))
               (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "1,0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "47"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "1,1") (ifseqformula "6"))
               (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "54")))
               (rule "true_left" (formula "41"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,1") (ifseqformula "8"))
               (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "56"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "1") (ifseqformula "8"))
               (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "56"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "createdOnHeapImpliesCreatedOnPermissions" (formula "48") (term "0") (ifseqformula "8") (ifseqformula "12") (ifseqformula "19") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "closeTrue" (formula "48"))
            )
         )
         (branch "self.ta.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "49"))
            (rule "close" (formula "42") (ifseqformula "4"))
         )
      )
      (branch "self.tb.<created> = TRUE FALSE"
         (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "50"))
         (rule "close" (formula "42") (ifseqformula "4"))
      )
   )
)
(branch "(self.buffer@heap).<created>@permissions = TRUE FALSE"
   (rule "applyEqReverse" (formula "59") (term "1,1,0,1") (ifseqformula "8"))
   (rule "hideAuxiliaryEq" (formula "8"))
   (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "46"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "applyEqReverse" (formula "58") (term "1,1,0,0,1") (ifseqformula "3"))
   (rule "hideAuxiliaryEq" (formula "3"))
   (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "45"))
    (builtin "One Step Simplification" (formula "3"))
   (rule "applyEqReverse" (formula "57") (term "1,0,0,0,1") (ifseqformula "3"))
   (rule "hideAuxiliaryEq" (formula "3"))
   (rule "ifthenelse_split" (formula "4") (term "0"))
   (branch " (self.buffer@heapAtPre).<created>@permissionsAtPre = TRUE TRUE"
      (rule "applyEqReverse" (formula "57") (term "2,2,0,1,0,0,1") (ifseqformula "5"))
      (rule "hideAuxiliaryEq" (formula "5"))
      (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "applyEqReverse" (formula "56") (term "2,2,2,2,2,0,1,0,1") (ifseqformula "5"))
      (rule "hideAuxiliaryEq" (formula "5"))
      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "55") (term "2,2,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "ifthenelse_split" (formula "2") (term "0"))
      (branch "self.tb.<created> = TRUE TRUE"
         (rule "applyEqReverse" (formula "55") (term "0,2,2,2,0,1,0,1") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "self.ta.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "55") (term "0,2,2,2,2,0,1,0,1") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "ifthenelse_split" (formula "54") (term "0"))
            (branch " returnPermission(self, currentThread, returnPermission(self.ta, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outa))) = Permission::select(permissions, self.buffer, Buffer::$outa) & returnPermission(self, currentThread, returnPermission(self.tb, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outb))) = Permission::select(permissions, self.buffer, Buffer::$outb) & returnPermission(self, currentThread, returnPermission(self.tb, self, returnPermission(self.ta, self, returnPermission(self.ta.sampler, self.tb, returnPermission(self.ta.sampler, self.ta, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$inp)))))) = Permission::select(permissions, self.buffer, Buffer::$inp) TRUE"
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "57"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "applyEq" (formula "57") (term "0,1") (ifseqformula "3"))
               (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "1"))
               (rule "commute_and_2" (formula "57"))
               (rule "commute_and" (formula "57") (term "0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "1,1") (ifseqformula "7"))
               (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "4")))
               (rule "true_left" (formula "37"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "7"))
               (rule "applyEq" (formula "38") (term "1,0,1") (ifseqformula "39"))
               (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
               (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "createdOnHeapImpliesCreatedOnPermissions" (formula "46") (term "0") (ifseqformula "7") (ifseqformula "11") (ifseqformula "19") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "closeTrue" (formula "46"))
            )
            (branch " returnPermission(self, currentThread, returnPermission(self.ta, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outa))) = Permission::select(permissions, self.buffer, Buffer::$outa) & returnPermission(self, currentThread, returnPermission(self.tb, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outb))) = Permission::select(permissions, self.buffer, Buffer::$outb) & returnPermission(self, currentThread, returnPermission(self.tb, self, returnPermission(self.ta, self, returnPermission(self.ta.sampler, self.tb, returnPermission(self.ta.sampler, self.ta, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$inp)))))) = Permission::select(permissions, self.buffer, Buffer::$inp) FALSE"
               (rule "eqSymm" (formula "55"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "notRight" (formula "55"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "1"))
               (rule "eqSymm" (formula "57") (term "0,0"))
               (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "2"))
               (rule "eqSymm" (formula "57") (term "1,0"))
               (rule "applyEq" (formula "57") (term "0,1") (ifseqformula "3"))
               (rule "eqSymm" (formula "57") (term "1"))
               (rule "commute_and_2" (formula "57"))
               (rule "commute_and" (formula "57") (term "0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "1,1") (ifseqformula "7"))
               (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "52")))
               (rule "true_left" (formula "37"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "7"))
               (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
               (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "39"))
               (rule "createdOnHeapImpliesCreatedOnPermissions" (formula "46") (term "0") (ifseqformula "7") (ifseqformula "11") (ifseqformula "19") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "closeTrue" (formula "46"))
            )
         )
         (branch "self.ta.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "49"))
            (rule "close" (formula "42") (ifseqformula "4"))
         )
      )
      (branch "self.tb.<created> = TRUE FALSE"
         (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "50"))
         (rule "close" (formula "42") (ifseqformula "4"))
      )
   )
   (branch " (self.buffer@heapAtPre).<created>@permissionsAtPre = TRUE FALSE"
      (rule "applyEqReverse" (formula "57") (term "2,2,0,1,0,0,1") (ifseqformula "4"))
      (rule "hideAuxiliaryEq" (formula "4"))
      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "43"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "56") (term "2,2,0,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "42"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "applyEqReverse" (formula "55") (term "2,2,2,2,2,0,1,0,1") (ifseqformula "3"))
      (rule "hideAuxiliaryEq" (formula "3"))
      (rule "ifthenelse_split" (formula "2") (term "0"))
      (branch "self.tb.<created> = TRUE TRUE"
         (rule "applyEqReverse" (formula "55") (term "0,2,2,2,0,1,0,1") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "self.ta.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "55") (term "0,2,2,2,2,0,1,0,1") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "ifthenelse_split" (formula "54") (term "0"))
            (branch " returnPermission(self, currentThread, returnPermission(self.ta, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outa))) = Permission::select(permissions, self.buffer, Buffer::$outa) & returnPermission(self, currentThread, returnPermission(self.tb, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outb))) = Permission::select(permissions, self.buffer, Buffer::$outb) & returnPermission(self, currentThread, returnPermission(self.tb, self, returnPermission(self.ta, self, returnPermission(self.ta.sampler, self.tb, returnPermission(self.ta.sampler, self.ta, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$inp)))))) = Permission::select(permissions, self.buffer, Buffer::$inp) TRUE"
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "57"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,1") (ifseqformula "6"))
               (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "52")))
               (rule "true_left" (formula "35"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "1") (ifseqformula "6"))
               (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "createdOnHeapImpliesCreatedOnPermissions" (formula "46") (term "0") (ifseqformula "6") (ifseqformula "10") (ifseqformula "18") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "closeTrue" (formula "46"))
            )
            (branch " returnPermission(self, currentThread, returnPermission(self.ta, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outa))) = Permission::select(permissions, self.buffer, Buffer::$outa) & returnPermission(self, currentThread, returnPermission(self.tb, self, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$outb))) = Permission::select(permissions, self.buffer, Buffer::$outb) & returnPermission(self, currentThread, returnPermission(self.tb, self, returnPermission(self.ta, self, returnPermission(self.ta.sampler, self.tb, returnPermission(self.ta.sampler, self.ta, Permission::select(permissionsAtPre, self.buffer@heapAtPre, Buffer::$inp)))))) = Permission::select(permissions, self.buffer, Buffer::$inp) FALSE"
               (rule "eqSymm" (formula "55"))
                (builtin "One Step Simplification" (formula "55"))
               (rule "notRight" (formula "55"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,1") (ifseqformula "6"))
               (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "4")))
               (rule "true_left" (formula "35"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "1") (ifseqformula "6"))
               (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "51"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "createdOnHeapImpliesCreatedOnPermissions" (formula "46") (term "0") (ifseqformula "6") (ifseqformula "10") (ifseqformula "18") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "closeTrue" (formula "46"))
            )
         )
         (branch "self.ta.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "49"))
            (rule "close" (formula "41") (ifseqformula "3"))
         )
      )
      (branch "self.tb.<created> = TRUE FALSE"
         (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "50"))
         (rule "close" (formula "41") (ifseqformula "3"))
      )
   )
)
)
}
