\settings {
"#Proof-Settings-Config-File
#Wed Nov 09 11:05:22 CET 2011
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=false
[View]HideClosedSubtrees=false
[General]UseOCL=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[View]ShowWholeTaclet=false
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=4
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[View]MaxTooltipLines=40
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource ".";

\chooseContract "JML normal_behavior operation contract [id: 2 / TwoWaySwap::twoWaySort]";

\proof {
(keyLog "0" (keyUser "bubel" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "11422")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "eqSymm" (formula "6") (term "0,1,0,0,0,0,0,0,0,1"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "6") (term "0,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "6") (term "0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "6") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,1,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "6") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "6") (term "0,0,1,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "6") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "6") (term "0,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,0,0,0,0,0,0,1"))
(rule "Class_invariant_axiom_for_TwoWaySwap" (formula "4") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "notLeft" (formula "4"))
   (rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_twoWaySort,savedHeapBefore_twoWaySort"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "i_1"))
   (rule "assignment" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "j_1"))
   (rule "compound_subtraction_1" (formula "6") (term "1") (inst "#v=x"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
   (rule "assignment_read_length" (formula "6"))
   (branch "Normal Execution (a != null)"
      (builtin "One Step Simplification" (formula "6"))
      (rule "assignmentSubtractionInt" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "translateJavaSubInt" (formula "6") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "6") (term "0,1,0"))
      (rule "mul_literals" (formula "6") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "6") (term "0,1,0"))
      (builtin "Loop Invariant" (formula "6") (newnames "heapBeforeLoop,j_1BeforeLoop,i_1BeforeLoop,anonHeap_loop,j_1_0,i_1_0,o,f,variant,b"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
         (rule "qeq_literals" (formula "6") (term "0,1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "translateJavaUnaryMinusInt" (formula "6") (term "1,0,1,1"))
         (rule "neg_literal" (formula "6") (term "1,0,1,1"))
         (rule "translateJavaSubInt" (formula "6") (term "0,1,0"))
         (rule "translateJavaSubInt" (formula "6") (term "0,0,1,1"))
         (rule "translateJavaAddInt" (formula "6") (term "1,0"))
         (rule "polySimp_elimSub" (formula "6") (term "0,0,1,1"))
         (rule "times_zero_2" (formula "6") (term "1,0,0,1,1"))
         (rule "add_zero_right" (formula "6") (term "0,0,1,1"))
         (rule "polySimp_elimSub" (formula "6") (term "0,1,0"))
         (rule "times_zero_2" (formula "6") (term "1,0,1,0"))
         (rule "polySimp_addLiterals" (formula "6") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,0,1,1,1"))
         (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,0,1,1,1"))
         (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,1,1,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1"))
         (rule "inEqSimp_gtToGeq" (formula "6") (term "0,0,0,1,1,1,1"))
         (rule "polySimp_addComm1" (formula "6") (term "1,0"))
         (rule "add_literals" (formula "6") (term "0,1,0"))
         (rule "add_zero_left" (formula "6") (term "1,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,1,1,1,1"))
         (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,1,1,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "6") (term "0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
         (rule "add_zero_left" (formula "6") (term "0,0,0,1"))
         (rule "polySimp_pullOutFactor2" (formula "6") (term "0,0,1"))
         (rule "add_literals" (formula "6") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "6") (term "0,0,1"))
         (rule "leq_literals" (formula "6") (term "0,1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,1,1,1"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,1,1,1"))
         (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,1,1,1"))
         (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
         (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
         (rule "add_literals" (formula "6") (term "0,0,0,1"))
         (rule "add_zero_left" (formula "6") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,1,1"))
         (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,1,1"))
         (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,0,1,1"))
         (rule "mul_literals" (formula "6") (term "1,1,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0,1,1,1"))
         (rule "inEqSimp_invertInEq0" (formula "6") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1"))
         (rule "times_zero_2" (formula "6") (term "1,0,1"))
         (rule "polySimp_elimOne" (formula "6") (term "0,0,1"))
         (rule "nnf_imp2or" (formula "6") (term "0,0,1,1"))
         (rule "nnf_imp2or" (formula "6") (term "0,1,1,1"))
         (rule "nnf_notAnd" (formula "6") (term "0,0,0,1,1"))
         (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,0,1,1"))
         (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,1,1"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,1,1"))
         (rule "mul_literals" (formula "6") (term "1,0,0,0,0,1,1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "nnf_notAnd" (formula "6") (term "0,0,1,1"))
         (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,1,1"))
         (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,1,1"))
         (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,1,1"))
         (rule "add_zero_left" (formula "6") (term "0,0,1,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,1,1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "inEqSimp_geqRight" (formula "6"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
         (rule "qeq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Body Preserves Invariant"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "10"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_2"))
         (rule "variableDeclarationAssign" (formula "15") (term "1,0,1"))
         (rule "blockThrow" (formula "15") (term "1,0,0,1,0,1"))
         (rule "variableDeclaration" (formula "15") (term "1,0,1") (newnames "exc_2"))
         (rule "assignment" (formula "15") (term "1,0,1"))
         (rule "variableDeclaration" (formula "15") (term "1,1,0,1") (newnames "thrownExc"))
         (rule "translateJavaAddInt" (formula "12") (term "1"))
         (rule "translateJavaUnaryMinusInt" (formula "7") (term "1"))
         (rule "neg_literal" (formula "7") (term "1"))
         (rule "translateJavaSubInt" (formula "7") (term "0"))
         (rule "translateJavaAddInt" (formula "15") (term "0,1,1,1,1,0,1,1,0,1"))
         (rule "eqSymm" (formula "15") (term "1,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "15") (term "0,0,1,1,1,0"))
         (rule "translateJavaSubInt" (formula "15") (term "0,1,0,1,1,1,0,1,1,0,1"))
         (rule "translateJavaUnaryMinusInt" (formula "15") (term "1,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "neg_literal" (formula "15") (term "1,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "eqSymm" (formula "15") (term "1,0,0,1,0,1,1,0,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "12") (term "0,1"))
         (rule "translateJavaSubInt" (formula "15") (term "0,0,1,1,1,1,0,1,1,0,1"))
         (rule "translateJavaAddInt" (formula "15") (term "0,1,1,1,0"))
         (rule "translateJavaAddInt" (formula "15") (term "1,0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "7") (term "0"))
         (rule "polySimp_elimSub" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "12") (term "0,1"))
         (rule "polySimp_elimSub" (formula "15") (term "0,0,1,1,1,1,0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "15") (term "0,0,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "15") (term "0,1,0,1,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "6"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_gtToGeq" (formula "15") (term "0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "7") (term "0"))
         (rule "polySimp_addComm0" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "12") (term "0,1"))
         (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "15") (term "1,0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "0,1,0,1,1,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm1" (formula "12") (term "1"))
         (rule "polySimp_addComm0" (formula "15") (term "0,0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "15") (term "0,1,0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "12") (term "0,1"))
         (rule "polySimp_addComm1" (formula "15") (term "0,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "15") (term "1,0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm1" (formula "15") (term "1,0,0,1,1,1,1,0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "15") (term "0,1,0,0,1,1,1,1,0,1,1,0,1"))
         (rule "inEqSimp_homoInEq1" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0"))
         (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,1,1,0,1,1,0,1"))
         (rule "inEqSimp_homoInEq0" (formula "12"))
         (rule "mul_literals" (formula "12") (term "1,0"))
         (rule "add_zero_right" (formula "12") (term "0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0"))
         (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "15") (term "1,0,0,1,1,1,0,1,1,0,1"))
         (rule "add_zero_right" (formula "15") (term "0,0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1,1,1,0,1,1,0,1"))
         (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1"))
         (rule "polySimp_rightDist" (formula "12") (term "1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
         (rule "mul_literals" (formula "12") (term "0,1"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,1,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "0,0,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,1,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,1,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "0,1,1,1,1,0,1,1,0,1"))
         (rule "selectOfAnon" (formula "7") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "selectOfAnon" (formula "8") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "8") (term "0,1,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "8") (term "0,1,0,1,0"))
         (rule "replace_known_right" (formula "8") (term "1,0,1,0,1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "12")))
         (rule "selectOfAnon" (formula "9") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "9") (term "0,1,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "9") (term "0,1,0,1,0"))
         (rule "replace_known_right" (formula "9") (term "0,0,1,0,1,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")))
         (rule "selectOfAnon" (formula "6") (term "0,0"))
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "6") (term "0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "6") (term "0,0,0"))
         (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "13")))
         (rule "selectOfAnon" (formula "7") (term "0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "7") (term "0,0,0,0,0,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "7") (term "0,0,0,0,0,0,1,0"))
         (rule "replace_known_right" (formula "7") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "13")))
         (rule "selectOfAnon" (formula "8") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "selectOfAnon" (formula "9") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "selectOfAnon" (formula "7") (term "1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "7") (term "0,1,0,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "7") (term "0,1,0,0,1,0"))
         (rule "replace_known_right" (formula "7") (term "1,0,1,0,0,1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "12")))
         (rule "selectOfAnon" (formula "8") (term "0,1,1,1,0,0"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "8") (term "0,0,1,1,1,0,0"))
         (rule "sortsDisjointModuloNull" (formula "8") (term "0,0,1,1,1,0,0"))
         (rule "replace_known_right" (formula "8") (term "1,0,0,1,1,1,0,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "12")))
         (rule "nnf_imp2or" (formula "14") (term "0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "7") (term "0"))
         (rule "nnf_imp2or" (formula "8") (term "0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "14") (term "0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_imp2or" (formula "14") (term "0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0,1,1,1,1,0,0,1,1,0,1,1,0,1"))
         (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "10") (term "1") (inst "sk=sk_6") (inst "S=_var4") (ifseqformula "3"))
         (branch "Use Axiom"
            (rule "selectOfAnon" (formula "10") (term "1,1"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
            (rule "eqSymm" (formula "10") (term "0,1,1"))
            (rule "sortsDisjointModuloNull" (formula "10") (term "0,1,1"))
            (rule "replace_known_right" (formula "10") (term "0,0,1,1") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")))
            (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "10") (term "0") (inst "sk=sk_7") (inst "S=_var5") (ifseqformula "3"))
            (branch "Use Axiom"
               (rule "methodCallThrow" (formula "14") (term "1,0,0,1,1,0,1"))
               (rule "less_equal_than_comparison_new" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "assignment" (formula "14") (term "1,1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "assignment" (formula "14") (term "1,2"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0"))
               (rule "arrayLengthNotNegative" (formula "6") (term "0"))
               (rule "ifUnfold" (formula "15") (term "1,1,0,1,2") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "15") (term "1,1,0,1,2") (newnames "x_1"))
               (rule "ifUnfold" (formula "15") (term "1,1,0,1,1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "15") (term "1,1,0,1,1") (newnames "x_2"))
               (rule "ifthenelse_split_for" (formula "15"))
               (branch "j_1_0 >= i_1_0 TRUE"
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "methodCallEmpty" (formula "15") (term "1"))
                  (rule "emptyModality" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "less_equal_than_comparison_new" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "assignment" (formula "15") (term "1,2"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "assignment" (formula "15") (term "1,1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0"))
                  (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "ifSplit" (formula "15"))
                  (branch "if x_2 true"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_3"))
                     (rule "compound_assignment_2" (formula "15") (term "1") (inst "#v=x_4"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_4"))
                     (rule "assignment_array2" (formula "15"))
                     (branch "Normal Execution (a != null)"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "selectOfAnon" (formula "15") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "selectOfAnon" (formula "15") (term "0,0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "eqSymm" (formula "15") (term "0,0,0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "15") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "replace_known_left" (formula "15") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "sortsDisjointModuloNull" (formula "15") (term "0,0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "15") (term "0,0,0,0,0,0,1,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "selectOfAnon" (formula "15") (term "1,0,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "eqSymm" (formula "15") (term "0,0,1,0,1,0"))
                        (rule "replace_known_left" (formula "15") (term "0,1,1,0,1,0,1,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "sortsDisjointModuloNull" (formula "15") (term "0,1,0,1,0"))
                        (rule "replace_known_right" (formula "15") (term "0,0,1,0,1,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "compound_assignment_1" (formula "15") (term "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "ifElseSplit" (formula "16"))
                        (branch "if x_4 true"
                           (builtin "One Step Simplification" (formula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "assignment" (formula "17") (term "1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "allLeft" (formula "13") (inst "t=i_1_0"))
                           (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0"))
                           (rule "qeq_literals" (formula "13") (term "0,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "1"))
                           (rule "eqSymm" (formula "13") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0"))
                           (rule "leq_literals" (formula "13") (term "0,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "ifElse" (formula "18") (term "1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_5"))
                           (rule "assignment_array2" (formula "18"))
                           (branch "Normal Execution (a != null)"
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfAnon" (formula "18") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfAnon" (formula "18") (term "1,2,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "eqSymm" (formula "18") (term "0,0,1,2,0,1,0"))
                              (rule "replace_known_left" (formula "18") (term "0,1,1,0,1,2,0,1,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "sortsDisjointModuloNull" (formula "18") (term "0,1,2,0,1,0"))
                              (rule "replace_known_right" (formula "18") (term "0,0,1,2,0,1,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfAnon" (formula "18") (term "0,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "eqSymm" (formula "18") (term "0,0,0,0,0,0,1,0"))
                              (rule "replace_known_left" (formula "18") (term "0,1,1,0,0,0,0,0,1,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "sortsDisjointModuloNull" (formula "18") (term "0,0,0,0,0,1,0"))
                              (rule "replace_known_right" (formula "18") (term "0,0,0,0,0,0,1,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfAnon" (formula "18") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "eqSymm" (formula "18") (term "0,0,1,0,1,0"))
                              (rule "replace_known_left" (formula "18") (term "0,1,1,0,1,0,1,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "sortsDisjointModuloNull" (formula "18") (term "0,1,0,1,0"))
                              (rule "replace_known_right" (formula "18") (term "0,0,1,0,1,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "ifElse" (formula "18") (term "1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "assignmentSubtractionInt" (formula "18") (term "1,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "translateJavaSubInt" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "18") (term "0,1,0,1"))
                              (rule "mul_literals" (formula "18") (term "1,0,1,0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,1,0,1"))
                              (rule "ifthenelse_split_for" (formula "18"))
                              (branch " boolean::select(anonHeap_loop, self_1.a, arr(j_1_0)) = TRUE TRUE"
                                 (rule "tryEmpty" (formula "19") (term "1"))
                                 (rule "methodCallEmpty" (formula "19") (term "1"))
                                 (rule "emptyModality" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "9")))
                                 (rule "eqSymm" (formula "19") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0,0,1,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "1,1,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,1,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,1,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0,0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,1,1,0,0,0,1,1,1,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "1,1,0,0,0,1,1,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1,1"))
                                 (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,1"))
                                 (rule "add_literals" (formula "19") (term "1,0,1,1"))
                                 (rule "times_zero_1" (formula "19") (term "0,1,1"))
                                 (rule "leq_literals" (formula "19") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0,1,0"))
                                 (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "selectOfAnon" (formula "19") (term "1,0,1,0,0,1,1,0"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                                 (rule "eqSymm" (formula "19") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "19") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "19") (term "0,0,1,0,1,0,0,1,1,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
                                 (rule "selectOfAnon" (formula "19") (term "1,0,1,0,0,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                                 (rule "eqSymm" (formula "19") (term "0,1,0,1,0,0,1,1,1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "19") (term "0,1,0,1,0,0,1,1,1,0"))
                                 (rule "replace_known_right" (formula "19") (term "0,0,1,0,1,0,0,1,1,1,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
                                 (rule "selectOfAnon" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                                 (rule "eqSymm" (formula "19") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "19") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "replace_known_right" (formula "19") (term "1,0,1,0,0,1,0,0,1,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")))
                                 (rule "selectOfAnon" (formula "19") (term "0,1,0,0,1,1,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "selectOfAnon" (formula "19") (term "0,1,1,0,0,0,1,1,0"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                                 (rule "eqSymm" (formula "19") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "19") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "19") (term "0,0,0,1,1,0,0,0,1,1,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
                                 (rule "selectOfAnon" (formula "19") (term "0,0,1,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "12")))
                                 (rule "selectOfAnon" (formula "19") (term "0,1,0,0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "selectOfAnon" (formula "19") (term "0,1,0,0,1,1,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "selectOfAnon" (formula "19") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                                 (rule "eqSymm" (formula "19") (term "0,0,0,0,0"))
                                 (rule "sortsDisjointModuloNull" (formula "19") (term "0,0,0,0,0"))
                                 (rule "replace_known_right" (formula "19") (term "0,0,0,0,0,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
                                 (rule "inEqSimp_subsumption1" (formula "19") (term "0,0") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "19") (term "0,1,1,0") (inst "sk=sk_16") (inst "S=_var13") (ifseqformula "7"))
                                 (branch "Use Axiom"
                                    (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "19") (term "1,1,1,0") (inst "sk=sk_17") (inst "S=_var14") (ifseqformula "7"))
                                    (branch "Use Axiom"
                                       (rule "selectOfAnon" (formula "19") (term "1,1,1,1,0"))
                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                                       (rule "eqSymm" (formula "19") (term "0,1,1,1,1,0"))
                                       (rule "sortsDisjointModuloNull" (formula "19") (term "0,1,1,1,1,0"))
                                       (rule "replace_known_right" (formula "19") (term "0,0,1,1,1,1,0") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")) (ifInst ""  (formula "16")))
                                       (rule "andRight" (formula "19"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "19"))
                                          (branch "Case 1"
                                             (rule "allRight" (formula "19") (inst "sk=m_6"))
                                             (rule "orRight" (formula "19"))
                                             (rule "orRight" (formula "19"))
                                             (rule "inEqSimp_leqRight" (formula "19"))
                                             (rule "inEqSimp_geqRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1"))
                                             (rule "allLeft" (formula "17") (inst "t=j_1_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,1,0"))
                                             (rule "leq_literals" (formula "17") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "3"))
                                             (rule "eqSymm" (formula "17") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                             (rule "leq_literals" (formula "17") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "allLeft" (formula "15") (inst "t=m_6"))
                                             (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                             (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                             (rule "leq_literals" (formula "15") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "15"))
                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "15"))
                                             (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                             (rule "add_literals" (formula "15") (term "1,0"))
                                             (rule "times_zero_1" (formula "15") (term "0"))
                                             (rule "qeq_literals" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "1"))
                                             (rule "close" (formula "22") (ifseqformula "3"))
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "19") (inst "sk=m_5"))
                                             (rule "orRight" (formula "19"))
                                             (rule "orRight" (formula "19"))
                                             (rule "inEqSimp_leqRight" (formula "19"))
                                             (rule "inEqSimp_geqRight" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "allLeft" (formula "17") (inst "t=m_5"))
                                             (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                             (rule "leq_literals" (formula "17") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "17"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_literals" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "19") (inst "sk=f_3"))
                                          (rule "allRight" (formula "19") (inst "sk=o_3"))
                                          (rule "orRight" (formula "19"))
                                          (rule "orRight" (formula "19"))
                                          (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")))
                                          (rule "closeTrue" (formula "21"))
                                       )
                                    )
                                    (branch "Show Axiom Satisfiability"
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "instanceof_static_type" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "closeTrue" (formula "19"))
                                    )
                                 )
                                 (branch "Show Axiom Satisfiability"
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "instanceof_static_type" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "closeTrue" (formula "19"))
                                 )
                              )
                              (branch " boolean::select(anonHeap_loop, self_1.a, arr(j_1_0)) = TRUE FALSE"
                                 (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_swap,exc_3,heapAfter_swap,anonHeap_swap") (contract "JML normal_behavior operation contract [id: 1 / TwoWaySwap::swap]"))
                                 (branch "Post (swap)"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "eqSymm" (formula "20"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "selectOfAnon" (formula "17") (term "0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "17") (term "0,0,0,1,0"))
                                    (rule "sortsDisjointModuloNull" (formula "17") (term "0,0,0,1,0"))
                                    (rule "replace_known_right" (formula "17") (term "0,0,0,0,1,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")))
                                    (rule "selectOfAnon" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "selectOfAnon" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "selectOfAnon" (formula "17") (term "0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "17") (term "0,0,1,1,0"))
                                    (rule "sortsDisjointModuloNull" (formula "17") (term "0,0,1,1,0"))
                                    (rule "replace_known_right" (formula "17") (term "0,0,0,1,1,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")))
                                    (rule "selectOfAnon" (formula "20") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "20") (term "0,0,0,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "20") (term "0,0,0,0,0"))
                                    (rule "replace_known_right" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
                                    (rule "selectOfAnon" (formula "19") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "19") (term "0,0,0,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "19") (term "0,0,0,0,0"))
                                    (rule "replace_known_right" (formula "19") (term "0,0,0,0,0,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                    (rule "selectOfAnon" (formula "20") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "20") (term "0,1,0"))
                                    (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0"))
                                    (rule "replace_known_right" (formula "20") (term "1,0,1,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
                                    (rule "eqSymm" (formula "20"))
                                    (rule "applyEq" (formula "20") (term "1") (ifseqformula "1"))
                                    (rule "selectOfAnon" (formula "19") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "19") (term "0,1,0"))
                                    (rule "sortsDisjointModuloNull" (formula "19") (term "0,1,0"))
                                    (rule "replace_known_right" (formula "19") (term "0,0,1,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "apply_eq_boolean" (formula "19") (term "1") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "selectOfAnonEQ" (formula "19") (term "1,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "selectOfAnonEQ" (formula "22") (term "1,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "selectOfAnon" (formula "19") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "19") (term "0,2,1,0"))
                                    (rule "sortsDisjointModuloNull" (formula "19") (term "0,2,1,0"))
                                    (rule "replace_known_right" (formula "19") (term "1,0,2,1,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")))
                                    (rule "elementOfUnion" (formula "22") (term "0,1,0"))
                                    (rule "elementOfSingleton" (formula "22") (term "1,0,1,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "elementOfSingleton" (formula "22") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "elementOfUnion" (formula "19") (term "0,1,0"))
                                    (rule "elementOfSingleton" (formula "19") (term "0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "elementOfSingleton" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "selectOfAnon" (formula "22") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "22") (term "0,1,0"))
                                    (rule "sortsDisjointModuloNull" (formula "22") (term "0,1,0"))
                                    (rule "replace_known_right" (formula "22") (term "1,0,1,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "23")))
                                    (rule "selectOfAnonEQ" (formula "22") (term "0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
                                    (rule "selectOfAnonEQ" (formula "19") (term "0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
                                    (rule "elementOfUnion" (formula "22") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "22") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "elementOfUnion" (formula "19") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "19") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "assignmentAdditionInt" (formula "26") (term "1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
                                    (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "20") (term "1") (inst "sk=sk_11") (inst "S=_var8") (ifseqformula "6"))
                                    (branch "Use Axiom"
                                       (rule "selectOfAnonEQ" (formula "20") (term "1,1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                       (rule "eqSymm" (formula "20"))
                                       (rule "selectOfAnon" (formula "20") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                       (rule "eqSymm" (formula "20") (term "0,2,1,0"))
                                       (rule "sortsDisjointModuloNull" (formula "20") (term "0,2,1,0"))
                                       (rule "replace_known_right" (formula "20") (term "0,0,2,1,0") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")))
                                       (rule "elementOfUnion" (formula "20") (term "0,1,0"))
                                       (rule "elementOfSingleton" (formula "20") (term "1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "elementOfSingleton" (formula "20") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "eqSymm" (formula "20"))
                                       (rule "Class_invariant_axiom_for_TwoWaySwap" (formula "21") (inst "sk=sk_12") (ifseqformula "6"))
                                       (branch "Use Axiom"
                                          (rule "notLeft" (formula "21"))
                                          (rule "selectOfAnonEQ" (formula "21") (term "0") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                          (rule "selectOfAnon" (formula "21") (term "2,0"))
                                          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                          (rule "eqSymm" (formula "21") (term "0,2,0"))
                                          (rule "sortsDisjointModuloNull" (formula "21") (term "0,2,0"))
                                          (rule "replace_known_right" (formula "21") (term "0,0,2,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
                                          (rule "elementOfUnion" (formula "21") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "21") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "elementOfSingleton" (formula "21") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "23")))
                                          (rule "false_right" (formula "21"))
                                          (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "20") (term "0,0") (inst "sk=sk_13") (inst "S=_var9") (ifseqformula "6"))
                                          (branch "Use Axiom"
                                             (rule "selectOfAnon" (formula "20") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "20") (term "0,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0,0"))
                                             (rule "replace_known_right" (formula "20") (term "0,0,1,0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")))
                                             (rule "assignmentSubtractionInt" (formula "25") (term "1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "translateJavaSubInt" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_elimSub" (formula "25") (term "0,1,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
                                             (rule "tryEmpty" (formula "25") (term "1"))
                                             (rule "methodCallEmpty" (formula "25") (term "1"))
                                             (rule "emptyModality" (formula "25") (term "1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "eqSymm" (formula "25") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "25") (term "1,0,0,1,1,1,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,1,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,1,1,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,1"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,1"))
                                             (rule "add_zero_left" (formula "25") (term "1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "1,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,0,0,0,1,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,0,0,0,1,1,1,1,1,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "1,0,0,0,0,1,1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,1,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0,0,1,1,1,1,1,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,1,0,0,0,1,1,1,1,1,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "1,1,0,0,0,1,1,1,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,1,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,1,1,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,1,1"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1,1,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,1,1,1"))
                                             (rule "add_zero_left" (formula "25") (term "0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,1,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,1,1"))
                                             (rule "mul_literals" (formula "25") (term "0,0,1,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,1"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,1,1"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,1,1"))
                                             (rule "add_zero_right" (formula "25") (term "0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0,1,1"))
                                             (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,1,1"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,1,1"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,1,1"))
                                             (rule "add_zero_right" (formula "25") (term "0,1,1"))
                                             (rule "leq_literals" (formula "25") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                                             (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,0") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "25") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "1,0,1,0,0,1,1,1,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "elementOfUnion" (formula "25") (term "0,1,0,1,0,0,1,1,1,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,1,0,1,0,0,1,1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,1,0,1,0,0,1,1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnon" (formula "25") (term "1,0,1,0,0,1,1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,1,0,1,0,0,1,1,1,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,1,0,1,0,0,1,1,1,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,1,0,1,0,0,1,1,1,1,0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                                             (rule "selectOfAnonEQ" (formula "25") (term "0,1,0,0,1,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnon" (formula "25") (term "2,0,1,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,0,1,0,0,1,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,0,0,1,0,0,1,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,1,0,0,1,0"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "0,1,0,0,1,1,1,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,1,0,0,1,1,1,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,1,0,0,1,1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,1,0,0,1,1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnon" (formula "25") (term "2,0,1,0,0,1,1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "1,0,1,0,0,1,1,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "elementOfUnion" (formula "25") (term "0,1,0,1,0,0,1,1,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,1,0,1,0,0,1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,1,0,1,0,0,1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnon" (formula "25") (term "1,0,1,0,0,1,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,1,0,1,0,0,1,1,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,1,0,1,0,0,1,1,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,1,0,1,0,0,1,1,1,0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                                             (rule "selectOfAnonEQ" (formula "25") (term "0,0,1,0,0,1,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,0,1,0,0,1,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnon" (formula "25") (term "2,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "0,0,1,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "selectOfAnon" (formula "25") (term "2,0,0,1,0,0,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,2,0,0,1,0,0,0,0,1,0,0,1,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,2,0,0,1,0,0,0,0,1,0,0,1,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,2,0,0,1,0,0,0,0,1,0,0,1,1,0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,1,0,0,0,0,1,0,0,1,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,1,0,0,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "1,0,0,1,1,0,2,0,0,1,0,0,1,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "elementOfUnion" (formula "25") (term "0,1,0,0,1,1,0,2,0,0,1,0,0,1,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,1,0,0,1,1,0,2,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,1,0,0,1,1,0,2,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnon" (formula "25") (term "1,0,0,1,1,0,2,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,1,0,0,1,1,0,2,0,0,1,0,0,1,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,1,0,0,1,1,0,2,0,0,1,0,0,1,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,1,0,0,1,1,0,2,0,0,1,0,0,1,1,0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")))
                                             (rule "selectOfAnonEQ" (formula "25") (term "0,0,0,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "selectOfAnon" (formula "25") (term "2,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,2,0,0,0,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,2,0,0,0,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "0,0,2,0,0,0,0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "25") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "1,1,0,0,1,0,0,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "selectOfAnon" (formula "25") (term "2,1,1,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,2,1,1,0,0,1,0,0,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,2,1,1,0,0,1,0,0,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,2,1,1,0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                                             (rule "elementOfUnion" (formula "25") (term "0,1,1,0,0,1,0,0,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,1,1,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,1,1,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "1,2,2,0,0,1,0,0,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "elementOfUnion" (formula "25") (term "0,1,2,2,0,0,1,0,0,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,1,2,2,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,1,2,2,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnon" (formula "25") (term "1,2,2,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,1,2,2,0,0,1,0,0,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,1,2,2,0,0,1,0,0,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,1,2,2,0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                                             (rule "selectOfAnonEQ" (formula "25") (term "0,1,1,0,0,0,1,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "selectOfAnon" (formula "25") (term "2,0,1,1,0,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,2,0,1,1,0,0,0,1,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,2,0,1,1,0,0,0,1,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "0,0,2,0,1,1,0,0,0,1,1,0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,1,1,0,0,0,1,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,1,1,0,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,1,1,0,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "selectOfAnon" (formula "25") (term "2,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,2,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,2,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "0,0,2,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
                                             (rule "elementOfUnion" (formula "25") (term "0,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,1,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "2")))
                                             (rule "selectOfAnonEQ" (formula "25") (term "1,1,2,0,0,1,0,0,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "selectOfAnon" (formula "25") (term "2,1,1,2,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,2,1,1,2,0,0,1,0,0,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,2,1,1,2,0,0,1,0,0,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "0,0,2,1,1,2,0,0,1,0,0,1,0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
                                             (rule "elementOfUnion" (formula "25") (term "0,1,1,2,0,0,1,0,0,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,1,1,2,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,1,1,2,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "0,0,0,0,0,0,1,0,0,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "selectOfAnon" (formula "25") (term "2,0,0,0,0,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,2,0,0,0,0,0,0,1,0,0,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,2,0,0,0,0,0,0,1,0,0,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,2,0,0,0,0,0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0,0,0,1,0,0,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,0,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,0,0,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnonEQ" (formula "25") (term "0,0,2,0,0,1,0,0,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,2,0,0,1,0,0,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,2,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,2,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "selectOfAnon" (formula "25") (term "0,0,2,0,0,1,0,0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")) (ifInst ""  (formula "5")))
                                             (rule "eqSymm" (formula "25") (term "0,0,0,2,0,0,1,0,0,1,0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "25") (term "0,0,0,2,0,0,1,0,0,1,0,0"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,0,0,2,0,0,1,0,0,1,0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                                             (rule "selectOfAnonEQ" (formula "25") (term "0,1,0,0,1,1,0,0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")))
                                             (rule "selectOfAnon" (formula "25") (term "2,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,1,0,0,1,1,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfSingleton" (formula "25") (term "0,0,0,1,0,0,1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "14") (inst "t=j_1_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "14") (term "0,1,0"))
                                             (rule "leq_literals" (formula "14") (term "1,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "apply_eq_boolean" (formula "14") (term "0,1") (ifseqformula "25"))
                                             (rule "eqSymm" (formula "14") (term "1"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                             (rule "leq_literals" (formula "14") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "20") (inst "iv=_var10"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                             (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "26") (term "1,1,1,1,1,0,0") (inst "sk=sk_14") (inst "S=_var11") (ifseqformula "6"))
                                             (branch "Use Axiom"
                                                (rule "selectOfAnonEQ" (formula "26") (term "1,1,1,1,1,1,0,0") (ifseqformula "17"))
                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                                (rule "elementOfUnion" (formula "26") (term "0,1,1,1,1,1,1,0,0"))
                                                (rule "elementOfSingleton" (formula "26") (term "0,0,1,1,1,1,1,1,0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "elementOfSingleton" (formula "26") (term "0,1,1,1,1,1,1,0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "selectOfAnon" (formula "26") (term "1,1,1,1,1,1,0,0"))
                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
                                                (rule "eqSymm" (formula "26") (term "0,1,1,1,1,1,1,0,0"))
                                                (rule "sortsDisjointModuloNull" (formula "26") (term "0,1,1,1,1,1,1,0,0"))
                                                (rule "replace_known_right" (formula "26") (term "0,0,1,1,1,1,1,1,0,0") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")))
                                                (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "26") (term "0,1,1,1,1,0,0") (inst "sk=sk_15") (inst "S=_var12") (ifseqformula "6"))
                                                (branch "Use Axiom"
                                                   (rule "cut_direct" (formula "26") (term "0,0,0"))
                                                   (branch "CUT: j_1_0 >= 1 + i_1_0 TRUE"
                                                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")))
                                                      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "cut_direct" (formula "26") (term "1,1,1,0"))
                                                      (branch "CUT: seqPerm(array2seq(heap, self_1.a), array2seq(heapAfter_swap, self_1.a)) TRUE"
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "andRight" (formula "27"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "27"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "27") (inst "sk=m_4"))
                                                               (rule "orRight" (formula "27"))
                                                               (rule "notRight" (formula "28"))
                                                               (rule "orRight" (formula "28"))
                                                               (rule "inEqSimp_leqRight" (formula "28"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "29"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                               (rule "times_zero_1" (formula "2") (term "0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "0"))
                                                               (rule "ifthenelse_split" (formula "3") (term "0"))
                                                               (branch "m_4 = i_1_0 | m_4 = j_1_0 TRUE"
                                                                  (rule "cut_direct" (formula "3") (term "1"))
                                                                  (branch "CUT: m_4 = j_1_0 TRUE"
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "3"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0"))
                                                                     (rule "leq_literals" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "CUT: m_4 = j_1_0 FALSE"
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "3"))
                                                                     (rule "close" (formula "28") (ifseqformula "4"))
                                                                  )
                                                               )
                                                               (branch "m_4 = i_1_0 | m_4 = j_1_0 FALSE"
                                                                  (rule "orRight" (formula "25"))
                                                                  (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "25"))
                                                                  (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "25") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "25") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "false_right" (formula "25"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "mul_literals" (formula "2") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "allLeft" (formula "15") (inst "t=m_4"))
                                                                  (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "15") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "15"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "andRight" (formula "27"))
                                                               (branch "Case 1"
                                                                  (rule "allRight" (formula "27") (inst "sk=m_3"))
                                                                  (rule "orRight" (formula "27"))
                                                                  (rule "orRight" (formula "27"))
                                                                  (rule "inEqSimp_geqRight" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_leqRight" (formula "28"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "ifthenelse_split" (formula "29") (term "0"))
                                                                  (branch "m_3 = i_1_0 | m_3 = j_1_0 TRUE"
                                                                     (rule "cut_direct" (formula "1") (term "1"))
                                                                     (branch "CUT: m_3 = j_1_0 TRUE"
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                                                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "0"))
                                                                        (rule "leq_literals" (formula "2"))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "1"))
                                                                        (rule "close" (formula "28") (ifseqformula "21"))
                                                                     )
                                                                     (branch "CUT: m_3 = j_1_0 FALSE"
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "1"))
                                                                        (rule "eqSymm" (formula "25"))
                                                                        (rule "applyEqRigid" (formula "31") (term "0,2,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "2"))
                                                                        (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "5"))
                                                                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "25") (term "0,0"))
                                                                        (rule "leq_literals" (formula "25") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "false_right" (formula "25"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "5"))
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0"))
                                                                        (rule "leq_literals" (formula "2"))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                  )
                                                                  (branch "m_3 = i_1_0 | m_3 = j_1_0 FALSE"
                                                                     (rule "orRight" (formula "29"))
                                                                     (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "30"))
                                                                     (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                                     (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "30") (term "0,0"))
                                                                     (rule "leq_literals" (formula "30") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "false_right" (formula "30"))
                                                                     (rule "allLeft" (formula "15") (inst "t=m_3"))
                                                                     (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "15") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "15") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "15"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0"))
                                                                     (rule "leq_literals" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "allRight" (formula "27") (inst "sk=m_2"))
                                                                  (rule "orRight" (formula "27"))
                                                                  (rule "orRight" (formula "27"))
                                                                  (rule "inEqSimp_geqRight" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_leqRight" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "29") (term "0,0,0") (ifseqformula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "29") (term "0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_contradEq3" (formula "29") (term "0,0") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                                  (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "5") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "allLeft" (formula "17") (inst "t=m_2"))
                                                                  (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "17") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "17"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "0"))
                                                                  (rule "leq_literals" (formula "2"))
                                                                  (rule "closeFalse" (formula "2"))
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "27") (inst "sk=f_2"))
                                                            (rule "allRight" (formula "27") (inst "sk=o_2"))
                                                            (rule "orRight" (formula "27"))
                                                            (rule "orRight" (formula "27"))
                                                            (rule "replace_known_right" (formula "29") (term "1,0,2,0") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")))
                                                            (rule "ifthenelse_split" (formula "29") (term "0,0,1,0,0"))
                                                            (branch "o_2.<created> = TRUE TRUE"
                                                               (builtin "One Step Simplification" (formula "30"))
                                                               (rule "closeTrue" (formula "30"))
                                                            )
                                                            (branch "o_2.<created> = TRUE FALSE"
                                                               (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "29"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "notRight" (formula "28"))
                                                               (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "30"))
                                                               (rule "closeTrue" (formula "30"))
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: seqPerm(array2seq(heap, self_1.a), array2seq(heapAfter_swap, self_1.a)) FALSE"
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "false_right" (formula "27"))
                                                         (rule "permOfSwap2EQ" (formula "26") (ifseqformula "15") (ifseqformula "20"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "0,1"))
                                                         (rule "lenOfArr2Seq" (formula "26") (term "0,0,0"))
                                                         (rule "lenOfArr2Seq" (formula "26") (term "0,1"))
                                                         (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "10"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "cut_direct" (formula "26") (term "1"))
                                                         (branch "CUT: j_1_0 >= 0 TRUE"
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_geqRight" (formula "27"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "3"))
                                                            (rule "andLeft" (formula "12"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0"))
                                                            (rule "leq_literals" (formula "12"))
                                                            (rule "closeFalse" (formula "12"))
                                                         )
                                                         (branch "CUT: j_1_0 >= 0 FALSE"
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "false_right" (formula "27"))
                                                            (rule "inEqSimp_geqRight" (formula "26"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "closeFalse" (formula "10"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: j_1_0 >= 1 + i_1_0 FALSE"
                                                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")))
                                                      (rule "false_right" (formula "27"))
                                                      (rule "inEqSimp_geqRight" (formula "26"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "23") (term "0,2,0") (ifseqformula "4"))
                                                      (rule "close" (formula "23") (ifseqformula "15"))
                                                   )
                                                )
                                                (branch "Show Axiom Satisfiability"
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "instanceof_static_type" (formula "26") (term "0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "closeTrue" (formula "26"))
                                                )
                                             )
                                             (branch "Show Axiom Satisfiability"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "instanceof_static_type" (formula "26") (term "0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "closeTrue" (formula "26"))
                                             )
                                          )
                                          (branch "Show Axiom Satisfiability"
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "instanceof_static_type" (formula "21") (term "0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "closeTrue" (formula "21"))
                                          )
                                       )
                                       (branch "Show Axiom Satisfiability"
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "closeTrue" (formula "22"))
                                       )
                                    )
                                    (branch "Show Axiom Satisfiability"
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "instanceof_static_type" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "closeTrue" (formula "22"))
                                    )
                                 )
                                 (branch "Exceptional Post (swap)"
                                    (builtin "One Step Simplification" (formula "17"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "selectCreatedOfAnonEQ" (formula "18") (term "0,1,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "close" (formula "21") (ifseqformula "20"))
                                 )
                                 (branch "Pre (swap)"
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "8")))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                                    (rule "selectOfAnon" (formula "19") (term "0,0,1,1,0,0"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "19") (term "0,0,0,1,1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "19") (term "0,0,0,1,1,0,0"))
                                    (rule "replace_known_right" (formula "19") (term "0,0,0,0,1,1,0,0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")) (ifInst ""  (formula "10")))
                                    (rule "selectOfAnon" (formula "19") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")) (ifInst ""  (formula "5")))
                                    (rule "eqSymm" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "replace_known_right" (formula "19") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")))
                                    (rule "Class_invariant_axiom_for_TwoWaySwap" (formula "19") (term "1,0") (inst "sk=sk_10") (ifseqformula "6"))
                                    (branch "Use Axiom"
                                       (rule "selectOfAnon" (formula "19") (term "0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")) (ifInst ""  (formula "5")))
                                       (rule "eqSymm" (formula "19") (term "0,0,0,1,0"))
                                       (rule "sortsDisjointModuloNull" (formula "19") (term "0,0,0,1,0"))
                                       (rule "replace_known_right" (formula "19") (term "1,0,0,0,1,0") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                       (rule "allLeft" (formula "14") (inst "t=j_1_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,0"))
                                       (rule "leq_literals" (formula "14") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "apply_eq_boolean" (formula "14") (term "0,1") (ifseqformula "19"))
                                       (rule "eqSymm" (formula "14") (term "1"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "notLeft" (formula "14"))
                                       (rule "cut_direct" (formula "20") (term "1,0"))
                                       (branch "CUT: j_1_0 >= 0 TRUE"
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "cut_direct" (formula "21") (term "0"))
                                          (branch "CUT: self_1.a.length >= 1 + i_1_0 TRUE"
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "wellFormedAnon" (formula "22"))
                                             (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                                             (rule "closeTrue" (formula "22"))
                                          )
                                          (branch "CUT: self_1.a.length >= 1 + i_1_0 FALSE"
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "false_right" (formula "22"))
                                             (rule "inEqSimp_geqRight" (formula "21"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "11") (term "0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "5"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0"))
                                             (rule "add_zero_right" (formula "12") (term "0"))
                                             (rule "leq_literals" (formula "12"))
                                             (rule "closeFalse" (formula "12"))
                                          )
                                       )
                                       (branch "CUT: j_1_0 >= 0 FALSE"
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "false_right" (formula "21"))
                                          (rule "inEqSimp_geqRight" (formula "20"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "closeFalse" (formula "10"))
                                       )
                                    )
                                    (branch "Show Axiom Satisfiability"
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "closeTrue" (formula "19"))
                                    )
                                 )
                              )
                           )
                           (branch "Null Reference (a = null)"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "false_right" (formula "19"))
                              (rule "selectOfAnon" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (a != null, but j_1 Out of Bounds!)"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "false_right" (formula "19"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "selectOfAnon" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "6")))
                              (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "10") (term "0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "closeFalse" (formula "10"))
                           )
                        )
                        (branch "if x_4 false"
                           (builtin "One Step Simplification" (formula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "assignment" (formula "17") (term "1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "allLeft" (formula "12") (inst "t=i_1_0"))
                           (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0"))
                           (rule "qeq_literals" (formula "12") (term "0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                           (rule "apply_eq_boolean" (formula "12") (term "0,1") (ifseqformula "15"))
                           (rule "eqSymm" (formula "12") (term "1"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0"))
                           (rule "leq_literals" (formula "12") (term "0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "notLeft" (formula "12"))
                           (rule "ifElseSplit" (formula "18"))
                           (branch "if x_3 true"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignmentAdditionInt" (formula "18") (term "1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "translateJavaAddInt" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,1,0"))
                              (rule "tryEmpty" (formula "18") (term "1"))
                              (rule "methodCallEmpty" (formula "18") (term "1"))
                              (rule "emptyModality" (formula "18") (term "1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "eqSymm" (formula "18") (term "1,0,0,1,1,1,1,1,0,0"))
                              (rule "eqSymm" (formula "18") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,1,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,0,1,1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,1,0,1,1,0,0"))
                              (rule "add_zero_left" (formula "18") (term "1,0,1,1,0,0"))
                              (rule "replace_known_left" (formula "18") (term "0,1,1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,0,0,0,0,1,1,1,1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,1,0,0,0,0,1,1,1,1,0,0"))
                              (rule "add_zero_left" (formula "18") (term "1,0,0,0,0,1,1,1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1,1,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1,0,1"))
                              (rule "add_literals" (formula "18") (term "0,1,0,1"))
                              (rule "add_zero_left" (formula "18") (term "1,0,1"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1"))
                              (rule "add_literals" (formula "18") (term "1,0,1"))
                              (rule "times_zero_1" (formula "18") (term "0,1"))
                              (rule "leq_literals" (formula "18") (term "1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "7"))
                              (rule "leq_literals" (formula "18") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfAnon" (formula "18") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "4")))
                              (rule "eqSymm" (formula "18") (term "0,0,0,0,0"))
                              (rule "sortsDisjointModuloNull" (formula "18") (term "0,0,0,0,0"))
                              (rule "replace_known_right" (formula "18") (term "1,0,0,0,0,0") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")) (ifInst ""  (formula "9")))
                              (rule "selectOfAnon" (formula "18") (term "1,0,1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "4")))
                              (rule "eqSymm" (formula "18") (term "0,1,0,1,0,0,1,0"))
                              (rule "sortsDisjointModuloNull" (formula "18") (term "0,1,0,1,0,0,1,0"))
                              (rule "replace_known_right" (formula "18") (term "0,0,1,0,1,0,0,1,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                              (rule "selectOfAnon" (formula "18") (term "1,0,0,1,0,0,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "4")))
                              (rule "eqSymm" (formula "18") (term "0,1,0,0,1,0,0,0"))
                              (rule "sortsDisjointModuloNull" (formula "18") (term "0,1,0,0,1,0,0,0"))
                              (rule "replace_known_right" (formula "18") (term "1,0,1,0,0,1,0,0,0") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")))
                              (rule "selectOfAnon" (formula "18") (term "0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfAnon" (formula "18") (term "0,1,1,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "4")))
                              (rule "eqSymm" (formula "18") (term "0,0,1,1,0,0,0,1,0"))
                              (rule "sortsDisjointModuloNull" (formula "18") (term "0,0,1,1,0,0,0,1,0"))
                              (rule "replace_known_right" (formula "18") (term "0,0,0,1,1,0,0,0,1,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                              (rule "selectOfAnon" (formula "18") (term "0,0,1,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfAnon" (formula "18") (term "0,1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "11")))
                              (rule "selectOfAnon" (formula "18") (term "1,0,1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "4")))
                              (rule "eqSymm" (formula "18") (term "0,1,0,1,0,0,1,0"))
                              (rule "sortsDisjointModuloNull" (formula "18") (term "0,1,0,1,0,0,1,0"))
                              (rule "replace_known_right" (formula "18") (term "1,0,1,0,1,0,0,1,0") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")))
                              (rule "selectOfAnon" (formula "18") (term "0,1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "18") (term "1,1,1,0") (inst "sk=sk_8") (inst "S=_var6") (ifseqformula "5"))
                              (branch "Use Axiom"
                                 (rule "selectOfAnon" (formula "18") (term "1,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")) (ifInst ""  (formula "4")))
                                 (rule "eqSymm" (formula "18") (term "0,1,1,1,1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "18") (term "0,1,1,1,1,0"))
                                 (rule "replace_known_right" (formula "18") (term "1,0,1,1,1,1,0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")))
                                 (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "18") (term "0,1,1,0") (inst "sk=sk_9") (inst "S=_var7") (ifseqformula "5"))
                                 (branch "Use Axiom"
                                    (rule "replace_known_left" (formula "18") (term "1,1,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "andRight" (formula "18"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "18"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "18") (inst "sk=m_1"))
                                          (rule "orRight" (formula "18"))
                                          (rule "notRight" (formula "19"))
                                          (rule "orRight" (formula "19"))
                                          (rule "inEqSimp_leqRight" (formula "19"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "20"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "2") (term "0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0"))
                                          (rule "allLeft" (formula "13") (inst "t=m_1"))
                                          (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "13") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "12"))
                                          (rule "close" (formula "19") (ifseqformula "2"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "18") (inst "sk=m_0"))
                                          (rule "orRight" (formula "18"))
                                          (rule "orRight" (formula "18"))
                                          (rule "inEqSimp_leqRight" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_geqRight" (formula "19"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "allLeft" (formula "14") (inst "t=m_0"))
                                          (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_contradInEq0" (formula "14") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,1"))
                                          (rule "leq_literals" (formula "14") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "3"))
                                          (rule "andLeft" (formula "14"))
                                          (rule "inEqSimp_homoInEq1" (formula "14"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0"))
                                          (rule "add_zero_right" (formula "14") (term "0"))
                                          (rule "leq_literals" (formula "14"))
                                          (rule "closeFalse" (formula "14"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "18") (inst "sk=f_1"))
                                       (rule "allRight" (formula "18") (inst "sk=o_1"))
                                       (rule "orRight" (formula "18"))
                                       (rule "orRight" (formula "18"))
                                       (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "18")))
                                       (rule "closeTrue" (formula "20"))
                                    )
                                 )
                                 (branch "Show Axiom Satisfiability"
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "instanceof_static_type" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeTrue" (formula "18"))
                                 )
                              )
                              (branch "Show Axiom Satisfiability"
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "instanceof_static_type" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "closeTrue" (formula "18"))
                              )
                           )
                           (branch "if x_3 false"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (a = null)"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "false_right" (formula "16"))
                        (rule "selectOfAnon" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "4")))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (a != null, but i_1 Out of Bounds!)"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "false_right" (formula "16"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectOfAnon" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "4")))
                        (rule "eqSymm" (formula "14") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "14") (term "0,0"))
                        (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
                        (rule "false_right" (formula "14"))
                        (rule "selectOfAnon" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "4")))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                        (rule "mul_literals" (formula "9") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "9"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "if x_2 false"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "j_1_0 >= i_1_0 FALSE"
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,0"))
                  (rule "times_zero_1" (formula "13") (term "0"))
                  (rule "leq_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEqRigid" (formula "15") (term "0,1,0,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "12"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "add_zero_left" (formula "7") (term "1"))
                  (rule "applyEq" (formula "15") (term "1,0,1,1,1,0,0") (ifseqformula "12"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,1,1,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,1,1,1,0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "15") (term "0,1,1,1,0,0"))
                  (rule "add_literals" (formula "15") (term "1,0,1,1,1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "0,1,1,1,0,0"))
                  (rule "applyEqRigid" (formula "10") (term "1,1,1,0,0") (ifseqformula "12"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "1,1,0,0"))
                  (rule "inEqSimp_or_tautInEq0" (formula "10") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "1,0,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "10") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "methodCallEmpty" (formula "14") (term "1"))
                  (rule "emptyModality" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "closeTrue" (formula "14"))
               )
            )
            (branch "Show Axiom Satisfiability"
               (builtin "One Step Simplification" (formula "12"))
               (rule "instanceof_static_type" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "closeTrue" (formula "12"))
            )
         )
         (branch "Show Axiom Satisfiability"
            (builtin "One Step Simplification" (formula "12"))
            (rule "instanceof_static_type" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "closeTrue" (formula "12"))
         )
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "5"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "10"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "b_1"))
         (rule "translateJavaUnaryMinusInt" (formula "7") (term "1"))
         (rule "neg_literal" (formula "7") (term "1"))
         (rule "translateJavaSubInt" (formula "7") (term "0"))
         (rule "polySimp_elimSub" (formula "7") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "7") (term "0"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0"))
         (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "selectOfAnon" (formula "8") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "selectOfAnon" (formula "9") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "selectOfAnon" (formula "10") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfAnon" (formula "6") (term "0,0"))
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "6") (term "0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "6") (term "0,0,0"))
         (rule "replace_known_right" (formula "6") (term "1,0,0,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "12")))
         (rule "selectOfAnon" (formula "8") (term "0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "8") (term "0,0,0,0,0,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "8") (term "0,0,0,0,0,0,1,0"))
         (rule "replace_known_right" (formula "8") (term "0,0,0,0,0,0,0,1,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "13")))
         (rule "selectOfAnon" (formula "9") (term "0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "9") (term "0,0,0,0,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "9") (term "0,0,0,0,0,1,0"))
         (rule "replace_known_right" (formula "9") (term "1,0,0,0,0,0,1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "12")))
         (rule "selectOfAnon" (formula "10") (term "0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "10") (term "0,0,0,0,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "10") (term "0,0,0,0,0,1,0"))
         (rule "replace_known_right" (formula "10") (term "0,0,0,0,0,0,1,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")))
         (rule "selectOfAnon" (formula "8") (term "1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "8") (term "0,1,0,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "8") (term "0,1,0,0,1,0"))
         (rule "replace_known_right" (formula "8") (term "0,0,1,0,0,1,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "13")))
         (rule "selectOfAnon" (formula "9") (term "0,1,1,1,0,0"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "9") (term "0,0,1,1,1,0,0"))
         (rule "sortsDisjointModuloNull" (formula "9") (term "0,0,1,1,1,0,0"))
         (rule "replace_known_right" (formula "9") (term "0,0,0,1,1,1,0,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")))
         (rule "selectOfAnon" (formula "10") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "10") (term "0,1,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "10") (term "0,1,0,1,0"))
         (rule "replace_known_right" (formula "10") (term "1,0,1,0,1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")))
         (rule "selectOfAnon" (formula "9") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "9") (term "0,1,0,1,0"))
         (rule "sortsDisjointModuloNull" (formula "9") (term "0,1,0,1,0"))
         (rule "replace_known_right" (formula "9") (term "0,0,1,0,1,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")))
         (rule "nnf_imp2or" (formula "8") (term "0"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
         (rule "less_equal_than_comparison_new" (formula "14") (term "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "assignment" (formula "14") (term "1,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "assignment" (formula "14") (term "1,2"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0"))
         (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "11") (term "0") (inst "sk=sk_1") (inst "S=_var0") (ifseqformula "3"))
         (branch "Use Axiom"
            (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "11") (term "1") (inst "sk=sk_2") (inst "S=_var1") (ifseqformula "3"))
            (branch "Use Axiom"
               (rule "selectOfAnon" (formula "11") (term "1,1"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
               (rule "eqSymm" (formula "11") (term "0,1,1"))
               (rule "sortsDisjointModuloNull" (formula "11") (term "0,1,1"))
               (rule "replace_known_right" (formula "11") (term "0,0,1,1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")))
               (rule "arrayLengthNotNegative" (formula "6") (term "0"))
               (rule "ifthenelse_split_for" (formula "15"))
               (branch "j_1_0 >= i_1_0 TRUE"
                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0"))
                  (rule "qeq_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "methodCallEmpty" (formula "15") (term "1"))
                  (rule "emptyModality" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "closeTrue" (formula "15"))
               )
               (branch "j_1_0 >= i_1_0 FALSE"
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEqRigid" (formula "11") (term "1,0,0,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq1" (formula "9"))
                  (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,0"))
                  (rule "times_zero_1" (formula "9") (term "0"))
                  (rule "leq_literals" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "8"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "add_zero_left" (formula "7") (term "1"))
                  (rule "applyEqRigid" (formula "11") (term "1,1,1,0,0") (ifseqformula "8"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,1,1,0,0"))
                  (rule "add_zero_left" (formula "11") (term "1,1,0,0"))
                  (rule "inEqSimp_or_tautInEq0" (formula "11") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "1,0,1,0,0"))
                  (rule "times_zero_1" (formula "11") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "11") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "methodCallEmpty" (formula "14") (term "1"))
                  (rule "emptyModality" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "methodCallEmpty" (formula "14") (term "1"))
                  (rule "tryEmpty" (formula "14") (term "1"))
                  (rule "emptyModality" (formula "14") (term "1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "eqSymm" (formula "14") (term "1,0,0,1"))
                  (rule "selectOfAnon" (formula "14") (term "1,0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "selectOfAnon" (formula "14") (term "0,0,0,1,0,1,0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
                  (rule "eqSymm" (formula "14") (term "0,0,0,0,1,0,1,0,1,0,0,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "14") (term "0,0,0,0,1,0,1,0,1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "14") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                  (rule "selectOfAnon" (formula "14") (term "0,1,0,0,1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "selectOfAnon" (formula "14") (term "0,0,0,1,0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
                  (rule "eqSymm" (formula "14") (term "0,0,0,0,1,0,1,0,0,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "14") (term "0,0,0,0,1,0,1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "14") (term "1,0,0,0,0,1,0,1,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")))
                  (rule "selectOfAnon" (formula "14") (term "1,0,0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
                  (rule "eqSymm" (formula "14") (term "0,1,0,0,1,1,0,0,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "14") (term "0,1,0,0,1,1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "14") (term "0,0,1,0,0,1,1,0,0,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
                  (rule "selectOfAnon" (formula "14") (term "0,1,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
                  (rule "eqSymm" (formula "14") (term "0,0,1,1,1,0,0,0,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "14") (term "0,0,1,1,1,0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "14") (term "0,0,0,1,1,1,0,0,0,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
                  (rule "selectOfAnon" (formula "14") (term "1,1,0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
                  (rule "eqSymm" (formula "14") (term "0,1,1,0,1,0,0,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "14") (term "0,1,1,0,1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "14") (term "0,0,1,1,0,1,0,0,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
                  (rule "selectOfAnon" (formula "14") (term "1,0,0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
                  (rule "eqSymm" (formula "14") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "14") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")))
                  (rule "selectOfAnon" (formula "14") (term "0,0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "selectOfAnon" (formula "14") (term "0,0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "Class_invariant_axiom_for_TwoWaySwap" (formula "14") (term "1,0") (inst "sk=sk_3") (ifseqformula "3"))
                  (branch "Use Axiom"
                     (rule "selectOfAnon" (formula "14") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
                     (rule "eqSymm" (formula "14") (term "0,0,0,1,0"))
                     (rule "sortsDisjointModuloNull" (formula "14") (term "0,0,0,1,0"))
                     (rule "replace_known_right" (formula "14") (term "0,0,0,0,1,0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")))
                     (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "14") (term "0,1,0") (inst "sk=sk_4") (inst "S=_var2") (ifseqformula "3"))
                     (branch "Use Axiom"
                        (rule "JML_represents_clause_for_TwoWaySwap_seq" (formula "14") (term "1,1,0") (inst "sk=sk_5") (inst "S=_var3") (ifseqformula "3"))
                        (branch "Use Axiom"
                           (rule "selectOfAnon" (formula "14") (term "1,1,1,0"))
                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "2")))
                           (rule "eqSymm" (formula "14") (term "0,1,1,1,0"))
                           (rule "sortsDisjointModuloNull" (formula "14") (term "0,1,1,1,0"))
                           (rule "replace_known_right" (formula "14") (term "0,0,1,1,1,0") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "11")))
                           (rule "andRight" (formula "14"))
                           (branch "Case 1"
                              (rule "allRight" (formula "14") (inst "sk=k_0"))
                              (rule "allRight" (formula "14") (inst "sk=l_0"))
                              (rule "orRight" (formula "14"))
                              (rule "orRight" (formula "15"))
                              (rule "orRight" (formula "14"))
                              (rule "notRight" (formula "17"))
                              (rule "orRight" (formula "16"))
                              (rule "inEqSimp_leqRight" (formula "15"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_geqRight" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "18") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "5"))
                              (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "allLeft" (formula "14") (inst "t=k_0"))
                              (rule "replace_known_left" (formula "14") (term "0,1") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "14") (term "0,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "allLeft" (formula "16") (inst "t=l_0"))
                              (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1"))
                              (rule "leq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "16"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "15"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_literals" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "14") (inst "sk=f_0"))
                              (rule "allRight" (formula "14") (inst "sk=o_0"))
                              (rule "orRight" (formula "14"))
                              (rule "orRight" (formula "14"))
                              (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
                              (rule "closeTrue" (formula "16"))
                           )
                        )
                        (branch "Show Axiom Satisfiability"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "instanceof_static_type" (formula "14") (term "0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "closeTrue" (formula "14"))
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "instanceof_static_type" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "closeTrue" (formula "14"))
                     )
                  )
                  (branch "Show Axiom Satisfiability"
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "closeTrue" (formula "14"))
                  )
               )
            )
            (branch "Show Axiom Satisfiability"
               (builtin "One Step Simplification" (formula "12"))
               (rule "instanceof_static_type" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "closeTrue" (formula "12"))
            )
         )
         (branch "Show Axiom Satisfiability"
            (builtin "One Step Simplification" (formula "12"))
            (rule "instanceof_static_type" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "closeTrue" (formula "12"))
         )
      )
   )
   (branch "Null Reference (a = null)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "5"))
   (rule "closeTrue" (formula "5"))
)
)

}
