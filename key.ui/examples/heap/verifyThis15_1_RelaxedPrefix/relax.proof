\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 08 19:31:27 CET 2022
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , moreSeqRules-moreSeqRules\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , floatRules-floatRules\\:strictfpOnly , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=7000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation {
	"contract": "Relaxed[Relaxed::isRelaxedPrefix([I,[I)].JML operation contract.0",
	"name": "Relaxed[Relaxed::isRelaxedPrefix([I,[I)].JML operation contract.0",
	"class": "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
 }

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "4ff10e41cd53bfad321ed01e040d352805d54545"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "008f011f15"))

(autoModeTime "8370")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "eqSymm" (formula "9") (term "1,0,1,1,1,1,0,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
 (builtin "One Step Simplification" (formula "2"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "8"))
 (builtin "One Step Simplification" (formula "3"))
(rule "polySimp_elimSub" (formula "9") (term "0,2,0,1,0,1,1,1,1,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,0,2,0,1,0,1,1,1,1,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "0,2,0,1,0,1,1,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,1,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,1,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_isRelaxedPrefix,savedHeapBefore_isRelaxedPrefix,_aBefore_isRelaxedPrefix,_patBefore_isRelaxedPrefix"))
 (builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "shift"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "k"))
(rule "assignment_read_length" (formula "9"))
(branch "Normal Execution (_pat != null)"
    (builtin "One Step Simplification" (formula "9"))
   (rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
   (rule "assignment" (formula "9") (term "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "elim_double_block_3" (formula "9") (term "1"))
    (builtin "Loop Invariant" (formula "9") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,shiftBefore_LOOP,kBefore_LOOP,i_0,shift_0,k_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
   (branch "Invariant Initially Valid"
      (rule "andRight" (formula "9"))
      (branch "Case 1"
         (rule "andRight" (formula "9"))
         (branch "Case 1"
            (rule "andRight" (formula "9"))
            (branch "Case 1"
               (rule "andRight" (formula "9"))
               (branch "Case 1"
                  (rule "andRight" (formula "9"))
                  (branch "Case 1"
                     (rule "andRight" (formula "9"))
                     (branch "Case 1"
                        (rule "andRight" (formula "9"))
                        (branch "Case 1"
                           (rule "andRight" (formula "9"))
                           (branch "Case 1"
                              (rule "andRight" (formula "9"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
                                 (rule "closeTrue" (formula "9"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "9"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "leq_literals" (formula "9"))
                                    (rule "closeTrue" (formula "9"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_leqRight" (formula "9"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6"))
                                    (rule "add_zero_right" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "9"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "sub_literals" (formula "9") (term "1"))
                                 (rule "leq_literals" (formula "9"))
                                 (rule "closeTrue" (formula "9"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "sub_literals" (formula "9") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "9"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "9"))
                            (builtin "One Step Simplification" (formula "10"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "closeTrue" (formula "9"))
                        )
                     )
                     (branch "Case 2"
                        (rule "orRight" (formula "9"))
                        (rule "andRight" (formula "9"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "closeTrue" (formula "10"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "closeTrue" (formula "10"))
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "equal_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "notRight" (formula "9"))
                     (rule "andLeft" (formula "1"))
                     (rule "irrflConcrete1" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "closeTrue" (formula "9"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "9"))
               (rule "allRight" (formula "9") (inst "sk=j_0"))
               (rule "impRight" (formula "9"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "8"))
               (rule "add_zero_right" (formula "8") (term "0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_literals" (formula "3") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
               (rule "qeq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "9"))
            (rule "allRight" (formula "9") (inst "sk=j_0"))
            (rule "impRight" (formula "9"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "11"))
            (rule "polySimp_elimSub" (formula "11") (term "0,2,0"))
            (rule "mul_literals" (formula "11") (term "1,0,2,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "7"))
            (rule "add_zero_right" (formula "7") (term "0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "polySimp_elimOne" (formula "7") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
            (rule "mul_literals" (formula "7") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "2"))
            (rule "qeq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "closeFalse" (formula "7"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "9"))
      )
   )
   (branch "Body Preserves Invariant"
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "6")))
       (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "8"))
      (rule "impRight" (formula "12"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "eqSymm" (formula "18") (term "1,0"))
      (rule "eqSymm" (formula "21") (term "1,1,0,0,0,0,1,1,1,0,1"))
      (rule "eqSymm" (formula "21") (term "1,0,1,0,0,1,1,1,0,1"))
      (rule "eqSymm" (formula "21") (term "0,0,1,0,1,1,1,0,1"))
      (rule "eqSymm" (formula "21") (term "1,1,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "eqSymm" (formula "16") (term "1"))
      (rule "eqSymm" (formula "14") (term "1"))
      (rule "polySimp_elimSub" (formula "21") (term "1,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "21") (term "0,1,1,0,0,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "21") (term "0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "21") (term "0,1,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "12") (term "0"))
      (rule "polySimp_elimSub" (formula "11") (term "1"))
      (rule "polySimp_elimSub" (formula "18") (term "0,2,0,1,0"))
      (rule "mul_literals" (formula "18") (term "1,0,2,0,1,0"))
      (rule "polySimp_elimSub" (formula "21") (term "0,2,0,1,0,1,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "21") (term "1,0,2,0,1,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "21") (term "0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "21") (term "0,1,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "18") (term "0,2,0,1,0"))
      (rule "polySimp_addComm0" (formula "21") (term "0,2,0,1,0,1,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,1,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,1,0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "12"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "rtrn"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "returnExpr"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "exc_1"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "thrownExc"))
      (rule "blockThrow" (formula "21") (term "1,0,0,1"))
      (rule "blockReturn" (formula "21") (term "1,0,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "commute_or" (formula "13"))
      (rule "commute_and" (formula "14") (term "1"))
      (rule "cnf_rightDist" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "commute_or" (formula "13"))
      (rule "commute_and_2" (formula "17") (term "0,0"))
      (rule "commute_and" (formula "17") (term "0,0,0"))
      (rule "commute_and_2" (formula "17") (term "0,0"))
      (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x"))
      (rule "assignment" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_1"))
      (rule "assignment_read_length" (formula "19"))
      (branch "Normal Execution (_pat != null)"
          (builtin "One Step Simplification" (formula "19"))
         (rule "less_than_comparison_simple" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "methodCallEmpty" (formula "19") (term "1"))
         (rule "emptyModality" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "notRight" (formula "19"))
         (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_2"))
         (rule "compound_less_than_comparison_2" (formula "22") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "22") (term "1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_4"))
         (rule "assignment_read_length" (formula "22"))
         (branch "Normal Execution (_pat != null)"
             (builtin "One Step Simplification" (formula "22"))
            (rule "less_than_comparison_simple" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "replace_known_left" (formula "22") (term "0,0,1,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "arrayLengthNotNegative" (formula "7") (term "1"))
            (rule "arrayLengthNotNegative" (formula "6") (term "1"))
            (rule "arrayLengthIsAnInt" (formula "7") (term "1"))
            (rule "arrayLengthIsAnInt" (formula "10") (term "1"))
            (rule "ifSplit" (formula "26"))
            (branch "if x_2 true"
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifUnfold" (formula "26") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_5"))
               (rule "compound_inequality_comparison_2" (formula "26") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_6"))
               (rule "assignment_array2" (formula "26"))
               (branch "Normal Execution (_pat != null)"
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "variableDeclarationAssign" (formula "26") (term "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_7"))
                  (rule "eval_order_array_access5" (formula "26") (term "1") (inst "#v1=x_8") (inst "#ar1=x_arr"))
                  (rule "variableDeclarationAssign" (formula "26") (term "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_arr"))
                  (rule "assignment" (formula "26") (term "1"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "variableDeclarationAssign" (formula "26") (term "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_8"))
                  (rule "assignmentSubtractionInt" (formula "26") (term "1"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "translateJavaSubInt" (formula "26") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "26") (term "0,1,0"))
                  (rule "assignment_array2" (formula "26"))
                  (branch "Normal Execution (x_arr != null)"
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "inequality_comparison_simple" (formula "26") (term "1"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "26") (term "0,0,1,0"))
                     (rule "ifSplit" (formula "26"))
                     (branch "if x_5 true"
                         (builtin "One Step Simplification" (formula "27"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "ifElseUnfold" (formula "27") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_9"))
                        (rule "equality_comparison_simple" (formula "27") (term "1"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "ifElseSplit" (formula "27"))
                        (branch "if x_9 true"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "assignment" (formula "25") (term "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "assignment" (formula "25") (term "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "blockEmpty" (formula "25") (term "1"))
                           (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "1"))
                           (rule "times_zero_2" (formula "16") (term "1,1"))
                           (rule "add_zero_right" (formula "16") (term "1"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_commuteLeq" (formula "12"))
                           (rule "applyEqRigid" (formula "21") (term "0,1,0,2,0") (ifseqformula "1"))
                           (rule "times_zero_2" (formula "21") (term "1,0,2,0"))
                           (rule "add_zero_right" (formula "21") (term "0,2,0"))
                           (rule "eqSymm" (formula "21"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "9") (term "1") (ifseqformula "18"))
                           (rule "applyEq" (formula "2") (term "1") (ifseqformula "18"))
                           (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "1"))
                           (rule "times_zero_2" (formula "16") (term "1,1"))
                           (rule "add_zero_right" (formula "16") (term "1"))
                           (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "1"))
                           (rule "equal_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "notLeft" (formula "17"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "17"))
                           (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "7"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "24") (term "1,0,1,1,1,0,0,0,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "20") (term "1") (ifseqformula "17"))
                           (rule "postincrement" (formula "24") (term "1"))
                           (rule "unusedLabel" (formula "24") (term "1"))
                           (rule "compound_int_cast_expression" (formula "24") (term "1") (inst "#v=x"))
                           (rule "variableDeclarationAssign" (formula "24") (term "1"))
                           (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_10"))
                           (rule "remove_parentheses_right" (formula "24") (term "1"))
                           (rule "assignmentAdditionInt" (formula "24") (term "1"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "24") (term "1"))
                           (rule "assignment" (formula "24") (term "1"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "tryEmpty" (formula "24") (term "1"))
                           (rule "methodCallEmpty" (formula "24") (term "1"))
                           (rule "emptyModality" (formula "24") (term "1"))
                            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                           (rule "andRight" (formula "24"))
                           (branch "Case 1"
                              (rule "andRight" (formula "24"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "24"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "24"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "24"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "24"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "24"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "24"))
                                                (branch "Case 1"
                                                   (rule "inEqSimp_ltRight" (formula "20"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_leqRight" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10"))
                                                   (rule "add_zero_right" (formula "10") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "18"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0"))
                                                   (rule "add_literals" (formula "12") (term "0"))
                                                   (rule "leq_literals" (formula "12"))
                                                   (rule "closeFalse" (formula "12"))
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "24"))
                                                   (branch "Case 1"
                                                      (rule "inEqSimp_geqRight" (formula "24"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10"))
                                                      (rule "add_zero_right" (formula "10") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0"))
                                                      (rule "qeq_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "15") (term "0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "closeFalse" (formula "15"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "inEqSimp_ltRight" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_geqRight" (formula "23"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10"))
                                                      (rule "add_zero_right" (formula "10") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "18"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_literals" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "24"))
                                                (branch "Case 1"
                                                   (rule "mul_literals" (formula "24") (term "1,1"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "1"))
                                                   (rule "add_literals" (formula "24") (term "0,1"))
                                                   (rule "add_zero_left" (formula "24") (term "1"))
                                                   (rule "inEqSimp_ltRight" (formula "20"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_leqRight" (formula "23"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10"))
                                                   (rule "add_zero_right" (formula "10") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0"))
                                                   (rule "qeq_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "14") (term "0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "closeFalse" (formula "14"))
                                                )
                                                (branch "Case 2"
                                                   (rule "mul_literals" (formula "24") (term "1,1"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "1"))
                                                   (rule "add_literals" (formula "24") (term "0,1"))
                                                   (rule "add_zero_left" (formula "24") (term "1"))
                                                   (rule "close" (formula "24") (ifseqformula "16"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "orRight" (formula "24"))
                                             (rule "inEqSimp_ltRight" (formula "24"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "inEqSimp_ltRight" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_ltRight" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10"))
                                          (rule "add_zero_right" (formula "10") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0"))
                                          (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "18"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "qeq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "equal_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "notRight" (formula "24"))
                                       (rule "inEqSimp_ltRight" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10"))
                                       (rule "add_zero_right" (formula "10") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_literals" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "24") (inst "sk=j_0"))
                                    (rule "impRight" (formula "24"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_ltRight" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "add_zero_right" (formula "12") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "18") (term "0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,0"))
                                    (rule "commute_or" (formula "19") (term "0,0"))
                                    (rule "commute_or_2" (formula "18") (term "0,0"))
                                    (rule "commute_or" (formula "18") (term "0,0,0"))
                                    (rule "allLeft" (formula "18") (inst "t=j_0"))
                                    (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "18"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "24") (inst "sk=j_0"))
                                 (rule "impRight" (formula "24"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_ltRight" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11"))
                                 (rule "add_zero_right" (formula "11") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0"))
                                 (rule "qeq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                              (rule "mul_literals" (formula "24") (term "0,0,0"))
                              (rule "precOfInt" (formula "24"))
                              (rule "inEqSimp_ltRight" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "9"))
                              (rule "add_zero_right" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                              (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0,0,1"))
                              (rule "add_zero_left" (formula "23") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0,0,1"))
                              (rule "add_literals" (formula "23") (term "1,0,0,0,1"))
                              (rule "times_zero_1" (formula "23") (term "0,0,0,1"))
                              (rule "add_zero_left" (formula "23") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                              (rule "times_zero_2" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "17"))
                              (rule "polySimp_pullOutFactor2" (formula "23") (term "0,1"))
                              (rule "add_literals" (formula "23") (term "1,0,1"))
                              (rule "times_zero_1" (formula "23") (term "0,1"))
                              (rule "leq_literals" (formula "23") (term "1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_geqRight" (formula "23"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "18"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                              (rule "leq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch "if x_9 false"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "andLeft" (formula "20"))
                           (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "assignment" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "assignment" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "blockBreakNoLabel" (formula "28") (term "1"))
                           (rule "applyEqRigid" (formula "25") (term "0,1,0,2,0") (ifseqformula "17"))
                           (rule "mul_literals" (formula "25") (term "1,0,2,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,2,0"))
                           (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "17"))
                           (rule "mul_literals" (formula "15") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "15") (term "1"))
                           (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "17"))
                           (rule "mul_literals" (formula "16") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "16") (term "1"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "17"))
                           (rule "equal_literals" (formula "24"))
                           (rule "false_right" (formula "24"))
                           (rule "applyEq" (formula "27") (term "0,1,0,0,1,1,0,0,0,0") (ifseqformula "17"))
                           (rule "blockBreakLabel" (formula "27") (term "1"))
                           (rule "blockEmpty" (formula "27") (term "1"))
                           (rule "tryEmpty" (formula "27") (term "1"))
                           (rule "methodCallEmpty" (formula "27") (term "1"))
                           (rule "emptyModality" (formula "27") (term "1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "methodCallReturn" (formula "27") (term "1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "assignment" (formula "27") (term "1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "methodCallEmpty" (formula "27") (term "1"))
                           (rule "tryEmpty" (formula "27") (term "1"))
                           (rule "emptyModality" (formula "27") (term "1"))
                           (rule "andRight" (formula "27"))
                           (branch "Case 1"
                              (rule "impRight" (formula "27"))
                              (rule "andRight" (formula "28"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "1"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "27"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9"))
                                 (rule "add_zero_right" (formula "9") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "16"))
                                 (rule "times_zero_2" (formula "16") (term "1,0"))
                                 (rule "add_zero_right" (formula "16") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "mul_literals" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "mul_literals" (formula "16") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "false_right" (formula "24"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "1"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "1"))
                                 (rule "qeq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "notRight" (formula "27"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10"))
                                 (rule "add_zero_right" (formula "10") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "17"))
                                 (rule "times_zero_2" (formula "17") (term "1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "mul_literals" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_invertInEq0" (formula "2") (term "0,0,0"))
                                 (rule "times_zero_2" (formula "2") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "21"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "false_right" (formula "25"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0"))
                                 (rule "qeq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "17"))
                                 (rule "times_zero_1" (formula "20") (term "0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "nnf_imp2or" (formula "22") (term "0"))
                                 (rule "nnf_imp2or" (formula "21") (term "0"))
                                 (rule "nnf_imp2or" (formula "1") (term "0"))
                                 (rule "nnf_imp2or" (formula "2") (term "0"))
                                 (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_or_tautInEq0" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "qeq_literals" (formula "1") (term "1,0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,0"))
                                 (rule "commute_or" (formula "21") (term "0,0"))
                                 (rule "commute_or_2" (formula "20") (term "0,0"))
                                 (rule "commute_or" (formula "20") (term "0,0,0"))
                                 (rule "allLeft" (formula "1") (inst "t=i_0"))
                                 (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "15"))
                                 (rule "qeq_literals" (formula "1") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "Case 2"
                              (rule "impRight" (formula "27"))
                              (rule "orRight" (formula "28"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "if x_5 false"
                         (builtin "One Step Simplification" (formula "27"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "blockEmpty" (formula "27") (term "1"))
                        (rule "postincrement" (formula "27") (term "1"))
                        (rule "unusedLabel" (formula "27") (term "1"))
                        (rule "compound_int_cast_expression" (formula "27") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "27") (term "1"))
                        (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_9"))
                        (rule "remove_parentheses_right" (formula "27") (term "1"))
                        (rule "assignmentAdditionInt" (formula "27") (term "1"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "translateJavaAddInt" (formula "27") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "27") (term "1"))
                        (rule "assignment" (formula "27") (term "1"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "tryEmpty" (formula "27") (term "1"))
                        (rule "methodCallEmpty" (formula "27") (term "1"))
                        (rule "emptyModality" (formula "27") (term "1"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "12")) (ifInst ""  (formula "18")) (ifInst ""  (formula "22")))
                        (rule "andRight" (formula "27"))
                        (branch "Case 1"
                           (rule "andRight" (formula "27"))
                           (branch "Case 1"
                              (rule "andRight" (formula "27"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "27"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "27"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "27"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "27"))
                                          (branch "Case 1"
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "17"))
                                             (rule "times_zero_2" (formula "17") (term "1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "closeFalse" (formula "15"))
                                          )
                                          (branch "Case 2"
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "17"))
                                             (rule "times_zero_2" (formula "17") (term "1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0"))
                                             (rule "qeq_literals" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_zero_right" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "27"))
                                          (branch "Case 1"
                                             (rule "inEqSimp_leqRight" (formula "27"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "17"))
                                             (rule "times_zero_2" (formula "17") (term "1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "16"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "17"))
                                             (rule "times_zero_2" (formula "17") (term "1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0"))
                                             (rule "qeq_literals" (formula "16") (term "0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "17"))
                                             (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "1,0"))
                                             (rule "times_zero_1" (formula "17") (term "0"))
                                             (rule "leq_literals" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq0" (formula "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "11") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "20") (term "0") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "20") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "notLeft" (formula "20"))
                                             (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "22"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_left" (formula "19") (term "1,1") (ifseqformula "17"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_contradEq3" (formula "16") (term "0") (ifseqformula "2"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "16") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "11") (term "1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1"))
                                             (rule "applyEqRigid" (formula "1") (term "0,1,0,2,0") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "1") (term "1,0,2,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
                                             (rule "inEqSimp_commuteLeq" (formula "14"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "orRight" (formula "27"))
                                       (rule "andRight" (formula "27"))
                                       (branch "Case 1"
                                          (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")))
                                          (rule "closeFalse" (formula "19"))
                                       )
                                       (branch "Case 2"
                                          (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_left" (formula "21") (term "1,1") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "28"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_ltRight" (formula "27"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10"))
                                          (rule "add_zero_right" (formula "10") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "17"))
                                          (rule "times_zero_2" (formula "17") (term "1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,2,0") (ifseqformula "19"))
                                          (rule "mul_literals" (formula "2") (term "1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,2,0"))
                                          (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "19"))
                                          (rule "mul_literals" (formula "18") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1"))
                                          (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "19"))
                                          (rule "equal_literals" (formula "25"))
                                          (rule "false_right" (formula "25"))
                                          (rule "applyEqRigid" (formula "17") (term "0,1,0") (ifseqformula "19"))
                                          (rule "mul_literals" (formula "17") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1"))
                                          (rule "mul_literals" (formula "21") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "qeq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9"))
                                    (rule "add_zero_right" (formula "9") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                    (rule "times_zero_2" (formula "16") (term "1,0"))
                                    (rule "add_zero_right" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "11"))
                                    (rule "mul_literals" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "nnf_imp2or" (formula "22") (term "0"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                    (rule "commute_and" (formula "20") (term "1"))
                                    (rule "close" (formula "26") (ifseqformula "20"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "27") (inst "sk=j_0"))
                                 (rule "impRight" (formula "27"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12"))
                                 (rule "add_zero_right" (formula "12") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19"))
                                 (rule "times_zero_2" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "15"))
                                 (rule "mul_literals" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "nnf_imp2or" (formula "25") (term "0"))
                                 (rule "nnf_imp2or" (formula "26") (term "0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0"))
                                 (rule "commute_and" (formula "23") (term "1"))
                                 (rule "commute_or" (formula "26") (term "0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0"))
                                 (rule "commute_or" (formula "25") (term "0,0,0"))
                                 (rule "equiv_left" (formula "24"))
                                 (branch "Case 1"
                                    (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "24"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "23"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,0,2,0") (ifseqformula "21"))
                                    (rule "times_zero_2" (formula "4") (term "1,0,2,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,2,0"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "22"))
                                    (rule "inEqSimp_commuteLeq" (formula "15"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "21"))
                                    (rule "inEqSimp_commuteLeq" (formula "18"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "20"))
                                    (rule "times_zero_2" (formula "18") (term "1,1"))
                                    (rule "add_zero_right" (formula "18") (term "1"))
                                    (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "21"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,1,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,1,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,1,1"))
                                    (rule "leq_literals" (formula "19") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "20"))
                                    (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "19"))
                                    (rule "equal_literals" (formula "23"))
                                    (rule "false_right" (formula "23"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "allLeft" (formula "20") (inst "t=j_0"))
                                    (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "25"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "26") (term "0,2,0") (ifseqformula "20"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,0"))
                                    (rule "times_zero_1" (formula "3") (term "0"))
                                    (rule "qeq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "19"))
                                    (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "1,0"))
                                    (rule "times_zero_1" (formula "19") (term "0"))
                                    (rule "leq_literals" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "18"))
                                    (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "close" (formula "22") (ifseqformula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "27"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "26"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "20"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
                                    (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "19") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,2,0") (ifseqformula "20"))
                                    (rule "mul_literals" (formula "4") (term "1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,2,0"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "20"))
                                    (rule "equal_literals" (formula "26"))
                                    (rule "false_right" (formula "26"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_commuteLeq" (formula "18"))
                                    (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "23"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "false_right" (formula "26"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "20"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                    (rule "times_zero_1" (formula "19") (term "0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                    (rule "mul_literals" (formula "19") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "15"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "allLeft" (formula "23") (inst "t=j_0"))
                                    (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                    (rule "leq_literals" (formula "23") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "27") (inst "sk=j_0"))
                              (rule "impRight" (formula "27"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "11"))
                              (rule "add_zero_right" (formula "11") (term "0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "18"))
                              (rule "mul_literals" (formula "18") (term "1,0"))
                              (rule "add_zero_right" (formula "18") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "14"))
                              (rule "mul_literals" (formula "11") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                              (rule "leq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "nnf_imp2or" (formula "24") (term "0"))
                              (rule "nnf_imp2or" (formula "25") (term "0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "25") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0"))
                              (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                              (rule "commute_and" (formula "22") (term "1"))
                              (rule "commute_or" (formula "25") (term "0,0"))
                              (rule "commute_or_2" (formula "24") (term "0,0"))
                              (rule "commute_or" (formula "24") (term "0,0,0"))
                              (rule "equiv_left" (formula "23"))
                              (branch "Case 1"
                                 (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEqRigid" (formula "18") (term "0,1,1") (ifseqformula "20"))
                                 (rule "times_zero_2" (formula "18") (term "1,1"))
                                 (rule "add_zero_right" (formula "18") (term "1"))
                                 (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_commuteLeq" (formula "17"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,2,0") (ifseqformula "19"))
                                 (rule "times_zero_2" (formula "3") (term "1,0,2,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,2,0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_commuteLeq" (formula "14"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "20"))
                                 (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "19"))
                                 (rule "equal_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,1"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "22") (term "0,1"))
                                 (rule "leq_literals" (formula "22") (term "1"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "false_right" (formula "22"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "12") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "2"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "leq_literals" (formula "5"))
                                 (rule "closeFalse" (formula "5"))
                              )
                              (branch "Case 2"
                                 (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "19"))
                                 (rule "equal_literals" (formula "25"))
                                 (rule "false_right" (formula "25"))
                                 (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "18") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "1"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,2,0") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "3") (term "1,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0,2,0"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                 (rule "inEqSimp_commuteLeq" (formula "17"))
                                 (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "22"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "false_right" (formula "25"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "mul_literals" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                 (rule "times_zero_1" (formula "18") (term "0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "18") (term "0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "allLeft" (formula "24") (inst "t=j_0"))
                                 (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_commuteLeq" (formula "24") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                 (rule "leq_literals" (formula "24") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "24"))
                                 (rule "inEqSimp_homoInEq1" (formula "25"))
                                 (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                 (rule "add_literals" (formula "25") (term "1,0"))
                                 (rule "times_zero_1" (formula "25") (term "0"))
                                 (rule "leq_literals" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "27") (term "1,0,2,0") (ifseqformula "23"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "23"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "22"))
                                 (rule "applyEqRigid" (formula "25") (term "0,2,0") (ifseqformula "21"))
                                 (rule "eqSymm" (formula "25"))
                                 (rule "close" (formula "25") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,0"))
                           (rule "precOfInt" (formula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "9"))
                           (rule "add_zero_right" (formula "9") (term "0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                           (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,1"))
                           (rule "add_literals" (formula "27") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "27") (term "1,0,1"))
                           (rule "add_zero_right" (formula "27") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1"))
                           (rule "add_zero_left" (formula "27") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1"))
                           (rule "add_literals" (formula "27") (term "1,0,1"))
                           (rule "times_zero_1" (formula "27") (term "0,1"))
                           (rule "leq_literals" (formula "27") (term "1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_leqRight" (formula "27"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "17"))
                           (rule "times_zero_2" (formula "17") (term "1,0"))
                           (rule "add_zero_right" (formula "17") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Null Reference (x_arr = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr != null, but x_8 Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "false_right" (formula "27"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9"))
                     (rule "add_zero_right" (formula "9") (term "0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "16"))
                     (rule "times_zero_2" (formula "16") (term "1,0"))
                     (rule "add_zero_right" (formula "16") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0"))
                     (rule "qeq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "leq_literals" (formula "1") (term "0,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                     (rule "leq_literals" (formula "7") (term "0"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "15"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "1,0"))
                     (rule "times_zero_1" (formula "15") (term "0"))
                     (rule "leq_literals" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "14"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "14"))
                     (rule "applyEq" (formula "10") (term "1") (ifseqformula "14"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                     (rule "mul_literals" (formula "7") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "qeq_literals" (formula "13") (term "0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradEq3" (formula "15") (term "1") (ifseqformula "1"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,1"))
                     (rule "qeq_literals" (formula "15") (term "0,1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "15"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                     (rule "equal_literals" (formula "16") (term "0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "notLeft" (formula "16"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "8"))
                     (rule "times_zero_2" (formula "8") (term "1,0"))
                     (rule "add_zero_right" (formula "8") (term "0"))
                     (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "15"))
                     (rule "times_zero_2" (formula "10") (term "1,0"))
                     (rule "add_zero_right" (formula "10") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (_pat = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (_pat != null, but i Out of Bounds!)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                  (rule "false_right" (formula "27"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9"))
                  (rule "add_zero_right" (formula "9") (term "0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "16"))
                  (rule "times_zero_2" (formula "16") (term "1,0"))
                  (rule "add_zero_right" (formula "16") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
                  (rule "leq_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0"))
                  (rule "qeq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "closeFalse" (formula "13"))
               )
            )
            (branch "if x_2 false"
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (_pat = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (_pat = null)"
         (rule "false_right" (formula "20"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Use Case"
       (builtin "One Step Simplification" (formula "11"))
       (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "6")))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "10"))
      (rule "eqSymm" (formula "17") (term "1,0"))
      (rule "eqSymm" (formula "15") (term "1"))
      (rule "eqSymm" (formula "13") (term "1"))
      (rule "polySimp_elimSub" (formula "11") (term "0"))
      (rule "polySimp_elimSub" (formula "10") (term "1"))
      (rule "polySimp_elimSub" (formula "17") (term "0,2,0,1,0"))
      (rule "mul_literals" (formula "17") (term "1,0,2,0,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "0,2,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "inEqSimp_commuteLeq" (formula "11"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_1"))
      (rule "commute_or" (formula "13"))
      (rule "cnf_rightDist" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "commute_or" (formula "13"))
      (rule "commute_and" (formula "15") (term "1"))
      (rule "commute_and_2" (formula "17") (term "0,0"))
      (rule "commute_and" (formula "17") (term "0,0,0"))
      (rule "commute_and_2" (formula "17") (term "0,0"))
      (rule "compound_less_than_comparison_2" (formula "21") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "x"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_1"))
      (rule "assignment_read_length" (formula "21"))
      (branch "Normal Execution (_pat != null)"
          (builtin "One Step Simplification" (formula "21"))
         (rule "less_than_comparison_simple" (formula "21") (term "1"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "methodCallEmpty" (formula "21") (term "1"))
         (rule "emptyModality" (formula "21") (term "1"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "impRight" (formula "21"))
         (rule "notLeft" (formula "1"))
         (rule "methodCallReturn" (formula "22") (term "1"))
         (rule "assignment" (formula "22") (term "1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "methodCallEmpty" (formula "22") (term "1"))
         (rule "tryEmpty" (formula "22") (term "1"))
         (rule "emptyModality" (formula "22") (term "1"))
         (rule "andRight" (formula "22"))
         (branch "Case 1"
            (rule "impRight" (formula "22"))
            (rule "andRight" (formula "23"))
            (branch "Case 1"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "1"))
               (rule "inEqSimp_ltRight" (formula "19"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "22"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "add_zero_right" (formula "7") (term "0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "12"))
               (rule "mul_literals" (formula "12") (term "1,0"))
               (rule "add_zero_right" (formula "12") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "inEqSimp_contradEq3" (formula "15") (term "1") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
               (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "15") (term "0,0,1"))
               (rule "qeq_literals" (formula "15") (term "0,1"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "replace_known_left" (formula "17") (term "1,1") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_contradEq3" (formula "18") (term "1") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
               (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "18") (term "0,0,1"))
               (rule "qeq_literals" (formula "18") (term "0,1"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "notLeft" (formula "18"))
               (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "14"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "14"))
               (rule "inEqSimp_commuteLeq" (formula "12"))
               (rule "applyEq" (formula "20") (term "0") (ifseqformula "14"))
               (rule "equal_literals" (formula "20"))
               (rule "false_right" (formula "20"))
               (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "14"))
               (rule "mul_literals" (formula "13") (term "1,1"))
               (rule "polySimp_addComm0" (formula "13") (term "1"))
               (rule "inEqSimp_contradEq3" (formula "16") (term "1") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
               (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "16") (term "0,0,1"))
               (rule "qeq_literals" (formula "16") (term "0,1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "1"))
               (rule "inEqSimp_ltRight" (formula "19"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "16") (term "0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_homoInEq0" (formula "11"))
               (rule "mul_literals" (formula "11") (term "1,0"))
               (rule "add_zero_right" (formula "11") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,1"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,1"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "11"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
               (rule "polySimp_elimOne" (formula "11") (term "0"))
               (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "1"))
               (rule "applyEq" (formula "17") (term "0,0,1") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
               (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq0" (formula "1"))
               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,0"))
               (rule "times_zero_1" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,1") (ifseqformula "9"))
               (rule "replace_known_left" (formula "22") (term "1,1") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "9"))
               (rule "eqSymm" (formula "14") (term "1"))
               (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "9"))
               (rule "eqSymm" (formula "17") (term "1"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq1" (formula "10"))
               (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
               (rule "add_literals" (formula "10") (term "1,0"))
               (rule "times_zero_1" (formula "10") (term "0"))
               (rule "leq_literals" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
               (rule "inEqSimp_commuteLeq" (formula "6"))
               (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "9"))
               (rule "eqSymm" (formula "14") (term "1"))
               (rule "applyEq" (formula "5") (term "0") (ifseqformula "9"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
               (rule "mul_literals" (formula "15") (term "0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1"))
               (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "5"))
               (rule "leq_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "inEqSimp_or_weaken0" (formula "13"))
               (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
               (rule "add_literals" (formula "13") (term "0,1,0"))
               (rule "add_zero_left" (formula "13") (term "1,0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_imp2or" (formula "20") (term "0,1"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,1"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0,1"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0"))
               (rule "commute_and" (formula "14") (term "1"))
               (rule "commute_or" (formula "17") (term "0,0"))
               (rule "commute_or_2" (formula "16") (term "0,0"))
               (rule "commute_or" (formula "16") (term "0,0,0"))
               (rule "equiv_right" (formula "20"))
               (branch "Case '->'"
                  (rule "allRight" (formula "21") (inst "sk=j_0"))
                  (rule "cutUpperBound" (formula "21") (ifseqformula "17"))
                  (branch "Case 1"
                     (rule "crossInst" (formula "18") (inst "sk=j_1") (ifseqformula "22"))
                     (rule "orRight" (formula "23"))
                     (rule "andLeft" (formula "18"))
                     (rule "orRight" (formula "24"))
                     (rule "eqSymm" (formula "1"))
                     (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_leqRight" (formula "23"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                     (rule "applyEqRigid" (formula "17") (term "0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "19"))
                     (rule "applyEqRigid" (formula "22") (term "1,1,0,0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "18") (term "0,1") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "20") (term "1,1,0,0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "19") (term "0,2,0,1") (ifseqformula "18"))
                     (rule "eqSymm" (formula "19") (term "1"))
                     (rule "applyEqRigid" (formula "19") (term "0,0,0,0") (ifseqformula "18"))
                     (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "3"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                     (rule "crossInst" (formula "18") (inst "sk=j_1") (ifseqformula "22"))
                     (rule "orRight" (formula "23"))
                     (rule "notLeft" (formula "1"))
                     (rule "andLeft" (formula "17"))
                     (rule "orRight" (formula "24"))
                     (rule "eqSymm" (formula "21"))
                     (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "replace_known_left" (formula "14") (term "0,1") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_leqRight" (formula "23"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                     (rule "applyEqRigid" (formula "19") (term "0,2,0,1") (ifseqformula "18"))
                     (rule "eqSymm" (formula "19") (term "1"))
                     (rule "applyEqRigid" (formula "19") (term "0,1,0,0") (ifseqformula "18"))
                     (rule "applyEqRigid" (formula "19") (term "0,0,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "19") (term "0,2,0,1") (ifseqformula "18"))
                     (rule "eqSymm" (formula "19") (term "1"))
                     (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0"))
                     (rule "leq_literals" (formula "22") (term "0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "false_right" (formula "22"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "19") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,1"))
                     (rule "leq_literals" (formula "19") (term "0,1"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "15"))
                     (rule "times_zero_1" (formula "3") (term "0,0"))
                     (rule "add_zero_left" (formula "3") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                     (rule "leq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                     (rule "andLeft" (formula "20"))
                     (rule "inEqSimp_homoInEq1" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                     (rule "add_literals" (formula "20") (term "1,1,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0"))
                     (rule "add_zero_right" (formula "20") (term "0"))
                     (rule "leq_literals" (formula "20"))
                     (rule "closeFalse" (formula "20"))
                  )
               )
               (branch "Case '<-'"
                  (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "notLeft" (formula "14"))
                  (rule "inEqSimp_geqRight" (formula "20"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "15"))
                  (rule "equal_literals" (formula "18"))
                  (rule "false_right" (formula "18"))
                  (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "15"))
                  (rule "inEqSimp_commuteLeq" (formula "11"))
                  (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "13"))
                  (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "15"))
                  (rule "times_zero_2" (formula "12") (term "1,1"))
                  (rule "add_zero_right" (formula "12") (term "1"))
                  (rule "applyEq" (formula "2") (term "1,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "12"))
                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                  (rule "true_left" (formula "15"))
                  (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "13"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,0"))
                  (rule "times_zero_1" (formula "13") (term "0"))
                  (rule "qeq_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
            )
         )
         (branch "Case 2"
            (rule "impRight" (formula "22"))
            (rule "orRight" (formula "23"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (_pat = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (_pat = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
   (rule "closeFalse" (formula "1"))
)
)
}
