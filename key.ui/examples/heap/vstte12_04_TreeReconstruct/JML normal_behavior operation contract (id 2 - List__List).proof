\settings {
"#Proof-Settings-Config-File
#Thu Nov 10 13:51:57 CET 2011
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=false
[View]HideClosedSubtrees=true
[General]UseOCL=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[View]ShowWholeTaclet=false
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[View]MaxTooltipLines=40
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource "src";

\chooseContract "JML normal_behavior operation contract [id: 2 / List::List]";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "1d23877b4d7e54300af1151f620642fdcafd3c1b"))

(autoModeTime "10054")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "4"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "eqSymm" (formula "5") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "1") (ifseqformula "4"))
(builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
(rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "3") (term "0"))
(rule "nnf_notAnd" (formula "3") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
(rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
(rule "mul_literals" (formula "3") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
(rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
(rule "arrayLengthNotNegative" (formula "3") (term "1,1,0,0"))
(rule "instanceCreationAssignment" (formula "6") (term "1") (inst "#v0=l"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "l"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=l_1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "l_1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=l_2"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "l_2"))
(rule "allocateInstance" (formula "6"))
(builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallWithinClass" (formula "9") (term "1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallSuper" (formula "9") (term "1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "9") (term "1"))
(rule "methodCallReturn" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "var"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallSuper" (formula "9") (term "1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "tmp"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(builtin "Loop Invariant" (formula "9") (newnames "heapBeforeLoop,iBeforeLoop,tmpBeforeLoop,anonHeap_loop,i_0,tmp_0,o,f,variant,b"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
   (rule "leq_literals" (formula "9") (term "0,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "translateJavaSubInt" (formula "9") (term "1,0"))
   (rule "polySimp_elimSub" (formula "9") (term "1,0"))
   (rule "mul_literals" (formula "9") (term "1,1,0"))
   (rule "add_zero_right" (formula "9") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,1,0,1"))
   (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,1"))
   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1"))
   (rule "mul_literals" (formula "9") (term "1,1,0,0,1,0,1"))
   (rule "selectOfStore" (formula "9") (term "0,1,1,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,1,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,0,1,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,0,1,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,0,1,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,0,1,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "0,0,0"))
   (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfCreate" (formula "9") (term "0,1,0,1,0"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
   (rule "selectOfStore" (formula "9") (term "0,1,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "0,0,0,0"))
   (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfCreate" (formula "9") (term "0,1,1"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
   (rule "applyEq" (formula "9") (term "2,0,1,1") (ifseqformula "3"))
   (rule "sortsDisjointModuloNull" (formula "9") (term "0,0,1,1"))
   (rule "replace_known_right" (formula "9") (term "1,0,0,1,1") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
   (rule "nnf_imp2or" (formula "9") (term "0,0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "wellFormedStorePrimitive" (formula "9"))
   (rule "wellFormedStoreObject" (formula "9"))
   (branch
      (rule "wellFormedStorePrimitive" (formula "9"))
      (rule "wellFormedStorePrimitive" (formula "9"))
      (rule "wellFormedCreate" (formula "9"))
      (rule "close" (formula "9") (ifseqformula "2"))
   )
   (branch
      (rule "orRight" (formula "9"))
      (rule "instanceof_static_type" (formula "9") (term "0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfCreate" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
      (rule "applyEq" (formula "9") (term "2,0") (ifseqformula "3"))
      (rule "sortsDisjointModuloNull" (formula "9") (term "0,0"))
      (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
      (rule "closeTrue" (formula "9"))
   )
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "b_2"))
   (rule "variableDeclarationAssign" (formula "14") (term "1,0,1"))
   (rule "blockThrow" (formula "14") (term "1,0,0,1,0,1"))
   (rule "blockThrow" (formula "14") (term "1,0,0,1,0,1"))
   (rule "variableDeclaration" (formula "14") (term "1,0,1") (newnames "exc_1"))
   (rule "assignment" (formula "14") (term "1,0,1"))
   (rule "variableDeclaration" (formula "14") (term "1,1,0,1") (newnames "thrownExc"))
   (rule "translateJavaSubInt" (formula "10") (term "1"))
   (rule "eqSymm" (formula "14") (term "1,0,0,1,0,1,1,0,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "14") (term "0,1,1,1,1,0,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "14") (term "1,0,1,1,1,0,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "14") (term "0,1,1,1,0"))
   (rule "polySimp_elimSub" (formula "10") (term "1"))
   (rule "polySimp_elimSub" (formula "14") (term "0,1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "14") (term "1,0,1,1,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "14") (term "0,1,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "10") (term "1"))
   (rule "polySimp_addComm0" (formula "14") (term "1,0,1,1,1,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "14") (term "0,1,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
   (rule "polySimp_addComm0" (formula "14") (term "1,0,1,1,1,1,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,0,0,1,1,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0,1,1,0,1"))
   (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,1,1,0,1,1,0,1"))
   (rule "inEqSimp_homoInEq0" (formula "10"))
   (rule "mul_literals" (formula "10") (term "1,0"))
   (rule "add_zero_right" (formula "10") (term "0"))
   (rule "inEqSimp_homoInEq0" (formula "14") (term "0,1,1,1,0,1,1,0,1"))
   (rule "times_zero_2" (formula "14") (term "1,0,0,1,1,1,0,1,1,0,1"))
   (rule "add_zero_right" (formula "14") (term "0,0,1,1,1,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "0,1,1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,0,1,1,1,1,1,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,0,1,1,1,1,1,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1"))
   (rule "polySimp_elimOne" (formula "10") (term "1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,1,1,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,0,1,1,1,0,1,1,0,1"))
   (rule "selectOfAnon" (formula "13") (term "0,1,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "replace_known_right" (formula "13") (term "0,0,0,0,1,0,1,1,1,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "ifthenelse_negated" (formula "13") (term "0,1,0,1,1,1,0"))
   (rule "selectOfAnon" (formula "8") (term "0,0"))
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "10")))
   (rule "ifthenelse_negated" (formula "8") (term "0,0"))
   (rule "selectOfAnon" (formula "9") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "12")))
   (rule "ifthenelse_negated" (formula "9") (term "0,1,0"))
   (rule "selectOfStore" (formula "13") (term "1,0,1,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "selectOfStore" (formula "8") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "13") (term "0,0,0,1,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "selectOfStore" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "13") (term "0,0,0,1,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "selectOfStore" (formula "8") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "castDel" (formula "8") (term "1,0,0"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "13") (term "1,0,1,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "castDel" (formula "13") (term "1,0,1,0,1,1,1,0"))
   (rule "selectOfStore" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "13") (term "0,0,0,1,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "selectOfStore" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "13") (term "0,0,0,1,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "selectOfStore" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfCreate" (formula "13") (term "0,0,0,1,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "replace_known_right" (formula "13") (term "0,0,0,0,0,1,0,1,1,1,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "castDel" (formula "13") (term "0,0,0,1,0,1,1,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "selectOfCreate" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "10")))
   (rule "castDel" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfCreate" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "10")))
   (rule "applyEq" (formula "9") (term "2,0,0,0,1,0") (ifseqformula "3"))
   (rule "castDel" (formula "9") (term "1,0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfCreate" (formula "9") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "10")))
   (rule "nnf_imp2or" (formula "9") (term "0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
   (rule "nnf_imp2or" (formula "13") (term "0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,1,0,0,1,1,0,1,1,0,1"))
   (rule "compound_less_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
   (rule "assignment_read_length" (formula "13"))
   (branch "Normal Execution (a != null)"
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfAnon" (formula "13") (term "0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "replace_known_right" (formula "13") (term "0,0,0,0,0,1,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "ifthenelse_negated" (formula "13") (term "0,0,1,0"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "castDel" (formula "13") (term "1,0,0,1,0"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfCreate" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "replace_known_right" (formula "13") (term "0,0,0,0,0,0,1,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "castDel" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "less_than_comparison_new" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "assignment" (formula "13") (term "1,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "assignment" (formula "13") (term "1,2"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "0,0"))
      (rule "ifUnfold" (formula "13") (term "1,1,0,1,2") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "13") (term "1,1,0,1,2") (newnames "x_4"))
      (rule "ifUnfold" (formula "13") (term "1,1,0,1,1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "13") (term "1,1,0,1,1") (newnames "x_5"))
      (rule "ifthenelse_split_for" (formula "13"))
      (branch "array.length >= 1 + i_0 TRUE"
         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
         (rule "add_literals" (formula "9") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0"))
         (rule "qeq_literals" (formula "9") (term "0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (rule "emptyModality" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "compound_less_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_6"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_7"))
         (rule "assignment_read_length" (formula "13"))
         (branch "Normal Execution (a != null)"
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfAnon" (formula "13") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "replace_known_right" (formula "13") (term "0,0,0,0,0,1,0") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "ifthenelse_negated" (formula "13") (term "0,0,1,0"))
            (rule "selectOfStore" (formula "13") (term "1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfStore" (formula "13") (term "1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "castDel" (formula "13") (term "1,0,0,1,0"))
            (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfCreate" (formula "13") (term "0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "replace_known_right" (formula "13") (term "0,0,0,0,0,0,1,0") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "castDel" (formula "13") (term "0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "less_than_comparison_new" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "assignment" (formula "13") (term "1,2"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "assignment" (formula "13") (term "1,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0"))
            (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "ifSplit" (formula "13"))
            (branch "if x_5 true"
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_8"))
               (rule "compound_greater_than_comparison_1" (formula "13") (term "1") (inst "#v0=x_9"))
               (rule "variableDeclarationAssign" (formula "13") (term "1"))
               (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_9"))
               (rule "assignment_array2" (formula "13"))
               (branch "Normal Execution (var != null)"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfAnon" (formula "13") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "replace_known_right" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "ifthenelse_negated" (formula "13") (term "0,1,0"))
                  (rule "selectOfStore" (formula "13") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfStore" (formula "13") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfStore" (formula "13") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfStore" (formula "13") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfStore" (formula "13") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfStore" (formula "13") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfStore" (formula "13") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfCreate" (formula "13") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfStore" (formula "13") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "selectOfCreate" (formula "13") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "replace_known_right" (formula "13") (term "0,1,0,0,0,0,1,0") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "applyEq" (formula "13") (term "2,0,0,0,1,0") (ifseqformula "4"))
                  (rule "castDel" (formula "13") (term "1,0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "greater_than_comparison_new" (formula "13") (term "1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "assignment" (formula "13") (term "1,2"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "assignment" (formula "13") (term "1,1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                  (rule "allLeft" (formula "6") (inst "t=i_0"))
                  (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "6") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0,0"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "ifthenelse_split_for" (formula "14"))
                  (branch "array[i_0] >= 1 + tmp_0 TRUE"
                     (rule "ifSplit" (formula "15"))
                     (branch "if x_8 true"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment_array2" (formula "15"))
                        (branch "Normal Execution (var != null)"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "blockEmpty" (formula "15") (term "1"))
                           (rule "selectOfAnon" (formula "15") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_right" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "ifthenelse_negated" (formula "15") (term "0,1,0"))
                           (rule "selectOfStore" (formula "15") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "1,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfCreate" (formula "15") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_right" (formula "15") (term "0,1,0,0,0,0,1,0") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEq" (formula "15") (term "2,0,0,0,1,0") (ifseqformula "5"))
                           (rule "sortsDisjointModuloNull" (formula "15") (term "0,0,0,0,1,0"))
                           (rule "replace_known_right" (formula "15") (term "1,0,0,0,0,1,0") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfCreate" (formula "15") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "postincrement" (formula "15") (term "1"))
                           (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_11"))
                           (rule "remove_parentheses_right" (formula "15") (term "1"))
                           (rule "assignmentAdditionInt" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "15") (term "1"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "tryEmpty" (formula "15") (term "1"))
                           (rule "methodCallEmpty" (formula "15") (term "1"))
                           (rule "emptyModality" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1"))
                           (rule "add_literals" (formula "15") (term "0,0,1,1,1"))
                           (rule "add_zero_left" (formula "15") (term "0,1,1,1"))
                           (rule "polySimp_addAssoc" (formula "15") (term "1,1,1"))
                           (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,1,1"))
                           (rule "add_literals" (formula "15") (term "1,0,1,1,1"))
                           (rule "times_zero_1" (formula "15") (term "0,1,1,1"))
                           (rule "add_zero_left" (formula "15") (term "1,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "15") (term "0,0,0") (ifseqformula "10"))
                           (rule "leq_literals" (formula "15") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfAnon" (formula "15") (term "0,1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
                           (rule "ifthenelse_negated" (formula "15") (term "0,1,0,1,0,0"))
                           (rule "selectOfStore" (formula "15") (term "0,0,1,0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfAnon" (formula "15") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "ifthenelse_negated" (formula "15") (term "0,0,0,0,0"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,1,0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfAnon" (formula "15") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "ifthenelse_negated" (formula "15") (term "0,0,1,1"))
                           (rule "selectOfStore" (formula "15") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfAnon" (formula "15") (term "0,0,0,1"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "ifthenelse_negated" (formula "15") (term "0,0,0,1"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,1,0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "1,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "castDel" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "selectOfStore" (formula "15") (term "1,0,1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfAnon" (formula "15") (term "0,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "1,0,0,0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "1,0,0,0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "castDel" (formula "15") (term "1,0,0,0,1"))
                           (rule "selectOfStore" (formula "15") (term "1,0,1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,1,0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,1,0,0,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "1,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "eqSymm" (formula "15") (term "1,0,1,1,0,0,1,0"))
                           (rule "eqSymm" (formula "15") (term "0,0,1,1,0,0,1,0"))
                           (rule "castDel" (formula "15") (term "1,1,1,0,0,1,0"))
                           (rule "selectOfStore" (formula "15") (term "2,0,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "eqSymm" (formula "15") (term "1,0,2,0,1,0,0,1,0"))
                           (rule "eqSymm" (formula "15") (term "0,0,2,0,1,0,0,1,0"))
                           (rule "castDel" (formula "15") (term "1,2,0,1,0,0,1,0"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "1,0,1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfCreate" (formula "15") (term "0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "castDel" (formula "15") (term "0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                           (rule "selectOfCreate" (formula "15") (term "0,0,0,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "applyEq" (formula "15") (term "2,0,0,0,1,0,0,0") (ifseqformula "5"))
                           (rule "castDel" (formula "15") (term "1,0,0,0,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "2,2,0,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "eqSymm" (formula "15") (term "1,0,2,2,0,1,0,0,1,0"))
                           (rule "eqSymm" (formula "15") (term "0,0,2,2,0,1,0,0,1,0"))
                           (rule "castDel" (formula "15") (term "1,2,2,0,1,0,0,1,0"))
                           (rule "selectOfStore" (formula "15") (term "2,1,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "eqSymm" (formula "15") (term "1,0,2,1,1,0,0,1,0"))
                           (rule "eqSymm" (formula "15") (term "0,0,2,1,1,0,0,1,0"))
                           (rule "castDel" (formula "15") (term "1,2,1,1,0,0,1,0"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfCreate" (formula "15") (term "0,0,1,0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "eqSymm" (formula "15") (term "0,0,0,1,0,0,0,1,0"))
                           (rule "castDel" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
                           (rule "selectOfStore" (formula "15") (term "0,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "2,2,1,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "eqSymm" (formula "15") (term "1,0,2,2,1,1,0,0,1,0"))
                           (rule "eqSymm" (formula "15") (term "0,0,2,2,1,1,0,0,1,0"))
                           (rule "castDel" (formula "15") (term "1,2,2,1,1,0,0,1,0"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfCreate" (formula "15") (term "0,0,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "castDel" (formula "15") (term "0,0,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfCreate" (formula "15") (term "0,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "selectOfStore" (formula "15") (term "0,0,1,0,0,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,1,0,0,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,0,0,0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "0,0,1,0,0,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfStore" (formula "15") (term "2,2,2,0,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "eqSymm" (formula "15") (term "1,0,2,2,2,0,1,0,0,1,0"))
                           (rule "eqSymm" (formula "15") (term "0,0,2,2,2,0,1,0,0,1,0"))
                           (rule "castDel" (formula "15") (term "1,2,2,2,0,1,0,0,1,0"))
                           (rule "selectOfStore" (formula "15") (term "2,2,2,2,0,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "eqSymm" (formula "15") (term "1,0,2,2,2,2,0,1,0,0,1,0"))
                           (rule "eqSymm" (formula "15") (term "0,0,2,2,2,2,0,1,0,0,1,0"))
                           (rule "castDel" (formula "15") (term "1,2,2,2,2,0,1,0,0,1,0"))
                           (rule "selectOfStore" (formula "15") (term "0,0,1,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "castDel" (formula "15") (term "0,0,1,1"))
                           (rule "inEqSimp_homoInEq0" (formula "15") (term "1,1"))
                           (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,1"))
                           (rule "add_literals" (formula "15") (term "1,0,1,1"))
                           (rule "times_zero_1" (formula "15") (term "0,1,1"))
                           (rule "qeq_literals" (formula "15") (term "1,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfCreate" (formula "15") (term "0,0,0,0,1"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "castDel" (formula "15") (term "0,0,0,0,1"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                           (rule "selectOfCreate" (formula "15") (term "0,0,1,0,0,1,0,0,1"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                           (rule "eqSymm" (formula "15") (term "0,0,0,1,0,0,1,0,0,1"))
                           (rule "castDel" (formula "15") (term "1,0,0,1,0,0,1,0,0,1"))
                           (rule "selectOfCreate" (formula "15") (term "2,2,2,2,2,0,1,0,0,1"))
                           (rule "eqSymm" (formula "15") (term "0,0,0,2,2,2,2,2,0,1,0,0,1"))
                           (rule "replace_known_right" (formula "15") (term "0,1,0,0,2,2,2,2,2,0,1,0,0,1") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "castDel" (formula "15") (term "1,2,2,2,2,2,0,1,0,0,1"))
                           (rule "selectOfStore" (formula "15") (term "2,2,2,1,1,0,0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "eqSymm" (formula "15") (term "0,0,2,2,2,1,1,0,0,1"))
                           (rule "eqSymm" (formula "15") (term "1,0,2,2,2,1,1,0,0,1"))
                           (rule "castDel" (formula "15") (term "1,2,2,2,1,1,0,0,1"))
                           (rule "selectOfCreate" (formula "15") (term "2,2,2,2,1,1,0,0,1"))
                           (rule "eqSymm" (formula "15") (term "0,0,0,2,2,2,2,1,1,0,0,1"))
                           (rule "replace_known_right" (formula "15") (term "0,1,0,0,2,2,2,2,1,1,0,0,1") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "castDel" (formula "15") (term "1,2,2,2,2,1,1,0,0,1"))
                           (rule "andRight" (formula "15"))
                           (branch
                              (rule "allRight" (formula "15") (inst "sk=k_1"))
                              (rule "orRight" (formula "15"))
                              (rule "orRight" (formula "15"))
                              (rule "inEqSimp_leqRight" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_leqRight" (formula "16"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "17"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "allLeft" (formula "11") (inst "t=k_1"))
                              (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "11") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "cut_direct" (formula "11") (term "0"))
                              (branch "CUT: array.length <= k_1 TRUE"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0"))
                                 (rule "add_literals" (formula "5") (term "0"))
                                 (rule "leq_literals" (formula "5"))
                                 (rule "closeFalse" (formula "5"))
                              )
                              (branch "CUT: array.length <= k_1 FALSE"
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "inEqSimp_leqRight" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "allLeft" (formula "16") (inst "t=k_1"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "cut_direct" (formula "16") (term "0"))
                                 (branch "CUT: k_1 >= i_0 TRUE"
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "11") (term "0,2,0") (ifseqformula "15"))
                                    (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "1,0"))
                                    (rule "times_zero_1" (formula "15") (term "0"))
                                    (rule "leq_literals" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "13"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_literals" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: k_1 >= i_0 FALSE"
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_geqRight" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "3") (term "0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "7"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                           )
                           (branch
                              (rule "allRight" (formula "15") (inst "sk=f_2"))
                              (rule "allRight" (formula "15") (inst "sk=o_2"))
                              (rule "orRight" (formula "15"))
                              (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "closeTrue" (formula "16"))
                           )
                        )
                        (branch "Null Reference (var = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (var != null, but i Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "false_right" (formula "16"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "if x_8 false"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "array[i_0] >= 1 + tmp_0 FALSE"
                     (rule "inEqSimp_geqRight" (formula "14"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "7") (term "0,0"))
                     (rule "add_zero_left" (formula "7") (term "0"))
                     (rule "ifSplit" (formula "16"))
                     (branch "if x_8 true"
                        (builtin "One Step Simplification" (formula "17"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_8 false"
                        (builtin "One Step Simplification" (formula "17"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "blockEmpty" (formula "16") (term "1"))
                        (rule "postincrement" (formula "16") (term "1"))
                        (rule "compound_int_cast_expression" (formula "16") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "16") (term "1"))
                        (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_10"))
                        (rule "remove_parentheses_right" (formula "16") (term "1"))
                        (rule "assignmentAdditionInt" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "16") (term "1"))
                        (rule "assignment" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "tryEmpty" (formula "16") (term "1"))
                        (rule "methodCallEmpty" (formula "16") (term "1"))
                        (rule "emptyModality" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,1"))
                        (rule "add_literals" (formula "16") (term "0,0,1,1,1"))
                        (rule "add_zero_left" (formula "16") (term "0,1,1,1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "1,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,1,1"))
                        (rule "add_literals" (formula "16") (term "1,0,1,1,1"))
                        (rule "times_zero_1" (formula "16") (term "0,1,1,1"))
                        (rule "add_zero_left" (formula "16") (term "1,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "16") (term "0,0,0") (ifseqformula "11"))
                        (rule "leq_literals" (formula "16") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "1,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "0,0,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
                        (rule "castDel" (formula "16") (term "1,0,1,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,1,0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "2,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0,2,0,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "0,0,2,0,1,0,0,1,0"))
                        (rule "castDel" (formula "16") (term "1,2,0,1,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,1,0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfAnon" (formula "16") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "ifthenelse_negated" (formula "16") (term "0,0,0,0,0"))
                        (rule "selectOfAnon" (formula "16") (term "1,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "2,2,1,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0,2,2,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "0,0,2,2,1,1,0,0,1,0"))
                        (rule "castDel" (formula "16") (term "1,2,2,1,1,0,0,1,0"))
                        (rule "selectOfAnon" (formula "16") (term "0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "ifthenelse_negated" (formula "16") (term "0,0,1,1"))
                        (rule "selectOfAnon" (formula "16") (term "0,1,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
                        (rule "ifthenelse_negated" (formula "16") (term "0,1,0,1,0,0"))
                        (rule "selectOfStore" (formula "16") (term "1,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "2,2,2,1,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0,2,2,2,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "0,0,2,2,2,1,1,0,0,1,0"))
                        (rule "castDel" (formula "16") (term "1,2,2,2,1,1,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,1,0,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "1,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "1,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "castDel" (formula "16") (term "1,0,0,1,1"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "1,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "castDel" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "selectOfStore" (formula "16") (term "2,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0,2,0,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "0,0,2,0,1,0,0,1,0"))
                        (rule "castDel" (formula "16") (term "1,2,0,1,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "2,2,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "0,0,2,2,0,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "1,0,2,2,0,1,0,0,1,0"))
                        (rule "castDel" (formula "16") (term "1,2,2,0,1,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,1,0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,1,0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfCreate" (formula "16") (term "2,2,2,2,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "0,0,0,2,2,2,2,1,1,0,0,1,0"))
                        (rule "replace_known_right" (formula "16") (term "0,1,0,0,2,2,2,2,1,1,0,0,1,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "castDel" (formula "16") (term "1,2,2,2,2,1,1,0,0,1,0"))
                        (rule "selectOfAnon" (formula "16") (term "0,0,0,1"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "ifthenelse_negated" (formula "16") (term "0,0,0,1"))
                        (rule "selectOfStore" (formula "16") (term "1,0,1,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfCreate" (formula "16") (term "0,0,1,0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "eqSymm" (formula "16") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "castDel" (formula "16") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,1,0,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "1,0,0,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfCreate" (formula "16") (term "0,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "castDel" (formula "16") (term "0,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "2")))
                        (rule "selectOfStore" (formula "16") (term "0,0,1,0,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "2,2,2,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0,2,2,2,0,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "0,0,2,2,2,0,1,0,0,1,0"))
                        (rule "castDel" (formula "16") (term "1,2,2,2,0,1,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "1,0,1,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "1,0,1,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "1,0,1,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,1,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfCreate" (formula "16") (term "1,0,1,0,0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "selectOfStore" (formula "16") (term "2,2,2,2,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0,2,2,2,2,0,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "0,0,2,2,2,2,0,1,0,0,1,0"))
                        (rule "castDel" (formula "16") (term "1,2,2,2,2,0,1,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,1,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "1,0,0,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "castDel" (formula "16") (term "1,0,0,0,1"))
                        (rule "selectOfCreate" (formula "16") (term "0,0,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "castDel" (formula "16") (term "0,0,0,0,1,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_homoInEq0" (formula "16") (term "1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,1"))
                        (rule "add_literals" (formula "16") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "16") (term "0,1,1"))
                        (rule "qeq_literals" (formula "16") (term "1,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,1,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,1,0,0,1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfCreate" (formula "16") (term "2,2,2,2,2,0,1,0,0,1,0"))
                        (rule "eqSymm" (formula "16") (term "0,0,0,2,2,2,2,2,0,1,0,0,1,0"))
                        (rule "replace_known_right" (formula "16") (term "0,1,0,0,2,2,2,2,2,0,1,0,0,1,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "castDel" (formula "16") (term "1,2,2,2,2,2,0,1,0,0,1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfCreate" (formula "16") (term "0,0,0,0,1"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "castDel" (formula "16") (term "0,0,0,0,1"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "2")))
                        (rule "selectOfCreate" (formula "16") (term "0,0,1,0,0,1,0,0,1"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "eqSymm" (formula "16") (term "0,0,0,1,0,0,1,0,0,1"))
                        (rule "castDel" (formula "16") (term "1,0,0,1,0,0,1,0,0,1"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfCreate" (formula "16") (term "0,0,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                        (rule "applyEq" (formula "16") (term "2,0,0,0,1,0,0") (ifseqformula "5"))
                        (rule "sortsDisjointModuloNull" (formula "16") (term "0,0,0,0,1,0,0"))
                        (rule "replace_known_right" (formula "16") (term "0,0,0,0,0,1,0,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
                        (rule "andRight" (formula "16"))
                        (branch
                           (rule "allRight" (formula "16") (inst "sk=k_0"))
                           (rule "orRight" (formula "16"))
                           (rule "orRight" (formula "16"))
                           (rule "inEqSimp_leqRight" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_leqRight" (formula "17"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "18"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "allLeft" (formula "15") (inst "t=k_0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                           (rule "add_literals" (formula "15") (term "0,0,1"))
                           (rule "leq_literals" (formula "15") (term "0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "15") (term "0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "15"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "1,0"))
                           (rule "times_zero_1" (formula "15") (term "0"))
                           (rule "leq_literals" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "14"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch
                           (rule "allRight" (formula "16") (inst "sk=f_1"))
                           (rule "allRight" (formula "16") (inst "sk=o_1"))
                           (rule "orRight" (formula "16"))
                           (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "closeTrue" (formula "17"))
                        )
                     )
                  )
               )
               (branch "Null Reference (var = null)"
                  (builtin "One Step Simplification" (formula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (var != null, but i Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (rule "false_right" (formula "14"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "closeFalse" (formula "9"))
               )
            )
            (branch "if x_5 false"
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (a = null)"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "false_right" (formula "14"))
            (rule "selectOfAnon" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "selectOfStore" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfStore" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfStore" (formula "1") (term "1,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfStore" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfStore" (formula "1") (term "1,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "selectOfStore" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfCreate" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "castDel" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "array.length >= 1 + i_0 FALSE"
         (rule "inEqSimp_geqRight" (formula "13"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
         (rule "applyEq" (formula "5") (term "0") (ifseqformula "9"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "13") (term "1,0,1,1,1,0,0") (ifseqformula "7"))
         (rule "polySimp_pullOutFactor2" (formula "13") (term "0,1,1,1,0,0"))
         (rule "add_literals" (formula "13") (term "1,0,1,1,1,0,0"))
         (rule "times_zero_1" (formula "13") (term "0,1,1,1,0,0"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,0"))
         (rule "times_zero_1" (formula "8") (term "0"))
         (rule "leq_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "applyEq" (formula "4") (term "1,1,0,0") (ifseqformula "7"))
         (rule "methodCallEmpty" (formula "12") (term "1"))
         (rule "emptyModality" (formula "12") (term "1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "closeTrue" (formula "12"))
      )
   )
   (branch "Null Reference (a = null)"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "false_right" (formula "14"))
      (rule "selectOfAnon" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "selectOfStore" (formula "1") (term "1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfStore" (formula "1") (term "1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "1,0"))
      (rule "selectOfStore" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfStore" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfStore" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfStore" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfCreate" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "castDel" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "b_1"))
   (rule "blockEmpty" (formula "13") (term "1,0,1"))
   (rule "assignment" (formula "13") (term "1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
   (rule "selectOfAnon" (formula "8") (term "0,0"))
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "10")))
   (rule "ifthenelse_negated" (formula "8") (term "0,0"))
   (rule "selectOfAnon" (formula "9") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "12")))
   (rule "ifthenelse_negated" (formula "9") (term "0,1,0"))
   (rule "selectOfStore" (formula "8") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "8") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "castDel" (formula "8") (term "1,0,0"))
   (rule "selectOfStore" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfCreate" (formula "9") (term "1,0,1,0"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "10")))
   (rule "selectOfCreate" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "10")))
   (rule "castDel" (formula "8") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfCreate" (formula "9") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "10")))
   (rule "applyEq" (formula "9") (term "2,0,0,0,1,0") (ifseqformula "3"))
   (rule "castDel" (formula "9") (term "1,0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "nnf_imp2or" (formula "9") (term "0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,0"))
   (rule "compound_less_than_comparison_2" (formula "13") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
   (rule "assignment" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_1"))
   (rule "assignment_read_length" (formula "13"))
   (branch "Normal Execution (a != null)"
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfAnon" (formula "13") (term "0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "replace_known_right" (formula "13") (term "0,0,0,0,0,1,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "ifthenelse_negated" (formula "13") (term "0,0,1,0"))
      (rule "selectOfStore" (formula "13") (term "1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "castDel" (formula "13") (term "1,0,0,1,0"))
      (rule "selectOfCreate" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "replace_known_right" (formula "13") (term "0,0,0,0,0,0,1,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "castDel" (formula "13") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "less_than_comparison_new" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "assignment" (formula "13") (term "1,2"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "assignment" (formula "13") (term "1,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "0,0"))
      (rule "ifthenelse_split_for" (formula "13"))
      (branch "array.length >= 1 + i_0 TRUE"
         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
         (rule "add_literals" (formula "9") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0"))
         (rule "qeq_literals" (formula "9") (term "0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (rule "emptyModality" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "closeTrue" (formula "13"))
      )
      (branch "array.length >= 1 + i_0 FALSE"
         (rule "inEqSimp_geqRight" (formula "13"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "4") (term "0") (ifseqformula "8"))
         (rule "applyEq" (formula "4") (term "1,1,0,0") (ifseqformula "7"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,0"))
         (rule "times_zero_1" (formula "8") (term "0"))
         (rule "leq_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "methodCallEmpty" (formula "12") (term "1"))
         (rule "emptyModality" (formula "12") (term "1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "methodCallEmpty" (formula "12") (term "1"))
         (rule "blockEmpty" (formula "12") (term "1"))
         (rule "assignment_write_attribute" (formula "12"))
         (branch "Normal Execution (l != null)"
            (builtin "One Step Simplification" (formula "12"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "tryEmpty" (formula "12") (term "1"))
            (rule "emptyModality" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "eqSymm" (formula "12") (term "1,0,0,1"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,1,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,1,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "eqSymm" (formula "12") (term "1,0,0,1,0,0,1"))
            (rule "eqSymm" (formula "12") (term "0,0,0,1,0,0,1"))
            (rule "castDel" (formula "12") (term "1,0,1,0,0,1"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfAnon" (formula "12") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
            (rule "ifthenelse_negated" (formula "12") (term "0,0,0,0"))
            (rule "selectOfAnon" (formula "12") (term "0,1,0,0"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
            (rule "ifthenelse_negated" (formula "12") (term "0,1,0,0"))
            (rule "selectOfStore" (formula "12") (term "2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "eqSymm" (formula "12") (term "0,0,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "12") (term "1,0,2,0,1,0,0,1"))
            (rule "castDel" (formula "12") (term "1,2,0,1,0,0,1"))
            (rule "selectOfStore" (formula "12") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "castDel" (formula "12") (term "1,0,0,0,0"))
            (rule "selectOfStore" (formula "12") (term "1,0,1,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "castDelInt" (formula "12") (term "1,0,1,0,0"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,1,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,1,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,1,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,1,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfAnon" (formula "12") (term "2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,1,0,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfCreate" (formula "12") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
            (rule "castDel" (formula "12") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,1,0,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,1,0,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "0,0,1,0,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "12") (term "2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "eqSymm" (formula "12") (term "0,0,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "12") (term "1,0,2,2,2,0,1,0,0,1"))
            (rule "castDel" (formula "12") (term "1,2,2,2,0,1,0,0,1"))
            (rule "selectOfStore" (formula "12") (term "2,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "eqSymm" (formula "12") (term "1,0,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "12") (term "0,0,2,2,2,2,0,1,0,0,1"))
            (rule "castDel" (formula "12") (term "1,2,2,2,2,0,1,0,0,1"))
            (rule "selectOfStore" (formula "12") (term "2,2,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "eqSymm" (formula "12") (term "1,0,2,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "12") (term "0,0,2,2,2,2,2,0,1,0,0,1"))
            (rule "castDel" (formula "12") (term "1,2,2,2,2,2,0,1,0,0,1"))
            (rule "selectOfStore" (formula "12") (term "2,2,2,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "eqSymm" (formula "12") (term "1,0,2,2,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "12") (term "0,0,2,2,2,2,2,2,0,1,0,0,1"))
            (rule "castDel" (formula "12") (term "1,2,2,2,2,2,2,0,1,0,0,1"))
            (rule "selectOfCreate" (formula "12") (term "0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
            (rule "castDel" (formula "12") (term "0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfCreate" (formula "12") (term "2,2,2,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "12") (term "0,0,0,2,2,2,2,2,2,2,0,1,0,0,1"))
            (rule "replace_known_right" (formula "12") (term "0,1,0,0,2,2,2,2,2,2,2,0,1,0,0,1") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "castDel" (formula "12") (term "1,2,2,2,2,2,2,2,0,1,0,0,1"))
            (rule "selectOfCreate" (formula "12") (term "0,0,1,0,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
            (rule "eqSymm" (formula "12") (term "0,0,0,1,0,2,2,0,1,0,0,1"))
            (rule "castDel" (formula "12") (term "1,0,0,1,0,2,2,0,1,0,0,1"))
            (rule "Class_invariant_axiom_for_List" (formula "12") (term "0") (inst "i=_var1") (inst "i_0=_var0") (inst "sk=sk_0"))
            (branch "Use Axiom"
               (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_commuteGeq" (formula "12") (term "1,1,0,0,0,0"))
               (rule "selectOfStore" (formula "12") (term "0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfAnon" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "ifthenelse_negated" (formula "12") (term "0,0,0,0,0,0,0"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDelInt" (formula "12") (term "1,1,0,1,0,0"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfAnon" (formula "12") (term "0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "ifthenelse_negated" (formula "12") (term "0,0,1,0,0,0,0"))
               (rule "selectOfStore" (formula "12") (term "0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDelInt" (formula "12") (term "1,0,0,1,0,0,0,0"))
               (rule "selectOfAnon" (formula "12") (term "1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "ifthenelse_negated" (formula "12") (term "1,0,1,0,1,0"))
               (rule "selectOfStore" (formula "12") (term "0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,1,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,0,0,0"))
               (rule "selectOfAnon" (formula "12") (term "1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "ifthenelse_negated" (formula "12") (term "1,0,1,0,1,0,0"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfAnon" (formula "12") (term "0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "2,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,2,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,1,1,0,1,0,1,0,0"))
               (rule "selectOfStore" (formula "12") (term "2,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,2,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfAnon" (formula "12") (term "0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "ifthenelse_negated" (formula "12") (term "0,1,1,1,0,0,1,0,0"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfAnon" (formula "12") (term "0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "ifthenelse_negated" (formula "12") (term "0,0,1,0,0,0"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,0,0,0,0,0,0,0"))
               (rule "selectOfAnon" (formula "12") (term "1,1,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "inEqSimp_commuteGeq" (formula "12") (term "1,1,0,0,0,0"))
               (rule "ifthenelse_negated" (formula "12") (term "0,1,1,0,0,0,0"))
               (rule "selectOfAnon" (formula "12") (term "0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,1,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,1,1,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "0,0,0,0,0,1,0,1,0,0"))
               (rule "replace_known_right" (formula "12") (term "0,0,0,0,1,0,1,0,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "ifthenelse_negated" (formula "12") (term "0,1,0,1,0,0"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,0,1,1,1,0,0,1,0,0"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,0,0,1,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfAnon" (formula "12") (term "0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "ifthenelse_negated" (formula "12") (term "0,1,1,1,0,0,1,0"))
               (rule "selectOfStore" (formula "12") (term "1,1,0,0,1,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,1,0,0,1,0,0,1,0,1,0"))
               (rule "selectOfCreate" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,1,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,1,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,2,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,2,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,1,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,1,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "2,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,2,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,1,1,0,1,0,1,0,0"))
               (rule "selectOfCreate" (formula "12") (term "0,0,1,2,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,1,2,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,0,0,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,1,1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,1,1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,1,0,1,0,1,0"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "1,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "selectOfStore" (formula "12") (term "1,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDelInt" (formula "12") (term "1,0,1,0,0,0,0"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,0,1,1,1,0,0,1,0"))
               (rule "selectOfStore" (formula "12") (term "1,2,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,1,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "eqSymm" (formula "12") (term "0,0,0,1,0,0,1,0,1,0"))
               (rule "castDel" (formula "12") (term "1,0,0,1,0,0,1,0,1,0"))
               (rule "sortsDisjointModuloNull" (formula "12") (term "0,0,0,1,0,0,1,0,1,0"))
               (rule "replace_known_right" (formula "12") (term "1,0,0,0,1,0,0,1,0,1,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,0,0,1,0,0,0"))
               (rule "selectOfStore" (formula "12") (term "2,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "0,0,0,0,0,1,0,1,0"))
               (rule "replace_known_right" (formula "12") (term "0,0,0,0,1,0,1,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "ifthenelse_negated" (formula "12") (term "0,1,0,1,0"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "eqSymm" (formula "12") (term "0,0,0,0,1,0,1,0,0"))
               (rule "castDel" (formula "12") (term "1,0,0,0,1,0,1,0,0"))
               (rule "sortsDisjointModuloNull" (formula "12") (term "0,0,0,0,1,0,1,0,0"))
               (rule "replace_known_right" (formula "12") (term "1,0,0,0,0,1,0,1,0,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,0,1,1,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "applyEq" (formula "12") (term "1,1,1,0,0,1,0,0") (ifseqformula "7"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfAnon" (formula "12") (term "0,1,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0"))
               (rule "ifthenelse_negated" (formula "12") (term "0,0,1,0,0,0,0"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,2,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,1,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,1,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,1,0,1,0,1,0"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,0,0,1,0,0,0,0"))
               (rule "selectOfCreate" (formula "12") (term "0,0,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "1,0,0,0,1,0,1,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "castDel" (formula "12") (term "1,0,0,0,1,0,1,0,0"))
               (rule "replace_known_left" (formula "12") (term "0,0,1,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,0,1,1,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "applyEq" (formula "12") (term "1,1,1,0,0,1,0") (ifseqformula "7"))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,1,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,1,1,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "qeq_literals" (formula "12") (term "0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,1,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,1,0,0,0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "3")))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfStore" (formula "12") (term "0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,1,0,1,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "selectOfStore" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectOfCreate" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "castDel" (formula "12") (term "0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "7"))
               (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0,1,0"))
               (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "nnf_notAnd" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0,0"))
               (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "allRight" (formula "12") (inst "sk=f_0"))
               (rule "allRight" (formula "12") (inst "sk=o_0"))
               (rule "orRight" (formula "12"))
               (rule "orRight" (formula "12"))
               (rule "replace_known_right" (formula "14") (term "0,0,2,2,2,2,2,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")))
               (rule "closeTrue" (formula "14"))
            )
            (branch "Show Axiom Satisfiability"
               (builtin "One Step Simplification" (formula "12"))
               (rule "closeTrue" (formula "12"))
            )
         )
         (branch "Null Reference (l = null)"
            (builtin "One Step Simplification" (formula "13"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (a = null)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "false_right" (formula "14"))
      (rule "selectOfAnon" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "selectOfStore" (formula "1") (term "1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfStore" (formula "1") (term "1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "1,0"))
      (rule "selectOfStore" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfStore" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfStore" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfStore" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectOfCreate" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "castDel" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
