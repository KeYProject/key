\settings {
"#Proof-Settings-Config-File
#Thu Nov 10 13:51:59 CET 2011
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=false
[View]HideClosedSubtrees=true
[General]UseOCL=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[View]ShowWholeTaclet=false
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[View]MaxTooltipLines=40
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource "src";

\chooseContract "JML operation contract [id: 1 / List::pop]";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "1d23877b4d7e54300af1151f620642fdcafd3c1b"))

(autoModeTime "527")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "translateJavaAddInt" (formula "7") (term "1,0,1,0,0,0,1"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "polySimp_homoEq" (formula "7") (term "0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "4"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
(rule "polySimp_addComm0" (formula "7") (term "0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0,0,1"))
(rule "polySimp_sepPosMonomial" (formula "7") (term "0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "4"))
(rule "polySimp_mulComm0" (formula "4") (term "1"))
(rule "polySimp_rightDist" (formula "4") (term "1"))
(rule "mul_literals" (formula "4") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
(rule "polySimp_elimOne" (formula "4") (term "1,1"))
(rule "elementOfSingleton" (formula "7") (term "0,0,0,0,1,0,1"))
(rule "Class_invariant_axiom_for_List" (formula "5") (inst "i=_var1") (inst "i_0=_var0") (inst "sk=sk_0"))
(branch "Use Axiom"
   (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "6"))
   (rule "andLeft" (formula "5"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
   (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "5"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
   (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
   (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
   (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
   (rule "add_literals" (formula "6") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "6") (term "1,0,0"))
   (rule "add_literals" (formula "6") (term "0,0"))
   (rule "qeq_literals" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
   (rule "times_zero_1" (formula "5") (term "0,0"))
   (rule "add_zero_left" (formula "5") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
   (rule "mul_literals" (formula "5") (term "1"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_imp2or" (formula "7") (term "0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "7") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
   (rule "mul_literals" (formula "7") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
   (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_pop,savedHeapBefore_pop"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "returnUnfold" (formula "11") (term "1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x"))
   (rule "eval_order_array_access5" (formula "11") (term "1") (inst "#v1=x_1") (inst "#ar1=x_arr"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_arr"))
   (rule "assignment" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_1"))
   (rule "postincrement_assignment" (formula "11") (term "1") (inst "#v=x_2"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "compound_int_cast_expression" (formula "11") (term "1") (inst "#v=x_3"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_3"))
   (rule "remove_parentheses_right" (formula "11") (term "1"))
   (rule "assignmentAdditionInt" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "translateJavaAddInt" (formula "11") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
   (rule "widening_identity_cast_5" (formula "11") (term "1"))
   (rule "assignment" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "assignment" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "assignment_array2" (formula "11"))
   (branch "Normal Execution (x_arr != null)"
      (builtin "One Step Simplification" (formula "11"))
      (rule "selectOfStore" (formula "11") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallReturn" (formula "11") (term "1"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallEmpty" (formula "11") (term "1"))
      (rule "tryEmpty" (formula "11") (term "1"))
      (rule "emptyModality" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "eqSymm" (formula "11") (term "1,0,0,1"))
      (rule "polySimp_homoEq" (formula "11") (term "0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
      (rule "polySimp_sepPosMonomial" (formula "11") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "selectOfStore" (formula "11") (term "0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "eqSymm" (formula "11") (term "1,0,0,1,0,0,1"))
      (rule "eqSymm" (formula "11") (term "0,0,0,1,0,0,1"))
      (rule "castDel" (formula "11") (term "1,0,1,0,0,1"))
      (rule "selectOfStore" (formula "11") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "castDelInt" (formula "11") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "Class_invariant_axiom_for_List" (formula "11") (term "0") (inst "i=_var3") (inst "i_0=_var2") (inst "sk=sk_1"))
      (branch "Use Axiom"
         (builtin "One Step Simplification" (formula "11"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0"))
         (rule "selectOfStore" (formula "11") (term "0,0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")))
         (rule "selectOfStore" (formula "11") (term "0,1,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "selectOfStore" (formula "11") (term "1,1,1,0,0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "castDelInt" (formula "11") (term "1,1,1,0,0,0"))
         (rule "selectOfStore" (formula "11") (term "0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")))
         (rule "selectOfStore" (formula "11") (term "0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "selectOfStore" (formula "11") (term "1,0,1,0,1,0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "selectOfStore" (formula "11") (term "1,1,0,1,0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "selectOfStore" (formula "11") (term "0,1,0,1,0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "selectOfStore" (formula "11") (term "1,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "selectOfStore" (formula "11") (term "0,0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
         (rule "replace_known_left" (formula "11") (term "1,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "selectOfStore" (formula "11") (term "0,1,1,1,0,0,1,0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "selectOfStore" (formula "11") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "castDelInt" (formula "11") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "inEqSimp_subsumption1" (formula "11") (term "0,0,0") (ifseqformula "6"))
         (rule "leq_literals" (formula "11") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "nnf_imp2or" (formula "11") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "11") (term "0,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0"))
         (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
         (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "allRight" (formula "11") (inst "sk=f_0"))
         (rule "allRight" (formula "11") (inst "sk=o_0"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "11"))
         (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "closeTrue" (formula "13"))
      )
      (branch "Show Axiom Satisfiability"
         (builtin "One Step Simplification" (formula "11"))
         (rule "closeTrue" (formula "11"))
      )
   )
   (branch "Null Reference (x_arr = null)"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (x_arr != null, but x_1 Out of Bounds!)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
      (builtin "One Step Simplification" (formula "12"))
      (rule "false_right" (formula "12"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_literals" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "7"))
      (rule "qeq_literals" (formula "1") (term "0,1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "1"))
      (rule "andLeft" (formula "5"))
      (rule "inEqSimp_homoInEq1" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0"))
      (rule "polySimp_addComm0" (formula "5") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
      (rule "add_literals" (formula "5") (term "1,1,0"))
      (rule "times_zero_1" (formula "5") (term "1,0"))
      (rule "add_zero_right" (formula "5") (term "0"))
      (rule "leq_literals" (formula "5"))
      (rule "closeFalse" (formula "5"))
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "6"))
   (rule "closeTrue" (formula "6"))
)
)

}
