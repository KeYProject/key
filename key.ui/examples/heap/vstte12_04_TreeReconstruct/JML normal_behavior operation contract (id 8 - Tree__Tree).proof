\settings {
"#Proof-Settings-Config-File
#Thu Nov 10 13:52:04 CET 2011
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=false
[View]HideClosedSubtrees=true
[General]UseOCL=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[View]ShowWholeTaclet=false
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[View]MaxTooltipLines=40
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource "src";

\chooseContract "JML normal_behavior operation contract [id: 8 / Tree::Tree]";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "1d23877b4d7e54300af1151f620642fdcafd3c1b"))

(autoModeTime "2099")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "3") (term "1") (ifseqformula "4"))
(builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "1") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "castedGetAny" (formula "6") (term "0,1,0,1,0,0,0,0,1"))
(rule "eqSymm" (formula "6") (term "1,0,1,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "6") (term "0,1,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "6") (term "0,0,1,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,1,0,0,0,0,1"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0,1,0,0,0,0,1"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,1,0,0,0,0,1"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "1,0,0,0,1,0,0,0,0,1"))
(rule "instanceCreationAssignment" (formula "6") (term "1") (inst "#v0=t"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "t"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=t_1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "t_1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=t_2"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "t_2"))
(rule "allocateInstance" (formula "6"))
(builtin "One Step Simplification" (formula "7"))
(builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallWithinClass" (formula "9") (term "1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallSuper" (formula "9") (term "1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "9") (term "1"))
(rule "methodCallReturn" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "var"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "var_1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallSuper" (formula "9") (term "1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "selectOfStore" (formula "9") (term "1,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "selectOfStore" (formula "9") (term "0,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "selectOfStore" (formula "9") (term "1,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "selectOfStore" (formula "9") (term "0,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "selectOfStore" (formula "9") (term "0,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "castDel" (formula "9") (term "1,0,0,3,0,0,0,1,0"))
(rule "selectOfStore" (formula "9") (term "1,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "castDel" (formula "9") (term "1,1,0,3,0,0,0,1,0"))
(rule "selectOfStore" (formula "9") (term "2,0,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "selectOfStore" (formula "9") (term "2,1,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "selectOfCreate" (formula "9") (term "2,0,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "selectOfCreate" (formula "9") (term "2,1,0,3,0,0,0,1,0"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment_write_attribute" (formula "9"))
(branch "Normal Execution (t != null)"
   (builtin "One Step Simplification" (formula "9"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "tryEmpty" (formula "9") (term "1"))
   (rule "emptyModality" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eqSymm" (formula "9") (term "1,0,0,1"))
   (rule "selectOfStore" (formula "9") (term "0,1,1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,1,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,1,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,1,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eqSymm" (formula "9") (term "1,0,0,0"))
   (rule "selectOfStore" (formula "9") (term "0,1,0,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eqSymm" (formula "9") (term "0,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "9") (term "1,0,0,1,0,0,1"))
   (rule "castDel" (formula "9") (term "1,0,1,0,0,1"))
   (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "1,0,0,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eqSymm" (formula "9") (term "1,0,0,0"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,1,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,1,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eqSymm" (formula "9") (term "1,0,0,0"))
   (rule "selectOfStore" (formula "9") (term "0,1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "0,1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "2,0,1,0,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eqSymm" (formula "9") (term "1,0,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "9") (term "0,0,2,0,1,0,0,1"))
   (rule "castDel" (formula "9") (term "1,2,0,1,0,0,1"))
   (rule "selectOfStore" (formula "9") (term "1,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "1,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "1,1,0,0,0"))
   (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "1,0,0,0,1,0,0,0"))
   (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,1,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "1,0,0,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "1,0,0,1,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,1,1,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "0,1,1,0,0,1,0,0"))
   (rule "lenOfSeqInc" (formula "9") (term "1,1,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "9") (term "1,1,0,0,1,0,0"))
   (rule "selectOfStore" (formula "9") (term "0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfCreate" (formula "9") (term "2,0,0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
   (rule "selectOfStore" (formula "9") (term "1,0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "1,1,0,0,0,0,0"))
   (rule "selectOfStore" (formula "9") (term "2,2,0,1,0,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eqSymm" (formula "9") (term "0,0,2,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "9") (term "1,0,2,2,0,1,0,0,1"))
   (rule "castDel" (formula "9") (term "1,2,2,0,1,0,0,1"))
   (rule "selectOfCreate" (formula "9") (term "2,1,0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
   (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "0,0,1,0,1,0,0"))
   (rule "getOfSeqInc" (formula "9") (term "0,1,0,1,0,0"))
   (rule "polySimp_homoEq" (formula "9") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "1,1,0,1,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,1,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,0,0"))
   (rule "polySimp_sepNegMonomial" (formula "9") (term "1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "0,1,0,1,0,0"))
   (rule "castedGetAny" (formula "9") (term "0,1,0,1,0,0"))
   (rule "polySimp_homoEq" (formula "9") (term "1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,0,0"))
   (rule "polySimp_sepPosMonomial" (formula "9") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,0,0"))
   (rule "selectOfStore" (formula "9") (term "2,2,2,0,1,0,0,1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eqSymm" (formula "9") (term "0,0,2,2,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "9") (term "1,0,2,2,2,0,1,0,0,1"))
   (rule "castDel" (formula "9") (term "1,2,2,2,0,1,0,0,1"))
   (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "0,0,1,0,1,0,0"))
   (rule "getOfSeqInc" (formula "9") (term "0,1,0,1,0,0"))
   (rule "castDelInt" (formula "9") (term "0,0,1,0,1,0,0"))
   (rule "polySimp_homoEq" (formula "9") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "1,1,0,1,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,1,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,1,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,1,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,0,1,0,1,0,0"))
   (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,0,1,0,0"))
   (rule "add_literals" (formula "9") (term "1,0,1,0,1,0,0"))
   (rule "times_zero_1" (formula "9") (term "0,1,0,1,0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "selectOfCreate" (formula "9") (term "2,2,2,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "9") (term "0,0,0,2,2,2,2,0,1,0,0,1"))
   (rule "replace_known_right" (formula "9") (term "0,1,0,0,2,2,2,2,0,1,0,0,1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "castDel" (formula "9") (term "1,2,2,2,2,0,1,0,0,1"))
   (rule "Class_invariant_axiom_for_Tree" (formula "9") (term "1,0") (inst "i=_var0") (inst "sk=sk_0") (ifseqformula "1"))
   (branch "Use Axiom"
      (builtin "One Step Simplification" (formula "9"))
      (rule "eqSymm" (formula "9") (term "1,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,0,1,0"))
      (rule "castedGetAny" (formula "9") (term "0,1,0,1,0,0,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,1,0,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,0,0,1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,0,0,0,1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,0,0,1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,0,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,0,0,1,0,1,0"))
      (rule "replace_known_right" (formula "9") (term "0,0,1,0,1,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,0,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,0,0,0,0,1,0"))
      (rule "replace_known_right" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "eqSymm" (formula "9") (term "0,1,0,0,1,0,1,0"))
      (rule "castDel" (formula "9") (term "1,1,0,0,1,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,0,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "eqSymm" (formula "9") (term "0,0,0,0,1,0,1,0"))
      (rule "castDel" (formula "9") (term "1,0,0,0,1,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,0,1,0,1,0,0,1,0"))
      (rule "getOfSeqInc" (formula "9") (term "0,1,0,1,0,0,1,0"))
      (rule "polySimp_homoEq" (formula "9") (term "1,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "1,1,0,1,0,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,1,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,1,0,0,1,0"))
      (rule "polySimp_sepNegMonomial" (formula "9") (term "1,0,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,1,0,1,0,0,1,0"))
      (rule "castedGetAny" (formula "9") (term "0,1,0,1,0,0,1,0"))
      (rule "polySimp_homoEq" (formula "9") (term "1,0,1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,1,0,1,0,0,1,0"))
      (rule "polySimp_sepPosMonomial" (formula "9") (term "1,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,0,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,0,0,0,0,1,0"))
      (rule "replace_known_right" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,2,0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,1,0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfCreate" (formula "9") (term "2,0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
      (rule "selectOfStore" (formula "9") (term "1,2,0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "1,2,0,0,0,1,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,1,0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "getOfSeqConcat" (formula "9") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,2,1,1,1,0,0,0,1,0"))
      (rule "polySimp_homoEq" (formula "9") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "1,2,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_sepPosMonomial" (formula "9") (term "1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,0,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,1,1,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,1,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,1,1,1,0,0,0,1,0"))
      (rule "getOfSeqInc" (formula "9") (term "1,1,1,0,0,0,1,0"))
      (rule "castDelInt" (formula "9") (term "0,1,1,1,0,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0,0,1,0"))
      (rule "add_literals" (formula "9") (term "0,1,1,0,0,0,1,0"))
      (rule "add_zero_left" (formula "9") (term "1,1,0,0,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "1,2,1,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "1,1,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,1,0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,0,1,1,0"))
      (rule "replace_known_right" (formula "9") (term "0,1,1,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,0,1,0,0,1,1,0"))
      (rule "eqSymm" (formula "9") (term "0,1,0,0,1,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,1,1,1,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,1,1,1,0,0,0,1,0"))
      (rule "lenOfSeqInc" (formula "9") (term "1,1,1,0,0,0,1,0"))
      (rule "lenOfSeqConcat" (formula "9") (term "1,1,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "1,1,0,0,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfCreate" (formula "9") (term "2,1,0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
      (rule "getOfSeqConcat" (formula "9") (term "1,1,0,0,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,2,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "1,2,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "9") (term "1,2,1,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "1,2,1,0,0,1,0"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "0,0,0,0,0,1,0"))
      (rule "eqSymm" (formula "9") (term "0,0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "ifthenelse_split" (formula "9") (term "1,0,1,1,0,0,0"))
      (branch "t_2 = r TRUE"
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
         (rule "applyEq" (formula "9") (term "1,0,0,2,2,2,2,0,1,0,0,1") (ifseqformula "1"))
         (rule "applyEq" (formula "9") (term "0,0,0,1,2,2,2,0,1,0,0,1") (ifseqformula "1"))
         (rule "applyEq" (formula "9") (term "0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "1"))
         (rule "close" (formula "6") (ifseqformula "5"))
      )
      (branch "t_2 = r FALSE"
         (rule "replace_known_right" (formula "10") (term "0,1,0,1,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
         (rule "ifthenelse_split" (formula "10") (term "0,0,1,0,0,0,0"))
         (branch "t_2 = l TRUE"
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "11") (term "1,0,0,2,2,2,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "1"))
            (rule "close" (formula "6") (ifseqformula "4"))
         )
         (branch "t_2 = l FALSE"
            (rule "replace_known_right" (formula "11") (term "0,0,0,1,0") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
            (rule "allRight" (formula "11") (inst "sk=f_0"))
            (rule "allRight" (formula "11") (inst "sk=o_0"))
            (rule "orRight" (formula "11"))
            (rule "commute_and" (formula "12") (term "0,2,2,2,0"))
            (rule "commute_and" (formula "12") (term "0,2,0"))
            (rule "commute_and" (formula "12") (term "0,2,2,2,2,0"))
            (rule "commute_and" (formula "12") (term "0,2,2,0"))
            (rule "commute_and" (formula "12") (term "0,0"))
            (rule "ifthenelse_split" (formula "12") (term "2,2,2,0"))
            (branch "f_0 = heights & o_0 = t_2 TRUE"
               (rule "andLeft" (formula "1"))
               (rule "replace_known_left" (formula "14") (term "1,0,2,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
               (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "applyEq" (formula "13") (term "1,0,0,1") (ifseqformula "2"))
               (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "notRight" (formula "13"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
               (rule "close" (formula "9") (ifseqformula "1"))
            )
            (branch "f_0 = heights & o_0 = t_2 FALSE"
               (rule "ifthenelse_split" (formula "13") (term "2,2,0"))
               (branch "f_0 = left & o_0 = t_2 TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "replace_known_left" (formula "15") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                  (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "notRight" (formula "13"))
                  (rule "applyEq" (formula "15") (term "0,0,2,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "false_right" (formula "14"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                  (rule "close" (formula "8") (ifseqformula "1"))
               )
               (branch "f_0 = left & o_0 = t_2 FALSE"
                  (rule "ifthenelse_split" (formula "14") (term "2,0"))
                  (branch "f_0 = right & o_0 = t_2 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "applyEqRigid" (formula "16") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "eqSymm" (formula "16"))
                     (rule "applyEq" (formula "13") (term "1,0,0,1") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "notRight" (formula "13"))
                     (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "false_right" (formula "15"))
                     (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "false_right" (formula "14"))
                     (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "close" (formula "9") (ifseqformula "1"))
                  )
                  (branch "f_0 = right & o_0 = t_2 FALSE"
                     (rule "ifthenelse_split" (formula "15") (term "2,0"))
                     (branch "f_0 = <created> & o_0 = t_2 TRUE"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "17"))
                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "applyEq" (formula "13") (term "1,0,0,1") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "notRight" (formula "13"))
                        (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "false_right" (formula "15"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "false_right" (formula "15"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "false_right" (formula "14"))
                        (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3"))
                        (rule "close" (formula "9") (ifseqformula "3"))
                     )
                     (branch "f_0 = <created> & o_0 = t_2 FALSE"
                        (rule "ifthenelse_split" (formula "16") (term "0"))
                        (branch "f_0 = <initialized> & o_0 = t_2 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "18"))
                           (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "8"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "notRight" (formula "13"))
                           (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "false_right" (formula "14"))
                           (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "false_right" (formula "16"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "false_right" (formula "15"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "false_right" (formula "14"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "8") (ifseqformula "1"))
                        )
                        (branch "f_0 = <initialized> & o_0 = t_2 FALSE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "closeTrue" (formula "17"))
                        )
                     )
                  )
               )
            )
         )
      )
   )
   (branch "Show Axiom Satisfiability"
      (builtin "One Step Simplification" (formula "9"))
      (rule "closeTrue" (formula "9"))
   )
)
(branch "Null Reference (t = null)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
   (rule "closeFalse" (formula "1"))
)
)

}
