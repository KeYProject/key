\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "finalFields" : "finalFields:immutable",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:off",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:ban",
        "sequences" : "sequences:on",
        "soundDefaultContracts" : "soundDefaultContracts:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        "Axiomatisations" : "false",
        "Presburger" : "false",
        "sqrtSMTTranslation" : "SMT"
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 10000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_OFF",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_INVARIANT",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 


\javaSource "src";\proofObligation 
// 
{ 
    "class" : "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
    "contract" : "BoyerMoore[BoyerMoore::bm([I)].JML normal_behavior operation contract.0",
    "name" : "BoyerMoore[BoyerMoore::bm([I)].JML normal_behavior operation contract.0"
 }

\proof {
(keyLog "0" (keyUser "ulbrich" ) (keyVersion "947da2060bf662ceb5ca270943291196724c7fa3"))

(autoModeTime "12050")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_bm,savedHeapBefore_bm,_aBefore_bm"))
 (builtin "One Step Simplification" (formula "10"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "mc"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "mx"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "for_to_while" (formula "10") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "k"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "elim_double_block_3" (formula "10") (term "1"))
 (builtin "Loop Invariant" (formula "10") (newnames "variant,b,heapBefore_LOOP,kBefore_LOOP,mxBefore_LOOP,mcBefore_LOOP,k_0,mx_0,mc_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (rule "andRight" (formula "10"))
   (branch "Case 1"
      (rule "andRight" (formula "10"))
      (branch "Case 1"
         (rule "andRight" (formula "10"))
         (branch "Case 1"
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "andRight" (formula "10"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "leq_literals" (formula "10"))
                  (rule "closeTrue" (formula "10"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "inEqSimp_leqRight" (formula "10"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "10"))
               (rule "qeq_literals" (formula "10"))
               (rule "closeTrue" (formula "10"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "10") (userinteraction))
            (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "10") (term "1,0") (inst "last=last") (ifseqformula "3") (userinteraction))
             (builtin "One Step Simplification" (formula "10"))
            (rule "times_zero_1" (formula "10") (term "0"))
            (rule "add_zero_left" (formula "10") (term "1"))
            (rule "leq_literals" (formula "10"))
            (rule "closeTrue" (formula "10"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "10") (userinteraction))
         (rule "allRight" (formula "10") (inst "sk=x_0") (userinteraction))
         (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "10") (term "1,0,1") (inst "last=last") (ifseqformula "3") (userinteraction))
          (builtin "One Step Simplification" (formula "10"))
         (rule "times_zero_1" (formula "10") (term "0,1"))
         (rule "sub_literals" (formula "10") (term "1,1"))
         (rule "leq_literals" (formula "10") (term "1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "closeTrue" (formula "10"))
      )
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "10"))
   )
)
(branch "Body Preserves Invariant"
    (builtin "One Step Simplification" (formula "9"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "andLeft" (formula "9"))
   (rule "impRight" (formula "13"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "eqSymm" (formula "17") (term "0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "14") (term "1,1,0"))
   (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "17") (term "0,1,1,1,0"))
   (rule "polySimp_elimSub" (formula "17") (term "0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "13") (term "0"))
   (rule "polySimp_addComm0" (formula "17") (term "0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "17") (term "0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "10"))
   (rule "inEqSimp_commuteLeq" (formula "11"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "17") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "17") (term "1,0,0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "12") (term "0,0"))
   (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=i_1") (inst "#v0=i"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "i"))
   (rule "assignment" (formula "15") (term "1"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "i_1"))
   (rule "assignment_read_length" (formula "15"))
   (branch "Normal Execution (mc == 0 != null)"
       (builtin "One Step Simplification" (formula "15"))
      (rule "less_than_comparison_simple" (formula "15") (term "1"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "emptyModality" (formula "15") (term "1"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "notRight" (formula "15"))
      (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=b_2"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "b_2"))
      (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=i_3") (inst "#v0=i_2"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "i_2"))
      (rule "assignment" (formula "18") (term "1"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "i_3"))
      (rule "assignment_read_length" (formula "18"))
      (branch "Normal Execution (mc == 0 != null)"
          (builtin "One Step Simplification" (formula "18"))
         (rule "less_than_comparison_simple" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "replace_known_left" (formula "18") (term "0,0,1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "ifSplit" (formula "18"))
         (branch "if k < _a.length true"
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=b_3"))
            (rule "variableDeclaration" (formula "18") (term "1") (newnames "b_3"))
            (rule "equality_comparison_simple" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "arrayLengthIsAShort" (formula "11") (term "0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "arrayLengthNotNegative" (formula "11") (term "0"))
            (rule "ifElseSplit" (formula "19"))
            (branch "if mc == 0 true"
                (builtin "One Step Simplification" (formula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "assignment" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "assignment_array2" (formula "20"))
               (branch "Normal Execution (mc == 0 != null)"
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "applyEqRigid" (formula "16") (term "1,1") (ifseqformula "1"))
                  (rule "add_zero_right" (formula "16") (term "1"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "applyEq" (formula "16") (term "0,1,1,1,0") (ifseqformula "1"))
                  (rule "times_zero_2" (formula "16") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "16") (term "1,1,0"))
                  (rule "postincrement" (formula "19") (term "1"))
                  (rule "compound_reference_cast_expression_primitive" (formula "19") (term "1") (inst "#v=i_4"))
                  (rule "variableDeclarationAssign" (formula "19") (term "1"))
                  (rule "variableDeclaration" (formula "19") (term "1") (newnames "i_4"))
                  (rule "remove_parentheses_right" (formula "19") (term "1"))
                  (rule "assignmentAdditionInt" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "19") (term "1"))
                  (rule "assignment" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "tryEmpty" (formula "19") (term "1"))
                  (rule "methodCallEmpty" (formula "19") (term "1"))
                  (rule "emptyModality" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "andRight" (formula "19"))
                  (branch "Case 1"
                     (rule "andRight" (formula "19"))
                     (branch "Case 1"
                        (rule "andRight" (formula "19"))
                        (branch "Case 1"
                           (rule "andRight" (formula "19"))
                           (branch "Case 1"
                              (rule "andRight" (formula "19"))
                              (branch "Case 1"
                                 (rule "inEqSimp_geqRight" (formula "19"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "closeFalse" (formula "12"))
                              )
                              (branch "Case 2"
                                 (rule "inEqSimp_geqRight" (formula "19"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "qeq_literals" (formula "19"))
                              (rule "closeTrue" (formula "19"))
                           )
                        )
                        (branch "Case 2"
                           (rule "instAll" (formula "19") (term "4,0,0") (ifseqformula "16") (userinteraction))
                           (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "20") (term "0,0") (inst "last=last") (ifseqformula "6") (userinteraction))
                           (rule "ifthenelse_split" (formula "20") (term "0,0") (userinteraction))
                           (branch "1 + k_0 = 0 TRUE"
                              (rule "times_zero_2" (formula "21") (term "0"))
                              (rule "polySimp_addComm1" (formula "21") (term "1"))
                              (rule "add_literals" (formula "21") (term "0,1"))
                              (rule "inEqSimp_leqRight" (formula "21"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "3,0,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "18") (term "1") (ifseqformula "2"))
                              (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "2"))
                              (rule "mul_literals" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "1 + k_0 = 0 FALSE"
                              (rule "polySimp_elimSub" (formula "21") (term "3,1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,3,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "0,2,0,0,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,2,0,0,0,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "3,2,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,3,2,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "1"))
                              (rule "add_literals" (formula "21") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "21") (term "3,1,1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,3,1,1,0,0"))
                              (rule "add_zero_left" (formula "21") (term "3,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,2,0,0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,2,0,0,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,2,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0"))
                              (rule "polySimp_rightDist" (formula "21") (term "0"))
                              (rule "mul_literals" (formula "21") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "21"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "13"))
                              (rule "add_zero_left" (formula "21") (term "0,0"))
                              (rule "mul_literals" (formula "21") (term "0,0"))
                              (rule "leq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "false_right" (formula "21"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "2") (term "0,0,1"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1"))
                              (rule "leq_literals" (formula "3") (term "0,1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "2") (term "4,0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "2"))
                              (rule "applyEq" (formula "1") (term "4,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "4,0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "2"))
                              (rule "inEqSimp_contradInEq2" (formula "1") (ifseqformula "16"))
                              (rule "greater_literals" (formula "1") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "greater_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "19") (inst "sk=x_0") (userinteraction))
                        (rule "impRight" (formula "19") (userinteraction))
                        (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "20") (term "0,0") (inst "last=last") (ifseqformula "6") (userinteraction))
                        (rule "ifthenelse_split" (formula "20") (term "0,0") (userinteraction))
                        (branch "1 + k_0 = 0 TRUE"
                           (rule "times_zero_2" (formula "21") (term "0"))
                           (rule "mul_literals" (formula "21") (term "1,1"))
                           (rule "notLeft" (formula "2"))
                           (rule "eqSymm" (formula "18"))
                           (rule "polySimp_addComm1" (formula "21") (term "1"))
                           (rule "add_literals" (formula "21") (term "0,1"))
                           (rule "add_zero_left" (formula "21") (term "1"))
                           (rule "inEqSimp_leqRight" (formula "21"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "applyEqRigid" (formula "18") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "13"))
                           (rule "closeFalse" (formula "13"))
                        )
                        (branch "1 + k_0 = 0 FALSE"
                           (rule "ifthenelse_split" (formula "21") (term "0,0") (userinteraction))
                           (branch "a[1 + k_0 - 1] = x_0 TRUE"
                              (rule "mul_literals" (formula "22") (term "1,1"))
                              (rule "notLeft" (formula "2"))
                              (rule "eqSymm" (formula "18"))
                              (rule "polySimp_elimSub" (formula "22") (term "3,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,3,1,0,0"))
                              (rule "polySimp_elimSub" (formula "1") (term "0,2,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0"))
                              (rule "polySimp_addComm1" (formula "22") (term "1"))
                              (rule "add_literals" (formula "22") (term "0,1"))
                              (rule "add_zero_left" (formula "22") (term "1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
                              (rule "add_literals" (formula "1") (term "0,0,2,0"))
                              (rule "add_zero_left" (formula "1") (term "0,2,0"))
                              (rule "close" (formula "18") (ifseqformula "1"))
                           )
                           (branch "a[1 + k_0 - 1] = x_0 FALSE"
                              (rule "unlimit_BoyerMoore_count[I\bigint\bigint" (formula "22") (term "0,0") (userinteraction))
                              (rule "mul_literals" (formula "22") (term "1,1"))
                              (rule "notLeft" (formula "1"))
                              (rule "eqSymm" (formula "17"))
                              (rule "polySimp_elimSub" (formula "21") (term "0,2,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,2,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "3,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,3,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "1"))
                              (rule "add_literals" (formula "22") (term "0,1"))
                              (rule "add_zero_left" (formula "22") (term "1"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,2,0"))
                              (rule "add_literals" (formula "21") (term "0,0,2,0"))
                              (rule "add_zero_left" (formula "21") (term "0,2,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "3,0,0"))
                              (rule "add_literals" (formula "21") (term "0,3,0,0"))
                              (rule "add_zero_left" (formula "21") (term "3,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "21"))
                              (rule "mul_literals" (formula "21") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "12"))
                              (rule "mul_literals" (formula "21") (term "1,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,0"))
                              (rule "leq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "false_right" (formula "21"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0"))
                              (rule "qeq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "1") (term "0,0"))
                              (rule "allLeft" (formula "17") (inst "t=x_0"))
                              (rule "inEqSimp_contradInEq4" (formula "17") (term "1") (ifseqformula "2"))
                              (rule "greater_literals" (formula "17") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "greater_literals" (formula "17") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,0,1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,1"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "17") (term "0,0,1"))
                              (rule "leq_literals" (formula "17") (term "0,1"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "applyEq" (formula "2") (term "4,0,0") (ifseqformula "17"))
                              (rule "applyEqRigid" (formula "1") (term "4,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "15") (term "4,0") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "applyEqRigid" (formula "1") (term "4,1") (ifseqformula "16"))
                              (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "16"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "15"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                     (rule "mul_literals" (formula "19") (term "0,0,0"))
                     (rule "precOfInt" (formula "19"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                     (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,1"))
                     (rule "add_zero_right" (formula "19") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "19") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1"))
                     (rule "add_literals" (formula "19") (term "1,0,1"))
                     (rule "times_zero_1" (formula "19") (term "0,1"))
                     (rule "leq_literals" (formula "19") (term "1"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_leqRight" (formula "19"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (mc == 0 = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (mc == 0 != null, but k < _a.length Out of Bounds!)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "false_right" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "applyEqRigid" (formula "17") (term "1,1") (ifseqformula "2"))
                  (rule "add_zero_right" (formula "17") (term "1"))
                  (rule "applyEqRigid" (formula "18") (term "0,1,1,1,0") (ifseqformula "2"))
                  (rule "times_zero_2" (formula "18") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "18") (term "1,1,0"))
                  (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0"))
                  (rule "qeq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "12"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch "if mc == 0 false"
                (builtin "One Step Simplification" (formula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "elim_double_block_2" (formula "20") (term "1"))
               (rule "ifElseUnfold" (formula "20") (term "1") (inst "#boolv=b_4"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_4"))
               (rule "compound_equality_comparison_2" (formula "20") (term "1") (inst "#v1=i_5") (inst "#v0=i_4"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_4"))
               (rule "assignment" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_5"))
               (rule "assignment_array2" (formula "20"))
               (branch "Normal Execution (mc == 0 != null)"
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "equality_comparison_simple" (formula "20") (term "1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "eqSymm" (formula "20") (term "0,0,1,0"))
                  (rule "ifElseSplit" (formula "20"))
                  (branch "if mx == _a[k] true"
                      (builtin "One Step Simplification" (formula "21"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "postincrement" (formula "21") (term "1"))
                     (rule "compound_int_cast_expression" (formula "21") (term "1") (inst "#v=i_6"))
                     (rule "variableDeclarationAssign" (formula "21") (term "1"))
                     (rule "variableDeclaration" (formula "21") (term "1") (newnames "i_6"))
                     (rule "remove_parentheses_right" (formula "21") (term "1"))
                     (rule "assignmentAdditionInt" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "21") (term "1"))
                     (rule "assignment" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "blockEmpty" (formula "21") (term "1"))
                     (rule "postincrement" (formula "21") (term "1"))
                     (rule "compound_reference_cast_expression_primitive" (formula "21") (term "1") (inst "#v=i_7"))
                     (rule "variableDeclarationAssign" (formula "21") (term "1"))
                     (rule "variableDeclaration" (formula "21") (term "1") (newnames "i_7"))
                     (rule "remove_parentheses_right" (formula "21") (term "1"))
                     (rule "assignmentAdditionInt" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "21") (term "1"))
                     (rule "assignment" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "tryEmpty" (formula "21") (term "1"))
                     (rule "methodCallEmpty" (formula "21") (term "1"))
                     (rule "emptyModality" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "andRight" (formula "21"))
                     (branch "Case 1"
                        (rule "andRight" (formula "21"))
                        (branch "Case 1"
                           (rule "andRight" (formula "21"))
                           (branch "Case 1"
                              (rule "andRight" (formula "21"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "21"))
                                 (branch "Case 1"
                                    (rule "inEqSimp_geqRight" (formula "21"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "19"))
                                    (rule "add_zero_right" (formula "15") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "15"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "false_right" (formula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "12") (term "0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "closeFalse" (formula "12"))
                                 )
                                 (branch "Case 2"
                                    (rule "inEqSimp_geqRight" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "19"))
                                    (rule "add_zero_right" (formula "15") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "15"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "false_right" (formula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0"))
                                    (rule "qeq_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "inEqSimp_geqRight" (formula "21"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "false_right" (formula "19"))
                                 (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "closeFalse" (formula "15"))
                              )
                           )
                           (branch "Case 2"
                              (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "21") (term "0,0") (inst "last=last") (ifseqformula "5") (userinteraction))
                              (rule "polySimp_elimSub" (formula "21") (term "0,2,0,0,2,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,2,0,0,2,0,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "3,2,2,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,3,2,2,0,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "3,1,1,2,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,3,1,1,2,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,2,0,0,2,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,2,0,0,2,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,2,0,0,2,0,0"))
                              (rule "replace_known_left" (formula "21") (term "0,2,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "polySimp_addComm1" (formula "21") (term "3,1,2,0,0"))
                              (rule "add_literals" (formula "21") (term "0,3,1,2,0,0"))
                              (rule "add_zero_left" (formula "21") (term "3,1,2,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "1"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "21"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "applyEq" (formula "1") (term "1,2,0,1,0") (ifseqformula "16"))
                              (rule "polySimp_sepPosMonomial" (formula "1") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "mul_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "1") (term "0,0,0") (ifseqformula "12"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "19"))
                              (rule "add_zero_right" (formula "15") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "15"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "leq_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "false_right" (formula "19"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "1"))
                              (rule "andLeft" (formula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "1,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0"))
                              (rule "add_zero_right" (formula "17") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "1,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0"))
                              (rule "add_zero_right" (formula "17") (term "0"))
                              (rule "leq_literals" (formula "17"))
                              (rule "closeFalse" (formula "17"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "21") (inst "sk=x_0") (userinteraction))
                           (rule "impRight" (formula "21") (userinteraction))
                           (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "22") (term "0,0") (inst "last=last") (ifseqformula "6") (userinteraction))
                           (rule "ifthenelse_split" (formula "22") (term "0,0") (userinteraction))
                           (branch "1 + k_0 = 0 TRUE"
                              (rule "times_zero_2" (formula "23") (term "0"))
                              (rule "notLeft" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1"))
                              (rule "add_zero_left" (formula "23") (term "0,1"))
                              (rule "inEqSimp_leqRight" (formula "23"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "applyEq" (formula "18") (term "3,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "13"))
                              (rule "closeFalse" (formula "13"))
                           )
                           (branch "1 + k_0 = 0 FALSE"
                              (rule "unlimit_BoyerMoore_count[I\bigint\bigint" (formula "23") (term "1,1,0,0") (userinteraction))
                              (rule "unlimit_BoyerMoore_count[I\bigint\bigint" (formula "23") (term "2,0,0") (userinteraction))
                              (rule "notLeft" (formula "1"))
                              (rule "polySimp_elimSub" (formula "23") (term "3,1,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,3,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "3,2,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,3,2,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "0,2,0,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,2,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "23") (term "3,1,1,0,0"))
                              (rule "add_literals" (formula "23") (term "0,3,1,1,0,0"))
                              (rule "add_zero_left" (formula "23") (term "3,1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "3,2,0,0"))
                              (rule "add_literals" (formula "23") (term "0,3,2,0,0"))
                              (rule "add_zero_left" (formula "23") (term "3,2,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,2,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,2,0,0,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,2,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1"))
                              (rule "add_zero_left" (formula "23") (term "0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "23"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "0,0,0,1,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "1") (term "0,0,1,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,1,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "polySimp_sepPosMonomial" (formula "23"))
                              (rule "mul_literals" (formula "23") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "mul_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "12"))
                              (rule "add_zero_left" (formula "23") (term "0,0"))
                              (rule "mul_literals" (formula "23") (term "0,0"))
                              (rule "leq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "false_right" (formula "23"))
                              (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "20"))
                              (rule "add_zero_right" (formula "15") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "15"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "false_right" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0"))
                              (rule "qeq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "1") (term "0,0"))
                              (rule "allLeft" (formula "18") (inst "t=x_0"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq2" (formula "2") (ifseqformula "18"))
                              (rule "greater_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "greater_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "andLeft" (formula "2"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                              (rule "mul_literals" (formula "2") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "precOfInt" (formula "21"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                        (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,1"))
                        (rule "add_literals" (formula "21") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,1"))
                        (rule "add_zero_right" (formula "21") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                        (rule "add_literals" (formula "21") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "21") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                        (rule "add_literals" (formula "21") (term "1,0,1"))
                        (rule "times_zero_1" (formula "21") (term "0,1"))
                        (rule "leq_literals" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_leqRight" (formula "21"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "19"))
                        (rule "add_zero_right" (formula "15") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "15"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "false_right" (formula "19"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
                  (branch "if mx == _a[k] false"
                      (builtin "One Step Simplification" (formula "21"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "elim_double_block_2" (formula "21") (term "1"))
                     (rule "postdecrement" (formula "21") (term "1"))
                     (rule "compound_subtraction_1" (formula "21") (term "1") (inst "#v=i_6"))
                     (rule "variableDeclarationAssign" (formula "21") (term "1"))
                     (rule "variableDeclaration" (formula "21") (term "1") (newnames "i_6"))
                     (rule "widening_identity_cast_5" (formula "21") (term "1"))
                     (rule "assignment" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "assignmentSubtractionInt" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "translateJavaSubInt" (formula "21") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "21") (term "0,1,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                     (rule "blockEmpty" (formula "21") (term "1"))
                     (rule "postincrement" (formula "21") (term "1"))
                     (rule "compound_reference_cast_expression_primitive" (formula "21") (term "1") (inst "#v=i_7"))
                     (rule "variableDeclarationAssign" (formula "21") (term "1"))
                     (rule "variableDeclaration" (formula "21") (term "1") (newnames "i_7"))
                     (rule "remove_parentheses_right" (formula "21") (term "1"))
                     (rule "assignmentAdditionInt" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "21") (term "1"))
                     (rule "assignment" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "tryEmpty" (formula "21") (term "1"))
                     (rule "methodCallEmpty" (formula "21") (term "1"))
                     (rule "emptyModality" (formula "21") (term "1"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "andRight" (formula "21"))
                     (branch "Case 1"
                        (rule "andRight" (formula "21"))
                        (branch "Case 1"
                           (rule "andRight" (formula "21"))
                           (branch "Case 1"
                              (rule "andRight" (formula "21"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "21"))
                                 (branch "Case 1"
                                    (rule "inEqSimp_geqRight" (formula "21"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "19"))
                                    (rule "add_zero_right" (formula "14") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "14"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "false_right" (formula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0"))
                                    (rule "qeq_literals" (formula "13") (term "0"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "closeFalse" (formula "11"))
                                 )
                                 (branch "Case 2"
                                    (rule "inEqSimp_geqRight" (formula "21"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "19"))
                                    (rule "add_zero_right" (formula "14") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "14"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "false_right" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "inEqSimp_geqRight" (formula "21"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "19"))
                                 (rule "add_zero_right" (formula "14") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "14"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "false_right" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "21") (term "0,0") (inst "last=last") (ifseqformula "4") (userinteraction))
                              (rule "polySimp_elimSub" (formula "21") (term "3,2,2,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,3,2,2,0,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "0,2,0,0,2,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,2,0,0,2,0,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "3,1,1,2,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,3,1,1,2,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "3,2,2,0,0"))
                              (rule "add_literals" (formula "21") (term "0,3,2,2,0,0"))
                              (rule "add_zero_left" (formula "21") (term "3,2,2,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,2,0,0,2,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,2,0,0,2,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,2,0,0,2,0,0"))
                              (rule "replace_known_right" (formula "21") (term "0,2,0,0") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "polySimp_addAssoc" (formula "21") (term "1"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,1"))
                              (rule "add_zero_left" (formula "21") (term "0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "21"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "2,0,1,0") (ifseqformula "15"))
                              (rule "polySimp_sepPosMonomial" (formula "1") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "mul_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "1") (term "0,0,0") (ifseqformula "11"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0,0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "19"))
                              (rule "add_zero_right" (formula "14") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "14"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "leq_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "false_right" (formula "19"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_contradInEq4" (formula "15") (ifseqformula "1"))
                              (rule "greater_literals" (formula "15") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "greater_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "polySimp_rightDist" (formula "15") (term "0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                              (rule "mul_literals" (formula "15") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0"))
                              (rule "add_zero_right" (formula "15") (term "0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0"))
                              (rule "add_zero_right" (formula "15") (term "0"))
                              (rule "leq_literals" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "21") (inst "sk=x_0") (userinteraction))
                           (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "21") (term "0,0,1") (inst "last=last") (ifseqformula "4") (userinteraction))
                           (rule "ifthenelse_split" (formula "21") (term "0,0,1") (userinteraction))
                           (branch "1 + k_0 = 0 TRUE"
                              (rule "times_zero_2" (formula "22") (term "0,1"))
                              (rule "impRight" (formula "22"))
                              (rule "notLeft" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1"))
                              (rule "inEqSimp_leqRight" (formula "23"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "applyEq" (formula "14") (term "1") (ifseqformula "2"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "12"))
                              (rule "closeFalse" (formula "12"))
                           )
                           (branch "1 + k_0 = 0 FALSE"
                              (rule "unlimit_BoyerMoore_count[I\bigint\bigint" (formula "22") (term "1,1,0,0,1") (userinteraction))
                              (rule "unlimit_BoyerMoore_count[I\bigint\bigint" (formula "22") (term "2,0,0,1") (userinteraction))
                              (rule "impRight" (formula "22"))
                              (rule "notLeft" (formula "1"))
                              (rule "polySimp_elimSub" (formula "23") (term "0,2,0,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,2,0,0,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "3,2,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,3,2,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "3,1,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,3,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,2,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,2,0,0,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,2,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "3,2,0,0"))
                              (rule "add_literals" (formula "23") (term "0,3,2,0,0"))
                              (rule "add_zero_left" (formula "23") (term "3,2,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "3,1,1,0,0"))
                              (rule "add_literals" (formula "23") (term "0,3,1,1,0,0"))
                              (rule "add_zero_left" (formula "23") (term "3,1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                              (rule "add_literals" (formula "23") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "23"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "23"))
                              (rule "mul_literals" (formula "23") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "mul_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                              (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "11"))
                              (rule "mul_literals" (formula "23") (term "1,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0"))
                              (rule "leq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "false_right" (formula "23"))
                              (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "20"))
                              (rule "add_zero_right" (formula "14") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "14"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "false_right" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0"))
                              (rule "qeq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "1") (term "2,0,0"))
                              (rule "allLeft" (formula "17") (inst "t=x_0"))
                              (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "ifthenelse_split" (formula "2") (term "0,0"))
                              (branch "a[k_0] = x_0 TRUE"
                                 (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0"))
                                 (rule "mul_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "inEqSimp_contradInEq4" (formula "18") (ifseqformula "3"))
                                 (rule "greater_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "greater_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0"))
                                 (rule "leq_literals" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                              (branch "a[k_0] = x_0 FALSE"
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "17"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_literals" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,0"))
                        (rule "precOfInt" (formula "21"))
                        (rule "inEqSimp_ltToLeq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                        (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,1"))
                        (rule "add_literals" (formula "21") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,1"))
                        (rule "add_zero_right" (formula "21") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                        (rule "add_literals" (formula "21") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "21") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                        (rule "add_literals" (formula "21") (term "1,0,1"))
                        (rule "times_zero_1" (formula "21") (term "0,1"))
                        (rule "leq_literals" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_leqRight" (formula "21"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "19"))
                        (rule "add_zero_right" (formula "14") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "14"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "false_right" (formula "19"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0"))
                        (rule "qeq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (mc == 0 = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (mc == 0 != null, but k < _a.length Out of Bounds!)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "false_right" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "18"))
                  (rule "add_zero_right" (formula "14") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "18") (ifseqformula "14"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0"))
                  (rule "leq_literals" (formula "18") (term "0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "false_right" (formula "18"))
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "if k < _a.length false"
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (mc == 0 = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (mc == 0 = null)"
      (rule "false_right" (formula "16"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
    (builtin "One Step Simplification" (formula "12"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "polySimp_elimSub" (formula "13") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "10"))
   (rule "inEqSimp_commuteLeq" (formula "9"))
   (rule "variableDeclarationAssign" (formula "16") (term "1"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "b_1"))
   (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "12") (term "0,0"))
   (rule "compound_less_than_comparison_2" (formula "17") (term "1") (inst "#v1=i_1") (inst "#v0=i"))
   (rule "variableDeclarationAssign" (formula "17") (term "1"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "i"))
   (rule "assignment" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "variableDeclarationAssign" (formula "17") (term "1"))
   (rule "variableDeclaration" (formula "17") (term "1") (newnames "i_1"))
   (rule "assignment_read_length" (formula "17"))
   (branch "Normal Execution (_a != null)"
       (builtin "One Step Simplification" (formula "17"))
      (rule "less_than_comparison_simple" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "emptyModality" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "impRight" (formula "17"))
      (rule "notLeft" (formula "1"))
      (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=b_2"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "b_2"))
      (rule "equality_comparison_simple" (formula "18") (term "1"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "ifSplit" (formula "18"))
      (branch "if mc == 0 true"
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "1"))
         (rule "add_zero_right" (formula "13") (term "1"))
         (rule "applyEqRigid" (formula "14") (term "0,1,1,1,0") (ifseqformula "1"))
         (rule "times_zero_2" (formula "14") (term "1,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "1,1,0"))
         (rule "returnUnfold" (formula "18") (term "1") (inst "#v0=i_2"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "i_2"))
         (rule "activeUseStaticFieldReadAccess" (formula "18") (term "1"))
         (rule "assignment_read_static_attribute_final" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallReturn" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "assignment" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "tryEmpty" (formula "18") (term "1"))
         (rule "emptyModality" (formula "18") (term "1"))
         (rule "andRight" (formula "18"))
         (branch "Case 1"
            (rule "andRight" (formula "18"))
            (branch "Case 1"
               (rule "andRight" (formula "18"))
               (branch "Case 1"
                  (rule "impRight" (formula "18"))
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_ltRight" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_gtRight" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "2"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "15"))
                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "1,0"))
                  (rule "times_zero_1" (formula "15") (term "0"))
                  (rule "leq_literals" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "14"))
                  (rule "applyEq" (formula "1") (term "3,0") (ifseqformula "14"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "times_zero_1" (formula "2") (term "0"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "1") (term "0"))
                  (rule "jdiv_axiom" (formula "2") (term "1"))
                  (rule "eqSymm" (formula "2"))
                  (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "eqSymm" (formula "2"))
                  (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                  (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_0"))
                  (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                  (rule "qeq_literals" (formula "2") (term "0,1,1"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "equal_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "polySimp_addComm1" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "6") (term "1") (ifseqformula "2"))
                  (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "4"))
                  (rule "times_zero_1" (formula "17") (term "0,0"))
                  (rule "add_zero_left" (formula "17") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                  (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "allLeft" (formula "22") (inst "t=int::select(heap,
            IntOpt::final(null, IntOpt::$NONE),
            IntOpt::$value)"))
                  (rule "cut_direct" (formula "22") (term "1"))
                  (branch "CUT: self.count(a, k_0, IntOpt.NONE.value) * 2 <= k_0 TRUE"
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "Partial_inv_axiom_for_static_JML_class_invariant_in_IntOpt_no_1" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "Partial_inv_axiom_for_static_JML_class_invariant_in_IntOpt_no_2" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "close" (formula "24") (ifseqformula "7"))
                  )
                  (branch "CUT: self.count(a, k_0, IntOpt.NONE.value) * 2 <= k_0 FALSE"
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_leqRight" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "applyEq" (formula "1") (term "4,0,1,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "2") (term "4,0") (ifseqformula "23"))
                     (rule "eqSymm" (formula "2"))
                     (rule "applyEq" (formula "7") (term "4,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "2") (term "4,0") (ifseqformula "23"))
                     (rule "eqSymm" (formula "2"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "21"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "18"))
                  (branch "Case 1"
                     (rule "impRight" (formula "18"))
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "notLeft" (formula "1"))
                     (rule "notRight" (formula "19"))
                     (rule "exLeft" (formula "1") (inst "sk=m_0"))
                     (rule "inEqSimp_ltRight" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "1") (term "3,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "12"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "13"))
                     (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,0"))
                     (rule "times_zero_1" (formula "13") (term "0"))
                     (rule "leq_literals" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "1") (term "0"))
                     (rule "jdiv_axiom" (formula "2") (term "1,1"))
                     (rule "eqSymm" (formula "2"))
                     (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "13"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "eqSymm" (formula "2"))
                     (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "2"))
                     (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_0"))
                     (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                     (rule "qeq_literals" (formula "2") (term "0,1,1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "equal_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "add_literals" (formula "4") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "2"))
                     (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "16") (term "0,0"))
                     (rule "add_zero_left" (formula "16") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "16") (term "0,0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0"))
                     (rule "leq_literals" (formula "16") (term "0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                     (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "allLeft" (formula "21") (inst "t=m_0"))
                     (rule "eqSymm" (formula "21") (term "0"))
                     (rule "cut_direct" (formula "21") (term "1"))
                     (branch "CUT: self.count(a, k_0, m_0) * 2 <= k_0 TRUE"
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "21"))
                        (rule "greater_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "5"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch "CUT: self.count(a, k_0, m_0) * 2 <= k_0 FALSE"
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_leqRight" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "applyEqRigid" (formula "20") (term "4,0") (ifseqformula "22"))
                        (rule "applyEqRigid" (formula "21") (term "4,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "20"))
                        (rule "applyEq" (formula "2") (term "4,0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "19") (term "4,1") (ifseqformula "21"))
                        (rule "applyEqRigid" (formula "22") (term "1,0,0") (ifseqformula "21"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                        (rule "andLeft" (formula "20"))
                        (rule "inEqSimp_homoInEq1" (formula "20"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "1,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0"))
                        (rule "add_zero_right" (formula "20") (term "0"))
                        (rule "leq_literals" (formula "20"))
                        (rule "closeFalse" (formula "20"))
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "18"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "8")))
                        (rule "closeTrue" (formula "18"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "notRight" (formula "18"))
                        (rule "inEqSimp_ltRight" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "14"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,0"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "leq_literals" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                        (rule "Partial_inv_axiom_for_static_JML_class_invariant_in_IntOpt_no_1" (formula "8"))
                        (rule "notLeft" (formula "8"))
                        (rule "close" (formula "16") (ifseqformula "1"))
                     )
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "18"))
               (rule "closeTrue" (formula "18"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "18"))
            (rule "closeTrue" (formula "18"))
         )
      )
      (branch "if mc == 0 false"
          (builtin "One Step Simplification" (formula "19"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "cnt"))
         (rule "assignment" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "for_to_while" (formula "19") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "r"))
         (rule "assignment" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "elim_double_block_3" (formula "19") (term "1"))
          (builtin "Loop Invariant" (formula "19") (newnames "variant_0,b_0,heapBefore_LOOP_0,rBefore_LOOP,cntBefore_LOOP,r_0,cnt_0,heap_After_LOOP_0,anon_heap_LOOP_0,o,f"))
         (branch "Invariant Initially Valid"
            (rule "andRight" (formula "19"))
            (branch "Case 1"
               (rule "andRight" (formula "19"))
               (branch "Case 1"
                  (rule "andRight" (formula "19"))
                  (branch "Case 1"
                     (rule "andRight" (formula "19"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "leq_literals" (formula "19"))
                        (rule "closeTrue" (formula "19"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_ltRight" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "19"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "17"))
                        (rule "add_zero_right" (formula "13") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "17") (ifseqformula "13"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0"))
                        (rule "leq_literals" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "false_right" (formula "17"))
                        (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "2"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq1" (formula "12"))
                        (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                        (rule "add_literals" (formula "12") (term "1,0"))
                        (rule "times_zero_1" (formula "12") (term "0"))
                        (rule "leq_literals" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "closeFalse" (formula "10"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "19") (userinteraction))
                     (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "19") (term "1") (inst "last=last") (ifseqformula "3") (userinteraction))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "closeTrue" (formula "19"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_ltRight" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "19"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "17"))
                  (rule "add_zero_right" (formula "13") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "17") (ifseqformula "13"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "false_right" (formula "17"))
                  (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "2"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "times_zero_1" (formula "2") (term "0"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                  (rule "inEqSimp_homoInEq1" (formula "12"))
                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,0"))
                  (rule "times_zero_1" (formula "12") (term "0"))
                  (rule "leq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "11"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "jdiv_axiom" (formula "1") (term "0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                  (rule "equal_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "add_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "14") (term "0,0"))
                  (rule "add_zero_left" (formula "14") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                  (rule "mul_literals" (formula "14") (term "1"))
                  (rule "inEqSimp_contradInEq3" (formula "14") (ifseqformula "5"))
                  (rule "mul_literals" (formula "14") (term "0,1,0"))
                  (rule "greater_literals" (formula "14") (term "0,0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "qeq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "closeFalse" (formula "14"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
               (rule "closeTrue" (formula "19"))
            )
         )
         (branch "Body Preserves Invariant"
             (builtin "One Step Simplification" (formula "21"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "impRight" (formula "21"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "eqSymm" (formula "25") (term "1,0,0,0,1,1,1,0,1"))
            (rule "eqSymm" (formula "25") (term "0,0,1,0,1,1,1,0,1"))
            (rule "eqSymm" (formula "19"))
            (rule "polySimp_elimSub" (formula "25") (term "0,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "25") (term "0,1,1,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "25") (term "0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "25") (term "0,1,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,1,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "20"))
            (rule "inEqSimp_commuteLeq" (formula "17"))
            (rule "inEqSimp_commuteLeq" (formula "18"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "rtrn"))
            (rule "assignment" (formula "25") (term "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "returnExpr"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "exc_1"))
            (rule "assignment" (formula "25") (term "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "thrownExc"))
            (rule "blockReturn" (formula "25") (term "1,0,1,0,1"))
            (rule "blockThrow" (formula "25") (term "1,0,0,1"))
            (rule "boxToDiamond" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "18") (term "0"))
            (rule "applyEq" (formula "18") (term "1") (ifseqformula "19"))
            (rule "compound_less_than_comparison_2" (formula "21") (term "1") (inst "#v1=i_3") (inst "#v0=i_2"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "i_2"))
            (rule "assignment" (formula "21") (term "1"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "i_3"))
            (rule "assignment_read_length" (formula "21"))
            (branch "Normal Execution (mc == 0 != null)"
                (builtin "One Step Simplification" (formula "21"))
               (rule "less_than_comparison_simple" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "methodCallEmpty" (formula "21") (term "1"))
               (rule "emptyModality" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "notRight" (formula "21"))
               (rule "ifUnfold" (formula "26") (term "1") (inst "#boolv=b_3"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "b_3"))
               (rule "compound_less_than_comparison_2" (formula "26") (term "1") (inst "#v1=i_5") (inst "#v0=i_4"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "i_4"))
               (rule "assignment" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "i_5"))
               (rule "assignment_read_length" (formula "26"))
               (branch "Normal Execution (mc == 0 != null)"
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "less_than_comparison_simple" (formula "26") (term "1"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "replace_known_left" (formula "26") (term "0,0,1,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                  (rule "ifSplit" (formula "27"))
                  (branch "if r < _a.length true"
                      (builtin "One Step Simplification" (formula "28"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifUnfold" (formula "27") (term "1") (inst "#boolv=b_4"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "b_4"))
                     (rule "compound_equality_comparison_2" (formula "27") (term "1") (inst "#v1=i_7") (inst "#v0=i_6"))
                     (rule "variableDeclarationAssign" (formula "27") (term "1"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "i_6"))
                     (rule "assignment" (formula "27") (term "1"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "variableDeclarationAssign" (formula "27") (term "1"))
                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "i_7"))
                     (rule "assignment_array2" (formula "27"))
                     (branch "Normal Execution (mc == 0 != null)"
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "equality_comparison_simple" (formula "27") (term "1"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "eqSymm" (formula "27") (term "0,0,1,0"))
                        (rule "ifSplit" (formula "27"))
                        (branch "if mx == _a[r] true"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elim_double_block_2" (formula "28") (term "1"))
                           (rule "ifUnfold" (formula "28") (term "1") (inst "#boolv=b_5"))
                           (rule "variableDeclaration" (formula "28") (term "1") (newnames "b_5"))
                           (rule "compound_greater_than_comparison_2" (formula "28") (term "1") (inst "#v1=i_9") (inst "#v0=i_8"))
                           (rule "variableDeclarationAssign" (formula "28") (term "1"))
                           (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_8"))
                           (rule "preincrement_assignment" (formula "28") (term "1"))
                           (rule "compound_reference_cast_expression_primitive" (formula "28") (term "1") (inst "#v=i_10"))
                           (rule "variableDeclarationAssign" (formula "28") (term "1"))
                           (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_10"))
                           (rule "remove_parentheses_right" (formula "28") (term "1"))
                           (rule "assignmentAdditionInt" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "translateJavaAddInt" (formula "28") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "28") (term "1"))
                           (rule "assignment" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "assignment" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "variableDeclarationAssign" (formula "28") (term "1"))
                           (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_9"))
                           (rule "compound_division_1" (formula "28") (term "1") (inst "#v=i_11"))
                           (rule "variableDeclarationAssign" (formula "28") (term "1"))
                           (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_11"))
                           (rule "assignment_read_length" (formula "28"))
                           (branch "Normal Execution (mc == 0 != null)"
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "assignmentDivisionInt" (formula "28"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "translateJavaDivInt" (formula "28") (term "0,1,0"))
                                 (rule "greater_than_comparison_simple" (formula "28") (term "1"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "ifSplit" (formula "28"))
                                 (branch "if ++cnt > _a.length / 2 true"
                                     (builtin "One Step Simplification" (formula "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "elim_double_block_2" (formula "29") (term "1"))
                                    (rule "methodCallUnfoldArguments" (formula "29") (term "1"))
                                    (rule "variableDeclarationAssign" (formula "29") (term "1"))
                                    (rule "variableDeclaration" (formula "29") (term "1") (newnames "var"))
                                    (rule "assignment" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "variableDeclarationAssign" (formula "29") (term "1"))
                                    (rule "variableDeclaration" (formula "29") (term "1") (newnames "var_1"))
                                    (rule "assignmentAdditionInt" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "translateJavaAddInt" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,1,0"))
                                    (rule "variableDeclarationAssign" (formula "29") (term "1"))
                                    (rule "variableDeclaration" (formula "29") (term "1") (newnames "var_2"))
                                    (rule "assignment" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "elim_double_block_9" (formula "29") (term "1"))
                                     (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_monoLemma,exc_0") (contract "BoyerMoore[BoyerMoore::monoLemma([I,int,int)].JML normal_behavior operation contract.0") (modality "diamond"))
                                    (branch "Post (monoLemma)"
                                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "10")))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "inEqSimp_commuteLeq" (formula "26"))
                                       (rule "blockEmpty" (formula "31") (term "1"))
                                       (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "26") (term "1"))
                                       (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "27") (term "0"))
                                       (rule "methodCallReturn" (formula "33") (term "1,0,1,0,1"))
                                       (rule "assignment" (formula "33") (term "1,0,1,0,1"))
                                       (rule "methodCallParamThrow" (formula "33") (term "1,0,0,1"))
                                       (rule "methodCallEmpty" (formula "33") (term "1,1,0,1,0,1"))
                                       (rule "tryCatchThrow" (formula "33") (term "1,0,0,1"))
                                       (rule "ifElseUnfold" (formula "33") (term "1,0,0,1") (inst "#boolv=b_6"))
                                       (rule "variableDeclaration" (formula "33") (term "1,0,0,1") (newnames "b_6"))
                                       (rule "tryEmpty" (formula "33") (term "1,1,0,1,0,1"))
                                       (rule "equality_comparison_simple" (formula "33") (term "1,0,0,1"))
                                       (rule "emptyModality" (formula "33") (term "1,1,0,1,0,1"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "instanceCreationAssignment" (formula "33") (term "1") (inst "#v0=i_12"))
                                       (rule "variableDeclarationAssign" (formula "33") (term "1"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "i_12"))
                                       (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "33") (term "1") (inst "#v0=i_13"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "i_13"))
                                       (rule "methodBodyExpand" (formula "33") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "__NEW__"))
                                       (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "33") (term "1") (inst "#v0=i_14"))
                                       (rule "variableDeclaration" (formula "33") (term "1") (newnames "i_14"))
                                       (rule "allocateInstance" (formula "33"))
                                        (builtin "One Step Simplification" (formula "34"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "blockEmpty" (formula "36") (term "1"))
                                       (rule "assignment" (formula "36") (term "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodBodyExpand" (formula "36") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "assignment_write_attribute_this" (formula "36"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodCallWithinClass" (formula "36") (term "1"))
                                       (rule "methodBodyExpand" (formula "36") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodCallSuper" (formula "36") (term "1"))
                                       (rule "methodBodyExpand" (formula "36") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodCallEmpty" (formula "36") (term "1"))
                                       (rule "blockEmpty" (formula "36") (term "1"))
                                       (rule "assignment_write_attribute_this" (formula "36"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "assignment_write_attribute_this" (formula "36"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodCallEmpty" (formula "36") (term "1"))
                                       (rule "blockEmpty" (formula "36") (term "1"))
                                       (rule "methodCallReturnIgnoreResult" (formula "36") (term "1"))
                                       (rule "methodCallReturn" (formula "36") (term "1"))
                                       (rule "assignment" (formula "36") (term "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodCallEmpty" (formula "36") (term "1"))
                                       (rule "blockEmpty" (formula "36") (term "1"))
                                       (rule "assignment" (formula "36") (term "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                       (rule "variableDeclaration" (formula "36") (term "1") (newnames "var_3"))
                                       (rule "assignment" (formula "36") (term "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodBodyExpand" (formula "36") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodCallSuper" (formula "36") (term "1"))
                                       (rule "methodBodyExpand" (formula "36") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodCallEmpty" (formula "36") (term "1"))
                                       (rule "blockEmpty" (formula "36") (term "1"))
                                       (rule "assignment_write_attribute_this" (formula "36"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "assignment_write_attribute_this" (formula "36"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "methodCallEmpty" (formula "36") (term "1"))
                                       (rule "blockEmpty" (formula "36") (term "1"))
                                       (rule "assignment_write_attribute" (formula "36"))
                                       (branch "Normal Execution (i_12 != null)"
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "assignment" (formula "36") (term "1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "assignment" (formula "36") (term "1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "blockBreakNoLabel" (formula "36") (term "1"))
                                          (rule "blockBreakLabel" (formula "36") (term "1"))
                                          (rule "blockEmpty" (formula "36") (term "1"))
                                          (rule "tryEmpty" (formula "36") (term "1"))
                                          (rule "methodCallEmpty" (formula "36") (term "1"))
                                          (rule "emptyModality" (formula "36") (term "1"))
                                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "30")))
                                          (rule "andRight" (formula "36"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "36"))
                                             (branch "Case 1"
                                                (rule "impRight" (formula "36"))
                                                (rule "dismissNonSelectedField" (formula "37") (term "4,0") (userinteraction))
                                                (rule "selectOfStore" (formula "37") (term "4,0") (userinteraction))
                                                (rule "ifthenelse_split" (formula "37") (term "4,0") (userinteraction))
                                                (branch " i_14 = i_14 & IntOpt::$value = IntOpt::$value & !IntOpt::$value = java.lang.Object::<created> TRUE"
                                                   (rule "castDel2" (formula "38") (term "4,0") (ifseqformula "5") (userinteraction))
                                                   (rule "applyEqReverse" (formula "31") (term "4,0") (ifseqformula "5") (userinteraction))
                                                    (builtin "Use Dependency Contract" (formula "38") (term "0") (ifInst ""  (formula "31") (term "0")) (contract "BoyerMoore[BoyerMoore::count([I,\bigint,\bigint)].JML accessible clause.0") (userinteraction))
                                                   (rule "impLeft" (formula "32") (userinteraction))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "wellFormedStorePrimitive" (formula "31") (term "1,1,0,0,0,0"))
                                                      (rule "wellFormedStorePrimitive" (formula "31") (term "1,1,0,0,0,0"))
                                                      (rule "wellFormedStorePrimitive" (formula "31") (term "1,1,0,0,0,0"))
                                                      (rule "wellFormedCreate" (formula "31") (term "1,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")) (ifInst ""  (formula "7")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "37")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")) (ifInst ""  (formula "37")))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "disjointDefinition" (formula "31") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "measuredByCheckEmpty" (formula "31") (term "1") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_gtRight" (formula "38"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "36"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0"))
                                                      (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "17"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0,0"))
                                                      (rule "qeq_literals" (formula "33") (term "0"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "applyEq" (formula "2") (term "4,1,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "32") (term "4,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                      (rule "inEqSimp_strengthen1" (formula "19") (ifseqformula "36"))
                                                      (rule "add_zero_right" (formula "19") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "19"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0"))
                                                      (rule "leq_literals" (formula "36") (term "0"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "false_right" (formula "36"))
                                                      (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0"))
                                                      (rule "qeq_literals" (formula "25") (term "0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "distributeIntersection_2" (formula "32") (term "0"))
                                                      (rule "unionEqualsEmpty" (formula "32"))
                                                      (rule "disjointWithSingleton2" (formula "32") (term "0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "sortsDisjointModuloNull" (formula "32") (term "0,0"))
                                                      (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "33")))
                                                      (rule "distributeIntersection_2" (formula "32") (term "0"))
                                                      (rule "intersectWithSingleton" (formula "32") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "sortsDisjointModuloNull" (formula "32") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "36")))
                                                      (rule "disjointWithSingleton2" (formula "32"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "notRight" (formula "32"))
                                                      (rule "sortsDisjointModuloNull" (formula "1"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "close" (formula "37") (ifseqformula "2"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "applyEq" (formula "39") (term "0") (ifseqformula "32") (userinteraction))
                                                      (rule "applyEqReverse" (formula "26") (term "4,0") (ifseqformula "5") (userinteraction))
                                                      (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "31") (term "1") (inst "last=last") (ifseqformula "9") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "31") (term "1") (userinteraction))
                                                      (branch "1 + r_0 = 0 TRUE"
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_gtRight" (formula "39"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0,0"))
                                                         (rule "applyEq" (formula "33") (term "4,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "27") (term "4,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "34") (term "4,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "1") (term "4,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "34") (term "4,1") (ifseqformula "6"))
                                                         (rule "polySimp_sepPosMonomial" (formula "32"))
                                                         (rule "mul_literals" (formula "32") (term "1"))
                                                         (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "27") (term "3,0") (ifseqformula "32"))
                                                         (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "32"))
                                                         (rule "qeq_literals" (formula "24"))
                                                         (rule "closeFalse" (formula "24"))
                                                      )
                                                      (branch "1 + r_0 = 0 FALSE"
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "0,2,0,0,1"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,2,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "3,1,1,1"))
                                                         (rule "mul_literals" (formula "30") (term "1,3,1,1,1"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "3,2,1"))
                                                         (rule "mul_literals" (formula "30") (term "1,3,2,1"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,2,0,0,1"))
                                                         (rule "add_literals" (formula "30") (term "0,0,2,0,0,1"))
                                                         (rule "add_zero_left" (formula "30") (term "0,2,0,0,1"))
                                                         (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "3,1,1"))
                                                         (rule "add_literals" (formula "30") (term "0,3,1,1"))
                                                         (rule "add_zero_left" (formula "30") (term "3,1,1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_gtRight" (formula "39"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "3") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0,0"))
                                                         (rule "applyEq" (formula "27") (term "4,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "1") (term "4,1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "32") (term "4,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "33") (term "4,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "33") (term "4,1") (ifseqformula "6"))
                                                         (rule "polySimp_sepPosMonomial" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "24"))
                                                         (rule "add_zero_left" (formula "34") (term "0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,0"))
                                                         (rule "leq_literals" (formula "34") (term "0"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "false_right" (formula "34"))
                                                         (rule "inEqSimp_strengthen1" (formula "19") (ifseqformula "36"))
                                                         (rule "add_zero_right" (formula "19") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "19"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0"))
                                                         (rule "leq_literals" (formula "36") (term "0"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "false_right" (formula "36"))
                                                         (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0"))
                                                         (rule "qeq_literals" (formula "25") (term "0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=IntOpt_present_0"))
                                                         (rule "simplifySelectOfStore" (formula "3"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "castDel" (formula "3") (term "0"))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "1") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "26"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4"))
                                                         (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                         (rule "add_literals" (formula "4") (term "1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "0"))
                                                         (rule "qeq_literals" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26"))
                                                         (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "0"))
                                                         (rule "leq_literals" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "29"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                                (branch " i_14 = i_14 & IntOpt::$value = IntOpt::$value & !IntOpt::$value = java.lang.Object::<created> FALSE"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "closeTrue" (formula "37"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "36"))
                                                (branch "Case 1"
                                                   (rule "impRight" (formula "36"))
                                                   (rule "notRight" (formula "37"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "exLeft" (formula "1") (inst "sk=m_0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                   (rule "inEqSimp_ltRight" (formula "35"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "4") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "35"))
                                                   (rule "add_zero_right" (formula "18") (term "1"))
                                                   (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "18"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0"))
                                                   (rule "leq_literals" (formula "35") (term "0"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "false_right" (formula "35"))
                                                   (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0"))
                                                   (rule "qeq_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=IntOpt_present_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "closeTrue" (formula "32"))
                                                )
                                                (branch "Case 2"
                                                   (rule "Class_invariant_axiom_for_BoyerMoore" (formula "36") (ifseqformula "7") (userinteraction))
                                                   (rule "closeTrue" (formula "36"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "36") (inst "sk=f_0"))
                                             (rule "allRight" (formula "36") (inst "sk=o_0"))
                                             (rule "orRight" (formula "36"))
                                             (rule "eqSymm" (formula "37"))
                                             (rule "inEqSimp_ltRight" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_gtToGeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "33"))
                                             (rule "add_zero_right" (formula "17") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "17"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "33") (term "0,0"))
                                             (rule "leq_literals" (formula "33") (term "0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0"))
                                             (rule "qeq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_0_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "2"))
                                             (rule "applyEq" (formula "31") (term "3,0") (ifseqformula "17"))
                                             (rule "inEqSimp_commuteGeq" (formula "31"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "18"))
                                             (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,0"))
                                             (rule "times_zero_1" (formula "18") (term "0"))
                                             (rule "leq_literals" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "29") (term "3,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "qeq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "17") (term "3,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "applyEq" (formula "26") (term "3,1") (ifseqformula "15"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_antiSymm" (formula "24") (ifseqformula "4"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,0"))
                                             (rule "times_zero_1" (formula "4") (term "0"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                             (rule "add_literals" (formula "24") (term "1,0"))
                                             (rule "times_zero_1" (formula "24") (term "0"))
                                             (rule "leq_literals" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "5"))
                                             (rule "mul_literals" (formula "20") (term "0,0"))
                                             (rule "add_zero_left" (formula "20") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                             (rule "mul_literals" (formula "20") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "20"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0"))
                                             (rule "eqSymm" (formula "1") (term "1,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "30"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "nnf_imp2or" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "commute_and" (formula "4") (term "0,0"))
                                             (rule "commute_and" (formula "3") (term "0,0"))
                                             (rule "commute_and" (formula "2") (term "0,0"))
                                             (rule "commute_and" (formula "1") (term "0,0"))
                                             (rule "jdiv_axiom" (formula "25") (term "0"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
                                             (rule "inEqSimp_subsumption1" (formula "25") (term "0,0") (ifseqformula "21"))
                                             (rule "leq_literals" (formula "25") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "cut_direct" (formula "35") (term "0,0"))
                                             (branch "CUT: o_0 = null TRUE"
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "false_right" (formula "36"))
                                                (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "30"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "closeTrue" (formula "32"))
                                             )
                                             (branch "CUT: o_0 = null FALSE"
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "notRight" (formula "36"))
                                                (rule "div_axiom" (formula "26") (term "0") (inst "quotient=quotient_0"))
                                                (rule "equal_literals" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "qeq_literals" (formula "26") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "mul_literals" (formula "26") (term "1,1,1"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "polySimp_addComm1" (formula "28") (term "1"))
                                                (rule "add_literals" (formula "28") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "27"))
                                                (rule "inEqSimp_homoInEq1" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "26"))
                                                (rule "eqSymm" (formula "29"))
                                                (rule "applyEq" (formula "25") (term "1") (ifseqformula "29"))
                                                (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "29"))
                                                (rule "applyEqRigid" (formula "30") (term "1") (ifseqformula "29"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                (rule "mul_literals" (formula "28") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "28"))
                                                (rule "mul_literals" (formula "22") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0"))
                                                (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "22") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "22") (term "0,0"))
                                                (rule "leq_literals" (formula "22") (term "0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = java.lang.Object::<created> & o_0 = i_14 TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "35") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = java.lang.Object::<created> & o_0 = i_14 FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = IntOpt::$present & o_0 = i_14 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "false_right" (formula "36"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEqRigid" (formula "39") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "39") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "close" (formula "35") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = IntOpt::$present & o_0 = i_14 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_0 = IntOpt::$value & o_0 = i_14 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "35"))
                                                         (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "36"))
                                                         (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "40") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "37") (ifseqformula "1"))
                                                      )
                                                      (branch "f_0 = IntOpt::$value & o_0 = i_14 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_0 = java.lang.Object::<initialized> & o_0 = i_14 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "false_right" (formula "35"))
                                                            (rule "applyEqRigid" (formula "41") (term "2,0") (ifseqformula "2"))
                                                            (rule "narrowSelectType" (formula "41") (term "0") (ifseqformula "7"))
                                                            (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "false_right" (formula "35"))
                                                            (rule "applyEq" (formula "34") (term "0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "34"))
                                                            (rule "false_right" (formula "34"))
                                                            (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "35") (ifseqformula "1"))
                                                         )
                                                         (branch "f_0 = java.lang.Object::<initialized> & o_0 = i_14 FALSE"
                                                            (rule "close" (formula "42") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Null Reference (i_12 = null)"
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Exceptional Post (monoLemma)"
                                        (builtin "One Step Simplification" (formula "30"))
                                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "10")))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "close" (formula "28") (ifseqformula "27"))
                                    )
                                    (branch "Pre (monoLemma)"
                                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "10")) (ifInst ""  (formula "28")) (ifInst ""  (formula "4")) (ifInst ""  (formula "28")) (ifInst ""  (formula "7")))
                                       (rule "polySimp_elimSub" (formula "29") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,1"))
                                       (rule "measuredByCheckEmpty" (formula "29") (term "1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_ltRight" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                       (rule "times_zero_2" (formula "29") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "29") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_geqRight" (formula "29"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "27"))
                                       (rule "add_zero_right" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "17"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0"))
                                       (rule "leq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "closeFalse" (formula "22"))
                                    )
                                 )
                                 (branch "if ++cnt > _a.length / 2 false"
                                     (builtin "One Step Simplification" (formula "29"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "blockEmpty" (formula "29") (term "1"))
                                    (rule "unusedLabel" (formula "29") (term "1"))
                                    (rule "postincrement" (formula "29") (term "1"))
                                    (rule "compound_reference_cast_expression_primitive" (formula "29") (term "1") (inst "#v=i_12"))
                                    (rule "variableDeclarationAssign" (formula "29") (term "1"))
                                    (rule "variableDeclaration" (formula "29") (term "1") (newnames "i_12"))
                                    (rule "remove_parentheses_right" (formula "29") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "translateJavaAddInt" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "29") (term "1"))
                                    (rule "assignment" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "tryEmpty" (formula "29") (term "1"))
                                    (rule "methodCallEmpty" (formula "29") (term "1"))
                                    (rule "emptyModality" (formula "29") (term "1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "andRight" (formula "29"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "29"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "29"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "29"))
                                             (branch "Case 1"
                                                (rule "inEqSimp_ltRight" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_gtRight" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "29"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "27"))
                                                (rule "add_zero_right" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "17"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0"))
                                                (rule "leq_literals" (formula "27") (term "0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "false_right" (formula "27"))
                                                (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,0"))
                                                (rule "qeq_literals" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0"))
                                                (rule "qeq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "22") (term "0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                             (branch "Case 2"
                                                (rule "inEqSimp_geqRight" (formula "29"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_ltRight" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_gtRight" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "27"))
                                                (rule "add_zero_right" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "17"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0"))
                                                (rule "leq_literals" (formula "27") (term "0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "false_right" (formula "27"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0"))
                                                (rule "qeq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0"))
                                                (rule "qeq_literals" (formula "25") (term "0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "5"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0"))
                                                (rule "add_zero_right" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "29") (term "0") (inst "last=last") (ifseqformula "5") (userinteraction))
                                             (rule "polySimp_elimSub" (formula "29") (term "0,2,0,0,2,0"))
                                             (rule "mul_literals" (formula "29") (term "1,0,2,0,0,2,0"))
                                             (rule "polySimp_elimSub" (formula "29") (term "3,2,2,0"))
                                             (rule "mul_literals" (formula "29") (term "1,3,2,2,0"))
                                             (rule "polySimp_elimSub" (formula "29") (term "3,1,1,2,0"))
                                             (rule "mul_literals" (formula "29") (term "1,3,1,1,2,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,2,0,0,2,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,2,0,0,2,0"))
                                             (rule "add_zero_left" (formula "29") (term "0,2,0,0,2,0"))
                                             (rule "replace_known_left" (formula "29") (term "0,2,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "polySimp_addComm1" (formula "29") (term "3,1,2,0"))
                                             (rule "add_literals" (formula "29") (term "0,3,1,2,0"))
                                             (rule "add_zero_left" (formula "29") (term "3,1,2,0"))
                                             (rule "inEqSimp_gtRight" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "orRight" (formula "29"))
                                             (rule "notRight" (formula "29"))
                                             (rule "polySimp_homoEq" (formula "30"))
                                             (rule "times_zero_2" (formula "30") (term "1,0"))
                                             (rule "add_zero_right" (formula "30") (term "0"))
                                             (rule "polySimp_sepPosMonomial" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "applyEqRigid" (formula "25") (term "3,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "24") (term "3,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "22"))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "inEqSimp_geqRight" (formula "29"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltRight" (formula "27"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_gtRight" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "27"))
                                          (rule "add_zero_right" (formula "17") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "17"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0"))
                                          (rule "leq_literals" (formula "27") (term "0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "false_right" (formula "27"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0"))
                                          (rule "qeq_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "polySimp_mulComm0" (formula "29") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                       (rule "precOfInt" (formula "29"))
                                       (rule "inEqSimp_ltRight" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_gtRight" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29") (term "1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                       (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,1"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "29") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1"))
                                       (rule "add_literals" (formula "29") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "0,1"))
                                       (rule "leq_literals" (formula "29") (term "1"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "27"))
                                       (rule "add_zero_right" (formula "17") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "17"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0"))
                                       (rule "leq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0"))
                                       (rule "qeq_literals" (formula "26") (term "0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "equal_literals" (formula "28") (term "0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "closeTrue" (formula "28"))
                              )
                           )
                           (branch "Null Reference (mc == 0 = null)"
                              (rule "false_right" (formula "29"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "if mx == _a[r] false"
                            (builtin "One Step Simplification" (formula "28"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "blockEmpty" (formula "28") (term "1"))
                           (rule "postincrement" (formula "28") (term "1"))
                           (rule "compound_reference_cast_expression_primitive" (formula "28") (term "1") (inst "#v=i_8"))
                           (rule "variableDeclarationAssign" (formula "28") (term "1"))
                           (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_8"))
                           (rule "unusedLabel" (formula "28") (term "1"))
                           (rule "remove_parentheses_right" (formula "28") (term "1"))
                           (rule "assignmentAdditionInt" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "translateJavaAddInt" (formula "28") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "28") (term "1"))
                           (rule "assignment" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "tryEmpty" (formula "28") (term "1"))
                           (rule "methodCallEmpty" (formula "28") (term "1"))
                           (rule "emptyModality" (formula "28") (term "1"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "22")))
                           (rule "andRight" (formula "28"))
                           (branch "Case 1"
                              (rule "andRight" (formula "28"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "28"))
                                 (branch "Case 1"
                                    (rule "inEqSimp_geqRight" (formula "28"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltRight" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "26"))
                                    (rule "add_zero_right" (formula "15") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "15"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "false_right" (formula "26"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "closeFalse" (formula "20"))
                                 )
                                 (branch "Case 2"
                                    (rule "inEqSimp_geqRight" (formula "28"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltRight" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "26"))
                                    (rule "add_zero_right" (formula "15") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "15"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "false_right" (formula "26"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "Definition_axiom_for_count_in_BoyerMoore" (formula "28") (term "0") (inst "last=last") (ifseqformula "4") (userinteraction))
                                 (rule "polySimp_elimSub" (formula "28") (term "3,1,1,2,0"))
                                 (rule "mul_literals" (formula "28") (term "1,3,1,1,2,0"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,2,0,0,2,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,2,0,0,2,0"))
                                 (rule "polySimp_elimSub" (formula "28") (term "3,2,2,0"))
                                 (rule "mul_literals" (formula "28") (term "1,3,2,2,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "3,1,1,2,0"))
                                 (rule "add_literals" (formula "28") (term "0,3,1,1,2,0"))
                                 (rule "add_zero_left" (formula "28") (term "3,1,1,2,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,2,0,0,2,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,2,0,0,2,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,2,0,0,2,0"))
                                 (rule "replace_known_right" (formula "28") (term "0,2,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "polySimp_addComm1" (formula "28") (term "3,2,0"))
                                 (rule "add_literals" (formula "28") (term "0,3,2,0"))
                                 (rule "add_zero_left" (formula "28") (term "3,2,0"))
                                 (rule "inEqSimp_ltRight" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "orRight" (formula "28"))
                                 (rule "notRight" (formula "28"))
                                 (rule "eqSymm" (formula "29"))
                                 (rule "polySimp_sepPosMonomial" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "applyEq" (formula "22") (term "3,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                           )
                           (branch "Case 2"
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                              (rule "mul_literals" (formula "28") (term "0,0,0"))
                              (rule "precOfInt" (formula "28"))
                              (rule "inEqSimp_ltRight" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                              (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,1"))
                              (rule "times_zero_1" (formula "28") (term "1,0,1"))
                              (rule "add_zero_right" (formula "28") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                              (rule "add_literals" (formula "28") (term "0,0,0,1"))
                              (rule "add_zero_left" (formula "28") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1"))
                              (rule "add_literals" (formula "28") (term "1,0,1"))
                              (rule "times_zero_1" (formula "28") (term "0,1"))
                              (rule "leq_literals" (formula "28") (term "1"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_leqRight" (formula "28"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "26"))
                              (rule "add_zero_right" (formula "15") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "15"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0"))
                              (rule "leq_literals" (formula "26") (term "0"))
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "false_right" (formula "26"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (mc == 0 = null)"
                        (rule "false_right" (formula "28"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (mc == 0 != null, but mc == 0 Out of Bounds!)"
                        (rule "false_right" (formula "28"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                        (rule "inEqSimp_ltRight" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "1,1"))
                        (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "25"))
                        (rule "add_zero_right" (formula "15") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "15"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "leq_literals" (formula "25") (term "0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "false_right" (formula "25"))
                        (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0"))
                        (rule "qeq_literals" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "20"))
                        (rule "qeq_literals" (formula "2") (term "0,1"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
                  (branch "if r < _a.length false"
                      (builtin "One Step Simplification" (formula "28"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (mc == 0 = null)"
                  (rule "false_right" (formula "27"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (mc == 0 = null)"
               (rule "false_right" (formula "22"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Use Case"
             (builtin "One Step Simplification" (formula "16"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "eqSymm" (formula "18"))
            (rule "inEqSimp_commuteLeq" (formula "19"))
            (rule "inEqSimp_commuteLeq" (formula "16"))
            (rule "inEqSimp_commuteLeq" (formula "17"))
            (rule "variableDeclarationAssign" (formula "24") (term "1"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "b_0_1"))
            (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "18") (term "0"))
            (rule "applyEq" (formula "18") (term "1") (ifseqformula "19"))
            (rule "compound_less_than_comparison_2" (formula "25") (term "1") (inst "#v1=i_3") (inst "#v0=i_2"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "i_2"))
            (rule "assignment" (formula "25") (term "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "i_3"))
            (rule "assignment_read_length" (formula "25"))
            (branch "Normal Execution (mc == 0 != null)"
                (builtin "One Step Simplification" (formula "25"))
               (rule "less_than_comparison_simple" (formula "25") (term "1"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "methodCallEmpty" (formula "25") (term "1"))
               (rule "emptyModality" (formula "25") (term "1"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "impRight" (formula "25"))
               (rule "notLeft" (formula "1"))
               (rule "returnUnfold" (formula "26") (term "1") (inst "#v0=i_4"))
               (rule "variableDeclarationAssign" (formula "26") (term "1"))
               (rule "variableDeclaration" (formula "26") (term "1") (newnames "i_4"))
               (rule "activeUseStaticFieldReadAccess" (formula "26") (term "1"))
               (rule "assignment_read_static_attribute_final" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "methodCallReturn" (formula "26") (term "1"))
               (rule "assignment" (formula "26") (term "1"))
                (builtin "One Step Simplification" (formula "26"))
               (rule "methodCallEmpty" (formula "26") (term "1"))
               (rule "tryEmpty" (formula "26") (term "1"))
               (rule "emptyModality" (formula "26") (term "1"))
               (rule "andRight" (formula "26"))
               (branch "Case 1"
                  (rule "andRight" (formula "26"))
                  (branch "Case 1"
                     (rule "andRight" (formula "26"))
                     (branch "Case 1"
                        (rule "impRight" (formula "26"))
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_ltRight" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_gtRight" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "25"))
                        (rule "add_zero_right" (formula "15") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "15"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "leq_literals" (formula "25") (term "0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "false_right" (formula "25"))
                        (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "3"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "14"))
                        (rule "inEqSimp_homoInEq0" (formula "3"))
                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,0"))
                        (rule "times_zero_1" (formula "3") (term "0"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "1") (term "3,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "13"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "14"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,0"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "leq_literals" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_commuteGeq" (formula "20"))
                        (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "20"))
                        (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "3,0") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "20"))
                        (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                        (rule "add_literals" (formula "20") (term "1,0"))
                        (rule "times_zero_1" (formula "20") (term "0"))
                        (rule "qeq_literals" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,0"))
                        (rule "times_zero_1" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "20") (term "3,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "20"))
                        (rule "inEqSimp_homoInEq0" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "15"))
                        (rule "applyEq" (formula "15") (term "1") (ifseqformula "19"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "1") (term "0"))
                        (rule "jdiv_axiom" (formula "21") (term "0"))
                        (rule "eqSymm" (formula "21"))
                        (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "eqSymm" (formula "21"))
                        (rule "applyEq" (formula "2") (term "1") (ifseqformula "21"))
                        (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                        (rule "div_axiom" (formula "21") (term "1") (inst "quotient=quotient_0"))
                        (rule "mul_literals" (formula "21") (term "1,1,1,1,1"))
                        (rule "qeq_literals" (formula "21") (term "0,1,1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "equal_literals" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "polySimp_addComm1" (formula "23") (term "1"))
                        (rule "add_literals" (formula "23") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "inEqSimp_homoInEq1" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "21"))
                        (rule "inEqSimp_commuteGeq" (formula "25"))
                        (rule "applyEq" (formula "2") (term "1") (ifseqformula "21"))
                        (rule "applyEq" (formula "24") (term "1") (ifseqformula "21"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "13") (term "0,0"))
                        (rule "add_zero_left" (formula "13") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1"))
                        (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "13") (term "0,0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                        (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "allLeft" (formula "19") (inst "t=int::select(heap,
            IntOpt::final(null, IntOpt::$NONE),
            IntOpt::$value)"))
                        (rule "cut_direct" (formula "19") (term "1"))
                        (branch "CUT: self.count(a, k_0, IntOpt.NONE.value) * 2 <= k_0 + mc_0 * -1 TRUE"
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "Partial_inv_axiom_for_static_JML_class_invariant_in_IntOpt_no_2" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "close" (formula "28") (ifseqformula "4"))
                        )
                        (branch "CUT: self.count(a, k_0, IntOpt.NONE.value) * 2 <= k_0 + mc_0 * -1 FALSE"
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_leqRight" (formula "28"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "3") (term "4,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "1") (term "4,0,1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "2") (term "4,0") (ifseqformula "20"))
                           (rule "eqSymm" (formula "2"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "23"))
                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "22"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "2") (term "4,0") (ifseqformula "19"))
                           (rule "eqSymm" (formula "2"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,0,1"))
                           (rule "Partial_inv_axiom_for_static_JML_class_invariant_in_IntOpt_no_2" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "close" (formula "27") (ifseqformula "4"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "26"))
                        (branch "Case 1"
                           (rule "impRight" (formula "26"))
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "notLeft" (formula "1"))
                           (rule "notRight" (formula "27"))
                           (rule "exLeft" (formula "1") (inst "sk=m_0"))
                           (rule "inEqSimp_ltRight" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "25"))
                           (rule "add_zero_right" (formula "14") (term "1"))
                           (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "14"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0"))
                           (rule "add_zero_right" (formula "25") (term "0,0"))
                           (rule "leq_literals" (formula "25") (term "0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "false_right" (formula "25"))
                           (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "13"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "14"))
                           (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                           (rule "add_literals" (formula "14") (term "1,0"))
                           (rule "times_zero_1" (formula "14") (term "0"))
                           (rule "leq_literals" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "applyEq" (formula "3") (term "3,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "13"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_commuteGeq" (formula "20"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "19"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,0"))
                           (rule "times_zero_1" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEqRigid" (formula "20") (term "3,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "18"))
                           (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "1,0"))
                           (rule "times_zero_1" (formula "18") (term "0"))
                           (rule "qeq_literals" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEqRigid" (formula "18") (term "3,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                           (rule "eqSymm" (formula "14"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1"))
                           (rule "polySimp_rightDist" (formula "14") (term "1"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "limit_BoyerMoore_count[I\bigint\bigint" (formula "2") (term "0"))
                           (rule "jdiv_axiom" (formula "3") (term "1,1"))
                           (rule "eqSymm" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "13"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "3"))
                           (rule "div_axiom" (formula "3") (term "1") (inst "quotient=quotient_0"))
                           (rule "equal_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "qeq_literals" (formula "3") (term "0,1"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1,1,1"))
                           (rule "andLeft" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "polySimp_addComm1" (formula "5") (term "1"))
                           (rule "add_literals" (formula "5") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_commuteGeq" (formula "24"))
                           (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "5"))
                           (rule "times_zero_1" (formula "16") (term "0,0"))
                           (rule "add_zero_left" (formula "16") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                           (rule "leq_literals" (formula "16") (term "0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0"))
                           (rule "leq_literals" (formula "16") (term "0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                           (rule "allLeft" (formula "21") (inst "t=m_0"))
                           (rule "eqSymm" (formula "21") (term "0"))
                           (rule "cut_direct" (formula "21") (term "1"))
                           (branch "CUT: self.count(a, k_0, m_0) * 2 <= k_0 + mc_0 * -1 TRUE"
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "21"))
                              (rule "greater_literals" (formula "7") (term "0"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "7"))
                              (rule "mul_literals" (formula "20") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1"))
                              (rule "polySimp_rightDist" (formula "20") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                              (rule "mul_literals" (formula "20") (term "0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "20"))
                              (rule "andLeft" (formula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                           (branch "CUT: self.count(a, k_0, m_0) * 2 <= k_0 + mc_0 * -1 FALSE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_leqRight" (formula "27"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "26") (term "4,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "25") (term "4,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "26"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
                              (rule "eqSymm" (formula "3"))
                              (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "21"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "mul_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "7"))
                              (rule "andLeft" (formula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,1,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0"))
                              (rule "add_zero_right" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "closeFalse" (formula "26"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "26"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "7")))
                              (rule "closeTrue" (formula "26"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "26"))
                              (rule "notRight" (formula "26"))
                              (rule "inEqSimp_ltRight" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "24"))
                              (rule "add_zero_right" (formula "14") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "14"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "false_right" (formula "24"))
                              (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "20"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "20"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "20"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,0"))
                              (rule "times_zero_1" (formula "2") (term "0"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                              (rule "inEqSimp_homoInEq1" (formula "20"))
                              (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                              (rule "add_literals" (formula "20") (term "1,0"))
                              (rule "times_zero_1" (formula "20") (term "0"))
                              (rule "leq_literals" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
                              (rule "applyEq" (formula "22") (term "3,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "21") (term "3,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "12"))
                              (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "12"))
                              (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "1,0"))
                              (rule "times_zero_1" (formula "12") (term "0"))
                              (rule "leq_literals" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "19"))
                              (rule "inEqSimp_homoInEq0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "18"))
                              (rule "eqSymm" (formula "13"))
                              (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "11"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "jdiv_axiom" (formula "19") (term "0"))
                              (rule "eqSymm" (formula "19"))
                              (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "10"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "eqSymm" (formula "19"))
                              (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
                              (rule "div_axiom" (formula "19") (term "1") (inst "quotient=quotient_0"))
                              (rule "mul_literals" (formula "19") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "19") (term "0,1,1"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "equal_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "polySimp_addComm1" (formula "21") (term "1"))
                              (rule "add_literals" (formula "21") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "20"))
                              (rule "inEqSimp_homoInEq1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "19"))
                              (rule "inEqSimp_commuteGeq" (formula "23"))
                              (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "19"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                              (rule "mul_literals" (formula "21") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "21"))
                              (rule "times_zero_1" (formula "10") (term "0,0"))
                              (rule "add_zero_left" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "10") (term "0,0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                              (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "Partial_inv_axiom_for_static_JML_class_invariant_in_IntOpt_no_1" (formula "7"))
                              (rule "notLeft" (formula "7"))
                              (rule "close" (formula "25") (ifseqformula "1"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "closeTrue" (formula "26"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "closeTrue" (formula "26"))
               )
            )
            (branch "Null Reference (mc == 0 = null)"
               (rule "false_right" (formula "26"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
   (branch "Null Reference (_a = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
