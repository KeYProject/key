\settings {
"#Proof-Settings-Config-File
#Thu Jul 07 17:41:25 CEST 2011
[SMTSettings]SolverTimeout=5000
[SMTSettings]pathForTacletTranslation=
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[SMTSettings]pathForSMTTranslation=
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[SMTSettings]executionStringZ3=z3 -smt -m %f
[Choice]DefaultChoices=assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=false
[View]HideClosedSubtrees=true
[General]UseOCL=false
[SMTSettings]maxConcurrentProcesses=5
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]ActiveSolver=Z3
[SMTSettings]executionStringYices=yices -tc -e -smt %f
[SMTSettings]executionStringCVC3=cvc3 -lang smt +model %f
[General]StupidMode=true
[SMTSettings]modeOfProgressDialog=0
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]showSMTResDialog=false
[General]OneStepSimplification=false
[General]UseJML=true
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[SMTSettings]useUninterpretedMultiplication=true
[View]MaxTooltipLines=40
[Strategy]MaximumNumberOfAutomaticApplications=900
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]executionStringSimplify=simplify %f
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]TacletSelection=111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource "src";

\chooseContract "JML operation contract [id: 5 / Account::Account]";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "87dc0a69f156a44363f4ffda80eda512f68e3bd1"))

(autoModeTime "1787")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "assignment" (formula "2") (term "1"))
(rule "sequentialToParallel2" (formula "2"))
(rule "simplifyUpdate3" (formula "2") (term "1,0"))
(rule "eqSymm" (formula "2") (term "1,0,0,1,0,1"))
(rule "instanceCreationAssignment" (formula "2") (term "1") (inst "#v0=a"))
(rule "variableDeclarationAssign" (formula "2") (term "1"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "a"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "1") (inst "#v0=a_1"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "a_1"))
(rule "methodBodyExpand" (formula "2") (term "1") (newnames "heapBefore_<createObject>"))
(rule "simplifyUpdate2" (formula "2") (term "1"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "2") (term "1") (inst "#v0=a_2"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "a_2"))
(rule "allocateInstance" (formula "2"))
(rule "false_to_not_true" (formula "1") (term "1,1,0,1"))
(rule "simplifyUpdate2" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "5") (term "1,1"))
(rule "assignment" (formula "5") (term "1,1"))
(rule "sequentialToParallel2" (formula "5"))
(rule "simplifyUpdate3" (formula "5") (term "1,0"))
(rule "sequentialToParallel2" (formula "5"))
(rule "simplifyUpdate3" (formula "5") (term "1,0"))
(rule "replace_known_left" (formula "1") (term "0") (ifseqformula "3"))
(rule "concrete_impl_1" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<create>"))
(rule "simplifyUpdate2" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
(rule "sequentialToParallel2" (formula "5"))
(rule "simplifyUpdate3" (formula "5") (term "1,0"))
(rule "simplifyUpdate2" (formula "5"))
(rule "applyOnElementary" (formula "5") (term "1,0"))
(rule "applyOnRigidTerm" (formula "5") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "2,0,1,0"))
(rule "applyOnPV" (formula "5") (term "0,0,1,0"))
(rule "applyOnPV" (formula "5") (term "1,0,1,0"))
(rule "methodCallWithinClass" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<prepareEnter>"))
(rule "simplifyUpdate2" (formula "5") (term "1"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<prepare>"))
(rule "simplifyUpdate2" (formula "5") (term "1"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1,1"))
(rule "assignment" (formula "5") (term "1,1,1"))
(rule "sequentialToParallel2" (formula "5") (term "1"))
(rule "simplifyUpdate2" (formula "5") (term "1"))
(rule "applyOnElementary" (formula "5") (term "0,1"))
(rule "sequentialToParallel2" (formula "5"))
(rule "simplifyUpdate3" (formula "5") (term "1,0"))
(rule "simplifyUpdate2" (formula "5"))
(rule "applyOnElementary" (formula "5") (term "1,0"))
(rule "sequentialToParallel2" (formula "5"))
(rule "simplifyUpdate3" (formula "5") (term "1,0"))
(rule "simplifyUpdate2" (formula "5"))
(rule "applyOnElementary" (formula "5") (term "1,0"))
(rule "sequentialToParallel1" (formula "5") (term "0,1,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "0,1,0,0,1,0"))
(rule "applyOnElementary" (formula "5") (term "1,0,0,1,0,0,1,0"))
(rule "applyOnRigidTerm" (formula "5") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "3,0,1,0"))
(rule "applyOnPV" (formula "5") (term "0,0,1,0"))
(rule "applyOnPV" (formula "5") (term "1,0,1,0"))
(rule "applyOnRigidTerm" (formula "5") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "0,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "3,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "1,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "2,0,0,1,0"))
(rule "applyOnPV" (formula "5") (term "0,0,0,1,0"))
(rule "applyOnPV" (formula "5") (term "1,0,0,1,0"))
(rule "applyOnRigidTerm" (formula "5") (term "0,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "0,0,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "3,0,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "2,0,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "1,0,0,0,1,0"))
(rule "applyOnPV" (formula "5") (term "0,0,0,0,1,0"))
(rule "applyOnPV" (formula "5") (term "1,0,0,0,1,0"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "5") (term "1"))
(rule "methodCallReturn" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
(rule "sequentialToParallel2" (formula "5"))
(rule "simplifyUpdate3" (formula "5") (term "1,0"))
(rule "simplifyUpdate2" (formula "5"))
(rule "applyOnElementary" (formula "5") (term "1,0"))
(rule "applyOnPV" (formula "5") (term "0,1,0"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
(rule "sequentialToParallel2" (formula "5"))
(rule "simplifyUpdate3" (formula "5") (term "1,0"))
(rule "simplifyUpdate2" (formula "5"))
(rule "applyOnElementary" (formula "5") (term "1,0"))
(rule "applyOnPV" (formula "5") (term "0,1,0"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<init>"))
(rule "simplifyUpdate2" (formula "5") (term "1"))
(rule "methodCallSuper" (formula "5") (term "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_<init>_0"))
(rule "simplifyUpdate2" (formula "5") (term "1"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1"))
(rule "assignment" (formula "5") (term "1,1"))
(rule "sequentialToParallel2" (formula "5"))
(rule "simplifyUpdate3" (formula "5") (term "1,0"))
(rule "simplifyUpdate2" (formula "5"))
(rule "applyOnElementary" (formula "5") (term "1,0"))
(rule "sequentialToParallel2" (formula "5"))
(rule "simplifyUpdate3" (formula "5") (term "1,0"))
(rule "simplifyUpdate2" (formula "5"))
(rule "applyOnElementary" (formula "5") (term "1,0"))
(rule "applyOnRigidTerm" (formula "5") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "1,0,1,0"))
(rule "applyOnPV" (formula "5") (term "0,0,1,0"))
(rule "applyOnPV" (formula "5") (term "1,0,1,0"))
(rule "applyOnRigidTerm" (formula "5") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "0,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "2,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "1,0,0,1,0"))
(rule "simplifyUpdate1" (formula "5") (term "3,0,0,1,0"))
(rule "applyOnPV" (formula "5") (term "0,0,0,1,0"))
(rule "dropEffectlessStores" (formula "5") (term "0,1,0"))
(rule "applyOnRigidTerm" (formula "5") (term "3,0,0,1,0"))
(rule "applyOnPV" (formula "5") (term "1,0,0,1,0"))
(rule "dropEffectlessStores" (formula "5") (term "0,1,0"))
(rule "applyOnPV" (formula "5") (term "0,3,0,0,1,0"))
(rule "methodCallEmpty" (formula "5") (term "1"))
(rule "blockEmpty" (formula "5") (term "1"))
(rule "assignment_write_attribute" (formula "5"))
(branch " Normal Execution (a != null)"
   (rule "assignment" (formula "5") (term "1,1"))
   (rule "sequentialToParallel2" (formula "5") (term "1"))
   (rule "simplifyUpdate3" (formula "5") (term "1,0,1"))
   (rule "sequentialToParallel2" (formula "5"))
   (rule "simplifyUpdate2" (formula "5"))
   (rule "simplifyUpdate3" (formula "5") (term "1,0"))
   (rule "applyOnParallel" (formula "5") (term "1,0"))
   (rule "simplifyUpdate3" (formula "5") (term "1,1,0"))
   (rule "applyOnElementary" (formula "5") (term "0,1,0"))
   (rule "applyOnElementary" (formula "5") (term "1,1,0"))
   (rule "applyOnRigidTerm" (formula "5") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "3,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "2,0,0,1,0"))
   (rule "applyOnPV" (formula "5") (term "0,1,1,0"))
   (rule "applyOnPV" (formula "5") (term "0,0,0,1,0"))
   (rule "applyOnPV" (formula "5") (term "1,0,0,1,0"))
   (rule "dropEffectlessStores" (formula "5") (term "0,0,1,0"))
   (rule "tryEmpty" (formula "5") (term "1"))
   (rule "emptyModality" (formula "5") (term "1"))
   (rule "applyOnRigidFormula" (formula "5"))
   (rule "simplifyUpdate2" (formula "5") (term "1"))
   (rule "simplifyUpdate2" (formula "5") (term "0"))
   (rule "applyOnRigidFormula" (formula "5") (term "1"))
   (rule "applyOnRigidFormula" (formula "5") (term "0"))
   (rule "simplifyUpdate2" (formula "5") (term "1,0"))
   (rule "applyOnRigidFormula" (formula "5") (term "0,1"))
   (rule "applyOnRigidFormula" (formula "5") (term "0,0"))
   (rule "simplifyUpdate2" (formula "5") (term "0,0,0"))
   (rule "simplifyUpdate2" (formula "5") (term "1,0,0"))
   (rule "applyOnRigidFormula" (formula "5") (term "0,0,1"))
   (rule "simplifyUpdate2" (formula "5") (term "0,0,0,1"))
   (rule "applyOnRigidFormula" (formula "5") (term "1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,1,0"))
   (rule "applyOnRigidFormula" (formula "5") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,0,0,0"))
   (rule "applyOnRigidFormula" (formula "5") (term "1,0,0"))
   (rule "applyOnRigidFormula" (formula "5") (term "1,0,0,1"))
   (rule "simplifyUpdate1" (formula "5") (term "0,1,0,0,1"))
   (rule "simplifyUpdate1" (formula "5") (term "1,1,0,0,1"))
   (rule "applyOnRigidFormula" (formula "5") (term "0,0,0,1"))
   (rule "simplifyUpdate2" (formula "5") (term "0,0,0,0,1"))
   (rule "applyOnPV" (formula "5") (term "0,1,0"))
   (rule "eqClose" (formula "5") (term "1,0"))
   (rule "concrete_and_3" (formula "5") (term "0"))
   (rule "applyOnRigidTerm" (formula "5") (term "0,1,0,0,1"))
   (rule "simplifyUpdate1" (formula "5") (term "2,0,1,0,0,1"))
   (rule "simplifyUpdate1" (formula "5") (term "1,0,1,0,0,1"))
   (rule "applyOnRigidTerm" (formula "5") (term "1,1,0,0,1"))
   (rule "simplifyUpdate1" (formula "5") (term "2,1,1,0,0,1"))
   (rule "simplifyUpdate1" (formula "5") (term "1,1,1,0,0,1"))
   (rule "applyOnRigidFormula" (formula "5") (term "1,0,0,0,1"))
   (rule "applyOnRigidFormula" (formula "5") (term "1,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,1,1,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,1,1,0"))
   (rule "applyOnPV" (formula "5") (term "0,0,0"))
   (rule "eqClose" (formula "5") (term "0,0"))
   (rule "concrete_impl_1" (formula "5") (term "0"))
   (rule "applyOnPV" (formula "5") (term "0,0,1,0,0,1"))
   (rule "applyOnPV" (formula "5") (term "0,1,1,0,0,1"))
   (rule "applyOnRigidFormula" (formula "5") (term "0,1,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "5") (term "1,0,1,0,0,0,1"))
   (rule "applyOnPV" (formula "5") (term "0,1,0"))
   (rule "applyOnPV" (formula "5") (term "1,1,0"))
   (rule "applyOnRigidFormula" (formula "5") (term "0,0"))
   (rule "eqSymm" (formula "5") (term "1,0,0,1"))
   (rule "applyOnRigidTerm" (formula "5") (term "0,0,1,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "5") (term "1,0,0,1,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "5") (term "2,0,0,1,0,0,0,1"))
   (rule "applyOnRigidFormula" (formula "5") (term "0,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,0,0,0"))
   (rule "applyOnRigidFormula" (formula "5") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,1,0,0"))
   (rule "applyOnPV" (formula "5") (term "0,0,0,1,0,0,0,1"))
   (rule "applyOnRigidTerm" (formula "5") (term "0,0,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,0,0,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,0,0,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "2,0,0,0,0"))
   (rule "applyOnRigidTerm" (formula "5") (term "0,1,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "0,0,1,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "1,0,1,0,0"))
   (rule "simplifyUpdate1" (formula "5") (term "2,0,1,0,0"))
   (rule "applyOnPV" (formula "5") (term "1,0,0,0,0"))
   (rule "applyOnPV" (formula "5") (term "0,0,0,0,0"))
   (rule "applyOnPV" (formula "5") (term "0,0,1,0,0"))
   (rule "applyOnPV" (formula "5") (term "1,0,1,0,0"))
   (rule "selectOfStore" (formula "5") (term "0,1,0,0,1"))
   (rule "equalUnique" (formula "5") (term "0,1,0,0,1,0,0,1"))
   (rule "concrete_not_2" (formula "5") (term "1,0,0,1,0,0,1"))
   (rule "concrete_and_3" (formula "5") (term "0,0,1,0,0,1"))
   (rule "eqSymm" (formula "5") (term "1,0,0,1,0,0,1"))
   (rule "eqSymm" (formula "5") (term "0,0,0,1,0,0,1"))
   (rule "castDel" (formula "5") (term "1,0,1,0,0,1"))
   (rule "selectOfStore" (formula "5") (term "0,0,0,0"))
   (rule "eqClose" (formula "5") (term "0,0,0,0,0,0,0"))
   (rule "equalUnique" (formula "5") (term "1,0,0,0,0,0,0"))
   (rule "equalUnique" (formula "5") (term "0,1,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "5") (term "0,0,0,0,0,0"))
   (rule "concrete_not_2" (formula "5") (term "1,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "5") (term "0,0,0,0,0"))
   (rule "ifthenelse_false" (formula "5") (term "0,0,0,0"))
   (rule "selectOfStore" (formula "5") (term "0,1,0,0"))
   (rule "equalUnique" (formula "5") (term "1,0,0,0,1,0,0"))
   (rule "eqClose" (formula "5") (term "0,0,0,0,1,0,0"))
   (rule "equalUnique" (formula "5") (term "0,1,0,0,1,0,0"))
   (rule "concrete_and_4" (formula "5") (term "0,0,0,1,0,0"))
   (rule "concrete_not_2" (formula "5") (term "1,0,0,1,0,0"))
   (rule "concrete_and_3" (formula "5") (term "0,0,1,0,0"))
   (rule "ifthenelse_false" (formula "5") (term "0,1,0,0"))
   (rule "selectOfStore" (formula "5") (term "2,0,1,0,0,1"))
   (rule "equalUnique" (formula "5") (term "0,1,0,2,0,1,0,0,1"))
   (rule "concrete_not_2" (formula "5") (term "1,0,2,0,1,0,0,1"))
   (rule "concrete_and_3" (formula "5") (term "0,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "5") (term "1,0,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "5") (term "0,0,2,0,1,0,0,1"))
   (rule "castDel" (formula "5") (term "1,2,0,1,0,0,1"))
   (rule "selectOfStore" (formula "5") (term "0,0,0,0"))
   (rule "equalUnique" (formula "5") (term "0,1,0,0,0,0,0"))
   (rule "eqClose" (formula "5") (term "1,0,0,0,0,0,0"))
   (rule "eqClose" (formula "5") (term "0,0,0,0,0,0,0"))
   (rule "concrete_not_2" (formula "5") (term "1,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "5") (term "0,0,0,0,0,0"))
   (rule "eq_and" (formula "5") (term "0,0,0,0,0"))
   (rule "ifthenelse_true" (formula "5") (term "0,0,0,0"))
   (rule "castDel" (formula "5") (term "0,0,0,0"))
   (rule "eqClose" (formula "5") (term "0,0,0"))
   (rule "concrete_and_1" (formula "5") (term "0,0"))
   (rule "selectOfStore" (formula "5") (term "2,2,0,1,0,0,1"))
   (rule "equalUnique" (formula "5") (term "0,1,0,2,2,0,1,0,0,1"))
   (rule "concrete_not_2" (formula "5") (term "1,0,2,2,0,1,0,0,1"))
   (rule "concrete_and_3" (formula "5") (term "0,2,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "5") (term "1,0,2,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "5") (term "0,0,2,2,0,1,0,0,1"))
   (rule "castDel" (formula "5") (term "1,2,2,0,1,0,0,1"))
   (rule "selectOfStore" (formula "5") (term "0,0,0"))
   (rule "equalUnique" (formula "5") (term "1,0,0,0,0,0"))
   (rule "eqClose" (formula "5") (term "0,0,0,0,0,0"))
   (rule "equalUnique" (formula "5") (term "0,1,0,0,0,0"))
   (rule "concrete_and_1" (formula "5") (term "0,0,0,0,0"))
   (rule "concrete_not_2" (formula "5") (term "1,0,0,0,0"))
   (rule "concrete_and_3" (formula "5") (term "0,0,0,0"))
   (rule "ifthenelse_false" (formula "5") (term "0,0,0"))
   (rule "selectOfStore" (formula "5") (term "2,2,2,0,1,0,0,1"))
   (rule "equalUnique" (formula "5") (term "0,1,0,2,2,2,0,1,0,0,1"))
   (rule "concrete_not_2" (formula "5") (term "1,0,2,2,2,0,1,0,0,1"))
   (rule "concrete_and_3" (formula "5") (term "0,2,2,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "5") (term "1,0,2,2,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "5") (term "0,0,2,2,2,0,1,0,0,1"))
   (rule "castDel" (formula "5") (term "1,2,2,2,0,1,0,0,1"))
   (rule "selectOfStore" (formula "5") (term "0,0,0"))
   (rule "equalUnique" (formula "5") (term "1,0,0,0,0,0"))
   (rule "eqClose" (formula "5") (term "0,0,0,0,0,0"))
   (rule "equalUnique" (formula "5") (term "0,1,0,0,0,0"))
   (rule "concrete_and_1" (formula "5") (term "0,0,0,0,0"))
   (rule "concrete_not_2" (formula "5") (term "1,0,0,0,0"))
   (rule "concrete_and_3" (formula "5") (term "0,0,0,0"))
   (rule "ifthenelse_false" (formula "5") (term "0,0,0"))
   (rule "selectOfCreate" (formula "5") (term "2,2,2,2,0,1,0,0,1"))
   (rule "eqSymm" (formula "5") (term "0,0,0,2,2,2,2,0,1,0,0,1"))
   (rule "replace_known_right" (formula "5") (term "0,1,0,0,2,2,2,2,0,1,0,0,1") (ifseqformula "4"))
   (rule "concrete_not_2" (formula "5") (term "1,0,0,2,2,2,2,0,1,0,0,1"))
   (rule "concrete_and_3" (formula "5") (term "0,0,2,2,2,2,0,1,0,0,1"))
   (rule "castDel" (formula "5") (term "1,2,2,2,2,0,1,0,0,1"))
   (rule "selectOfStore" (formula "5") (term "0,0,0"))
   (rule "equalUnique" (formula "5") (term "0,1,0,0,0,0"))
   (rule "eqClose" (formula "5") (term "0,0,0,0,0,0"))
   (rule "eqClose" (formula "5") (term "1,0,0,0,0,0"))
   (rule "concrete_not_2" (formula "5") (term "1,0,0,0,0"))
   (rule "concrete_and_1" (formula "5") (term "0,0,0,0,0"))
   (rule "concrete_and_3" (formula "5") (term "0,0,0,0"))
   (rule "ifthenelse_true" (formula "5") (term "0,0,0"))
   (rule "castDelInt" (formula "5") (term "0,0,0"))
   (rule "eqClose" (formula "5") (term "0,0"))
   (rule "concrete_and_1" (formula "5") (term "0"))
   (rule "Class_invariant_axiom_for_Account" (formula "5") (term "0") (inst "sk=sk_0"))
   (branch " Use Axiom"
      (rule "eqSymm" (formula "5") (term "1,0,0,0"))
      (rule "eqSymm" (formula "5") (term "1,0,0"))
      (rule "disjointToElementOf" (formula "5") (term "1,1,0,0,0,0") (inst "ov=_var1") (inst "fv=_var0"))
      (rule "elementOfAllFields" (formula "5") (term "0,0,0,0,1,1,0,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "1,0,1,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,1,0,1,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,1,0,1,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,1,0,1,0,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,1,0,1,0,0,0,0"))
      (rule "concrete_and_4" (formula "5") (term "0,0,1,0,1,0,0,0,0"))
      (rule "concrete_and_2" (formula "5") (term "0,1,0,1,0,0,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "1,0,1,0,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "0,1,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,1,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,0,1,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,1,0"))
      (rule "concrete_and_4" (formula "5") (term "0,0,0,1,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,1,0"))
      (rule "concrete_and_3" (formula "5") (term "0,0,1,0"))
      (rule "ifthenelse_false" (formula "5") (term "0,1,0"))
      (rule "selectOfStore" (formula "5") (term "0,0,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,0,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0,0,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,0,0,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,0,0,0,0,0"))
      (rule "concrete_and_2" (formula "5") (term "0,0,0,0,0,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "0,0,0,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "1,2,0,1,0,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,1,2,0,1,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,1,2,0,1,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,1,2,0,1,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,1,2,0,1,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,1,2,0,1,0,0,0"))
      (rule "concrete_and_3" (formula "5") (term "0,1,2,0,1,0,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "1,2,0,1,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "1,1,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,1,1,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,1,1,0,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,1,1,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,1,1,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,1,1,0,0,0"))
      (rule "concrete_and_2" (formula "5") (term "0,1,1,0,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "1,1,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "0,0,0,1,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,0,0,1,0,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,0,0,0,1,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0,0,1,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,0,0,1,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,0,0,1,0,0,0"))
      (rule "concrete_and_2" (formula "5") (term "0,0,0,0,1,0,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "0,0,0,1,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "2,1,0,1,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,2,1,0,1,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,2,1,0,1,0,0"))
      (rule "concrete_and_4" (formula "5") (term "0,0,2,1,0,1,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,2,1,0,1,0,0"))
      (rule "concrete_and_3" (formula "5") (term "0,2,1,0,1,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "2,1,0,1,0,0"))
      (rule "selectOfStore" (formula "5") (term "1,1,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,1,1,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,1,1,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,1,1,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,1,1,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,1,1,0,0"))
      (rule "concrete_and_2" (formula "5") (term "0,1,1,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "1,1,0,0"))
      (rule "selectOfStore" (formula "5") (term "0,0,1,0,1,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,0,1,0,1,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0,1,0,1,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,0,0,1,0,1,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,0,1,0,1,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,0,1,0,1,0,0"))
      (rule "concrete_and_2" (formula "5") (term "0,0,0,1,0,1,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "0,0,1,0,1,0,0"))
      (rule "selectOfStore" (formula "5") (term "1,2,0,1,0,0,1,1,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,1,2,0,1,0,0,1,1,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,1,2,0,1,0,0,1,1,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,1,2,0,1,0,0,1,1,0,0,0,0"))
      (rule "concrete_and_4" (formula "5") (term "0,0,1,2,0,1,0,0,1,1,0,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,1,2,0,1,0,0,1,1,0,0,0,0"))
      (rule "concrete_and_3" (formula "5") (term "0,1,2,0,1,0,0,1,1,0,0,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "1,2,0,1,0,0,1,1,0,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "1,0,1,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,1,0,1,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,1,0,1,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "1,0,0,1,0,1,0,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,1,0,1,0,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,1,0,1,0,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,1,0,1,0,0,0,0"))
      (rule "ifthenelse_true" (formula "5") (term "1,0,1,0,0,0,0"))
      (rule "castDel" (formula "5") (term "1,0,1,0,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "0,1,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,1,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,1,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,0,1,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,1,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,1,0"))
      (rule "concrete_and_2" (formula "5") (term "0,0,1,0"))
      (rule "ifthenelse_false" (formula "5") (term "0,1,0"))
      (rule "selectOfStore" (formula "5") (term "0,0,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "1,0,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0,0,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,0,0,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,0,0,0,0,0"))
      (rule "concrete_and_3" (formula "5") (term "0,0,0,0,0,0,0"))
      (rule "ifthenelse_true" (formula "5") (term "0,0,0,0,0,0"))
      (rule "castDel" (formula "5") (term "0,0,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0"))
      (rule "concrete_or_1" (formula "5") (term "0,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0"))
      (rule "selectOfStore" (formula "5") (term "1,2,1,0,1,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,1,2,1,0,1,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,1,2,1,0,1,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,1,2,1,0,1,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,1,2,1,0,1,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,1,2,1,0,1,0,0"))
      (rule "concrete_and_3" (formula "5") (term "0,1,2,1,0,1,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "1,2,1,0,1,0,0"))
      (rule "selectOfStore" (formula "5") (term "1,1,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,1,1,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,1,1,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,1,1,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,1,1,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,1,1,0,0"))
      (rule "concrete_and_2" (formula "5") (term "0,1,1,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "1,1,0,0"))
      (rule "selectOfStore" (formula "5") (term "0,0,1,0,1,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0,1,0,1,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,0,1,0,1,0,0"))
      (rule "eqClose" (formula "5") (term "1,0,0,0,0,1,0,1,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,0,1,0,1,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,0,1,0,1,0,0"))
      (rule "eq_and" (formula "5") (term "0,0,0,1,0,1,0,0"))
      (rule "ifthenelse_true" (formula "5") (term "0,0,1,0,1,0,0"))
      (rule "castDel" (formula "5") (term "0,0,1,0,1,0,0"))
      (rule "eqClose" (formula "5") (term "0,1,0,1,0,0"))
      (rule "ifthenelse_true" (formula "5") (term "1,0,1,0,0"))
      (rule "unionWithEmpty1" (formula "5") (term "0,1,0,0"))
      (rule "eqSymm" (formula "5") (term "1,0,0"))
      (rule "selectOfStore" (formula "5") (term "0,1,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,1,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,0,1,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,1,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,1,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,1,0"))
      (rule "concrete_and_2" (formula "5") (term "0,0,1,0"))
      (rule "ifthenelse_false" (formula "5") (term "0,1,0"))
      (rule "selectOfStore" (formula "5") (term "2,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,2,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,2,0,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,2,0,0,0,0"))
      (rule "concrete_and_4" (formula "5") (term "0,0,2,0,0,0,0"))
      (rule "concrete_and_3" (formula "5") (term "0,2,0,0,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "2,0,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "1,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,1,0,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,1,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,1,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,1,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,1,0,0,0"))
      (rule "concrete_and_2" (formula "5") (term "0,1,0,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "1,0,0,0"))
      (rule "selectOfStore" (formula "5") (term "0,0,0,0,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "1,0,0,0,0,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0,0,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,0,0,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,0,0,0,0,0"))
      (rule "concrete_and_3" (formula "5") (term "0,0,0,0,0,0,0"))
      (rule "ifthenelse_true" (formula "5") (term "0,0,0,0,0,0"))
      (rule "castDel" (formula "5") (term "0,0,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0"))
      (rule "ifthenelse_true" (formula "5") (term "0,0,0,0"))
      (rule "eqSymm" (formula "5") (term "0,0,0"))
      (rule "selectOfStore" (formula "5") (term "0,1,0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,1,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,1,0,0"))
      (rule "eqClose" (formula "5") (term "1,0,0,0,1,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,1,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,1,0,0"))
      (rule "concrete_and_3" (formula "5") (term "0,0,1,0,0"))
      (rule "ifthenelse_true" (formula "5") (term "0,1,0,0"))
      (rule "castDel" (formula "5") (term "0,1,0,0"))
      (rule "eqClose" (formula "5") (term "1,0,0"))
      (rule "concrete_and_3" (formula "5") (term "0,0"))
      (rule "selectOfStore" (formula "5") (term "0,1,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,1,0"))
      (rule "eqClose" (formula "5") (term "1,0,0,0,1,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,1,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,1,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,1,0"))
      (rule "eq_and" (formula "5") (term "0,0,1,0"))
      (rule "ifthenelse_true" (formula "5") (term "0,1,0"))
      (rule "castDelInt" (formula "5") (term "0,1,0"))
      (rule "qeq_literals" (formula "5") (term "1,0"))
      (rule "concrete_and_3" (formula "5") (term "0"))
      (rule "selectOfStore" (formula "5") (term "0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,0"))
      (rule "equalUnique" (formula "5") (term "1,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,0"))
      (rule "concrete_and_2" (formula "5") (term "0,0,0"))
      (rule "ifthenelse_false" (formula "5") (term "0,0"))
      (rule "selectOfStore" (formula "5") (term "0,0"))
      (rule "equalUnique" (formula "5") (term "0,1,0,0,0"))
      (rule "eqClose" (formula "5") (term "1,0,0,0,0"))
      (rule "eqClose" (formula "5") (term "0,0,0,0,0"))
      (rule "concrete_not_2" (formula "5") (term "1,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0,0"))
      (rule "concrete_and_1" (formula "5") (term "0,0,0"))
      (rule "ifthenelse_true" (formula "5") (term "0,0"))
      (rule "castDelInt" (formula "5") (term "0,0"))
      (rule "eqClose" (formula "5") (term "0"))
      (rule "concrete_and_1" (formula "5"))
      (rule "allRight" (formula "5") (inst "sk=f_0"))
      (rule "allRight" (formula "5") (inst "sk=o_0"))
      (rule "orRight" (formula "5"))
      (rule "commute_and" (formula "6") (term "0,2,0"))
      (rule "commute_and" (formula "6") (term "0,2,2,0"))
      (rule "commute_and" (formula "6") (term "0,2,2,2,2,0"))
      (rule "commute_and" (formula "6") (term "0,2,2,2,0"))
      (rule "commute_and" (formula "6") (term "0,0"))
      (rule "ifthenelse_split" (formula "6") (term "2,2,2,2,0"))
      (branch " f_0 = <created> & o_0 = a_2 TRUE"
         (rule "andLeft" (formula "1"))
         (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "2"))
         (rule "concrete_and_3" (formula "8") (term "0,0"))
         (rule "replace_known_left" (formula "8") (term "1,0,2,0") (ifseqformula "2"))
         (rule "concrete_and_3" (formula "8") (term "0,2,0"))
         (rule "replace_known_left" (formula "8") (term "1,0,2,2,0") (ifseqformula "2"))
         (rule "concrete_and_3" (formula "8") (term "0,2,2,0"))
         (rule "replace_known_left" (formula "8") (term "1,0,2,2,2,0") (ifseqformula "2"))
         (rule "concrete_and_3" (formula "8") (term "0,2,2,2,0"))
         (rule "applyEq" (formula "7") (term "1,0,0,1") (ifseqformula "2"))
         (rule "replace_known_right" (formula "7") (term "0,1") (ifseqformula "5"))
         (rule "concrete_not_2" (formula "7") (term "1"))
         (rule "concrete_and_3" (formula "7"))
         (rule "notRight" (formula "7"))
         (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "3"))
         (rule "applyEq" (formula "8") (term "2,1") (ifseqformula "2"))
         (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "2"))
         (rule "equalUnique" (formula "8") (term "0,0"))
         (rule "ifthenelse_false" (formula "8") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
         (rule "eqSymm" (formula "3"))
         (rule "close" (formula "7") (ifseqformula "3"))
      )
      (branch " f_0 = <created> & o_0 = a_2 FALSE"
         (rule "ifthenelse_split" (formula "7") (term "0"))
         (branch " f_0 = <initialized> & o_0 = a_2 TRUE"
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "9"))
            (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
            (rule "concrete_and_3" (formula "8"))
            (rule "applyEq" (formula "9") (term "2,0") (ifseqformula "1"))
            (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "6"))
            (rule "concrete_not_2" (formula "7") (term "0"))
            (rule "concrete_and_1" (formula "7"))
            (rule "notRight" (formula "7"))
            (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
            (rule "equalUnique" (formula "8"))
            (rule "false_right" (formula "8"))
            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
            (rule "close" (formula "6") (ifseqformula "1"))
         )
         (branch " f_0 = <initialized> & o_0 = a_2 FALSE"
            (rule "ifthenelse_split" (formula "8") (term "2,2,0"))
            (branch " f_0 = balance & o_0 = a_2 TRUE"
               (rule "andLeft" (formula "1"))
               (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "2"))
               (rule "concrete_and_3" (formula "10") (term "0,0"))
               (rule "replace_known_left" (formula "10") (term "1,0,2,0") (ifseqformula "2"))
               (rule "concrete_and_3" (formula "10") (term "0,2,0"))
               (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
               (rule "concrete_and_3" (formula "9"))
               (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
               (rule "concrete_and_3" (formula "8"))
               (rule "applyEqRigid" (formula "10") (term "0,0,2,0") (ifseqformula "1"))
               (rule "equalUnique" (formula "10") (term "0,2,0"))
               (rule "ifthenelse_false" (formula "10") (term "2,0"))
               (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "1"))
               (rule "equalUnique" (formula "9"))
               (rule "false_right" (formula "9"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
               (rule "equalUnique" (formula "8"))
               (rule "false_right" (formula "8"))
               (rule "applyEq" (formula "7") (term "1,0,0,1") (ifseqformula "2"))
               (rule "replace_known_right" (formula "7") (term "0,1") (ifseqformula "5"))
               (rule "concrete_not_2" (formula "7") (term "1"))
               (rule "concrete_and_3" (formula "7"))
               (rule "notRight" (formula "7"))
               (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "2"))
               (rule "equalUnique" (formula "8") (term "0,0"))
               (rule "ifthenelse_false" (formula "8") (term "0"))
               (rule "eqSymm" (formula "8"))
               (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
               (rule "eqSymm" (formula "3"))
               (rule "close" (formula "7") (ifseqformula "3"))
            )
            (branch " f_0 = balance & o_0 = a_2 FALSE"
               (rule "ifthenelse_split" (formula "9") (term "0"))
               (branch " f_0 = transactions & o_0 = a_2 TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "11"))
                  (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
                  (rule "concrete_and_3" (formula "9"))
                  (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
                  (rule "concrete_and_3" (formula "10"))
                  (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
                  (rule "concrete_and_3" (formula "8"))
                  (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "6"))
                  (rule "concrete_not_2" (formula "7") (term "0"))
                  (rule "concrete_and_1" (formula "7"))
                  (rule "notRight" (formula "7"))
                  (rule "applyEqRigid" (formula "11") (term "2,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                  (rule "equalUnique" (formula "9"))
                  (rule "false_right" (formula "9"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                  (rule "equalUnique" (formula "9"))
                  (rule "false_right" (formula "9"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
                  (rule "equalUnique" (formula "8"))
                  (rule "false_right" (formula "8"))
                  (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                  (rule "close" (formula "6") (ifseqformula "1"))
               )
               (branch " f_0 = transactions & o_0 = a_2 FALSE"
                  (rule "cut_direct" (formula "5") (term "0,0"))
                  (branch " CUT: o_0 = null TRUE"
                     (rule "concrete_not_1" (formula "6") (term "0"))
                     (rule "concrete_and_2" (formula "6"))
                     (rule "false_right" (formula "6"))
                     (rule "applyEqRigid" (formula "10") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "1"))
                     (rule "eqSymm" (formula "7") (term "1"))
                     (rule "replace_known_right" (formula "7") (term "1") (ifseqformula "5"))
                     (rule "concrete_and_4" (formula "7"))
                     (rule "false_right" (formula "7"))
                     (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "1"))
                     (rule "eqSymm" (formula "8") (term "1"))
                     (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "5"))
                     (rule "concrete_and_4" (formula "8"))
                     (rule "false_right" (formula "8"))
                     (rule "applyEqRigid" (formula "8") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "8") (term "1,0,0"))
                     (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "5"))
                     (rule "concrete_and_4" (formula "8") (term "0,0"))
                     (rule "ifthenelse_false" (formula "8") (term "0"))
                     (rule "eqClose" (formula "8"))
                     (rule "closeTrue" (formula "8"))
                  )
                  (branch " CUT: o_0 = null FALSE"
                     (rule "concrete_not_2" (formula "6") (term "0"))
                     (rule "concrete_and_1" (formula "6"))
                     (rule "notRight" (formula "6"))
                     (rule "ifthenelse_split" (formula "11") (term "0"))
                     (branch " f_0 = footprint & o_0 = a_2 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
                        (rule "concrete_and_3" (formula "9"))
                        (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
                        (rule "concrete_and_3" (formula "10"))
                        (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                        (rule "concrete_and_3" (formula "11"))
                        (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                        (rule "concrete_and_3" (formula "12"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "6") (ifseqformula "3"))
                     )
                     (branch " f_0 = footprint & o_0 = a_2 FALSE"
                        (rule "eqClose" (formula "12"))
                        (rule "closeTrue" (formula "12"))
                     )
                  )
               )
            )
         )
      )
   )
   (branch " Show Axiom Satisfiability"
      (rule "concrete_eq_1" (formula "5") (term "0"))
      (rule "concrete_eq_2" (formula "5") (term "1"))
      (rule "neq_or" (formula "5"))
      (rule "closeTrue" (formula "5"))
   )
)
(branch " Null Reference (a = null)"
   (rule "false_right" (formula "6"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "close" (formula "5") (ifseqformula "1"))
)
)

}
