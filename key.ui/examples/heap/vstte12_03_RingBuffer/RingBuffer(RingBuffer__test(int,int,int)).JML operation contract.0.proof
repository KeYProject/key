\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Apr 24 10:28:48 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=20000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , assertions-assertions\\:on , modelFields-modelFields\\:treatAsAxiom , initialisation-initialisation\\:disableStaticInitialisation , Strings-Strings\\:on , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Thu Apr 24 10:28:48 CEST 2014
name=RingBuffer[RingBuffer\\:\\:test(int,int,int)].JML operation contract.0
contract=RingBuffer[RingBuffer\\:\\:test(int,int,int)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "e5095ad740f809525e4c4689dcc12514a0ca06cc"))

(autoModeTime "7655")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "assignment" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_test,savedHeapBefore_test"))
(builtin "One Step Simplification" (formula "3"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "b"))
(builtin "Use Operation Contract" (formula "3") (newnames "heapBefore_RingBuffer,self_7,exc_8,heapAfter_RingBuffer,anon_heap_RingBuffer") (contract "RingBuffer[RingBuffer::RingBuffer(int)].JML normal_behavior operation contract.0"))
(branch "Post (RingBuffer)"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,1,0,1,0") (ifseqformula "4"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "5"))
   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "assignment" (formula "14") (term "1"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=RingBuffer_list_0"))
   (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "7"))
   (rule "hideAuxiliaryEq" (formula "7"))
   (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=RingBuffer_first_0"))
   (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "8"))
   (rule "hideAuxiliaryEq" (formula "8"))
   (rule "pullOutSelect" (formula "9") (term "0,0") (inst "selectSK=RingBuffer_data_0"))
   (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "9"))
   (rule "hideAuxiliaryEq" (formula "9"))
   (rule "Class_invariant_axiom_for_RingBuffer" (formula "10") (inst "i=i") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "replaceKnownSelect_taclet2_0" (formula "10") (term "0,1,1,0,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "10") (term "1,1,1,0,1"))
   (rule "replaceKnownSelect_taclet0_0" (formula "10") (term "0,0,1,0,1"))
   (rule "replaceKnownSelect_taclet4_0" (formula "10") (term "0,1,1,1,0"))
   (rule "replaceKnownSelect_taclet2_0" (formula "10") (term "1,0,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "10") (term "0,1,1,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "10") (term "1,1,1,0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "10") (term "0,0,1,0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "10") (term "0,1,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "10") (term "1,0,1,0,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "10") (term "0,0,1,0,0,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "10") (term "0,1,1,1,0,0"))
   (rule "replaceKnownSelect_taclet0_0" (formula "10") (term "0,0,1,0,0,0,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "10") (term "0,0,0,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "10") (term "0,0,1,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "10") (term "0,1,1,1,0,0"))
   (rule "replaceKnownSelect_taclet2_0" (formula "10") (term "0,2,0,2,1,1,0,1"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "10") (term "0,0,1,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "10") (term "0,0,0,0,0,0,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "10") (term "0,2,0,2,1,1,0,1"))
   (rule "translateJavaAddInt" (formula "10") (term "2,0,2,1,1,0,1"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_gtToGeq" (formula "11"))
   (rule "times_zero_1" (formula "11") (term "1,0,0"))
   (rule "add_zero_right" (formula "11") (term "0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "inEqSimp_commuteLeq" (formula "12"))
   (rule "Axiom_def_modulo" (formula "16") (term "0,2,1,1,0") (ifseqformula "6"))
   (rule "replaceKnownSelect_taclet4_0" (formula "16") (term "0,1,2,0,2,1,1,0"))
   (rule "replaceKnownSelect_taclet4_0" (formula "16") (term "0,1,0,0,2,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "16") (term "0,1,2,0,2,1,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "16") (term "0,1,0,0,2,1,1,0"))
   (rule "eqSymm" (formula "16") (term "1,0"))
   (rule "polySimp_elimSub" (formula "16") (term "2,0,2,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,2,0,1,0"))
   (rule "polySimp_addComm1" (formula "16") (term "2,0,2,0,1,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,2,0,1,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,2,0,1,0"))
   (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "7"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "8"))
   (rule "qeq_literals" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "9"))
   (rule "add_literals" (formula "11") (term "0"))
   (rule "qeq_literals" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "9"))
   (rule "mul_literals" (formula "11") (term "1,0"))
   (rule "polySimp_addComm1" (formula "11") (term "0"))
   (rule "add_literals" (formula "11") (term "0,0"))
   (rule "applyEq" (formula "13") (term "1") (ifseqformula "9"))
   (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "eqSymm" (formula "10"))
   (rule "applyEq" (formula "14") (term "0,1,0,2,0,1,0") (ifseqformula "8"))
   (rule "add_zero_left" (formula "14") (term "1,0,2,0,1,0"))
   (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "8"))
   (rule "add_zero_right" (formula "11") (term "0"))
   (rule "leq_literals" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "applyEq" (formula "13") (term "0,1,0,0,0,0,2,0,1,0") (ifseqformula "9"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0,0,2,0,1,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,2,0,1,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,0,0,2,0,1,0"))
   (rule "applyEq" (formula "13") (term "0,1,0,2,0,2,0,1,0") (ifseqformula "9"))
   (rule "mul_literals" (formula "13") (term "1,0,2,0,2,0,1,0"))
   (rule "polySimp_addComm0" (formula "13") (term "0,2,0,2,0,1,0"))
   (rule "apply_eq_monomials" (formula "13") (term "1,0,0,1,0,0") (ifseqformula "10"))
   (rule "add_zero_left" (formula "13") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0" (formula "13") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "13") (term "1,0,2,0,2,0,1,0") (ifseqformula "8"))
   (rule "add_literals" (formula "13") (term "0,2,0,2,0,1,0"))
   (rule "applyEq" (formula "13") (term "1,0,0,0,0,2,0,1,0") (ifseqformula "8"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,2,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,2,0,1,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,2,0,1,0"))
   (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=RingBuffer_len_0"))
   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
   (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
   (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
   (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "12"))
   (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "12"))
   (rule "hideAuxiliaryEq" (formula "12"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
   (rule "leq_literals" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
   (rule "qeq_literals" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "nnf_imp2or" (formula "11") (term "0"))
   (rule "nnf_notAnd" (formula "11") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
   (rule "mul_literals" (formula "11") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_push,exc_9,heapAfter_push,anon_heap_push") (contract "RingBuffer[RingBuffer::push(int)].JML normal_behavior operation contract.0"))
   (branch "Post (push)"
      (builtin "One Step Simplification" (formula "17"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "replaceKnownSelect_taclet4_0" (formula "13") (term "0,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "13") (term "0,1,1,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "13") (term "0,1,0,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "13") (term "0,1,0,0,1,1"))
      (rule "replaceKnownSelect_taclet6_0" (formula "13") (term "1,2,0,1,1,1,0,0"))
      (rule "replaceKnownSelect_taclet2_0" (formula "13") (term "0,2,0,1,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "13") (term "1,2,0,1,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "13") (term "0,2,0,1,1,1,0,0"))
      (rule "translateJavaAddInt" (formula "13") (term "2,0,1,1,1,0,0"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "Axiom_def_modulo" (formula "13") (term "0,1,1,1,0") (ifseqformula "6"))
      (rule "replaceKnownSelect_taclet4_0" (formula "13") (term "0,1,2,0,1,1,1,0"))
      (rule "replaceKnownSelect_taclet4_0" (formula "13") (term "0,1,0,0,1,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "13") (term "0,1,2,0,1,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "13") (term "0,1,0,0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "13") (term "2,0,1,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,1,1,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1,1,0"))
      (rule "applyEq" (formula "13") (term "0,1,2,0,1,1,1,0") (ifseqformula "9"))
      (rule "mul_literals" (formula "13") (term "1,2,0,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "13") (term "2,0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "13") (term "0,2,0,1,1,1,0"))
      (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,1,1,0") (ifseqformula "9"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,1,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,1,0"))
      (rule "applyEq" (formula "13") (term "1,1,0,1,1,1,0") (ifseqformula "10"))
      (rule "add_zero_right" (formula "13") (term "1,0,1,1,1,0"))
      (rule "applyEq" (formula "13") (term "1,0,0,0,1,1,1,0") (ifseqformula "10"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,1,0"))
      (rule "applyEq" (formula "13") (term "1,2,0,1,1,1,0") (ifseqformula "10"))
      (rule "add_zero_right" (formula "13") (term "2,0,1,1,1,0"))
      (rule "applyEq" (formula "13") (term "1,0,1,1,1,0") (ifseqformula "8"))
      (rule "applyEq" (formula "13") (term "1,2,0,1,1,1,0") (ifseqformula "8"))
      (rule "add_literals" (formula "13") (term "2,0,1,1,1,0"))
      (rule "applyEq" (formula "13") (term "1,0,0,0,1,1,1,0") (ifseqformula "8"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,1,0"))
      (rule "leq_literals" (formula "13") (term "0,0,1,1,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=RingBuffer_list_1"))
      (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
      (rule "replaceKnownSelect_taclet0_0" (formula "15") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "15") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0,0") (ifseqformula "4"))
      (rule "eqSymm" (formula "16"))
      (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "16"))
      (rule "hideAuxiliaryEq" (formula "16"))
      (rule "replace_known_right" (formula "15") (term "0,0,1,0,0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "5")))
      (rule "applyEq" (formula "15") (term "2,0") (ifseqformula "7"))
      (rule "elementOfUnion" (formula "15") (term "0,0"))
      (rule "elementOfSingleton" (formula "15") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "elementOfUnion" (formula "15") (term "0,0"))
      (rule "elementOfSingleton" (formula "15") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "elementOfSingleton" (formula "15") (term "0,0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "Class_invariant_axiom_for_RingBuffer" (formula "16") (inst "i=i") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "replaceKnownSelect_taclet8_0" (formula "16") (term "0,0,1,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "16") (term "0,0,1,0,1"))
      (rule "replaceKnownSelect_taclet8_0" (formula "16") (term "0,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "16") (term "0,0,1,0,0,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "translateJavaAddInt" (formula "16") (term "2,0,2,1,1,0,1"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "notLeft" (formula "16"))
      (rule "eqSymm" (formula "16"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
      (rule "inEqSimp_gtToGeq" (formula "17"))
      (rule "times_zero_1" (formula "17") (term "1,0,0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "polySimp_addComm1" (formula "19") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "inEqSimp_commuteLeq" (formula "21"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "getOfSeqSingleton" (formula "22") (term "0,1,0"))
      (rule "castDel" (formula "22") (term "1,0,1,0"))
      (rule "castDel" (formula "22") (term "2,0,1,0"))
      (rule "Axiom_def_modulo" (formula "22") (term "0,2,1,1,0") (ifseqformula "6"))
      (rule "eqSymm" (formula "22") (term "1,0"))
      (rule "polySimp_elimSub" (formula "22") (term "2,0,2,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,2,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,2,0,1,0"))
      (rule "polySimp_addComm1" (formula "22") (term "2,0,2,0,1,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,2,0,1,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,2,0,1,0"))
      (rule "apply_eq_monomials" (formula "22") (term "1,0,0,1,0,0") (ifseqformula "16"))
      (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "22") (term "0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "22") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "22") (term "1,1,1,0,0,1,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "22") (term "1,0,0,1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
      (rule "add_zero_left" (formula "22") (term "0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17"))
      (rule "mul_literals" (formula "17") (term "1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "19"))
      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
      (rule "polySimp_elimOne" (formula "19") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,2,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,2,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,2,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,2,0,1,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,2,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,2,0,1,0"))
      (rule "mul_literals" (formula "22") (term "0,0,1,0,0,2,0,1,0"))
      (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=RingBuffer_data_1"))
      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "23") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "23") (term "0,0,1,0,2,0,2,0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
      (rule "replaceKnownSelect_taclet4_0" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "1") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
      (rule "polySimp_addComm1" (formula "23") (term "1,0,0,2,0,1,0"))
      (rule "polySimp_addComm0" (formula "23") (term "0,2,0,2,0,1,0"))
      (rule "inEqSimp_commuteGeq" (formula "22"))
      (rule "inEqSimp_homoInEq1" (formula "20"))
      (rule "polySimp_addComm1" (formula "20") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20"))
      (rule "polySimp_mulComm0" (formula "20") (term "1"))
      (rule "polySimp_rightDist" (formula "20") (term "1"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
      (rule "mul_literals" (formula "20") (term "0,1"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
      (rule "times_zero_1" (formula "19") (term "0,0"))
      (rule "add_zero_left" (formula "19") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
      (rule "mul_literals" (formula "19") (term "1"))
      (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
      (rule "times_zero_1" (formula "21") (term "0,0"))
      (rule "add_zero_left" (formula "21") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "18"))
      (rule "leq_literals" (formula "21") (term "0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "23") (term "0,0,0,0,2,0,2,0,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "23") (term "1,0,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "20") (term "0,1,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "18") (term "0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "23") (term "0,1,0,1,0,0,2,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "applyEq" (formula "17") (term "0") (ifseqformula "9"))
      (rule "qeq_literals" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "9"))
      (rule "add_literals" (formula "18") (term "1"))
      (rule "applyEq" (formula "20") (term "1") (ifseqformula "9"))
      (rule "applyEq" (formula "21") (term "1,0,1,0,0,2,0,1,0") (ifseqformula "9"))
      (rule "add_literals" (formula "21") (term "0,1,0,0,2,0,1,0"))
      (rule "applyEq" (formula "21") (term "0,0,0,2,0,2,0,1,0") (ifseqformula "9"))
      (rule "mul_literals" (formula "21") (term "0,0,2,0,2,0,1,0"))
      (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=RingBuffer_len_1"))
      (rule "applyEq" (formula "20") (term "0") (ifseqformula "16"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "16"))
      (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "25")))
      (rule "replaceKnownSelect_taclet6_0" (formula "16") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "16") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,0,0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "16") (term "0,0,1,0,0") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "5")))
      (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "17"))
      (rule "leq_literals" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "applyEq" (formula "16") (term "2,0") (ifseqformula "10"))
      (rule "applyEq" (formula "20") (term "0") (ifseqformula "17"))
      (rule "qeq_literals" (formula "20"))
      (rule "true_left" (formula "20"))
      (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
      (rule "ifEqualsInteger" (formula "16"))
      (rule "equal_literals" (formula "16") (term "1,1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=RingBuffer_first_1"))
      (rule "applyEq" (formula "22") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "19"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "19"))
      (rule "applyEq" (formula "22") (term "1,0,2,0,2,0,1,0") (ifseqformula "19"))
      (rule "applyEq" (formula "22") (term "0,1,0,2,0,1,0") (ifseqformula "19"))
      (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")))
      (rule "replaceKnownSelect_taclet2_0" (formula "19") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "19") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1,0,0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "19") (term "0,0,1,0,0") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "5")))
      (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "8"))
      (rule "elementOfUnion" (formula "16"))
      (rule "elementOfSingleton" (formula "16") (term "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "elementOfUnion" (formula "19") (term "0,0"))
      (rule "elementOfSingleton" (formula "19") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "elementOfUnion" (formula "16"))
      (rule "elementOfSingleton" (formula "16") (term "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "elementOfSingleton" (formula "16"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "elementOfUnion" (formula "18") (term "0,0"))
      (rule "elementOfSingleton" (formula "18") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "elementOfSingleton" (formula "18") (term "0,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "applyEqReverse" (formula "21") (term "0,1,0,2,0,1,0") (ifseqformula "18"))
      (rule "add_zero_left" (formula "21") (term "1,0,2,0,1,0"))
      (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
      (rule "qeq_literals" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
      (rule "leq_literals" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "applyEqReverse" (formula "19") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "18"))
      (rule "times_zero_2" (formula "19") (term "1,1,0,0,2,0,1,0"))
      (rule "add_zero_right" (formula "19") (term "1,0,0,2,0,1,0"))
      (rule "applyEqReverse" (formula "19") (term "1,0,2,0,2,0,1,0") (ifseqformula "18"))
      (rule "add_zero_right" (formula "19") (term "0,2,0,2,0,1,0"))
      (rule "hideAuxiliaryEq" (formula "18"))
      (rule "nnf_imp2or" (formula "18") (term "0"))
      (rule "nnf_notAnd" (formula "18") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
      (rule "mul_literals" (formula "18") (term "1,1,0,0"))
      (rule "inEqSimp_or_antiSymm0" (formula "18") (term "0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "add_literals" (formula "18") (term "1,0,0,0"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "7") (inst "iv=iv"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
      (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "times_zero_2" (formula "8") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthIsAShort" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "9"))
      (rule "true_left" (formula "9"))
      (builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_push_0,exc_10,heapAfter_push_0,anon_heap_push_0") (contract "RingBuffer[RingBuffer::push(int)].JML normal_behavior operation contract.0"))
      (branch "Post (push)"
         (builtin "One Step Simplification" (formula "24"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "replaceKnownSelect_taclet10_0" (formula "20") (term "0,1,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "20") (term "0,1,1,0,0"))
         (rule "replaceKnownSelect_taclet8_0" (formula "20") (term "0,1,0,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "20") (term "0,1,0,0,1,1"))
         (rule "replaceKnownSelect_taclet13_0" (formula "20") (term "0,2,0,1,1,1,0,0"))
         (rule "replaceKnownSelect_taclet12_0" (formula "20") (term "1,2,0,1,1,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "20") (term "0,2,0,1,1,1,0,0"))
         (rule "translateJavaAddInt" (formula "20") (term "2,0,1,1,1,0,0"))
         (rule "add_zero_left" (formula "20") (term "2,0,1,1,1,0,0"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "Axiom_def_modulo" (formula "20") (term "0,1,1,1,0") (ifseqformula "6"))
         (rule "replaceKnownSelect_taclet10_0" (formula "20") (term "0,1,2,0,1,1,1,0"))
         (rule "replaceKnownSelect_taclet10_0" (formula "20") (term "0,1,0,0,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "20") (term "0,1,2,0,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "20") (term "0,1,0,0,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "20") (term "2,0,1,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,1,1,0"))
         (rule "variableDeclarationAssign" (formula "27") (term "1"))
         (rule "variableDeclaration" (formula "27") (term "1") (newnames "h"))
         (rule "applyEq" (formula "20") (term "1,0,1,1,1,0") (ifseqformula "17"))
         (rule "applyEq" (formula "20") (term "0,1,2,0,1,1,1,0") (ifseqformula "9"))
         (rule "mul_literals" (formula "20") (term "1,2,0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "20") (term "2,0,1,1,1,0"))
         (rule "applyEq" (formula "20") (term "0,1,0,0,0,1,1,1,0") (ifseqformula "9"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,1,1,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,0,1,1,1,0"))
         (rule "applyEq" (formula "20") (term "1,0,0,0,1,1,1,0") (ifseqformula "17"))
         (rule "add_literals" (formula "20") (term "0,0,0,1,1,1,0"))
         (rule "leq_literals" (formula "20") (term "0,0,1,1,1,0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=RingBuffer_list_2"))
         (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "27")))
         (rule "replaceKnownSelect_taclet8_0" (formula "22") (term "2,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "22") (term "2,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1,0,0") (ifseqformula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1,0,0") (ifseqformula "4"))
         (rule "eqSymm" (formula "23"))
         (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "23"))
         (rule "hideAuxiliaryEq" (formula "23"))
         (rule "replace_known_left" (formula "22") (term "1,0,0,1,0,0") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "25")))
         (rule "elementOfUnion" (formula "22") (term "0,0"))
         (rule "elementOfSingleton" (formula "22") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "elementOfUnion" (formula "22") (term "0,0"))
         (rule "elementOfSingleton" (formula "22") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "commute_or" (formula "18") (term "0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "leq_literals" (formula "18") (term "0,0,2,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "25")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,0,0") (ifseqformula "4"))
         (rule "eqSymm" (formula "19"))
         (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
         (rule "hideAuxiliaryEq" (formula "19"))
         (rule "elementOfUnion" (formula "18") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "15") (inst "iv=iv"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "getOfSeqSingleton" (formula "16") (term "1,1,0"))
         (rule "castDel" (formula "16") (term "2,1,1,0"))
         (rule "castDel" (formula "16") (term "1,1,1,0"))
         (rule "eqSymm" (formula "16") (term "1,0"))
         (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "17"))
         (rule "getOfSeqSingleton" (formula "16") (term "1,1,0"))
         (rule "castDel" (formula "16") (term "2,1,1,0"))
         (rule "castDel" (formula "16") (term "1,1,1,0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "Class_invariant_axiom_for_RingBuffer" (formula "23") (inst "i=i") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "replaceKnownSelect_taclet15_0" (formula "23") (term "0,0,1,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "23") (term "0,0,1,0,1"))
         (rule "replaceKnownSelect_taclet15_0" (formula "23") (term "0,0,1,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "23") (term "0,0,1,0,0,0,0"))
         (rule "translateJavaAddInt" (formula "23") (term "2,0,2,1,1,0,1"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "24"))
         (rule "times_zero_1" (formula "24") (term "1,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "26"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27"))
         (rule "inEqSimp_commuteLeq" (formula "28"))
         (rule "inEqSimp_commuteLeq" (formula "25"))
         (rule "lenOfSeqConcat" (formula "23") (term "0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "add_literals" (formula "23") (term "0"))
         (rule "eqSymm" (formula "23"))
         (rule "Axiom_def_modulo" (formula "29") (term "0,2,1,1,0") (ifseqformula "6"))
         (rule "eqSymm" (formula "29") (term "1,0"))
         (rule "polySimp_elimSub" (formula "29") (term "2,0,2,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,2,0,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,2,0,1,0"))
         (rule "polySimp_addComm1" (formula "29") (term "2,0,2,0,1,0"))
         (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,2,0,1,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,2,0,1,0"))
         (rule "apply_eq_monomials" (formula "29") (term "1,0,0,1,0,0") (ifseqformula "23"))
         (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "29") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "29") (term "1,1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "29") (term "1,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "29") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "29") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24"))
         (rule "mul_literals" (formula "24") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,2,0,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,2,0,1,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,2,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,2,0,1,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,2,0,1,0"))
         (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,2,0,1,0"))
         (rule "mul_literals" (formula "29") (term "0,0,1,0,0,2,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
         (rule "mul_literals" (formula "29") (term "1,1,0,0"))
         (rule "getOfSeqConcat" (formula "29") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "eqSymm" (formula "29") (term "1,0"))
         (rule "polySimp_elimSub" (formula "29") (term "1,2,0,1,0"))
         (rule "mul_literals" (formula "29") (term "1,1,2,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
         (rule "mul_literals" (formula "29") (term "1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "29") (term "0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "29") (term "0,0,0,1,0"))
         (rule "eqSymm" (formula "29") (term "1,0"))
         (rule "polySimp_addComm0" (formula "29") (term "1,2,1,1,0"))
         (rule "getOfSeqSingleton" (formula "29") (term "1,1,1,0"))
         (rule "castDel" (formula "29") (term "1,1,1,1,0"))
         (rule "castDel" (formula "29") (term "2,1,1,1,0"))
         (rule "getOfSeqSingleton" (formula "29") (term "2,1,1,0"))
         (rule "castDel" (formula "29") (term "2,2,1,1,0"))
         (rule "castDel" (formula "29") (term "1,2,1,1,0"))
         (rule "polySimp_sepPosMonomial" (formula "29") (term "0,2,1,1,0"))
         (rule "mul_literals" (formula "29") (term "1,0,2,1,1,0"))
         (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=RingBuffer_data_2"))
         (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "30") (term "0,0,1,0,2,0,2,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "30") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
         (rule "replaceKnownSelect_taclet10_0" (formula "1") (term "2,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "1") (term "2,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "5"))
         (rule "replace_known_left" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
         (rule "polySimp_addComm0" (formula "30") (term "0,2,0,2,0,1,0"))
         (rule "polySimp_addComm1" (formula "30") (term "1,0,0,2,0,1,0"))
         (rule "inEqSimp_commuteGeq" (formula "29"))
         (rule "inEqSimp_homoInEq1" (formula "27"))
         (rule "polySimp_addComm1" (formula "27") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27"))
         (rule "polySimp_mulComm0" (formula "27") (term "1"))
         (rule "polySimp_rightDist" (formula "27") (term "1"))
         (rule "mul_literals" (formula "27") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
         (rule "times_zero_1" (formula "28") (term "0,0"))
         (rule "add_zero_left" (formula "28") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "25"))
         (rule "leq_literals" (formula "28") (term "0"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "true_left" (formula "28"))
         (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
         (rule "times_zero_1" (formula "26") (term "0,0"))
         (rule "add_zero_left" (formula "26") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "26"))
         (rule "mul_literals" (formula "26") (term "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "30") (term "0,0,0,0,2,0,2,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "27") (term "0,1,1") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "30") (term "1,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "30") (term "0,1,0,1,0,0,2,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "applyEq" (formula "24") (term "0") (ifseqformula "9"))
         (rule "qeq_literals" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "9"))
         (rule "add_literals" (formula "25") (term "1"))
         (rule "applyEq" (formula "27") (term "1") (ifseqformula "9"))
         (rule "applyEq" (formula "28") (term "1,0,1,0,0,2,0,1,0") (ifseqformula "9"))
         (rule "add_literals" (formula "28") (term "0,1,0,0,2,0,1,0"))
         (rule "applyEq" (formula "28") (term "0,0,0,2,0,2,0,1,0") (ifseqformula "9"))
         (rule "mul_literals" (formula "28") (term "0,0,2,0,2,0,1,0"))
         (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=RingBuffer_len_2"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
         (rule "applyEq" (formula "28") (term "0") (ifseqformula "26"))
         (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")))
         (rule "replaceKnownSelect_taclet12_0" (formula "26") (term "2,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0,0") (ifseqformula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,1,0,0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "26") (term "0,0,0,1,0,0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "5")))
         (rule "applyEq" (formula "26") (term "2,0") (ifseqformula "17"))
         (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "23"))
         (rule "leq_literals" (formula "28"))
         (rule "true_left" (formula "28"))
         (rule "applyEq" (formula "27") (term "0") (ifseqformula "23"))
         (rule "qeq_literals" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "applyEq" (formula "26") (term "1") (ifseqformula "23"))
         (rule "ifEqualsInteger" (formula "26"))
         (rule "equal_literals" (formula "26") (term "1,1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "andLeft" (formula "26"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=RingBuffer_first_2"))
         (rule "applyEq" (formula "26") (term "0") (ifseqformula "24"))
         (rule "applyEq" (formula "29") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "24"))
         (rule "applyEq" (formula "29") (term "1,0,2,0,2,0,1,0") (ifseqformula "24"))
         (rule "applyEq" (formula "29") (term "0,1,0,2,0,1,0") (ifseqformula "24"))
         (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")))
         (rule "replaceKnownSelect_taclet13_0" (formula "24") (term "2,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "24") (term "2,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1,0,0") (ifseqformula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1,0,0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "24") (term "0,0,0,1,0,0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "5")))
         (rule "elementOfUnion" (formula "27"))
         (rule "elementOfSingleton" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "elementOfUnion" (formula "24") (term "0,0"))
         (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "elementOfUnion" (formula "27"))
         (rule "elementOfSingleton" (formula "27") (term "0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "elementOfUnion" (formula "24") (term "0,0"))
         (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "elementOfSingleton" (formula "24") (term "0,0"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "applyEqReverse" (formula "28") (term "1,0,2,0,2,0,1,0") (ifseqformula "24"))
         (rule "add_zero_right" (formula "28") (term "0,2,0,2,0,1,0"))
         (rule "applyEqReverse" (formula "28") (term "0,1,0,2,0,1,0") (ifseqformula "24"))
         (rule "add_zero_left" (formula "28") (term "1,0,2,0,1,0"))
         (rule "applyEqReverse" (formula "28") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "24"))
         (rule "times_zero_2" (formula "28") (term "1,1,0,0,2,0,1,0"))
         (rule "add_zero_right" (formula "28") (term "1,0,0,2,0,1,0"))
         (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "24"))
         (rule "leq_literals" (formula "26"))
         (rule "true_left" (formula "26"))
         (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
         (rule "qeq_literals" (formula "25"))
         (rule "true_left" (formula "25"))
         (rule "hideAuxiliaryEq" (formula "24"))
         (rule "nnf_imp2or" (formula "25") (term "0"))
         (rule "nnf_notAnd" (formula "25") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
         (rule "mul_literals" (formula "25") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
         (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
         (rule "mul_literals" (formula "25") (term "1,1,0,0"))
         (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_pop,result_4,exc_11,heapAfter_pop,anon_heap_pop") (contract "RingBuffer[RingBuffer::pop()].JML normal_behavior operation contract.0"))
         (branch "Post (pop)"
            (builtin "One Step Simplification" (formula "27"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "replaceKnownSelect_taclet15_0" (formula "27") (term "0,1,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "27") (term "0,1,0,0,1,1"))
            (rule "replaceKnownSelect_taclet15_0" (formula "27") (term "0,2,1,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "27") (term "0,2,1,0,0,1,1"))
            (rule "replaceKnownSelect_taclet22_0" (formula "27") (term "0,2,1,0,1,0,1,1"))
            (rule "replaceKnownSelect_taclet19_0" (formula "27") (term "1,1,0,1,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "27") (term "0,2,1,0,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "27") (term "1,1,0,1,1,0,1,1"))
            (rule "replaceKnownSelect_taclet22_0" (formula "27") (term "0,2,1,0,1,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "27") (term "0,2,1,0,1,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "27") (term "2,1,0,1,0,1,1"))
            (rule "add_zero_left" (formula "27") (term "2,1,0,1,0,1,1"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "31"))
            (rule "eqSymm" (formula "29"))
            (rule "eqSymm" (formula "31"))
            (rule "lenOfSeqConcat" (formula "29") (term "2,0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "eqSymm" (formula "29"))
            (rule "Axiom_def_modulo" (formula "30") (term "1") (ifseqformula "6"))
            (rule "eqSymm" (formula "30"))
            (rule "polySimp_elimSub" (formula "30") (term "2,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0"))
            (rule "assignment" (formula "36") (term "1"))
            (builtin "One Step Simplification" (formula "36"))
            (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
            (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_7"))
            (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "34")))
            (rule "replaceKnownSelect_taclet17_0" (formula "31") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet18_0" (formula "31") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,0,0") (ifseqformula "4"))
            (rule "eqSymm" (formula "32"))
            (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "32"))
            (rule "hideAuxiliaryEq" (formula "32"))
            (rule "elementOfUnion" (formula "31") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "equal_literals" (formula "31") (term "1,0,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "elementOfUnion" (formula "31") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "31") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "ifthenelse_negated" (formula "31") (term "0"))
            (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=RingBuffer_list_3"))
            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")))
            (rule "replaceKnownSelect_taclet15_0" (formula "29") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "29") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,0,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "4"))
            (rule "eqSymm" (formula "30"))
            (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
            (rule "hideAuxiliaryEq" (formula "30"))
            (rule "replace_known_right" (formula "29") (term "0,0,0,0,1,0,0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "5")))
            (rule "elementOfUnion" (formula "29") (term "0,0"))
            (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "pullOutSelect" (formula "30") (term "1") (inst "selectSK=RingBuffer_first_3"))
            (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
            (rule "replaceKnownSelect_taclet22_0" (formula "30") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "30") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "4"))
            (rule "replace_known_left" (formula "30") (term "1,0,0,0,1,0,0") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")))
            (rule "elementOfUnion" (formula "30") (term "0,0"))
            (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "elementOfUnion" (formula "30") (term "0,0"))
            (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "30"))
            (rule "hideAuxiliaryEq" (formula "30"))
            (rule "pullOutSelect" (formula "30") (term "0,0,1,2,0") (inst "selectSK=RingBuffer_data_3"))
            (rule "applyEq" (formula "31") (term "0,0,0,0") (ifseqformula "30"))
            (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
            (rule "replaceKnownSelect_taclet19_0" (formula "30") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "30") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "30") (term "0,0,0,0,1,0,0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "5")))
            (rule "elementOfUnion" (formula "30") (term "0,0"))
            (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "elementOfUnion" (formula "30") (term "0,0"))
            (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "elementOfSingleton" (formula "30") (term "0,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "applyEqReverse" (formula "31") (term "0,0,1,2,0") (ifseqformula "30"))
            (rule "applyEqReverse" (formula "31") (term "0,0,0,0") (ifseqformula "30"))
            (rule "hideAuxiliaryEq" (formula "30"))
            (rule "applyEq" (formula "30") (term "0,1,2,0") (ifseqformula "9"))
            (rule "mul_literals" (formula "30") (term "1,2,0"))
            (rule "add_literals" (formula "30") (term "2,0"))
            (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "9"))
            (rule "qeq_literals" (formula "30") (term "0,0"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "eqSymm" (formula "30"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "replace_known_left" (formula "32") (term "1,0,0,0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "32"))
            (rule "applyEq" (formula "37") (term "0,0,0,0,0,0,0,0") (ifseqformula "32"))
            (rule "applyEq" (formula "23") (term "0,0,1") (ifseqformula "32"))
            (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "32"))
            (rule "applyEq" (formula "26") (term "1,1,1,1,0") (ifseqformula "32"))
            (rule "applyEq" (formula "19") (term "1") (ifseqformula "32"))
            (rule "evaluateAssertCondition_1" (formula "37") (term "1") (inst "#condition=x"))
            (rule "variableDeclarationAssign" (formula "37") (term "1"))
            (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_10"))
            (rule "Class_invariant_axiom_for_RingBuffer" (formula "33") (inst "i=i") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "replaceKnownSelect_taclet30_0" (formula "33") (term "0,1,1,1,0"))
            (rule "replaceKnownSelect_taclet30_0" (formula "33") (term "1,1,1,0,1"))
            (rule "replaceKnownSelect_taclet26_0" (formula "33") (term "0,0,1,0,1"))
            (rule "replaceKnownSelect_taclet28_0" (formula "33") (term "0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet28_0" (formula "33") (term "1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "33") (term "0,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "33") (term "1,1,1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "33") (term "0,0,1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "33") (term "0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "33") (term "1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet30_0" (formula "33") (term "0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet30_0" (formula "33") (term "0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet30_0" (formula "33") (term "0,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet26_0" (formula "33") (term "0,0,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "33") (term "0,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "33") (term "0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet28_0" (formula "33") (term "0,2,0,2,1,1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "33") (term "0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "33") (term "0,0,1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "34")))
            (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "33") (term "0,2,0,2,1,1,0,1"))
            (rule "translateJavaAddInt" (formula "33") (term "2,0,2,1,1,0,1"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "35"))
            (rule "andLeft" (formula "33"))
            (rule "andLeft" (formula "35"))
            (rule "eqSymm" (formula "33"))
            (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "34"))
            (rule "times_zero_1" (formula "34") (term "1,0,0"))
            (rule "add_zero_right" (formula "34") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "37"))
            (rule "inEqSimp_commuteLeq" (formula "35"))
            (rule "getOfSeqSingleton" (formula "39") (term "0,1,0"))
            (rule "castDel" (formula "39") (term "2,0,1,0"))
            (rule "castDel" (formula "39") (term "1,0,1,0"))
            (rule "Axiom_def_modulo" (formula "39") (term "0,2,1,1,0") (ifseqformula "6"))
            (rule "replaceKnownSelect_taclet30_0" (formula "39") (term "0,1,0,0,2,1,1,0"))
            (rule "replaceKnownSelect_taclet30_0" (formula "39") (term "0,1,2,0,2,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "39") (term "0,1,0,0,2,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "39") (term "0,1,2,0,2,1,1,0"))
            (rule "eqSymm" (formula "39") (term "1,0"))
            (rule "polySimp_elimSub" (formula "39") (term "2,0,2,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,2,0,1,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,2,0,1,0"))
            (rule "polySimp_addComm1" (formula "39") (term "2,0,2,0,1,0"))
            (rule "polySimp_addComm0" (formula "39") (term "0,2,0,2,0,1,0"))
            (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,2,0,1,0"))
            (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "10"))
            (rule "add_literals" (formula "34") (term "0"))
            (rule "qeq_literals" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "applyEq" (formula "37") (term "1") (ifseqformula "10"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "31"))
            (rule "qeq_literals" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "31"))
            (rule "polySimp_addComm1" (formula "34") (term "0"))
            (rule "add_literals" (formula "34") (term "0,0"))
            (rule "applyEq" (formula "37") (term "0,1,0,2,0,1,0") (ifseqformula "31"))
            (rule "apply_eq_monomials" (formula "37") (term "1,0,0,1,0,0") (ifseqformula "33"))
            (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "37") (term "0,0,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "37") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "37") (term "1,1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "37") (term "1,1,0,0,1,0,0"))
            (rule "add_literals" (formula "37") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
            (rule "add_zero_left" (formula "37") (term "0,1,0,0"))
            (rule "applyEq" (formula "37") (term "1,0,2,0,2,0,1,0") (ifseqformula "31"))
            (rule "polySimp_addComm0" (formula "37") (term "0,2,0,2,0,1,0"))
            (rule "applyEq" (formula "37") (term "1,0,0,0,0,2,0,1,0") (ifseqformula "31"))
            (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,2,0,1,0"))
            (rule "add_literals" (formula "37") (term "0,0,0,0,0,2,0,1,0"))
            (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "10"))
            (rule "mul_literals" (formula "34") (term "1,0"))
            (rule "add_literals" (formula "34") (term "0"))
            (rule "leq_literals" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,2,0,1,0") (ifseqformula "10"))
            (rule "mul_literals" (formula "36") (term "1,0,0,0,0,2,0,1,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,0,2,0,1,0"))
            (rule "add_zero_left" (formula "36") (term "0,0,0,2,0,1,0"))
            (rule "applyEq" (formula "36") (term "0,1,0,2,0,2,0,1,0") (ifseqformula "10"))
            (rule "mul_literals" (formula "36") (term "1,0,2,0,2,0,1,0"))
            (rule "add_literals" (formula "36") (term "0,2,0,2,0,1,0"))
            (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=RingBuffer_len_3"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
            (rule "applyEq" (formula "33") (term "0") (ifseqformula "35"))
            (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "40")))
            (rule "replaceKnownSelect_taclet21_0" (formula "35") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1,0,0") (ifseqformula "4"))
            (rule "replace_known_left" (formula "35") (term "1,0,0,0,1,0,0") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "39")))
            (rule "applyEqRigid" (formula "35") (term "2,0") (ifseqformula "24"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
            (rule "qeq_literals" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "33"))
            (rule "leq_literals" (formula "35"))
            (rule "true_left" (formula "35"))
            (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "33"))
            (rule "ifEqualsInteger" (formula "34"))
            (rule "equal_literals" (formula "34") (term "1,1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "andLeft" (formula "34"))
            (rule "elementOfUnion" (formula "34"))
            (rule "elementOfSingleton" (formula "34") (term "1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "elementOfUnion" (formula "34"))
            (rule "elementOfSingleton" (formula "34") (term "0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "elementOfSingleton" (formula "34"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "nnf_imp2or" (formula "35") (term "0"))
            (rule "nnf_notAnd" (formula "35") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
            (rule "mul_literals" (formula "35") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
            (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
            (rule "mul_literals" (formula "35") (term "1,0,0,0"))
            (rule "inEqSimp_or_antiSymm0" (formula "35") (term "0,0"))
            (rule "add_literals" (formula "35") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "add_literals" (formula "35") (term "1,0,0,0"))
            (rule "ifthenelse_to_or_right" (formula "26") (term "1,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "0,0,1,0"))
            (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,1,0"))
            (rule "equality_comparison_simple" (formula "39") (term "1"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "commute_or" (formula "35") (term "0"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "add_zero_right" (formula "35") (term "1,0,2,0"))
            (rule "add_zero_right" (formula "35") (term "2,0,2,0"))
            (rule "leq_literals" (formula "35") (term "0,0,2,0"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_8"))
            (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "37")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1,0,0") (ifseqformula "4"))
            (rule "eqSymm" (formula "36"))
            (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
            (rule "hideAuxiliaryEq" (formula "36"))
            (rule "replace_known_left" (formula "35") (term "1,0,0,0,1,0,0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "elementOfUnion" (formula "35") (term "0,0"))
            (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "elementOfUnion" (formula "35") (term "0,0"))
            (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "elementOfSingleton" (formula "35") (term "0,0"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_9"))
            (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "37")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "4"))
            (rule "eqSymm" (formula "36"))
            (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
            (rule "hideAuxiliaryEq" (formula "36"))
            (rule "replace_known_left" (formula "35") (term "1,0,0,1,0,0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "elementOfUnion" (formula "35") (term "0,0"))
            (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "cnf_rightDist" (formula "26") (term "0"))
            (rule "distr_forallAnd" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "commute_or_2" (formula "27") (term "0"))
            (rule "shift_paren_or" (formula "26") (term "0"))
            (rule "commute_or_2" (formula "26") (term "0,0"))
            (rule "inEqSimp_or_antiSymm0" (formula "26") (term "0,0,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "add_literals" (formula "26") (term "1,0,0,0,0"))
            (rule "commute_or" (formula "26") (term "0,0"))
            (rule "commute_or_2" (formula "26") (term "0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "qeq_literals" (formula "26") (term "0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "leq_literals" (formula "26") (term "0,0,2,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "replaceKnownSelect_taclet24_0" (formula "26") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "26") (term "0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "shift_paren_or" (formula "26") (term "0,0"))
            (rule "commute_or" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_or_antiSymm1" (formula "26") (term "0,0"))
            (rule "add_zero_right" (formula "26") (term "1,0,1,1,0,0"))
            (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "commute_or_2" (formula "26") (term "0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "add_literals" (formula "26") (term "2,0,2,0,1"))
            (rule "leq_literals" (formula "26") (term "0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "leq_literals" (formula "26") (term "0,0,2,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "replaceKnownSelect_taclet35_0" (formula "26") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet36_0" (formula "26") (term "0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "andLeft" (formula "29"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
            (rule "getOfSeqSingleton" (formula "30") (term "1,1,0"))
            (rule "castDel" (formula "30") (term "1,1,1,0"))
            (rule "castDel" (formula "30") (term "2,1,1,0"))
            (rule "eqSymm" (formula "30") (term "1,0"))
            (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "30"))
            (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,1,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,1,0,0"))
            (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "30"))
            (rule "getOfSeqSingleton" (formula "29") (term "1,1,0"))
            (rule "castDel" (formula "29") (term "2,1,1,0"))
            (rule "castDel" (formula "29") (term "1,1,1,0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "assert" (formula "38") (term "1"))
            (branch "Assertion (x_10) OK"
               (builtin "One Step Simplification" (formula "39"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
               (rule "andLeft" (formula "23"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
               (rule "lenOfSeqConcat" (formula "23") (term "1"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "add_literals" (formula "23") (term "1"))
               (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
               (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "add_literals" (formula "24") (term "0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
               (rule "lenOfSeqConcat" (formula "23") (term "0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "add_literals" (formula "23") (term "0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "equalityToSeqGetAndSeqLenLeft" (formula "16") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
               (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
               (rule "castDel" (formula "17") (term "1,1,1,0"))
               (rule "castDel" (formula "17") (term "2,1,1,0"))
               (rule "eqSymm" (formula "17") (term "1,0"))
               (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "18"))
               (rule "getOfSeqSingleton" (formula "17") (term "1,1,0"))
               (rule "castDel" (formula "17") (term "2,1,1,0"))
               (rule "castDel" (formula "17") (term "1,1,1,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_push_1,exc_12,heapAfter_push_1,anon_heap_push_1") (contract "RingBuffer[RingBuffer::push(int)].JML normal_behavior operation contract.0"))
               (branch "Post (push)"
                  (builtin "One Step Simplification" (formula "40"))
                  (builtin "One Step Simplification" (formula "36"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "36") (term "0,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "36") (term "0,1,1,0,0"))
                  (rule "replaceKnownSelect_taclet26_0" (formula "36") (term "0,1,0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "36") (term "0,1,0,0,1,1"))
                  (rule "replaceKnownSelect_taclet32_0" (formula "36") (term "1,2,0,1,1,1,0,0"))
                  (rule "replaceKnownSelect_taclet28_0" (formula "36") (term "0,2,0,1,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "36") (term "0,2,0,1,1,1,0,0"))
                  (rule "translateJavaAddInt" (formula "36") (term "2,0,1,1,1,0,0"))
                  (rule "andLeft" (formula "36"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "38"))
                  (rule "polySimp_addComm0" (formula "36") (term "2,0,1,1,1,0"))
                  (rule "Axiom_def_modulo" (formula "36") (term "0,1,1,1,0") (ifseqformula "6"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "36") (term "0,1,2,0,1,1,1,0"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "36") (term "0,1,0,0,1,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "36") (term "0,1,2,0,1,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "36") (term "0,1,0,0,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "36") (term "2,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "2,0,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1,1,1,0"))
                  (rule "applyEq" (formula "36") (term "1,1,0,1,1,1,0") (ifseqformula "30"))
                  (rule "polySimp_addComm0" (formula "36") (term "1,0,1,1,1,0"))
                  (rule "applyEq" (formula "36") (term "1,0,0,0,1,1,1,0") (ifseqformula "30"))
                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,1,1,0"))
                  (rule "applyEq" (formula "36") (term "1,2,0,1,1,1,0") (ifseqformula "30"))
                  (rule "polySimp_addComm1" (formula "36") (term "2,0,1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "36") (term "0,2,0,1,1,1,0"))
                  (rule "applyEq" (formula "36") (term "0,1,2,0,1,1,1,0") (ifseqformula "10"))
                  (rule "mul_literals" (formula "36") (term "1,2,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "2,0,1,1,1,0"))
                  (rule "add_literals" (formula "36") (term "0,2,0,1,1,1,0"))
                  (rule "applyEq" (formula "36") (term "1,1,0,1,1,1,0") (ifseqformula "32"))
                  (rule "add_literals" (formula "36") (term "1,0,1,1,1,0"))
                  (rule "applyEq" (formula "36") (term "0,1,0,0,0,1,1,1,0") (ifseqformula "10"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,1,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,1,0"))
                  (rule "add_zero_left" (formula "36") (term "0,0,0,1,1,1,0"))
                  (rule "applyEq" (formula "36") (term "1,2,0,1,1,1,0") (ifseqformula "32"))
                  (rule "add_literals" (formula "36") (term "2,0,1,1,1,0"))
                  (rule "applyEq" (formula "36") (term "0,0,0,1,1,1,0") (ifseqformula "32"))
                  (rule "leq_literals" (formula "36") (term "0,0,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "36"))
                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=RingBuffer_list_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "43")))
                  (rule "replaceKnownSelect_taclet26_0" (formula "38") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "38") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0,0") (ifseqformula "27"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,1,0,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,1,0,0") (ifseqformula "14"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,0,1,0,0") (ifseqformula "4"))
                  (rule "eqSymm" (formula "39"))
                  (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "39"))
                  (rule "hideAuxiliaryEq" (formula "39"))
                  (rule "replace_known_left" (formula "38") (term "1,0,0,0,0,1,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "41")))
                  (rule "elementOfUnion" (formula "38") (term "0,0"))
                  (rule "elementOfSingleton" (formula "38") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "elementOfUnion" (formula "38") (term "0,0"))
                  (rule "elementOfSingleton" (formula "38") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "elementOfSingleton" (formula "38") (term "0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "Class_invariant_axiom_for_RingBuffer" (formula "39") (inst "i=i") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "replaceKnownSelect_taclet37_0" (formula "39") (term "0,0,1,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "39") (term "0,0,1,0,1"))
                  (rule "replaceKnownSelect_taclet37_0" (formula "39") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "39") (term "0,0,1,0,0,0,0"))
                  (rule "translateJavaAddInt" (formula "39") (term "2,0,2,1,1,0,1"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "40"))
                  (rule "andLeft" (formula "39"))
                  (rule "andLeft" (formula "39"))
                  (rule "notLeft" (formula "39"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "42"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "40"))
                  (rule "times_zero_1" (formula "40") (term "1,0,0"))
                  (rule "add_zero_right" (formula "40") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "42") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "43"))
                  (rule "inEqSimp_commuteLeq" (formula "44"))
                  (rule "inEqSimp_commuteLeq" (formula "41"))
                  (rule "lenOfSeqConcat" (formula "39") (term "0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "add_literals" (formula "39") (term "0"))
                  (rule "eqSymm" (formula "39"))
                  (rule "Axiom_def_modulo" (formula "45") (term "0,2,1,1,0") (ifseqformula "6"))
                  (rule "eqSymm" (formula "45") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "45") (term "2,0,2,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,2,0,1,0"))
                  (rule "polySimp_addComm1" (formula "45") (term "2,0,2,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,2,0,1,0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,2,0,1,0"))
                  (rule "apply_eq_monomials" (formula "45") (term "1,0,0,1,0,0") (ifseqformula "39"))
                  (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,0,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "45") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "45") (term "1,1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "45") (term "1,1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "45") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                  (rule "mul_literals" (formula "40") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,2,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,2,0,1,0"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,2,0,1,0"))
                  (rule "mul_literals" (formula "45") (term "0,0,1,0,0,2,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                  (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                  (rule "getOfSeqConcat" (formula "45") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "45"))
                  (rule "eqSymm" (formula "45") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "45") (term "1,2,0,1,0"))
                  (rule "mul_literals" (formula "45") (term "1,1,2,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "45") (term "1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "45") (term "0,0,0,1,0"))
                  (rule "eqSymm" (formula "45") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "45") (term "1,2,1,1,0"))
                  (rule "getOfSeqSingleton" (formula "45") (term "1,1,1,0"))
                  (rule "castDel" (formula "45") (term "2,1,1,1,0"))
                  (rule "castDel" (formula "45") (term "1,1,1,1,0"))
                  (rule "getOfSeqSingleton" (formula "45") (term "2,1,1,0"))
                  (rule "castDel" (formula "45") (term "1,2,1,1,0"))
                  (rule "castDel" (formula "45") (term "2,2,1,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "45") (term "0,2,1,1,0"))
                  (rule "mul_literals" (formula "45") (term "1,0,2,1,1,0"))
                  (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=RingBuffer_data_4"))
                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "46") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "46") (term "0,0,1,0,2,0,2,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "46") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                  (rule "replaceKnownSelect_taclet30_0" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "28"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "22"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "5"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "49"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                  (rule "polySimp_addComm0" (formula "46") (term "0,2,0,2,0,1,0"))
                  (rule "polySimp_addComm1" (formula "46") (term "1,0,0,2,0,1,0"))
                  (rule "inEqSimp_commuteGeq" (formula "45"))
                  (rule "inEqSimp_homoInEq1" (formula "43"))
                  (rule "polySimp_addComm1" (formula "43") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1"))
                  (rule "polySimp_rightDist" (formula "43") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                  (rule "mul_literals" (formula "43") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "45"))
                  (rule "times_zero_1" (formula "44") (term "0,0"))
                  (rule "add_zero_left" (formula "44") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "41"))
                  (rule "leq_literals" (formula "44") (term "0"))
                  (builtin "One Step Simplification" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "43"))
                  (rule "times_zero_1" (formula "42") (term "0,0"))
                  (rule "add_zero_left" (formula "42") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                  (rule "mul_literals" (formula "42") (term "1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "46") (term "1,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "45") (term "0,1") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "46") (term "0,0,0,0,2,0,2,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "41") (term "0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "46") (term "0,1,0,1,0,0,2,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "43") (term "0,1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "applyEq" (formula "44") (term "1") (ifseqformula "10"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "10"))
                  (rule "qeq_literals" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "10"))
                  (rule "add_literals" (formula "41") (term "1"))
                  (rule "applyEq" (formula "44") (term "1,0,1,0,0,2,0,1,0") (ifseqformula "10"))
                  (rule "add_literals" (formula "44") (term "0,1,0,0,2,0,1,0"))
                  (rule "applyEq" (formula "44") (term "0,0,0,2,0,2,0,1,0") (ifseqformula "10"))
                  (rule "mul_literals" (formula "44") (term "0,0,2,0,2,0,1,0"))
                  (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=RingBuffer_len_4"))
                  (rule "applyEq" (formula "44") (term "0") (ifseqformula "42"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "42"))
                  (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
                  (rule "replaceKnownSelect_taclet32_0" (formula "42") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "27"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,0,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,1,0,0") (ifseqformula "14"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,1,0,0") (ifseqformula "4"))
                  (rule "replace_known_left" (formula "42") (term "1,0,0,0,0,1,0,0") (ifseqformula "5"))
                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "47")))
                  (rule "applyEqRigid" (formula "42") (term "2,0") (ifseqformula "32"))
                  (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "39"))
                  (rule "leq_literals" (formula "44"))
                  (rule "true_left" (formula "44"))
                  (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "39"))
                  (rule "qeq_literals" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "applyEqRigid" (formula "42") (term "1") (ifseqformula "39"))
                  (rule "ifEqualsInteger" (formula "42"))
                  (rule "equal_literals" (formula "42") (term "1,1"))
                  (builtin "One Step Simplification" (formula "42"))
                  (rule "andLeft" (formula "42"))
                  (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=RingBuffer_first_4"))
                  (rule "applyEq" (formula "45") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "40"))
                  (rule "applyEq" (formula "42") (term "0") (ifseqformula "40"))
                  (rule "applyEq" (formula "45") (term "1,0,2,0,2,0,1,0") (ifseqformula "40"))
                  (rule "applyEq" (formula "45") (term "0,1,0,2,0,1,0") (ifseqformula "40"))
                  (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "48")))
                  (rule "replaceKnownSelect_taclet28_0" (formula "40") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "40") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0,0") (ifseqformula "27"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,1,0,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,1,0,0") (ifseqformula "14"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,0,1,0,0") (ifseqformula "4"))
                  (rule "replace_known_right" (formula "40") (term "0,0,0,0,0,1,0,0") (ifseqformula "47"))
                  (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "40") (term "2,0") (ifseqformula "30"))
                  (rule "elementOfUnion" (formula "43"))
                  (rule "elementOfSingleton" (formula "43") (term "1"))
                  (builtin "One Step Simplification" (formula "43"))
                  (rule "elementOfUnion" (formula "40") (term "0,0"))
                  (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "elementOfUnion" (formula "43"))
                  (rule "elementOfSingleton" (formula "43") (term "1"))
                  (builtin "One Step Simplification" (formula "43"))
                  (rule "elementOfSingleton" (formula "43"))
                  (builtin "One Step Simplification" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "elementOfUnion" (formula "40") (term "0,0"))
                  (rule "elementOfSingleton" (formula "40") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "elementOfSingleton" (formula "40") (term "0,0"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "40"))
                  (rule "leq_literals" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "applyEqReverse" (formula "43") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "40"))
                  (rule "mul_literals" (formula "43") (term "1,1,0,0,2,0,1,0"))
                  (rule "add_literals" (formula "43") (term "1,0,0,2,0,1,0"))
                  (rule "applyEqReverse" (formula "43") (term "0,1,0,2,0,1,0") (ifseqformula "40"))
                  (rule "applyEqReverse" (formula "43") (term "1,0,2,0,2,0,1,0") (ifseqformula "40"))
                  (rule "add_literals" (formula "43") (term "0,2,0,2,0,1,0"))
                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40"))
                  (rule "qeq_literals" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "hideAuxiliaryEq" (formula "40"))
                  (rule "eqSymm" (formula "41") (term "1,0"))
                  (rule "nnf_imp2or" (formula "41") (term "0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                  (builtin "Use Operation Contract" (formula "45") (newnames "heapBefore_pop_0,result_5,exc_13,heapAfter_pop_0,anon_heap_pop_0") (contract "RingBuffer[RingBuffer::pop()].JML normal_behavior operation contract.0"))
                  (branch "Post (pop)"
                     (builtin "One Step Simplification" (formula "43"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "43") (term "0,1,0,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "43") (term "0,1,0,0,1,1"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "43") (term "0,2,1,0,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "43") (term "0,2,1,0,0,1,1"))
                     (rule "replaceKnownSelect_taclet39_0" (formula "43") (term "1,1,0,1,1,0,1,1"))
                     (rule "replaceKnownSelect_taclet42_0" (formula "43") (term "0,2,1,0,1,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "43") (term "1,1,0,1,1,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "43") (term "0,2,1,0,1,0,1,1"))
                     (rule "replaceKnownSelect_taclet42_0" (formula "43") (term "0,2,1,0,1,1,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "43") (term "0,2,1,0,1,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "43") (term "2,1,0,1,0,1,1"))
                     (rule "add_literals" (formula "43") (term "2,1,0,1,0,1,1"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "47"))
                     (rule "eqSymm" (formula "45"))
                     (rule "eqSymm" (formula "47"))
                     (rule "lenOfSeqConcat" (formula "45") (term "2,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "eqSymm" (formula "45"))
                     (rule "Axiom_def_modulo" (formula "46") (term "1") (ifseqformula "6"))
                     (rule "eqSymm" (formula "46"))
                     (rule "polySimp_elimSub" (formula "46") (term "2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0"))
                     (rule "assignment" (formula "52") (term "1"))
                     (builtin "One Step Simplification" (formula "52"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "46") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=arr_12"))
                     (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "50")))
                     (rule "replaceKnownSelect_taclet33_0" (formula "47") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet34_0" (formula "47") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,1,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "eqSymm" (formula "48"))
                     (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "48"))
                     (rule "hideAuxiliaryEq" (formula "48"))
                     (rule "replace_known_left" (formula "47") (term "1,0,0,0,0,1,0,0") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "elementOfUnion" (formula "47") (term "0,0"))
                     (rule "elementOfSingleton" (formula "47") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "equal_literals" (formula "47") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "elementOfUnion" (formula "47") (term "0,0"))
                     (rule "elementOfSingleton" (formula "47") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "elementOfSingleton" (formula "47") (term "0,0"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "applyEq" (formula "41") (term "1,1,0,1,0") (ifseqformula "47"))
                     (rule "applyEq" (formula "52") (term "0,0,0,0,0,0,0") (ifseqformula "47"))
                     (rule "applyEq" (formula "34") (term "1") (ifseqformula "47"))
                     (rule "applyEq" (formula "38") (term "0,0,1") (ifseqformula "47"))
                     (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "47"))
                     (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "47"))
                     (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=RingBuffer_list_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "52")))
                     (rule "replaceKnownSelect_taclet37_0" (formula "45") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "45") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,1,0,0") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,1,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,1,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "eqSymm" (formula "46"))
                     (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "46"))
                     (rule "hideAuxiliaryEq" (formula "46"))
                     (rule "replace_known_right" (formula "45") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "50"))
                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "5")))
                     (rule "applyEq" (formula "45") (term "0,0,2,0") (ifseqformula "47"))
                     (rule "elementOfUnion" (formula "45") (term "0,0"))
                     (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "pullOutSelect" (formula "46") (term "1") (inst "selectSK=RingBuffer_first_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "52")))
                     (rule "replaceKnownSelect_taclet42_0" (formula "46") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "46") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0,0") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,1,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0,1,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "46") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "51"))
                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "5")))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfSingleton" (formula "46") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "46"))
                     (rule "hideAuxiliaryEq" (formula "46"))
                     (rule "pullOutSelect" (formula "46") (term "0,0,1,2,0") (inst "selectSK=RingBuffer_data_5"))
                     (rule "applyEq" (formula "47") (term "0,0,0,0") (ifseqformula "46"))
                     (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "52")))
                     (rule "replaceKnownSelect_taclet39_0" (formula "46") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "46") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0,0") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,1,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0,1,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "replace_known_left" (formula "46") (term "1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "51")))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "elementOfUnion" (formula "46") (term "0,0"))
                     (rule "elementOfSingleton" (formula "46") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "elementOfSingleton" (formula "46") (term "0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "applyEqReverse" (formula "47") (term "0,0,0,0") (ifseqformula "46"))
                     (rule "applyEqReverse" (formula "47") (term "0,0,1,2,0") (ifseqformula "46"))
                     (rule "hideAuxiliaryEq" (formula "46"))
                     (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "10"))
                     (rule "qeq_literals" (formula "46") (term "0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "eqSymm" (formula "46"))
                     (rule "applyEq" (formula "46") (term "0,1,1") (ifseqformula "10"))
                     (rule "mul_literals" (formula "46") (term "1,1"))
                     (rule "add_literals" (formula "46") (term "1"))
                     (rule "evaluateAssertCondition_1" (formula "52") (term "1") (inst "#condition=x"))
                     (rule "variableDeclarationAssign" (formula "52") (term "1"))
                     (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_16"))
                     (rule "ifthenelse_to_or_left" (formula "41") (term "1,0"))
                     (rule "eqSymm" (formula "41") (term "1,0,1,0"))
                     (rule "eqSymm" (formula "41") (term "1,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "0,0,1,0"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,1,0"))
                     (rule "cnf_rightDist" (formula "41") (term "0"))
                     (rule "distr_forallAnd" (formula "41"))
                     (rule "andLeft" (formula "41"))
                     (rule "commute_or_2" (formula "42") (term "0"))
                     (rule "shift_paren_or" (formula "41") (term "0"))
                     (rule "commute_or_2" (formula "41") (term "0,0"))
                     (rule "inEqSimp_or_antiSymm0" (formula "41") (term "0,0,0"))
                     (rule "add_literals" (formula "41") (term "1,0,1,0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "commute_or" (formula "41") (term "0,0"))
                     (rule "commute_or_2" (formula "41") (term "0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "add_zero_right" (formula "41") (term "1,0,2,0,1"))
                     (rule "leq_literals" (formula "41") (term "0,0,2,0,1"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "replaceKnownSelect_taclet44_0" (formula "41") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet45_0" (formula "41") (term "0,1"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "true_left" (formula "41"))
                     (rule "shift_paren_or" (formula "41") (term "0,0"))
                     (rule "commute_or" (formula "41") (term "0,0,0"))
                     (rule "inEqSimp_or_antiSymm1" (formula "41") (term "0,0"))
                     (rule "add_zero_right" (formula "41") (term "1,0,1,1,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "commute_or_2" (formula "41") (term "0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "add_literals" (formula "41") (term "2,0,2,0,1"))
                     (rule "leq_literals" (formula "41") (term "0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "add_literals" (formula "41") (term "1,0,2,0"))
                     (rule "leq_literals" (formula "41") (term "0,0,2,0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_13"))
                     (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,1,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "eqSymm" (formula "42"))
                     (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "42"))
                     (rule "hideAuxiliaryEq" (formula "42"))
                     (rule "replace_known_left" (formula "41") (term "1,0,0,0,0,1,0,0") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "elementOfUnion" (formula "41") (term "0,0"))
                     (rule "elementOfSingleton" (formula "41") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "Class_invariant_axiom_for_RingBuffer" (formula "48") (inst "i=i") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "replaceKnownSelect_taclet48_0" (formula "48") (term "0,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet48_0" (formula "48") (term "1,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet50_0" (formula "48") (term "0,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet50_0" (formula "48") (term "1,1,1,0,1"))
                     (rule "replaceKnownSelect_taclet46_0" (formula "48") (term "0,0,1,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "48") (term "0,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "48") (term "1,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "48") (term "0,1,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "48") (term "1,1,1,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet47_0" (formula "48") (term "0,0,1,0,1"))
                     (rule "replaceKnownSelect_taclet50_0" (formula "48") (term "0,1,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet50_0" (formula "48") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet50_0" (formula "48") (term "0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet46_0" (formula "48") (term "0,0,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "48") (term "0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "48") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet48_0" (formula "48") (term "0,2,0,2,1,1,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "48") (term "0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet47_0" (formula "48") (term "0,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "49")))
                     (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "48") (term "0,2,0,2,1,1,0,1"))
                     (rule "translateJavaAddInt" (formula "48") (term "2,0,2,1,1,0,1"))
                     (rule "andLeft" (formula "48"))
                     (rule "andLeft" (formula "48"))
                     (rule "andLeft" (formula "48"))
                     (rule "andLeft" (formula "50"))
                     (rule "andLeft" (formula "48"))
                     (rule "andLeft" (formula "50"))
                     (rule "eqSymm" (formula "48"))
                     (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "49"))
                     (rule "times_zero_1" (formula "49") (term "1,0,0"))
                     (rule "add_zero_right" (formula "49") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "51"))
                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "52"))
                     (rule "inEqSimp_commuteLeq" (formula "50"))
                     (rule "getOfSeqSingleton" (formula "54") (term "0,1,0"))
                     (rule "castDel" (formula "54") (term "1,0,1,0"))
                     (rule "castDel" (formula "54") (term "2,0,1,0"))
                     (rule "Axiom_def_modulo" (formula "54") (term "0,2,1,1,0") (ifseqformula "6"))
                     (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "0,1,0,0,2,1,1,0"))
                     (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "0,1,2,0,2,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "0,1,0,0,2,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "0,1,2,0,2,1,1,0"))
                     (rule "eqSymm" (formula "54") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "54") (term "2,0,2,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,2,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,2,0,1,0"))
                     (rule "polySimp_addComm1" (formula "54") (term "2,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "54") (term "0,2,0,2,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,2,0,1,0"))
                     (rule "applyEq" (formula "53") (term "1") (ifseqformula "10"))
                     (rule "applyEq" (formula "50") (term "0") (ifseqformula "46"))
                     (rule "qeq_literals" (formula "50"))
                     (rule "true_left" (formula "50"))
                     (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "10"))
                     (rule "add_literals" (formula "49") (term "0"))
                     (rule "qeq_literals" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "46"))
                     (rule "add_zero_right" (formula "49") (term "0"))
                     (rule "applyEq" (formula "52") (term "0,1,0,2,0,1,0") (ifseqformula "46"))
                     (rule "add_zero_left" (formula "52") (term "1,0,2,0,1,0"))
                     (rule "apply_eq_monomials" (formula "52") (term "1,0,0,1,0,0") (ifseqformula "48"))
                     (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "52") (term "0,0,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "52") (term "1,0,1,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "52") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "52") (term "1,1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "52") (term "1,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "52") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "52") (term "0,0,1,0,0"))
                     (rule "add_zero_left" (formula "52") (term "0,1,0,0"))
                     (rule "applyEq" (formula "52") (term "1,0,2,0,2,0,1,0") (ifseqformula "46"))
                     (rule "add_zero_right" (formula "52") (term "0,2,0,2,0,1,0"))
                     (rule "applyEq" (formula "52") (term "1,0,0,0,0,2,0,1,0") (ifseqformula "46"))
                     (rule "add_zero_right" (formula "52") (term "0,0,0,0,2,0,1,0"))
                     (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "10"))
                     (rule "mul_literals" (formula "49") (term "1,0"))
                     (rule "add_literals" (formula "49") (term "0"))
                     (rule "leq_literals" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "applyEq" (formula "51") (term "0,0,2,0,2,0,1,0") (ifseqformula "10"))
                     (rule "mul_literals" (formula "51") (term "0,2,0,2,0,1,0"))
                     (rule "applyEq" (formula "51") (term "0,1,0,0,0,0,2,0,1,0") (ifseqformula "10"))
                     (rule "mul_literals" (formula "51") (term "1,0,0,0,0,2,0,1,0"))
                     (rule "add_literals" (formula "51") (term "0,0,0,0,2,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,2,0,1,0"))
                     (rule "mul_literals" (formula "51") (term "1,0,0,2,0,1,0"))
                     (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=RingBuffer_len_5"))
                     (rule "applyEq" (formula "48") (term "0") (ifseqformula "50"))
                     (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                     (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "55")))
                     (rule "replaceKnownSelect_taclet41_0" (formula "50") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,1,0,0") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,1,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,1,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "replace_known_left" (formula "50") (term "1,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "54")))
                     (rule "applyEq" (formula "51") (term "0") (ifseqformula "48"))
                     (rule "leq_literals" (formula "51"))
                     (rule "true_left" (formula "51"))
                     (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "48"))
                     (rule "qeq_literals" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "applyEqRigid" (formula "49") (term "2,0") (ifseqformula "39"))
                     (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "48"))
                     (rule "ifEqualsInteger" (formula "49"))
                     (rule "equal_literals" (formula "49") (term "1,1"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "andLeft" (formula "49"))
                     (rule "elementOfUnion" (formula "49"))
                     (rule "elementOfSingleton" (formula "49") (term "1"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "elementOfUnion" (formula "49"))
                     (rule "elementOfSingleton" (formula "49") (term "0"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "elementOfSingleton" (formula "49"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "nnf_imp2or" (formula "50") (term "0"))
                     (rule "nnf_notAnd" (formula "50") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                     (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "50") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                     (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                     (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                     (rule "mul_literals" (formula "50") (term "1,1,0,0"))
                     (rule "inEqSimp_or_antiSymm0" (formula "50") (term "0,0"))
                     (rule "add_literals" (formula "50") (term "1,0,1,0,0"))
                     (rule "add_literals" (formula "50") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "equality_comparison_simple" (formula "54") (term "1"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "commute_or" (formula "50") (term "0"))
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "add_zero_right" (formula "50") (term "2,0,2,0"))
                     (rule "leq_literals" (formula "50") (term "0,0,2,0"))
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=arr_14"))
                     (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "52")))
                     (rule "replaceKnownSelect_taclet52_0" (formula "50") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet53_0" (formula "50") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,1,0,0") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,1,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,1,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "eqSymm" (formula "51"))
                     (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "51"))
                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "9")))
                     (rule "hideAuxiliaryEq" (formula "51"))
                     (rule "elementOfUnion" (formula "50") (term "0,0"))
                     (rule "elementOfSingleton" (formula "50") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "elementOfUnion" (formula "50") (term "0,0"))
                     (rule "elementOfSingleton" (formula "50") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "elementOfSingleton" (formula "50") (term "0,0"))
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "true_left" (formula "50"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                     (rule "andLeft" (formula "38"))
                     (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                     (rule "lenOfSeqConcat" (formula "38") (term "1"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "add_literals" (formula "38") (term "1"))
                     (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                     (rule "lenOfSeqConcat" (formula "39") (term "0,1,0,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "add_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "40"))
                     (rule "lenOfSeqConcat" (formula "38") (term "0"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "add_literals" (formula "38") (term "0"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "true_left" (formula "38"))
                     (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "true_left" (formula "38"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "30") (term "1,1,0"))
                     (rule "castDel" (formula "30") (term "1,1,1,0"))
                     (rule "castDel" (formula "30") (term "2,1,1,0"))
                     (rule "eqSymm" (formula "30") (term "1,0"))
                     (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "mul_literals" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,1,0,0"))
                     (rule "add_zero_left" (formula "30") (term "0,1,0,0"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "applyEq" (formula "29") (term "0,1,1,0") (ifseqformula "30"))
                     (rule "getOfSeqSingleton" (formula "29") (term "1,1,0"))
                     (rule "castDel" (formula "29") (term "1,1,1,0"))
                     (rule "castDel" (formula "29") (term "2,1,1,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
                     (rule "andLeft" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "lenOfSeqConcat" (formula "23") (term "1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "add_literals" (formula "23") (term "1"))
                     (rule "applyEq" (formula "24") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
                     (rule "lenOfSeqConcat" (formula "24") (term "0,1,0,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "add_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                     (rule "lenOfSeqConcat" (formula "23") (term "0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "add_literals" (formula "23") (term "0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "45") (inst "iv=iv"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "andLeft" (formula "45"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "46") (term "1,1,0"))
                     (rule "castDel" (formula "46") (term "1,1,1,0"))
                     (rule "castDel" (formula "46") (term "2,1,1,0"))
                     (rule "eqSymm" (formula "46") (term "1,0"))
                     (rule "applyEq" (formula "46") (term "0,0,1,0,0,1,0,0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,1,0,0"))
                     (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "true_left" (formula "45"))
                     (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                     (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                     (rule "castDel" (formula "45") (term "1,1,1,0"))
                     (rule "castDel" (formula "45") (term "2,1,1,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "true_left" (formula "45"))
                     (rule "assert" (formula "53") (term "1"))
                     (branch "Assertion (x_16) OK"
                        (builtin "One Step Simplification" (formula "1"))
                        (builtin "One Step Simplification" (formula "54"))
                        (rule "true_left" (formula "1"))
                        (builtin "Use Operation Contract" (formula "53") (newnames "heapBefore_pop_1,result_6,exc_14,heapAfter_pop_1,anon_heap_pop_1") (contract "RingBuffer[RingBuffer::pop()].JML normal_behavior operation contract.0"))
                        (branch "Post (pop)"
                           (builtin "One Step Simplification" (formula "51"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "replaceKnownSelect_taclet46_0" (formula "51") (term "0,1,0,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet47_0" (formula "51") (term "0,1,0,0,1,1"))
                           (rule "replaceKnownSelect_taclet46_0" (formula "51") (term "0,2,1,0,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet47_0" (formula "51") (term "0,2,1,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "replaceKnownSelect_taclet48_0" (formula "51") (term "0,2,1,0,1,0,1,1"))
                           (rule "replaceKnownSelect_taclet50_0" (formula "51") (term "1,1,0,1,1,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "51") (term "0,2,1,0,1,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "51") (term "1,1,0,1,1,0,1,1"))
                           (rule "replaceKnownSelect_taclet48_0" (formula "51") (term "0,2,1,0,1,1,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "51") (term "0,2,1,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "51") (term "2,1,0,1,0,1,1"))
                           (rule "andLeft" (formula "51"))
                           (rule "andLeft" (formula "52"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "54"))
                           (rule "andLeft" (formula "55"))
                           (rule "eqSymm" (formula "53"))
                           (rule "eqSymm" (formula "55"))
                           (rule "polySimp_addComm0" (formula "54") (term "2,1"))
                           (rule "Axiom_def_modulo" (formula "54") (term "1") (ifseqformula "6"))
                           (rule "eqSymm" (formula "54"))
                           (rule "polySimp_elimSub" (formula "54") (term "2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                           (rule "assignment" (formula "60") (term "1"))
                           (builtin "One Step Simplification" (formula "60"))
                           (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "46"))
                           (rule "add_literals" (formula "54") (term "1,0"))
                           (rule "applyEq" (formula "55") (term "0,2,0") (ifseqformula "46"))
                           (rule "replaceKnownSelect_taclet55_0" (formula "55") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet56_0" (formula "55") (term "0"))
                           (rule "applyEq" (formula "54") (term "1,0,2,0") (ifseqformula "46"))
                           (rule "add_zero_right" (formula "54") (term "0,2,0"))
                           (rule "applyEq" (formula "60") (term "0,0,0,0,0") (ifseqformula "55"))
                           (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "55"))
                           (rule "applyEq" (formula "54") (term "1,0,0,0,0") (ifseqformula "46"))
                           (rule "add_zero_right" (formula "54") (term "0,0,0,0"))
                           (rule "applyEq" (formula "41") (term "1") (ifseqformula "55"))
                           (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "55"))
                           (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "55"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "54") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "54") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "53") (term "1") (inst "selectSK=RingBuffer_list_6"))
                           (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "60")))
                           (rule "replaceKnownSelect_taclet46_0" (formula "53") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet47_0" (formula "53") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,0,0") (ifseqformula "43"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,1,0,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,1,0,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,1,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,1,0,0") (ifseqformula "14"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "54"))
                           (rule "hideAuxiliaryEq" (formula "54"))
                           (rule "replace_known_right" (formula "53") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "5")))
                           (rule "applyEq" (formula "53") (term "0,2,0") (ifseqformula "55"))
                           (rule "elementOfUnion" (formula "53") (term "0,0"))
                           (rule "elementOfSingleton" (formula "53") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "eqSymm" (formula "53"))
                           (rule "pullOutSelect" (formula "54") (term "1") (inst "selectSK=RingBuffer_first_6"))
                           (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "60")))
                           (rule "replaceKnownSelect_taclet48_0" (formula "54") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "54") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0,0") (ifseqformula "43"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,1,0,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,1,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,0,0") (ifseqformula "14"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "54") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "59"))
                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "5")))
                           (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "46"))
                           (rule "elementOfUnion" (formula "54") (term "0,0"))
                           (rule "elementOfSingleton" (formula "54") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "elementOfUnion" (formula "54") (term "0,0"))
                           (rule "elementOfSingleton" (formula "54") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "elementOfSingleton" (formula "54") (term "0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "54"))
                           (rule "hideAuxiliaryEq" (formula "54"))
                           (rule "pullOutSelect" (formula "54") (term "0,0,1,2,0") (inst "selectSK=RingBuffer_data_6"))
                           (rule "applyEq" (formula "55") (term "0,0,0,0") (ifseqformula "54"))
                           (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "60")))
                           (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0,0") (ifseqformula "43"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,1,0,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,1,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,0,0") (ifseqformula "14"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "54") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "59"))
                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "5")))
                           (rule "elementOfUnion" (formula "54") (term "0,0"))
                           (rule "elementOfSingleton" (formula "54") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "elementOfUnion" (formula "54") (term "0,0"))
                           (rule "elementOfSingleton" (formula "54") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "elementOfSingleton" (formula "54") (term "0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,0,0") (ifseqformula "54"))
                           (rule "applyEqReverse" (formula "55") (term "0,0,1,2,0") (ifseqformula "54"))
                           (rule "hideAuxiliaryEq" (formula "54"))
                           (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "54") (term "0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "eqSymm" (formula "54"))
                           (rule "evaluateAssertCondition_1" (formula "60") (term "1") (inst "#condition=x"))
                           (rule "variableDeclarationAssign" (formula "60") (term "1"))
                           (rule "variableDeclaration" (formula "60") (term "1") (newnames "x_19"))
                           (rule "Class_invariant_axiom_for_RingBuffer" (formula "56") (inst "i=i") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "replaceKnownSelect_taclet59_0" (formula "56") (term "0,1,1,0,0"))
                           (rule "replaceKnownSelect_taclet59_0" (formula "56") (term "1,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet61_0" (formula "56") (term "1,1,1,0,1"))
                           (rule "replaceKnownSelect_taclet57_0" (formula "56") (term "0,0,1,0,1"))
                           (rule "replaceKnownSelect_taclet61_0" (formula "56") (term "0,1,1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet60_0" (formula "56") (term "0,1,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet60_0" (formula "56") (term "1,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet62_0" (formula "56") (term "1,1,1,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet58_0" (formula "56") (term "0,0,1,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet62_0" (formula "56") (term "0,1,1,1,0"))
                           (rule "replaceKnownSelect_taclet61_0" (formula "56") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet61_0" (formula "56") (term "0,1,1,1,0,0"))
                           (rule "replaceKnownSelect_taclet57_0" (formula "56") (term "0,0,1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet61_0" (formula "56") (term "0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet62_0" (formula "56") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet62_0" (formula "56") (term "0,1,1,1,0,0"))
                           (rule "replaceKnownSelect_taclet59_0" (formula "56") (term "0,2,0,2,1,1,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet58_0" (formula "56") (term "0,0,1,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet62_0" (formula "56") (term "0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet60_0" (formula "56") (term "0,2,0,2,1,1,0,1"))
                           (rule "translateJavaAddInt" (formula "56") (term "2,0,2,1,1,0,1"))
                           (rule "andLeft" (formula "56"))
                           (rule "andLeft" (formula "56"))
                           (rule "andLeft" (formula "57"))
                           (rule "andLeft" (formula "56"))
                           (rule "andLeft" (formula "57"))
                           (rule "andLeft" (formula "56"))
                           (rule "andLeft" (formula "56"))
                           (rule "notLeft" (formula "56"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "59"))
                           (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "57"))
                           (rule "times_zero_1" (formula "57") (term "1,0,0"))
                           (rule "add_zero_right" (formula "57") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "60"))
                           (rule "inEqSimp_commuteLeq" (formula "58"))
                           (rule "lenOfSeqSub" (formula "56") (term "0"))
                           (rule "sub_literals" (formula "56") (term "1,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "eqSymm" (formula "56"))
                           (rule "Axiom_def_modulo" (formula "62") (term "0,2,1,1,0") (ifseqformula "6"))
                           (rule "replaceKnownSelect_taclet61_0" (formula "62") (term "0,1,2,0,2,1,1,0"))
                           (rule "replaceKnownSelect_taclet61_0" (formula "62") (term "0,1,0,0,2,1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet62_0" (formula "62") (term "0,1,2,0,2,1,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet62_0" (formula "62") (term "0,1,0,0,2,1,1,0"))
                           (rule "eqSymm" (formula "62") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "62") (term "2,0,2,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,2,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,0,0,2,0,1,0"))
                           (rule "polySimp_addComm1" (formula "62") (term "2,0,2,0,1,0"))
                           (rule "polySimp_addComm0" (formula "62") (term "0,2,0,2,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,2,0,1,0"))
                           (rule "applyEq" (formula "62") (term "0,1,1,0") (ifseqformula "53"))
                           (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "54"))
                           (rule "polySimp_addComm1" (formula "59") (term "0"))
                           (rule "add_literals" (formula "59") (term "0,0"))
                           (rule "applyEq" (formula "58") (term "0") (ifseqformula "54"))
                           (rule "qeq_literals" (formula "58"))
                           (rule "true_left" (formula "58"))
                           (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "10"))
                           (rule "add_literals" (formula "57") (term "0"))
                           (rule "qeq_literals" (formula "57"))
                           (rule "true_left" (formula "57"))
                           (rule "applyEq" (formula "59") (term "1") (ifseqformula "10"))
                           (rule "applyEq" (formula "60") (term "0,1,0,2,0,1,0") (ifseqformula "54"))
                           (rule "apply_eq_monomials" (formula "60") (term "1,0,0,1,0,0") (ifseqformula "56"))
                           (rule "add_zero_left" (formula "60") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "60") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "60") (term "0,0,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "60") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "60") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "60") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "60") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "10"))
                           (rule "mul_literals" (formula "57") (term "1,0"))
                           (rule "add_literals" (formula "57") (term "0"))
                           (rule "leq_literals" (formula "57"))
                           (rule "true_left" (formula "57"))
                           (rule "applyEq" (formula "59") (term "1,0,2,0,2,0,1,0") (ifseqformula "54"))
                           (rule "polySimp_addComm0" (formula "59") (term "0,2,0,2,0,1,0"))
                           (rule "applyEq" (formula "59") (term "1,0,0,0,0,2,0,1,0") (ifseqformula "54"))
                           (rule "polySimp_addComm1" (formula "59") (term "0,0,0,0,2,0,1,0"))
                           (rule "add_literals" (formula "59") (term "0,0,0,0,0,2,0,1,0"))
                           (rule "applyEq" (formula "59") (term "0,1,0,0,0,0,2,0,1,0") (ifseqformula "10"))
                           (rule "mul_literals" (formula "59") (term "1,0,0,0,0,2,0,1,0"))
                           (rule "add_literals" (formula "59") (term "0,0,0,0,2,0,1,0"))
                           (rule "add_zero_left" (formula "59") (term "0,0,0,2,0,1,0"))
                           (rule "applyEq" (formula "59") (term "0,1,0,2,0,2,0,1,0") (ifseqformula "10"))
                           (rule "mul_literals" (formula "59") (term "1,0,2,0,2,0,1,0"))
                           (rule "add_literals" (formula "59") (term "0,2,0,2,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0"))
                           (rule "mul_literals" (formula "59") (term "1,1,0,0"))
                           (rule "getOfSeqSubEQ" (formula "59") (term "1,1,0") (ifseqformula "53"))
                           (rule "castDel" (formula "59") (term "2,1,1,0"))
                           (rule "sub_literals" (formula "59") (term "1,1,0,1,1,0"))
                           (rule "eqSymm" (formula "59") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "59") (term "1,0,0,1,0"))
                           (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "59") (term "1,1,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "59") (term "0,0,0,1,0"))
                           (rule "getOfSeqSingleton" (formula "59") (term "1,0,1,0"))
                           (rule "castDel" (formula "59") (term "1,1,0,1,0"))
                           (rule "castDel" (formula "59") (term "2,1,0,1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "59") (term "0,1,0,1,0"))
                           (rule "mul_literals" (formula "59") (term "1,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "59") (term "1,1,0,0,1,0"))
                           (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=RingBuffer_len_6"))
                           (rule "applyEq" (formula "57") (term "0") (ifseqformula "58"))
                           (rule "applyEq" (formula "56") (term "0") (ifseqformula "58"))
                           (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "63")))
                           (rule "replaceKnownSelect_taclet54_0" (formula "58") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,1,0,0") (ifseqformula "43"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,1,0,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,1,0,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,1,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,0,1,0,0") (ifseqformula "14"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "58") (term "0,0,0,0,0,0,0,1,0,0") (ifseqformula "62"))
                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "5")))
                           (rule "applyEq" (formula "57") (term "0") (ifseqformula "56"))
                           (rule "qeq_literals" (formula "57"))
                           (rule "true_left" (formula "57"))
                           (rule "applyEq" (formula "58") (term "0") (ifseqformula "56"))
                           (rule "leq_literals" (formula "58"))
                           (rule "true_left" (formula "58"))
                           (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "48"))
                           (rule "applyEq" (formula "57") (term "1") (ifseqformula "56"))
                           (rule "ifEqualsInteger" (formula "57"))
                           (rule "equal_literals" (formula "57") (term "1,1"))
                           (builtin "One Step Simplification" (formula "57"))
                           (rule "andLeft" (formula "57"))
                           (rule "elementOfUnion" (formula "57"))
                           (rule "elementOfSingleton" (formula "57") (term "1"))
                           (builtin "One Step Simplification" (formula "57"))
                           (rule "elementOfUnion" (formula "57"))
                           (rule "elementOfSingleton" (formula "57") (term "0"))
                           (builtin "One Step Simplification" (formula "57"))
                           (rule "elementOfSingleton" (formula "57"))
                           (builtin "One Step Simplification" (formula "57"))
                           (rule "true_left" (formula "57"))
                           (rule "nnf_imp2or" (formula "58") (term "0"))
                           (rule "nnf_notAnd" (formula "58") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0"))
                           (rule "mul_literals" (formula "58") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "58") (term "0,0,1,0,0"))
                           (rule "add_zero_left" (formula "58") (term "0,1,0,0"))
                           (builtin "One Step Simplification" (formula "58"))
                           (rule "true_left" (formula "58"))
                           (rule "equality_comparison_simple" (formula "61") (term "1"))
                           (builtin "One Step Simplification" (formula "61"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                           (rule "andLeft" (formula "38"))
                           (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "38") (term "1"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "add_literals" (formula "38") (term "1"))
                           (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                           (rule "lenOfSeqConcat" (formula "39") (term "0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "add_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "40"))
                           (rule "lenOfSeqConcat" (formula "38") (term "0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "add_literals" (formula "38") (term "0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "45") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "andLeft" (formula "45"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                           (rule "getOfSeqSingleton" (formula "46") (term "1,1,0"))
                           (rule "castDel" (formula "46") (term "1,1,1,0"))
                           (rule "castDel" (formula "46") (term "2,1,1,0"))
                           (rule "eqSymm" (formula "46") (term "1,0"))
                           (rule "applyEq" (formula "46") (term "0,0,1,0,0,1,0,0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,1,0,0"))
                           (rule "add_zero_left" (formula "46") (term "0,1,0,0"))
                           (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "true_left" (formula "45"))
                           (rule "applyEq" (formula "45") (term "0,1,1,0") (ifseqformula "46"))
                           (rule "getOfSeqSingleton" (formula "45") (term "1,1,0"))
                           (rule "castDel" (formula "45") (term "2,1,1,0"))
                           (rule "castDel" (formula "45") (term "1,1,1,0"))
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "true_left" (formula "45"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "53") (inst "iv=iv"))
                           (rule "andLeft" (formula "53"))
                           (rule "lenOfSeqSubEQ" (formula "53") (term "1") (ifseqformula "55"))
                           (rule "sub_literals" (formula "53") (term "1,1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0"))
                           (rule "lenOfSeqSub" (formula "53") (term "0"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "less_literals" (formula "53") (term "0,0"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "true_left" (formula "53"))
                           (rule "lenOfSeqSub" (formula "53") (term "0,1,0,0,1,0,0"))
                           (rule "less_literals" (formula "53") (term "0,0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "times_zero_2" (formula "53") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "53") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "54"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "true_left" (formula "53"))
                           (rule "assert" (formula "61") (term "1"))
                           (branch "Assertion (x_19) OK"
                              (builtin "One Step Simplification" (formula "1"))
                              (builtin "One Step Simplification" (formula "62"))
                              (rule "true_left" (formula "1"))
                              (rule "methodCallEmpty" (formula "61") (term "1"))
                              (rule "tryEmpty" (formula "61") (term "1"))
                              (builtin "One Step Simplification" (formula "61"))
                              (rule "emptyModality" (formula "61") (term "1"))
                              (builtin "One Step Simplification" (formula "61"))
                              (rule "closeTrue" (formula "61"))
                           )
                           (branch "Assertion (x_19) Failure"
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Exceptional Post (pop)"
                           (builtin "One Step Simplification" (formula "51"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "replaceKnownSelect_taclet46_0" (formula "51") (term "0,1,0,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet47_0" (formula "51") (term "0,1,0,0,1,1"))
                           (rule "replaceKnownSelect_taclet46_0" (formula "51") (term "0,2,1,0,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet47_0" (formula "51") (term "0,2,1,0,0,1,1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "replaceKnownSelect_taclet50_0" (formula "51") (term "1,1,0,1,1,0,1,1"))
                           (rule "replaceKnownSelect_taclet48_0" (formula "51") (term "0,2,1,0,1,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "51") (term "1,1,0,1,1,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "51") (term "0,2,1,0,1,0,1,1"))
                           (rule "replaceKnownSelect_taclet48_0" (formula "51") (term "0,2,1,0,1,1,0,1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "51") (term "0,2,1,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "51") (term "2,1,0,1,0,1,1"))
                           (rule "andLeft" (formula "51"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "1,0") (ifseqformula "51"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0") (ifseqformula "43"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,1,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,1,0") (ifseqformula "27"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,0,1,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,0,0,1,0") (ifseqformula "14"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0,0,0,0,1,0") (ifseqformula "4"))
                           (rule "andLeft" (formula "52"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "52"))
                           (rule "andLeft" (formula "54"))
                           (rule "notLeft" (formula "52"))
                           (rule "close" (formula "56") (ifseqformula "55"))
                        )
                        (branch "Pre (pop)"
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "wellFormedAnonEQ" (formula "53") (term "1") (ifseqformula "43"))
                           (rule "wellFormedAnonEQ" (formula "53") (term "0,1") (ifseqformula "36"))
                           (rule "wellFormedAnonEQ" (formula "53") (term "0,0,1") (ifseqformula "27"))
                           (rule "wellFormedAnonEQ" (formula "53") (term "0,0,0,1") (ifseqformula "21"))
                           (rule "wellFormedAnonEQ" (formula "53") (term "0,0,0,0,1") (ifseqformula "14"))
                           (rule "wellFormedAnonEQ" (formula "53") (term "0,0,0,0,0,1") (ifseqformula "4"))
                           (rule "replace_known_left" (formula "53") (term "1,0,1") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "1")) (ifInst ""  (formula "3")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")) (ifInst ""  (formula "42")))
                           (rule "Query_axiom_for_isEmpty_in_RingBuffer" (formula "53") (term "0,0,0") (inst "isEmpty_sk=isEmpty_sk_2") (inst "#self=r") (inst "#res=x") (ifseqformula "6"))
                           (rule "eqSymm" (formula "1") (term "0,1"))
                           (rule "boxToDiamond" (formula "1") (term "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "commute_and" (formula "54"))
                           (rule "Class_invariant_axiom_for_RingBuffer" (formula "54") (term "0") (inst "i=i") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "replaceKnownSelect_taclet54_0" (formula "54") (term "0,1,1,0,0"))
                           (rule "replaceKnownSelect_taclet54_0" (formula "54") (term "1,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "0,1,1,1,0,0"))
                           (rule "replaceKnownSelect_taclet48_0" (formula "54") (term "0,1,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet48_0" (formula "54") (term "1,0,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet54_0" (formula "54") (term "1,1,0,0,1,0"))
                           (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "1,1,1,0,1,0"))
                           (rule "replaceKnownSelect_taclet46_0" (formula "54") (term "0,0,1,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "0,1,1,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "54") (term "0,1,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "54") (term "1,0,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "1,1,1,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet47_0" (formula "54") (term "0,0,1,0,1,0"))
                           (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "0,1,1,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet54_0" (formula "54") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "0,0,1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet46_0" (formula "54") (term "0,0,1,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "0,1,1,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "0,0,1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet48_0" (formula "54") (term "0,2,0,2,1,1,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet47_0" (formula "54") (term "0,0,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "51")))
                           (rule "replaceKnownAuxiliaryConstant_taclet49_0" (formula "54") (term "0,2,0,2,1,1,0,1,0"))
                           (rule "translateJavaAddInt" (formula "54") (term "2,0,2,1,1,0,1,0"))
                           (rule "eqSymm" (formula "54") (term "0,0,0,0,0"))
                           (rule "replace_known_left" (formula "54") (term "0,0,0,0,0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "54") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "1,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "54") (term "1,1,0,0"))
                           (rule "getOfSeqSingleton" (formula "54") (term "0,1,0,1,0"))
                           (rule "castDel" (formula "54") (term "2,0,1,0,1,0"))
                           (rule "castDel" (formula "54") (term "1,0,1,0,1,0"))
                           (rule "Axiom_def_modulo" (formula "54") (term "0,2,1,1,0,1,0") (ifseqformula "6"))
                           (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "0,1,2,0,2,1,1,0,1,0"))
                           (rule "replaceKnownSelect_taclet50_0" (formula "54") (term "0,1,0,0,2,1,1,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "0,1,2,0,2,1,1,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet51_0" (formula "54") (term "0,1,0,0,2,1,1,0,1,0"))
                           (rule "eqSymm" (formula "54") (term "1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "54") (term "2,0,2,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,2,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,2,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "2,0,2,0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "54") (term "0,2,0,2,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,2,0,1,0,1,0"))
                           (rule "applyEq" (formula "54") (term "0,1,1,0,0") (ifseqformula "10"))
                           (rule "inEqSimp_commuteGeq" (formula "54") (term "1,1,0,0"))
                           (rule "applyEq" (formula "54") (term "1,0,1,1,0,0,0") (ifseqformula "46"))
                           (rule "add_zero_right" (formula "54") (term "0,1,1,0,0,0"))
                           (rule "applyEq" (formula "54") (term "0,0,1,0,0") (ifseqformula "48"))
                           (rule "qeq_literals" (formula "54") (term "0,1,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "applyEq" (formula "54") (term "1,0,0,0,0,0") (ifseqformula "10"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                           (rule "qeq_literals" (formula "54") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "applyEq" (formula "54") (term "0,0,0,0,0") (ifseqformula "46"))
                           (rule "qeq_literals" (formula "54") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "48"))
                           (rule "leq_literals" (formula "54") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "applyEq" (formula "54") (term "0,1,0,0,0") (ifseqformula "10"))
                           (rule "mul_literals" (formula "54") (term "1,0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0"))
                           (rule "leq_literals" (formula "54") (term "0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "applyEq" (formula "54") (term "1,0,0,0,0,2,0,1,0,0") (ifseqformula "46"))
                           (rule "add_zero_right" (formula "54") (term "0,0,0,0,2,0,1,0,0"))
                           (rule "applyEq" (formula "54") (term "0,1,0,2,0,1,0,0") (ifseqformula "46"))
                           (rule "add_zero_left" (formula "54") (term "1,0,2,0,1,0,0"))
                           (rule "applyEq" (formula "54") (term "1,0,2,0,2,0,1,0,0") (ifseqformula "46"))
                           (rule "add_zero_right" (formula "54") (term "0,2,0,2,0,1,0,0"))
                           (rule "applyEq" (formula "54") (term "0,1,0,0,1,0,0,0") (ifseqformula "48"))
                           (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "54") (term "0,1,0,0,0"))
                           (rule "applyEq" (formula "54") (term "0,0,2,0,2,0,1,0,0") (ifseqformula "10"))
                           (rule "mul_literals" (formula "54") (term "0,2,0,2,0,1,0,0"))
                           (rule "applyEq" (formula "54") (term "0,1,0,0,0,0,2,0,1,0,0") (ifseqformula "10"))
                           (rule "mul_literals" (formula "54") (term "1,0,0,0,0,2,0,1,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0,2,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,2,0,1,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,0,0,2,0,1,0,0"))
                           (rule "nnf_imp2or" (formula "54") (term "0,0"))
                           (rule "nnf_notAnd" (formula "54") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "54") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "54") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "54") (term "0,0,0,0"))
                           (rule "times_zero_1" (formula "54") (term "1,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "54") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "54") (term "1,0,0,0,0"))
                           (rule "inEqSimp_or_antiSymm0" (formula "54") (term "0,0,0"))
                           (rule "add_literals" (formula "54") (term "1,0,1,0,0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_isEmpty_1,savedHeapBefore_isEmpty_1"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "returnUnfold" (formula "50") (term "1") (inst "#v0=x_1"))
                           (rule "variableDeclarationAssign" (formula "50") (term "1"))
                           (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_17"))
                           (rule "compound_equality_comparison_1" (formula "50") (term "1") (inst "#v0=x_18"))
                           (rule "variableDeclarationAssign" (formula "50") (term "1"))
                           (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_18"))
                           (rule "assignment_read_attribute_this" (formula "50"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "replaceKnownSelect_taclet54_0" (formula "50") (term "0,1,0"))
                           (rule "applyEq" (formula "50") (term "0,1,0") (ifseqformula "48"))
                           (rule "equality_comparison_simple" (formula "50") (term "1"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "equal_literals" (formula "50") (term "0,0,1,0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "methodCallReturn" (formula "50") (term "1"))
                           (rule "assignment" (formula "50") (term "1"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "methodCallEmpty" (formula "50") (term "1"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "emptyModality" (formula "50") (term "1"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "notRight" (formula "50"))
                           (rule "eqSymm" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "allRight" (formula "54") (inst "sk=i_3"))
                           (rule "orRight" (formula "54"))
                           (rule "notRight" (formula "54"))
                           (rule "replace_known_left" (formula "55") (term "0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "applyEqRigid" (formula "55") (term "1,0,2,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "55") (term "0,0,0,2,0") (ifseqformula "1"))
                           (rule "leq_literals" (formula "55") (term "0,0,2,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "replaceKnownSelect_taclet55_0" (formula "55") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet56_0" (formula "55") (term "0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "closeTrue" (formula "55"))
                        )
                        (branch "Null reference (b = null)"
                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "52")))
                           (rule "closeTrue" (formula "53"))
                        )
                     )
                     (branch "Assertion (x_16) Failure"
                        (builtin "One Step Simplification" (formula "54"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Exceptional Post (pop)"
                     (builtin "One Step Simplification" (formula "43"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "43") (term "0,1,0,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "43") (term "0,1,0,0,1,1"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "43") (term "0,2,1,0,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "43") (term "0,2,1,0,0,1,1"))
                     (rule "replaceKnownSelect_taclet39_0" (formula "43") (term "1,1,0,1,1,0,1,1"))
                     (rule "replaceKnownSelect_taclet42_0" (formula "43") (term "0,2,1,0,1,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "43") (term "1,1,0,1,1,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "43") (term "0,2,1,0,1,0,1,1"))
                     (rule "replaceKnownSelect_taclet42_0" (formula "43") (term "0,2,1,0,1,1,0,1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "43") (term "0,2,1,0,1,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "43") (term "2,1,0,1,0,1,1"))
                     (rule "add_literals" (formula "43") (term "2,1,0,1,0,1,1"))
                     (rule "andLeft" (formula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "1,0") (ifseqformula "43"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0") (ifseqformula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,1,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,1,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,1,0") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,0,1,0") (ifseqformula "4"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "44"))
                     (rule "andLeft" (formula "46"))
                     (rule "notLeft" (formula "44"))
                     (rule "close" (formula "48") (ifseqformula "47"))
                  )
                  (branch "Pre (pop)"
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "wellFormedAnonEQ" (formula "45") (term "1") (ifseqformula "36"))
                     (rule "wellFormedAnonEQ" (formula "45") (term "0,1") (ifseqformula "27"))
                     (rule "wellFormedAnonEQ" (formula "45") (term "0,0,1") (ifseqformula "21"))
                     (rule "wellFormedAnonEQ" (formula "45") (term "0,0,0,1") (ifseqformula "14"))
                     (rule "wellFormedAnonEQ" (formula "45") (term "0,0,0,0,1") (ifseqformula "4"))
                     (rule "replace_known_left" (formula "45") (term "1,0,1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "1")) (ifInst ""  (formula "3")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "35")))
                     (rule "Query_axiom_for_isEmpty_in_RingBuffer" (formula "45") (term "0,0,0") (inst "isEmpty_sk=isEmpty_sk_1") (inst "#self=r") (inst "#res=x") (ifseqformula "6"))
                     (rule "eqSymm" (formula "1") (term "0,1"))
                     (rule "boxToDiamond" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "commute_and" (formula "46"))
                     (rule "Class_invariant_axiom_for_RingBuffer" (formula "46") (term "0") (inst "i=i") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "replaceKnownSelect_taclet41_0" (formula "46") (term "0,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet41_0" (formula "46") (term "1,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet42_0" (formula "46") (term "0,1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet39_0" (formula "46") (term "1,1,1,0,1,0"))
                     (rule "replaceKnownSelect_taclet39_0" (formula "46") (term "0,1,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet41_0" (formula "46") (term "1,1,0,0,1,0"))
                     (rule "replaceKnownSelect_taclet42_0" (formula "46") (term "1,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "46") (term "0,0,1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "46") (term "0,1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "46") (term "1,1,1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "46") (term "0,1,1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "46") (term "1,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "46") (term "0,0,1,0,1,0"))
                     (rule "replaceKnownSelect_taclet41_0" (formula "46") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet39_0" (formula "46") (term "0,0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet39_0" (formula "46") (term "0,1,1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet39_0" (formula "46") (term "0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet37_0" (formula "46") (term "0,0,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "46") (term "0,0,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "46") (term "0,1,1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet42_0" (formula "46") (term "0,2,0,2,1,1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "46") (term "0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet38_0" (formula "46") (term "0,0,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "46") (term "0,2,0,2,1,1,0,1,0"))
                     (rule "translateJavaAddInt" (formula "46") (term "2,0,2,1,1,0,1,0"))
                     (rule "leq_literals" (formula "46") (term "0,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "43")))
                     (rule "inEqSimp_gtToGeq" (formula "46") (term "1,0,0,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,1,0"))
                     (rule "lenOfSeqConcat" (formula "46") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0,0,0"))
                     (rule "eqSymm" (formula "46") (term "0,0,0,0,0"))
                     (rule "replace_known_left" (formula "46") (term "0,0,0,0,0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "Axiom_def_modulo" (formula "46") (term "0,2,1,1,0,1,0") (ifseqformula "6"))
                     (rule "replaceKnownSelect_taclet39_0" (formula "46") (term "0,1,0,0,2,1,1,0,1,0"))
                     (rule "replaceKnownSelect_taclet39_0" (formula "46") (term "0,1,2,0,2,1,1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "46") (term "0,1,0,0,2,1,1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet40_0" (formula "46") (term "0,1,2,0,2,1,1,0,1,0"))
                     (rule "eqSymm" (formula "46") (term "1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "46") (term "2,0,2,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,2,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,2,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "2,0,2,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,2,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,2,0,1,0,1,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0,0,2,0,1,0,1,0"))
                     (rule "applyEqRigid" (formula "46") (term "1,1,1,0,0") (ifseqformula "39"))
                     (rule "applyEq" (formula "46") (term "0,1,0,1,0,0,0") (ifseqformula "10"))
                     (rule "mul_literals" (formula "46") (term "1,0,1,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,1,0,0,0"))
                     (rule "leq_literals" (formula "46") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "applyEq" (formula "46") (term "0,0,1,0,0") (ifseqformula "39"))
                     (rule "qeq_literals" (formula "46") (term "0,1,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "applyEq" (formula "46") (term "0,1,0,0") (ifseqformula "10"))
                     (rule "qeq_literals" (formula "46") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "applyEq" (formula "46") (term "1,0,0,0") (ifseqformula "10"))
                     (rule "add_literals" (formula "46") (term "0,0,0"))
                     (rule "qeq_literals" (formula "46") (term "0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "applyEq" (formula "46") (term "0,1,0,2,0,2,0,1,0,0") (ifseqformula "10"))
                     (rule "mul_literals" (formula "46") (term "1,0,2,0,2,0,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,2,0,2,0,1,0,0"))
                     (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,2,0,1,0,0") (ifseqformula "10"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,0,0,2,0,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0,2,0,1,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,0,2,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                     (rule "getOfSeqConcat" (formula "46") (term "1,1,0,0"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "eqSymm" (formula "46") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "46") (term "1,2,0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,1,2,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "46") (term "1,2,0,1,0,0"))
                     (rule "getOfSeqSingleton" (formula "46") (term "1,0,1,0,0"))
                     (rule "castDel" (formula "46") (term "1,1,0,1,0,0"))
                     (rule "castDel" (formula "46") (term "2,1,0,1,0,0"))
                     (rule "getOfSeqSingleton" (formula "46") (term "2,0,1,0,0"))
                     (rule "castDel" (formula "46") (term "2,2,0,1,0,0"))
                     (rule "castDel" (formula "46") (term "1,2,0,1,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "46") (term "0,2,0,1,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,2,0,1,0,0"))
                     (rule "nnf_imp2or" (formula "46") (term "0,0"))
                     (rule "nnf_notAnd" (formula "46") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                     (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "notRight" (formula "46"))
                     (rule "applyEqRigid" (formula "43") (term "1,0,0,1") (ifseqformula "1"))
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "39") (inst "iv=iv"))
                     (rule "andLeft" (formula "39"))
                     (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                     (rule "lenOfSeqConcat" (formula "39") (term "1"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "add_literals" (formula "39") (term "1"))
                     (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "41"))
                     (rule "lenOfSeqConcat" (formula "39") (term "0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "add_literals" (formula "39") (term "0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "true_left" (formula "39"))
                     (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                     (rule "lenOfSeqConcat" (formula "39") (term "0,1,0,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "add_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "true_left" (formula "39"))
                     (rule "ifthenelse_to_or_left" (formula "42") (term "1,0"))
                     (rule "eqSymm" (formula "42") (term "1,1,1,0"))
                     (rule "eqSymm" (formula "42") (term "1,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "42") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,1,0"))
                     (rule "cnf_rightDist" (formula "42") (term "0"))
                     (rule "distr_forallAnd" (formula "42"))
                     (rule "andLeft" (formula "42"))
                     (rule "commute_or_2" (formula "43") (term "0"))
                     (rule "shift_paren_or" (formula "42") (term "0"))
                     (rule "commute_or_2" (formula "42") (term "0,0"))
                     (rule "inEqSimp_or_antiSymm0" (formula "42") (term "0,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "add_literals" (formula "42") (term "1,0,0,0,0"))
                     (rule "commute_or" (formula "42") (term "0,0"))
                     (rule "commute_or_2" (formula "42") (term "0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "leq_literals" (formula "42") (term "0,0,2,0,1"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "qeq_literals" (formula "42") (term "0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "add_zero_right" (formula "42") (term "0,2,0"))
                     (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=arr_10"))
                     (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "46")))
                     (rule "replaceKnownSelect_taclet33_0" (formula "42") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet34_0" (formula "42") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "28"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,0,0") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,1,0,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,1,0,0") (ifseqformula "5"))
                     (rule "eqSymm" (formula "43"))
                     (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "10")))
                     (rule "hideAuxiliaryEq" (formula "43"))
                     (rule "elementOfUnion" (formula "42") (term "0,0"))
                     (rule "elementOfSingleton" (formula "42") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "equal_literals" (formula "42") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "elementOfUnion" (formula "42") (term "0,0"))
                     (rule "elementOfSingleton" (formula "42") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "elementOfSingleton" (formula "42") (term "0,0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "true_left" (formula "42"))
                     (rule "shift_paren_or" (formula "42") (term "0,0"))
                     (rule "commute_or" (formula "42") (term "0,0,0"))
                     (rule "inEqSimp_or_antiSymm1" (formula "42") (term "0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "add_zero_right" (formula "42") (term "1,0,1,0,0"))
                     (rule "commute_or_2" (formula "42") (term "0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "leq_literals" (formula "42") (term "0,0,2,0,1"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "add_literals" (formula "42") (term "0,2,0,1"))
                     (rule "leq_literals" (formula "42") (term "0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=arr_11"))
                     (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "45")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "28"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,0,0") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,1,0,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0,0,1,0,0") (ifseqformula "5"))
                     (rule "eqSymm" (formula "43"))
                     (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "43"))
                     (rule "hideAuxiliaryEq" (formula "43"))
                     (rule "replace_known_left" (formula "42") (term "1,0,0,0,0,1,0,0") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "elementOfUnion" (formula "42") (term "0,0"))
                     (rule "elementOfSingleton" (formula "42") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "methodBodyExpand" (formula "43") (term "1") (newnames "heapBefore_isEmpty_0,savedHeapBefore_isEmpty_0"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "returnUnfold" (formula "43") (term "1") (inst "#v0=x_1"))
                     (rule "variableDeclarationAssign" (formula "43") (term "1"))
                     (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_14"))
                     (rule "compound_equality_comparison_1" (formula "43") (term "1") (inst "#v0=x_15"))
                     (rule "variableDeclarationAssign" (formula "43") (term "1"))
                     (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_15"))
                     (rule "assignment_read_attribute_this" (formula "43"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "replaceKnownSelect_taclet41_0" (formula "43") (term "0,1,0"))
                     (rule "applyEqRigid" (formula "43") (term "0,1,0") (ifseqformula "40"))
                     (rule "equality_comparison_simple" (formula "43") (term "1"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "equal_literals" (formula "43") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "methodCallReturn" (formula "43") (term "1"))
                     (rule "assignment" (formula "43") (term "1"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "methodCallEmpty" (formula "43") (term "1"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "emptyModality" (formula "43") (term "1"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "closeTrue" (formula "43"))
                  )
                  (branch "Null reference (b = null)"
                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "44")))
                     (rule "closeTrue" (formula "45"))
                  )
               )
               (branch "Exceptional Post (push)"
                  (builtin "One Step Simplification" (formula "36"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "36") (term "0,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "36") (term "0,1,1,0,0"))
                  (rule "replaceKnownSelect_taclet26_0" (formula "36") (term "0,1,0,0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "36") (term "0,1,0,0,1,1"))
                  (rule "replaceKnownSelect_taclet28_0" (formula "36") (term "0,2,0,1,1,1,0,0"))
                  (rule "replaceKnownSelect_taclet32_0" (formula "36") (term "1,2,0,1,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "36") (term "0,2,0,1,1,1,0,0"))
                  (rule "translateJavaAddInt" (formula "36") (term "2,0,1,1,1,0,0"))
                  (rule "andLeft" (formula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0") (ifseqformula "27"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,1,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,1,0") (ifseqformula "14"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0,1,0") (ifseqformula "4"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "38"))
                  (rule "andLeft" (formula "37"))
                  (rule "andLeft" (formula "39"))
                  (rule "notLeft" (formula "37"))
                  (rule "close" (formula "41") (ifseqformula "40"))
               )
               (branch "Pre (push)"
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "wellFormedAnonEQ" (formula "38") (term "1") (ifseqformula "27"))
                  (rule "wellFormedAnonEQ" (formula "38") (term "0,1") (ifseqformula "21"))
                  (rule "wellFormedAnonEQ" (formula "38") (term "0,0,1") (ifseqformula "14"))
                  (rule "wellFormedAnonEQ" (formula "38") (term "0,0,0,1") (ifseqformula "4"))
                  (rule "replace_known_left" (formula "38") (term "1,0,1") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "1")) (ifInst ""  (formula "3")) (ifInst ""  (formula "13")) (ifInst ""  (formula "26")))
                  (rule "Query_axiom_for_isFull_in_RingBuffer" (formula "38") (term "0,0,0") (inst "isFull_sk=isFull_sk_2") (inst "#self=r") (inst "#res=x") (ifseqformula "6"))
                  (rule "eqSymm" (formula "1") (term "0,1"))
                  (rule "boxToDiamond" (formula "1") (term "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "commute_and" (formula "39"))
                  (rule "Class_invariant_axiom_for_RingBuffer" (formula "39") (term "0") (inst "i=i") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "replaceKnownSelect_taclet32_0" (formula "39") (term "0,1,1,0,0"))
                  (rule "replaceKnownSelect_taclet32_0" (formula "39") (term "1,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "39") (term "1,1,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "39") (term "0,1,1,1,0,0"))
                  (rule "replaceKnownSelect_taclet28_0" (formula "39") (term "0,1,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet28_0" (formula "39") (term "1,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet32_0" (formula "39") (term "1,1,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet26_0" (formula "39") (term "0,0,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "39") (term "1,1,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "39") (term "0,1,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "39") (term "0,1,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "39") (term "1,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "39") (term "0,0,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet32_0" (formula "39") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "39") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "39") (term "0,1,1,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet26_0" (formula "39") (term "0,0,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "39") (term "0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "39") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "39") (term "0,1,1,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet28_0" (formula "39") (term "0,2,0,2,1,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "39") (term "0,0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "39") (term "0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "39") (term "0,2,0,2,1,1,0,1,0"))
                  (rule "translateJavaAddInt" (formula "39") (term "2,0,2,1,1,0,1,0"))
                  (rule "eqSymm" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "39") (term "0,0,0,0,0,0,0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "32")))
                  (rule "inEqSimp_gtToGeq" (formula "39") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,1,0,0,0"))
                  (rule "getOfSeqSingleton" (formula "39") (term "0,1,0,1,0"))
                  (rule "castDel" (formula "39") (term "1,0,1,0,1,0"))
                  (rule "castDel" (formula "39") (term "2,0,1,0,1,0"))
                  (rule "Axiom_def_modulo" (formula "39") (term "0,2,1,1,0,1,0") (ifseqformula "6"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "39") (term "0,1,0,0,2,1,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "39") (term "0,1,2,0,2,1,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "39") (term "0,1,0,0,2,1,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "39") (term "0,1,2,0,2,1,1,0,1,0"))
                  (rule "eqSymm" (formula "39") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "39") (term "2,0,2,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,2,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,2,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "39") (term "2,0,2,0,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "39") (term "0,2,0,2,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,2,0,1,0,1,0"))
                  (rule "applyEq" (formula "39") (term "0,0,1,0,0") (ifseqformula "32"))
                  (rule "qeq_literals" (formula "39") (term "0,1,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "applyEq" (formula "39") (term "0,1,0,0") (ifseqformula "10"))
                  (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0"))
                  (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "10"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                  (rule "qeq_literals" (formula "39") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "applyEq" (formula "39") (term "0,1,0,0") (ifseqformula "32"))
                  (rule "leq_literals" (formula "39") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "applyEq" (formula "39") (term "1,0,1,0,0") (ifseqformula "30"))
                  (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                  (rule "applyEq" (formula "39") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "qeq_literals" (formula "39") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "applyEq" (formula "39") (term "0,1,0,0,0") (ifseqformula "10"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0"))
                  (rule "leq_literals" (formula "39") (term "0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "applyEq" (formula "39") (term "1,0,2,0,2,0,1,0,0") (ifseqformula "30"))
                  (rule "polySimp_addComm0" (formula "39") (term "0,2,0,2,0,1,0,0"))
                  (rule "applyEq" (formula "39") (term "0,1,0,2,0,1,0,0") (ifseqformula "30"))
                  (rule "applyEqRigid" (formula "39") (term "0,1,0,0,1,0,0,0") (ifseqformula "32"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,1,0,0,0"))
                  (rule "applyEq" (formula "39") (term "1,0,0,0,0,2,0,1,0,0") (ifseqformula "30"))
                  (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,2,0,1,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,0,2,0,1,0,0"))
                  (rule "applyEq" (formula "39") (term "0,1,0,2,0,2,0,1,0,0") (ifseqformula "10"))
                  (rule "mul_literals" (formula "39") (term "1,0,2,0,2,0,1,0,0"))
                  (rule "add_literals" (formula "39") (term "0,2,0,2,0,1,0,0"))
                  (rule "applyEq" (formula "39") (term "0,1,0,0,0,0,2,0,1,0,0") (ifseqformula "10"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,0,2,0,1,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,2,0,1,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,0,2,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "39") (term "0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                  (rule "inEqSimp_or_antiSymm0" (formula "39") (term "0,0,0"))
                  (rule "add_literals" (formula "39") (term "1,0,1,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "methodBodyExpand" (formula "35") (term "1") (newnames "heapBefore_isFull_1,savedHeapBefore_isFull_1"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "returnUnfold" (formula "35") (term "1") (inst "#v0=x_1"))
                  (rule "variableDeclarationAssign" (formula "35") (term "1"))
                  (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_11"))
                  (rule "compound_equality_comparison_2" (formula "35") (term "1") (inst "#v1=x_13") (inst "#v0=x_12"))
                  (rule "variableDeclarationAssign" (formula "35") (term "1"))
                  (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_12"))
                  (rule "assignment_read_attribute_this" (formula "35"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "replaceKnownSelect_taclet32_0" (formula "35") (term "0,1,0"))
                  (rule "variableDeclarationAssign" (formula "35") (term "1"))
                  (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_13"))
                  (rule "eval_order_access2" (formula "35") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "35") (term "1"))
                  (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_arr_2"))
                  (rule "assignment_read_attribute_this" (formula "35"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "replaceKnownSelect_taclet30_0" (formula "35") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "35") (term "0,1,0"))
                  (rule "assignment_read_length" (formula "35"))
                  (branch "Normal Execution (x_arr_2 != null)"
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "applyEqRigid" (formula "35") (term "0,1,0,0") (ifseqformula "32"))
                     (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "10"))
                     (rule "equality_comparison_simple" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "equal_literals" (formula "35") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "methodCallReturn" (formula "35") (term "1"))
                     (rule "assignment" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "methodCallEmpty" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "emptyModality" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "notRight" (formula "35"))
                     (rule "eqSymm" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "39") (term "0,1") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "allRight" (formula "39") (inst "sk=i_2"))
                     (rule "orRight" (formula "39"))
                     (rule "notRight" (formula "39"))
                     (rule "replace_known_left" (formula "40") (term "0,1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "applyEq" (formula "40") (term "1,1,0,2,0") (ifseqformula "1"))
                     (rule "add_zero_right" (formula "40") (term "1,0,2,0"))
                     (rule "applyEq" (formula "40") (term "0,0,0,2,0") (ifseqformula "1"))
                     (rule "leq_literals" (formula "40") (term "0,0,2,0"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "replaceKnownSelect_taclet33_0" (formula "40") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet34_0" (formula "40") (term "0"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "closeTrue" (formula "40"))
                  )
                  (branch "Null Reference (x_arr_2 = null)"
                     (rule "false_right" (formula "36"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null reference (b = null)"
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "37")))
                  (rule "closeTrue" (formula "38"))
               )
            )
            (branch "Assertion (x_10) Failure"
               (builtin "One Step Simplification" (formula "39"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (pop)"
            (builtin "One Step Simplification" (formula "27"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "replaceKnownSelect_taclet15_0" (formula "27") (term "0,1,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "27") (term "0,1,0,0,1,1"))
            (rule "replaceKnownSelect_taclet15_0" (formula "27") (term "0,2,1,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "27") (term "0,2,1,0,0,1,1"))
            (rule "replaceKnownSelect_taclet22_0" (formula "27") (term "0,2,1,0,1,0,1,1"))
            (rule "replaceKnownSelect_taclet19_0" (formula "27") (term "1,1,0,1,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "27") (term "0,2,1,0,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "27") (term "1,1,0,1,1,0,1,1"))
            (rule "replaceKnownSelect_taclet22_0" (formula "27") (term "0,2,1,0,1,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "27") (term "0,2,1,0,1,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "27") (term "2,1,0,1,0,1,1"))
            (rule "add_zero_left" (formula "27") (term "2,1,0,1,0,1,1"))
            (rule "andLeft" (formula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0") (ifseqformula "20"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,1,0") (ifseqformula "13"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0,1,0") (ifseqformula "4"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "30"))
            (rule "notLeft" (formula "28"))
            (rule "close" (formula "32") (ifseqformula "31"))
         )
         (branch "Pre (pop)"
            (builtin "One Step Simplification" (formula "29"))
            (rule "wellFormedAnonEQ" (formula "29") (term "1") (ifseqformula "20"))
            (rule "wellFormedAnonEQ" (formula "29") (term "0,1") (ifseqformula "13"))
            (rule "wellFormedAnonEQ" (formula "29") (term "0,0,1") (ifseqformula "4"))
            (rule "replace_known_left" (formula "29") (term "1,1") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")) (ifInst ""  (formula "3")) (ifInst ""  (formula "12")))
            (rule "Query_axiom_for_isEmpty_in_RingBuffer" (formula "29") (term "0,0,0") (inst "isEmpty_sk=isEmpty_sk_0") (inst "#self=r") (inst "#res=x") (ifseqformula "6"))
            (rule "eqSymm" (formula "1") (term "0,1"))
            (rule "boxToDiamond" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "commute_and" (formula "31"))
            (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv"))
            (rule "andLeft" (formula "23"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
            (rule "lenOfSeqConcat" (formula "23") (term "1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "add_literals" (formula "23") (term "1"))
            (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
            (rule "lenOfSeqConcat" (formula "23") (term "0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "add_literals" (formula "23") (term "0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "ifthenelse_to_or_right" (formula "26") (term "1,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "0,0,1,0"))
            (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "26") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,1,0"))
            (rule "cnf_rightDist" (formula "26") (term "0"))
            (rule "distr_forallAnd" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "commute_or_2" (formula "27") (term "0"))
            (rule "shift_paren_or" (formula "26") (term "0"))
            (rule "commute_or_2" (formula "26") (term "0,0"))
            (rule "inEqSimp_or_subsumption3" (formula "26") (term "0,0"))
            (rule "qeq_literals" (formula "26") (term "0,1,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "inEqSimp_or_antiSymm0" (formula "26") (term "0,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "add_literals" (formula "26") (term "1,0,0,0"))
            (rule "commute_or" (formula "26") (term "0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "leq_literals" (formula "26") (term "0,0,2,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_2"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "30")))
            (rule "replaceKnownSelect_taclet17_0" (formula "26") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet18_0" (formula "26") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,1,0,0") (ifseqformula "4"))
            (rule "eqSymm" (formula "27"))
            (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "9")))
            (rule "hideAuxiliaryEq" (formula "27"))
            (rule "elementOfUnion" (formula "26") (term "0,0"))
            (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "equal_literals" (formula "26") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "elementOfUnion" (formula "26") (term "0,0"))
            (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "elementOfSingleton" (formula "26") (term "0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "shift_paren_or" (formula "26") (term "0,0"))
            (rule "Class_invariant_axiom_for_RingBuffer" (formula "31") (term "0") (inst "i=i") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "replaceKnownSelect_taclet21_0" (formula "31") (term "1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet21_0" (formula "31") (term "0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet22_0" (formula "31") (term "0,1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet19_0" (formula "31") (term "0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet22_0" (formula "31") (term "1,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet21_0" (formula "31") (term "1,1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet15_0" (formula "31") (term "0,0,1,0,1,0"))
            (rule "replaceKnownSelect_taclet19_0" (formula "31") (term "1,1,1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "31") (term "0,1,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "31") (term "0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "31") (term "1,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "31") (term "0,0,1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "31") (term "1,1,1,0,1,0"))
            (rule "replaceKnownSelect_taclet19_0" (formula "31") (term "0,0,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet19_0" (formula "31") (term "0,1,1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet21_0" (formula "31") (term "1,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet19_0" (formula "31") (term "0,0,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet15_0" (formula "31") (term "0,0,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "31") (term "0,0,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "31") (term "0,1,1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet22_0" (formula "31") (term "0,2,0,2,1,1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "31") (term "0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "31") (term "0,0,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "31") (term "0,2,0,2,1,1,0,1,0"))
            (rule "translateJavaAddInt" (formula "31") (term "2,0,2,1,1,0,1,0"))
            (rule "leq_literals" (formula "31") (term "0,1,0,0,0"))
            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "28")))
            (rule "add_zero_left" (formula "31") (term "2,0,2,1,1,0,1,0"))
            (rule "inEqSimp_gtToGeq" (formula "31") (term "1,0,0,0,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0,0"))
            (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "31") (term "0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
            (rule "lenOfSeqConcat" (formula "31") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
            (rule "eqSymm" (formula "31") (term "0,0,0,0,0"))
            (rule "replace_known_left" (formula "31") (term "0,0,0,0,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "Axiom_def_modulo" (formula "31") (term "0,2,1,1,0,1,0") (ifseqformula "6"))
            (rule "replaceKnownSelect_taclet19_0" (formula "31") (term "0,1,0,0,2,1,1,0,1,0"))
            (rule "replaceKnownSelect_taclet19_0" (formula "31") (term "0,1,2,0,2,1,1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "31") (term "0,1,0,0,2,1,1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_0" (formula "31") (term "0,1,2,0,2,1,1,0,1,0"))
            (rule "eqSymm" (formula "31") (term "1,0,1,0"))
            (rule "polySimp_elimSub" (formula "31") (term "2,0,2,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,2,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,2,0,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "31") (term "2,0,2,0,1,0,1,0"))
            (rule "applyEq" (formula "31") (term "0,0,1,0,0") (ifseqformula "24"))
            (rule "qeq_literals" (formula "31") (term "0,1,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "31") (term "0,1,0,0") (ifseqformula "10"))
            (rule "qeq_literals" (formula "31") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "applyEq" (formula "31") (term "1,0,0,0,0") (ifseqformula "10"))
            (rule "add_literals" (formula "31") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "31") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "applyEq" (formula "31") (term "0,1,0,0,0") (ifseqformula "10"))
            (rule "mul_literals" (formula "31") (term "1,0,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0"))
            (rule "leq_literals" (formula "31") (term "0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,0") (ifseqformula "24"))
            (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,1,0,0,0"))
            (rule "applyEq" (formula "31") (term "0,1,0,0,0,0,2,0,1,0,0") (ifseqformula "10"))
            (rule "mul_literals" (formula "31") (term "1,0,0,0,0,2,0,1,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,0,2,0,1,0,0"))
            (rule "applyEq" (formula "31") (term "0,0,2,0,2,0,1,0,0") (ifseqformula "10"))
            (rule "mul_literals" (formula "31") (term "0,2,0,2,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
            (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,2,0,1,0,0"))
            (rule "mul_literals" (formula "31") (term "1,0,0,2,0,1,0,0"))
            (rule "getOfSeqConcat" (formula "31") (term "1,1,0,0"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "eqSymm" (formula "31") (term "1,0,0"))
            (rule "polySimp_elimSub" (formula "31") (term "1,2,0,1,0,0"))
            (rule "mul_literals" (formula "31") (term "1,1,2,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0,0"))
            (rule "mul_literals" (formula "31") (term "1,0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "31") (term "0,0,0,1,0,0"))
            (rule "eqSymm" (formula "31") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "31") (term "1,2,1,1,0,0"))
            (rule "getOfSeqSingleton" (formula "31") (term "1,1,1,0,0"))
            (rule "castDel" (formula "31") (term "2,1,1,1,0,0"))
            (rule "castDel" (formula "31") (term "1,1,1,1,0,0"))
            (rule "getOfSeqSingleton" (formula "31") (term "2,1,1,0,0"))
            (rule "castDel" (formula "31") (term "1,2,1,1,0,0"))
            (rule "castDel" (formula "31") (term "2,2,1,1,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "31") (term "0,2,1,1,0,0"))
            (rule "mul_literals" (formula "31") (term "1,0,2,1,1,0,0"))
            (rule "nnf_imp2or" (formula "31") (term "0,0"))
            (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0"))
            (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0"))
            (rule "mul_literals" (formula "31") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "31") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0"))
            (rule "mul_literals" (formula "31") (term "1,1,0,0,0"))
            (rule "commute_or" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_or_antiSymm1" (formula "26") (term "0,0"))
            (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "add_zero_right" (formula "26") (term "1,0,1,0,0"))
            (rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_isEmpty,savedHeapBefore_isEmpty"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "commute_or_2" (formula "26") (term "0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "add_literals" (formula "26") (term "2,0,2,0,1"))
            (rule "leq_literals" (formula "26") (term "0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "leq_literals" (formula "26") (term "0,0,2,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_3"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0,0") (ifseqformula "14"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,1,0,0") (ifseqformula "4"))
            (rule "eqSymm" (formula "27"))
            (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "27"))
            (rule "hideAuxiliaryEq" (formula "27"))
            (rule "replace_known_left" (formula "26") (term "1,0,0,1,0,0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "elementOfUnion" (formula "26") (term "0,0"))
            (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "returnUnfold" (formula "27") (term "1") (inst "#v0=x_1"))
            (rule "variableDeclarationAssign" (formula "27") (term "1"))
            (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_8"))
            (rule "compound_equality_comparison_1" (formula "27") (term "1") (inst "#v0=x_9"))
            (rule "variableDeclarationAssign" (formula "27") (term "1"))
            (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_9"))
            (rule "assignment_read_attribute_this" (formula "27"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "replaceKnownSelect_taclet21_0" (formula "27") (term "0,1,0"))
            (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "24"))
            (rule "equality_comparison_simple" (formula "27") (term "1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "equal_literals" (formula "27") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "methodCallReturn" (formula "27") (term "1"))
            (rule "assignment" (formula "27") (term "1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "methodCallEmpty" (formula "27") (term "1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "emptyModality" (formula "27") (term "1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "notRight" (formula "27"))
            (rule "eqSymm" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "27"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "allRight" (formula "31") (inst "sk=i_1"))
            (rule "orRight" (formula "31"))
            (rule "orRight" (formula "31"))
            (rule "inEqSimp_geqRight" (formula "32"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_leqRight" (formula "32"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "replace_known_left" (formula "33") (term "0,0,2,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "eqSymm" (formula "33"))
            (rule "pullOutSelect" (formula "33") (term "1") (inst "selectSK=arr_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "7"))
            (rule "replace_known_left" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "ifthenelse_split" (formula "36") (term "0"))
            (branch "i_1 <= 0 TRUE"
               (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "1"))
               (rule "add_zero_left" (formula "4") (term "0,0,0,0"))
               (rule "mul_literals" (formula "4") (term "0,0,0,0"))
               (rule "qeq_literals" (formula "4") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
               (rule "leq_literals" (formula "5") (term "0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
               (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "35"))
               (rule "eqSymm" (formula "35"))
               (rule "applyEqRigid" (formula "35") (term "0,2,0") (ifseqformula "3"))
               (rule "close" (formula "35") (ifseqformula "23"))
            )
            (branch "i_1 <= 0 FALSE"
               (rule "inEqSimp_leqRight" (formula "36"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "3") (term "0,0") (ifseqformula "1"))
               (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
               (rule "leq_literals" (formula "3") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
               (rule "leq_literals" (formula "4") (term "0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "4"))
               (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "eqSymm" (formula "35"))
               (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
               (rule "leq_literals" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "applyEqRigid" (formula "3") (term "0,2,2,0") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "3") (term "0,2,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "34") (term "0,2,0") (ifseqformula "1"))
               (rule "close" (formula "34") (ifseqformula "29"))
            )
         )
         (branch "Null reference (b = null)"
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")))
            (rule "closeTrue" (formula "29"))
         )
      )
      (branch "Exceptional Post (push)"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "replaceKnownSelect_taclet10_0" (formula "20") (term "0,1,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "20") (term "0,1,1,0,0"))
         (rule "replaceKnownSelect_taclet8_0" (formula "20") (term "0,1,0,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "20") (term "0,1,0,0,1,1"))
         (rule "replaceKnownSelect_taclet13_0" (formula "20") (term "0,2,0,1,1,1,0,0"))
         (rule "replaceKnownSelect_taclet12_0" (formula "20") (term "1,2,0,1,1,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "20") (term "0,2,0,1,1,1,0,0"))
         (rule "translateJavaAddInt" (formula "20") (term "2,0,1,1,1,0,0"))
         (rule "add_zero_left" (formula "20") (term "2,0,1,1,1,0,0"))
         (rule "andLeft" (formula "20"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,0") (ifseqformula "20"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,0") (ifseqformula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1,0") (ifseqformula "4"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "21"))
         (rule "close" (formula "25") (ifseqformula "24"))
      )
      (branch "Pre (push)"
         (builtin "One Step Simplification" (formula "22"))
         (rule "wellFormedAnonEQ" (formula "22") (term "1") (ifseqformula "13"))
         (rule "wellFormedAnonEQ" (formula "22") (term "0,1") (ifseqformula "4"))
         (rule "replace_known_left" (formula "22") (term "1,1") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")) (ifInst ""  (formula "3")))
         (rule "Query_axiom_for_isFull_in_RingBuffer" (formula "22") (term "0,0,0") (inst "isFull_sk=isFull_sk_1") (inst "#self=r") (inst "#res=x") (ifseqformula "6"))
         (rule "eqSymm" (formula "1") (term "0,1"))
         (rule "boxToDiamond" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "commute_or" (formula "18") (term "0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "leq_literals" (formula "18") (term "0,0,2,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "21")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,0,0") (ifseqformula "4"))
         (rule "eqSymm" (formula "19"))
         (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
         (rule "hideAuxiliaryEq" (formula "19"))
         (rule "elementOfUnion" (formula "18") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "commute_and" (formula "23"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "15") (inst "iv=iv"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "getOfSeqSingleton" (formula "16") (term "1,1,0"))
         (rule "castDel" (formula "16") (term "1,1,1,0"))
         (rule "castDel" (formula "16") (term "2,1,1,0"))
         (rule "eqSymm" (formula "16") (term "1,0"))
         (rule "applyEq" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,1,0,0"))
         (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "16"))
         (rule "getOfSeqSingleton" (formula "15") (term "1,1,0"))
         (rule "castDel" (formula "15") (term "2,1,1,0"))
         (rule "castDel" (formula "15") (term "1,1,1,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "Class_invariant_axiom_for_RingBuffer" (formula "23") (term "0") (inst "i=i") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "replaceKnownSelect_taclet12_0" (formula "23") (term "1,0,1,0,0"))
         (rule "replaceKnownSelect_taclet12_0" (formula "23") (term "0,1,1,0,0"))
         (rule "replaceKnownSelect_taclet13_0" (formula "23") (term "0,1,1,0,0,0"))
         (rule "replaceKnownSelect_taclet10_0" (formula "23") (term "0,1,1,1,0,0"))
         (rule "replaceKnownSelect_taclet12_0" (formula "23") (term "1,1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet10_0" (formula "23") (term "1,1,1,0,1,0"))
         (rule "replaceKnownSelect_taclet13_0" (formula "23") (term "1,0,1,0,0,0"))
         (rule "replaceKnownSelect_taclet8_0" (formula "23") (term "0,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "23") (term "0,1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "23") (term "0,1,1,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "23") (term "1,1,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "23") (term "1,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "23") (term "0,0,1,0,1,0"))
         (rule "replaceKnownSelect_taclet12_0" (formula "23") (term "1,1,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet10_0" (formula "23") (term "0,1,1,1,0,0,0"))
         (rule "replaceKnownSelect_taclet10_0" (formula "23") (term "0,0,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet10_0" (formula "23") (term "0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet8_0" (formula "23") (term "0,0,1,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "23") (term "0,1,1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "23") (term "0,0,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet13_0" (formula "23") (term "0,2,0,2,1,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "23") (term "0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "23") (term "0,0,1,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
         (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "23") (term "0,2,0,2,1,1,0,1,0"))
         (rule "translateJavaAddInt" (formula "23") (term "2,0,2,1,1,0,1,0"))
         (rule "leq_literals" (formula "23") (term "0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "add_zero_left" (formula "23") (term "2,0,2,1,1,0,1,0"))
         (rule "eqSymm" (formula "23") (term "0,0,0,0,0"))
         (rule "replace_known_left" (formula "23") (term "0,0,0,0,0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "23") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "1,1,0,0"))
         (rule "getOfSeqSingleton" (formula "23") (term "0,1,0,1,0"))
         (rule "castDel" (formula "23") (term "2,0,1,0,1,0"))
         (rule "castDel" (formula "23") (term "1,0,1,0,1,0"))
         (rule "Axiom_def_modulo" (formula "23") (term "0,2,1,1,0,1,0") (ifseqformula "6"))
         (rule "replaceKnownSelect_taclet10_0" (formula "23") (term "0,1,2,0,2,1,1,0,1,0"))
         (rule "replaceKnownSelect_taclet10_0" (formula "23") (term "0,1,0,0,2,1,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "23") (term "0,1,2,0,2,1,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "23") (term "0,1,0,0,2,1,1,0,1,0"))
         (rule "eqSymm" (formula "23") (term "1,0,1,0"))
         (rule "polySimp_elimSub" (formula "23") (term "2,0,2,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,2,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,2,0,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "23") (term "2,0,2,0,1,0,1,0"))
         (rule "applyEq" (formula "23") (term "0,0,1,0,0") (ifseqformula "17"))
         (rule "qeq_literals" (formula "23") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "9"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
         (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "applyEq" (formula "23") (term "0,1,0,0") (ifseqformula "9"))
         (rule "qeq_literals" (formula "23") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "applyEq" (formula "23") (term "0,1,0,0,0") (ifseqformula "9"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0"))
         (rule "leq_literals" (formula "23") (term "0,0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "applyEq" (formula "23") (term "0,0,2,0,2,0,1,0,0") (ifseqformula "9"))
         (rule "mul_literals" (formula "23") (term "0,2,0,2,0,1,0,0"))
         (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0") (ifseqformula "17"))
         (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,1,0,0,0"))
         (rule "applyEq" (formula "23") (term "0,1,0,0,0,0,2,0,1,0,0") (ifseqformula "9"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0,0,2,0,1,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,2,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,2,0,1,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,2,0,1,0,0"))
         (rule "nnf_imp2or" (formula "23") (term "0,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0,0"))
         (rule "inEqSimp_or_antiSymm0" (formula "23") (term "0,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "add_literals" (formula "23") (term "1,0,0,0,0"))
         (rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_isFull_0,savedHeapBefore_isFull_0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "returnUnfold" (formula "19") (term "1") (inst "#v0=x_1"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_5"))
         (rule "compound_equality_comparison_2" (formula "19") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_6"))
         (rule "assignment_read_attribute_this" (formula "19"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "replaceKnownSelect_taclet12_0" (formula "19") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_7"))
         (rule "eval_order_array_access6" (formula "19") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_1"))
         (rule "assignment_read_attribute_this" (formula "19"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "replaceKnownSelect_taclet10_0" (formula "19") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "19") (term "0,1,0"))
         (rule "assignment_read_length" (formula "19"))
         (branch "Normal Execution (x_arr_1 != null)"
            (builtin "One Step Simplification" (formula "19"))
            (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "17"))
            (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "9"))
            (rule "equality_comparison_simple" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "equal_literals" (formula "19") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "methodCallReturn" (formula "19") (term "1"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "methodCallEmpty" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "emptyModality" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "notRight" (formula "19"))
            (rule "eqSymm" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "allRight" (formula "23") (inst "sk=i_0"))
            (rule "orRight" (formula "23"))
            (rule "notRight" (formula "23"))
            (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "applyEqRigid" (formula "24") (term "1,0,2,0") (ifseqformula "1"))
            (rule "applyEqRigid" (formula "24") (term "1,2,0,2,0") (ifseqformula "1"))
            (rule "add_literals" (formula "24") (term "2,0,2,0"))
            (rule "applyEq" (formula "24") (term "0,0,0,2,0") (ifseqformula "1"))
            (rule "leq_literals" (formula "24") (term "0,0,2,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "replaceKnownSelect_taclet15_0" (formula "24") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "24") (term "0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "closeTrue" (formula "24"))
         )
         (branch "Null Reference (x_arr_1 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null reference (b = null)"
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")))
         (rule "closeTrue" (formula "22"))
      )
   )
   (branch "Exceptional Post (push)"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "replaceKnownSelect_taclet4_0" (formula "13") (term "0,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "13") (term "0,1,1,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "13") (term "0,1,0,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "13") (term "0,1,0,0,1,1"))
      (rule "replaceKnownSelect_taclet6_0" (formula "13") (term "1,2,0,1,1,1,0,0"))
      (rule "replaceKnownSelect_taclet2_0" (formula "13") (term "0,2,0,1,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "13") (term "1,2,0,1,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "13") (term "0,2,0,1,1,1,0,0"))
      (rule "translateJavaAddInt" (formula "13") (term "2,0,1,1,1,0,0"))
      (rule "andLeft" (formula "13"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,0") (ifseqformula "4"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "16"))
      (rule "notLeft" (formula "14"))
      (rule "close" (formula "18") (ifseqformula "17"))
   )
   (branch "Pre (push)"
      (builtin "One Step Simplification" (formula "15"))
      (rule "wellFormedAnonEQ" (formula "15") (term "1") (ifseqformula "4"))
      (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "3")))
      (rule "Query_axiom_for_isFull_in_RingBuffer" (formula "15") (term "0,0,0") (inst "isFull_sk=isFull_sk_0") (inst "#self=r") (inst "#res=x") (ifseqformula "6"))
      (rule "eqSymm" (formula "1") (term "0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "commute_and" (formula "16"))
      (rule "Class_invariant_axiom_for_RingBuffer" (formula "16") (term "0") (inst "i=i") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "replaceKnownSelect_taclet6_0" (formula "16") (term "1,0,1,0,0"))
      (rule "replaceKnownSelect_taclet6_0" (formula "16") (term "0,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "16") (term "1,0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "16") (term "0,1,1,0,0"))
      (rule "replaceKnownSelect_taclet4_0" (formula "16") (term "0,1,1,1,0,0"))
      (rule "replaceKnownSelect_taclet6_0" (formula "16") (term "1,1,0,0,1,0"))
      (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "0,1,1,0,0,0"))
      (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "1,0,1,0,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "16") (term "0,0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet4_0" (formula "16") (term "1,1,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "16") (term "0,1,1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "16") (term "1,1,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "16") (term "0,1,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "16") (term "1,0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "16") (term "0,0,1,0,1,0"))
      (rule "replaceKnownSelect_taclet6_0" (formula "16") (term "1,1,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet4_0" (formula "16") (term "0,0,1,0,0,0,0"))
      (rule "replaceKnownSelect_taclet4_0" (formula "16") (term "0,1,1,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "16") (term "1,1,1,0,1,0"))
      (rule "replaceKnownSelect_taclet4_0" (formula "16") (term "0,0,0,0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "16") (term "0,0,1,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "16") (term "1,1,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "16") (term "0,0,1,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "16") (term "0,1,1,1,0,0,0"))
      (rule "replaceKnownSelect_taclet2_0" (formula "16") (term "0,2,0,2,1,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "16") (term "0,0,0,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "16") (term "0,0,1,0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "16") (term "0,2,0,2,1,1,0,1,0"))
      (rule "translateJavaAddInt" (formula "16") (term "2,0,2,1,1,0,1,0"))
      (rule "replace_known_right" (formula "16") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,1,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0,0,0"))
      (rule "Axiom_def_modulo" (formula "16") (term "0,2,1,1,0,1,0") (ifseqformula "6"))
      (rule "replaceKnownSelect_taclet4_0" (formula "16") (term "0,1,0,0,2,1,1,0,1,0"))
      (rule "replaceKnownSelect_taclet4_0" (formula "16") (term "0,1,2,0,2,1,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "16") (term "0,1,0,0,2,1,1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "16") (term "0,1,2,0,2,1,1,0,1,0"))
      (rule "eqSymm" (formula "16") (term "1,0,1,0"))
      (rule "polySimp_elimSub" (formula "16") (term "2,0,2,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,2,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,2,0,1,0,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "2,0,2,0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,2,0,1,0,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,2,0,1,0,1,0"))
      (rule "applyEq" (formula "16") (term "0,1,1,0,0") (ifseqformula "9"))
      (rule "inEqSimp_commuteGeq" (formula "16") (term "1,1,0,0"))
      (rule "applyEq" (formula "16") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "eqSymm" (formula "16") (term "0,0,0,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,0,0,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "applyEq" (formula "16") (term "0,1,1,0,1,0") (ifseqformula "7"))
      (rule "applyEq" (formula "16") (term "0,1,0,1,1,0,0,0") (ifseqformula "9"))
      (rule "mul_literals" (formula "16") (term "1,0,1,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,1,1,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,1,1,0,0,0"))
      (rule "applyEq" (formula "16") (term "0,1,1,0,0") (ifseqformula "10"))
      (rule "leq_literals" (formula "16") (term "1,1,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "applyEq" (formula "16") (term "1,0,1,1,0,0,0") (ifseqformula "8"))
      (rule "add_zero_right" (formula "16") (term "0,1,1,0,0,0"))
      (rule "leq_literals" (formula "16") (term "1,1,0,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "8"))
      (rule "qeq_literals" (formula "16") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "16") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "applyEq" (formula "16") (term "1,0,0,0") (ifseqformula "9"))
      (rule "add_literals" (formula "16") (term "0,0,0"))
      (rule "qeq_literals" (formula "16") (term "0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0") (ifseqformula "10"))
      (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
      (rule "applyEq" (formula "16") (term "0,1,0,0,0,0,2,0,1,0,0") (ifseqformula "9"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,0,2,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,2,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,2,0,1,0,0"))
      (rule "applyEq" (formula "16") (term "0,1,0,2,0,2,0,1,0,0") (ifseqformula "9"))
      (rule "mul_literals" (formula "16") (term "1,0,2,0,2,0,1,0,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,2,0,2,0,1,0,0"))
      (rule "applyEq" (formula "16") (term "0,1,0,2,0,1,0,0") (ifseqformula "8"))
      (rule "add_zero_left" (formula "16") (term "1,0,2,0,1,0,0"))
      (rule "applyEq" (formula "16") (term "1,0,0,0,0,2,0,1,0,0") (ifseqformula "8"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,2,0,1,0,0"))
      (rule "applyEq" (formula "16") (term "1,0,2,0,2,0,1,0,0") (ifseqformula "8"))
      (rule "add_zero_right" (formula "16") (term "0,2,0,2,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,2,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,2,0,1,0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "notRight" (formula "16"))
      (rule "applyEqRigid" (formula "13") (term "1,0,0,1") (ifseqformula "1"))
      (rule "equalityToSeqGetAndSeqLenLeft" (formula "8") (inst "iv=iv"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
      (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "qeq_literals" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "arrayLengthIsAShort" (formula "10") (term "0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_isFull,savedHeapBefore_isFull"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "returnUnfold" (formula "13") (term "1") (inst "#v0=x_1"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_2"))
      (rule "compound_equality_comparison_2" (formula "13") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
      (rule "assignment_read_attribute_this" (formula "13"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "replaceKnownSelect_taclet6_0" (formula "13") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "13") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_4"))
      (rule "eval_order_access2" (formula "13") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr"))
      (rule "assignment_read_attribute_this" (formula "13"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "replaceKnownSelect_taclet4_0" (formula "13") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "13") (term "0,1,0"))
      (rule "assignment_read_length" (formula "13"))
      (branch "Normal Execution (x_arr != null)"
         (builtin "One Step Simplification" (formula "13"))
         (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "11"))
         (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "10"))
         (rule "equality_comparison_simple" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "equal_literals" (formula "13") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallReturn" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "emptyModality" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "closeTrue" (formula "13"))
      )
      (branch "Null Reference (x_arr = null)"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null reference (b = null)"
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")))
      (rule "closeTrue" (formula "15"))
   )
)
(branch "Exceptional Post (RingBuffer)"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "4"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,0,0") (ifseqformula "4"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,1,0,1,0") (ifseqformula "4"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "5"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch "Pre (RingBuffer)"
   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
   (rule "qeq_literals" (formula "3"))
   (rule "closeTrue" (formula "3"))
)
)

}
