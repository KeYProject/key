\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Nov 30 16:17:36 CET 2022
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[Labels]UseOriginLabels=true
[NewSMT]Axiomatisations=false
[NewSMT]NoTypeHierarchy=false
[NewSMT]Presburger=false
[NewSMT]identifier=OPEN
[NewSMT]sqrtSMTTranslation=SMT
[SMTSettings]SelectedTaclets=
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]maxGenericSorts=2
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[Strategy]ActiveStrategy=JavaCardDLStrategy
[Strategy]MaximumNumberOfAutomaticApplications=50000
[Strategy]Timeout=-1
"
}

\javaSource "src";

\proofObligation {
	"class": "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
	"contract": "DoubleLinkedList[DoubleLinkedList::remove(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0",
	"name": "DoubleLinkedList[DoubleLinkedList::remove(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0",
 }

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "c2a4d52c2ad58a473b8d4f6ce4c8d074ffe247f6"))
(keyLog "1" (keyUser "bubel" ) (keyVersion "0a641f6b38"))

(autoModeTime "25408560240")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "11") (userinteraction))
(rule "castedGetAny" (formula "6") (term "0") (userinteraction))
 (builtin "One Step Simplification" (formula "4"))
(rule "Class_invariant_axiom_for_DoubleLinkedList" (formula "9") (inst "i_5=i_5") (inst "i_4=i_4") (inst "i_3=i_3") (inst "i_2=i_2") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i") (inst "j=j") (ifseqformula "10") (userinteraction))
 (builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "cut_direct" (formula "11") (term "0,0") (userinteraction))
(branch "CUT: self.head = null TRUE"
    (builtin "One Step Simplification" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "translateJavaSubInt" (formula "20") (term "1,1,0,0"))
   (rule "translateJavaAddInt" (formula "20") (term "1,0,1,1,0"))
   (rule "translateJavaSubInt" (formula "19") (term "1,0,1,1,0"))
   (rule "translateJavaSubInt" (formula "18") (term "1,0,1,0,1"))
   (rule "translateJavaAddInt" (formula "24") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
   (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "translateJavaSubInt" (formula "8") (term "1"))
   (rule "translateJavaSubInt" (formula "24") (term "1,0,1,1,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "21") (term "0,1,0,0"))
   (rule "eqSymm" (formula "24") (term "1,0,0,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "24") (term "1,0,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "24") (term "1,0,0,1,0,1"))
   (rule "eqSymm" (formula "24") (term "0,1,0,1,0,0,0,0,1"))
   (rule "eqSymm" (formula "20") (term "1,0"))
   (rule "eqSymm" (formula "19") (term "1,0"))
   (rule "eqSymm" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "24") (term "1,0,0,0,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "24") (term "1,0,0,0,0,0,0,1"))
   (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "true_left" (formula "18"))
   (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "8") (term "1"))
   (rule "mul_literals" (formula "8") (term "1,1"))
   (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "22") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimSub" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0,0,0,1"))
   (rule "polySimp_homoEq" (formula "22") (term "1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "8") (term "1"))
   (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm0" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "castedGetAny" (formula "15") (term "1,0,0,1,0"))
   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "castedGetAny" (formula "19") (term "0,0,1,0,0"))
   (rule "castedGetAny" (formula "19") (term "1,0,1,0,0"))
   (rule "castedGetAny" (formula "22") (term "1,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0,0,0,0,1"))
   (rule "castedGetAny" (formula "22") (term "0,0,1,0,1,0,0,0,0,1"))
   (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
   (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "7"))
   (rule "add_zero_right" (formula "7") (term "0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
   (rule "eqSeqEmpty" (formula "9"))
   (rule "castedGetAny" (formula "18") (term "0,1,0"))
   (rule "eqSymm" (formula "18") (term "1,0"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "castedGetAny" (formula "17") (term "0,1,0"))
   (rule "eqSymm" (formula "17") (term "1,0"))
   (rule "castedGetAny" (formula "22") (term "0,1,0,0,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "8") (term "0"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "9"))
   (rule "eqSymm" (formula "12"))
   (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "10"))
   (rule "times_zero_2" (formula "8") (term "1,0"))
   (rule "add_zero_right" (formula "8") (term "0"))
   (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
   (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
   (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
   (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
   (rule "times_zero_2" (formula "17") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0") (ifseqformula "10"))
   (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0"))
   (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
   (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "10"))
   (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
   (rule "polySimp_sepNegMonomial" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "7"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
   (rule "polySimp_elimOne" (formula "7") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,0,0,0,1"))
   (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8"))
   (rule "mul_literals" (formula "8") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "mul_literals" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
   (rule "mul_literals" (formula "14") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
   (rule "mul_literals" (formula "12") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
   (rule "mul_literals" (formula "15") (term "1,1,0,0"))
   (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "8"))
   (rule "qeq_literals" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "closeFalse" (formula "7"))
)
(branch "CUT: self.head = null FALSE"
    (builtin "One Step Simplification" (formula "11"))
   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "22") (userinteraction))
    (builtin "One Step Simplification" (formula "9"))
   (rule "notLeft" (formula "9") (userinteraction))
   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "21") (userinteraction))
    (builtin "One Step Simplification" (formula "9"))
   (rule "notLeft" (formula "9") (userinteraction))
   (rule "andLeft" (formula "9") (userinteraction))
   (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "23") (userinteraction))
   (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "23") (userinteraction))
    (builtin "One Step Simplification" (formula "16"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "translateJavaAddInt" (formula "26") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "translateJavaSubInt" (formula "26") (term "1,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "translateJavaSubInt" (formula "26") (term "1,0,1,1,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "26") (term "1,0,0,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "26") (term "0,1,0,1,0,0,0,0,1"))
   (rule "eqSymm" (formula "26") (term "1,0,0,1,0,1"))
   (rule "eqSymm" (formula "26") (term "1,0,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1"))
   (rule "eqSymm" (formula "26") (term "1,0,0,0,0,0,0,1"))
   (rule "polySimp_elimSub" (formula "26") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimSub" (formula "26") (term "1,0,0,1,0,0,0,0,0,0,1"))
   (rule "polySimp_homoEq" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOneLeft0" (formula "26") (term "1,1,0,0,1,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm0" (formula "26") (term "1,0,0,1,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm0" (formula "26") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "castedGetAny" (formula "26") (term "0,0,1,0,1,0,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm0" (formula "26") (term "0,0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0,0,0,0,1"))
   (rule "assignment" (formula "26") (term "1"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "polySimp_sepNegMonomial" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0,0,0,0,1"))
   (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0,0,0,0,1"))
   (rule "nnf_imp2or" (formula "26") (term "0,1,0,0,0,0,1"))
   (rule "nnf_notAnd" (formula "26") (term "0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1,0,0,0,0,1"))
   (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,1,0,0,0,0,1"))
   (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
   (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_remove,savedHeapBefore_remove"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
   (rule "translateJavaSubInt" (formula "8") (term "1"))
   (rule "translateJavaAddInt" (formula "19") (term "1,0,1,1,0"))
   (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
   (rule "translateJavaSubInt" (formula "18") (term "1,0,1,1,0"))
   (rule "translateJavaSubInt" (formula "17") (term "1,0,1,0"))
   (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,1,0,0,0,0,1"))
   (rule "eqSymm" (formula "20") (term "0,1,0,0"))
   (rule "eqSymm" (formula "19") (term "1,0"))
   (rule "eqSymm" (formula "18") (term "1,0"))
   (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
   (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "8") (term "1"))
   (rule "mul_literals" (formula "8") (term "1,1"))
   (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
   (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
   (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "8") (term "1"))
   (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0"))
   (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,0,0,0,0,1"))
   (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,1,0,0,0,0,1"))
   (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,1,0,0,0,0,1"))
   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
   (rule "castedGetAny" (formula "9") (term "0"))
   (rule "eqSeqEmpty" (formula "22"))
   (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
   (rule "castedGetAny" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "castedGetAny" (formula "26") (term "0,1,0,0,0,0,0,0,0,1"))
   (rule "castedGetAny" (formula "20") (term "1,0,1,0,0"))
   (rule "castedGetAny" (formula "20") (term "0,0,1,0,0"))
   (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
   (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
   (rule "castedGetAny" (formula "19") (term "0,1,0"))
   (rule "eqSymm" (formula "19") (term "1,0"))
   (rule "castedGetAny" (formula "17") (term "1,0"))
   (rule "castedGetAny" (formula "18") (term "0,1,0"))
   (rule "eqSymm" (formula "18") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
   (rule "eval_order_access4" (formula "26") (term "1") (inst "#v1=x") (inst "#v0=d"))
   (rule "variableDeclarationAssign" (formula "26") (term "1"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "d"))
   (rule "assignment" (formula "26") (term "1"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "variableDeclarationAssign" (formula "26") (term "1"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_1"))
   (rule "applyEq" (formula "22") (term "0") (ifseqformula "11"))
   (rule "commute_and" (formula "12") (term "0,0"))
   (rule "commute_and" (formula "15") (term "0,0"))
   (rule "commute_and" (formula "19") (term "0,0"))
   (rule "commute_and" (formula "14") (term "0,0"))
   (rule "commute_and" (formula "20") (term "0,0,0,0"))
   (rule "commute_and_2" (formula "20") (term "0,0,0"))
   (rule "seqConcatUnfoldLeft" (formula "25") (term "1") (inst "#vLeftNew=x_2"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_2"))
   (rule "seqSubUnfoldLeft" (formula "25") (term "1") (inst "#vLeftNew=x_3"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_3"))
   (rule "assignment_read_attribute_this" (formula "25"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "seqConcatUnfoldRight" (formula "25") (term "1") (inst "#vRightNew=x_3"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_4"))
   (rule "seqSubUnfoldLeft" (formula "25") (term "1") (inst "#vLeftNew=x_5"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_5"))
   (rule "assignment_read_attribute_this" (formula "25"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "seqSubUnfoldMiddle" (formula "25") (term "1") (inst "#vMiddleNew=x_6"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_6"))
   (rule "assignmentAdditionInt" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "translateJavaAddInt" (formula "25") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
   (rule "seqSubUnfoldRight" (formula "25") (term "1") (inst "#vRightNew=x_7"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_7"))
   (rule "assignment_read_attribute_this" (formula "25"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "assignment_write_attribute" (formula "25"))
   (branch "Normal Execution (d != null)"
       (builtin "One Step Simplification" (formula "25"))
      (rule "eval_order_access4" (formula "25") (term "1") (inst "#v1=x") (inst "#v0=d"))
      (rule "variableDeclarationAssign" (formula "25") (term "1"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "d_1"))
      (rule "assignment" (formula "25") (term "1"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "variableDeclarationAssign" (formula "25") (term "1"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_8"))
      (rule "compound_subtraction_1" (formula "25") (term "1") (inst "#v=x_9"))
      (rule "variableDeclarationAssign" (formula "25") (term "1"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_9"))
      (rule "assignment_read_attribute_this" (formula "25"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
      (rule "assignmentSubtractionInt" (formula "25") (term "1"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "translateJavaSubInt" (formula "25") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "25") (term "0,1,0"))
      (rule "mul_literals" (formula "25") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
      (rule "assignment_write_attribute" (formula "25"))
      (branch "Normal Execution (d_1 != null)"
          (builtin "One Step Simplification" (formula "25"))
         (rule "eval_order_access1" (formula "25") (term "1") (inst "#v0=n"))
         (rule "variableDeclarationAssign" (formula "25") (term "1"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "n"))
         (rule "assignment_read_attribute" (formula "25"))
         (branch "Normal Execution (_x != null)"
             (builtin "One Step Simplification" (formula "25"))
            (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
            (rule "eval_order_access4" (formula "25") (term "1") (inst "#v1=n_2") (inst "#v0=n_1"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "n_1"))
            (rule "assignment" (formula "25") (term "1"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "n_2"))
            (rule "assignment_read_attribute" (formula "25"))
            (branch "Normal Execution (_x != null)"
                (builtin "One Step Simplification" (formula "25"))
               (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
               (rule "assignment_write_attribute" (formula "25"))
               (branch "Normal Execution (n_1 != null)"
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "eval_order_access1" (formula "25") (term "1") (inst "#v0=n"))
                  (rule "variableDeclarationAssign" (formula "25") (term "1"))
                  (rule "variableDeclaration" (formula "25") (term "1") (newnames "n_3"))
                  (rule "assignment_read_attribute" (formula "25"))
                  (branch "Normal Execution (_x != null)"
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=DoubleLinkedList_Node_r_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "eval_order_access4" (formula "25") (term "1") (inst "#v1=n_5") (inst "#v0=n_4"))
                     (rule "variableDeclarationAssign" (formula "25") (term "1"))
                     (rule "variableDeclaration" (formula "25") (term "1") (newnames "n_4"))
                     (rule "assignment" (formula "25") (term "1"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "variableDeclarationAssign" (formula "25") (term "1"))
                     (rule "variableDeclaration" (formula "25") (term "1") (newnames "n_5"))
                     (rule "assignment_read_attribute" (formula "25"))
                     (branch "Normal Execution (_x != null)"
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
                        (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
                        (rule "assignment_write_attribute" (formula "25"))
                        (branch "Normal Execution (n_4 != null)"
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "methodCallEmpty" (formula "25") (term "1"))
                           (rule "tryEmpty" (formula "25") (term "1"))
                           (rule "emptyModality" (formula "25") (term "1"))
                           (rule "andRight" (formula "25"))
                           (branch "Case 1"
                              (rule "andRight" (formula "25"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "25"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "25"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "25"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "25"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "25"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "25"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "25"))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7"))
                                                      (rule "add_zero_right" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10"))
                                                      (rule "add_zero_right" (formula "10") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv"))
                                                      (rule "lenOfSeqConcat" (formula "24") (term "1,0"))
                                                      (rule "lenOfSeqSub" (formula "24") (term "1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "24") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0"))
                                                      (rule "lenOfSeqSub" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "times_zero_2" (formula "24") (term "1,1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "24") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_homoEq" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,1,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "24") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "polySimp_homoEq" (formula "24") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "24") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0"))
                                                      (rule "getOfSeqConcat" (formula "24") (term "1,1,0,1"))
                                                      (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,2,0,1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "1,2,0,1,0,1"))
                                                      (rule "lenOfSeqSub" (formula "24") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "lenOfSeqSub" (formula "24") (term "0,0,1,2,0,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,0,0,1,2,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "1,1,0,0,1,2,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "1,0,0,1,2,0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,2,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,2,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,2,0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1,2,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,2,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1,2,0,1,0,1"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0,1,2,0,1,0,1") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,1,1,0,0,1,0,1"))
                                                      (rule "replace_known_left" (formula "24") (term "0,1,1,0,0,1,0,1") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "getOfSeqSub" (formula "24") (term "1,0,1,0,1"))
                                                      (rule "castDel" (formula "24") (term "2,1,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,1,0,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,0,1,0,1"))
                                                      (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,0,1,0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0,1,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,1,0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,1,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,1,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,0,1,0,1"))
                                                      (rule "getOfSeqSub" (formula "24") (term "2,0,1,0,1"))
                                                      (rule "castDel" (formula "24") (term "2,2,0,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "1,1,2,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,1,0,2,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "1,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,1,1,2,0,1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0,0,1,1,2,0,1,0,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,1,1,2,0,1,0,1"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,1,1,2,0,1,0,1"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,1,1,2,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,1,1,2,0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,2,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,0,2,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,0,1,0,0,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0,2,0,1,0,1"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,1,0,2,0,1,0,1"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0,1,0,2,0,1,0,1"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0,1,0,2,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,2,0,1,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,2,0,1,0,1"))
                                                      (rule "times_zero_2" (formula "24") (term "1,0,0,0,2,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,2,0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,2,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,2,0,1,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,2,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,2,0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,2,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,2,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,0,0,2,0,1,0,1"))
                                                      (rule "pullOutSelect" (formula "24") (term "0,1,1,1,0,0,1") (inst "selectSK=DoubleLinkedList_s_0"))
                                                      (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "25") (term "0,1,1,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "25") (term "0,1,1,0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "lenOfSeqConcat" (formula "24") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "lenOfSeqConcat" (formula "24") (term "0,0"))
                                                      (rule "polySimp_homoEq" (formula "24") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                      (rule "lenOfSeqSub" (formula "24") (term "1,0,1,1,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,0,1,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "lenOfSeqSub" (formula "24") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,0,1,0,0,0"))
                                                      (rule "times_zero_2" (formula "24") (term "1,1,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "1,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "lenOfSeqSub" (formula "24") (term "1,0,1,1,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,1,0,1,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,1,1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,1,1,1,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "1,1,1,1,0,0,1"))
                                                      (rule "lenOfSeqSub" (formula "24") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "1,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "1,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1,0,1,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1,1,0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,1,1,1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "24") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,0,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0,1,1,0,0,1"))
                                                      (rule "replace_known_left" (formula "24") (term "0,1,0,1,1,0,0,1") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "polySimp_homoEq" (formula "24") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "24") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "eqSymm" (formula "24") (term "1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "replace_known_left" (formula "24") (term "0,1,1,1,0,0,1") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1,0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,1,1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,1,0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,1,1,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "allRight" (formula "24") (inst "sk=iv_0"))
                                                      (rule "impRight" (formula "24"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "replace_known_left" (formula "26") (term "1,0,2,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
                                                      (rule "inEqSimp_commuteGeq" (formula "26") (term "0,2,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                      (rule "getOfSeqConcat" (formula "26") (term "1"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,2,0"))
                                                      (rule "lenOfSeqSub" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0"))
                                                      (rule "times_zero_2" (formula "26") (term "1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,0,0"))
                                                      (rule "lenOfSeqSub" (formula "26") (term "0,1,1,2,0"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,0,1,1,2,0"))
                                                      (rule "times_zero_2" (formula "26") (term "1,1,0,1,1,2,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,0,1,1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,1,2,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,1,2,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,1,2,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,1,2,0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,1,1,2,0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,1"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,0,1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "getOfSeqSub" (formula "26") (term "1,1"))
                                                      (rule "castDel" (formula "26") (term "2,1,1"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,1,1"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "26") (term "1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,1,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,0"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,1,1"))
                                                      (rule "getOfSeqSub" (formula "26") (term "2,1"))
                                                      (rule "castDel" (formula "26") (term "2,2,1"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,1,0,2,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,2,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,2,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,1,1,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "1,1,0,2,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "1,1,2,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,1,2,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "26") (term "1,1,2,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,1,1,2,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,1,1,2,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,2,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "1,1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,2,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,2,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,2,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,2,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,2,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,2,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,2,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,2,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,2,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,2,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,2,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,2,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,2,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0,2,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,2,0"))
                                                      (rule "times_zero_2" (formula "26") (term "1,0,0,0,2,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,2,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,2,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,2,0"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,1,0,2,1"))
                                                      (rule "replace_known_left" (formula "26") (term "1,0,2,1") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,2,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,2,1"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,2,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "closeTrue" (formula "26"))
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "polySimp_homoEq" (formula "25"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "25") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "25") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10"))
                                                      (rule "add_zero_right" (formula "10") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7"))
                                                      (rule "add_zero_right" (formula "7") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "closeTrue" (formula "25"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "25") (term "0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10"))
                                                   (rule "add_zero_right" (formula "10") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "7"))
                                                   (rule "add_zero_right" (formula "7") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "8"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=DoubleLinkedList_Node_l_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "getOfSeqConcat" (formula "24") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "1,2,1,0"))
                                                   (rule "lenOfSeqSub" (formula "24") (term "1,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,0"))
                                                   (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "1,1,0,1,0"))
                                                   (rule "lenOfSeqSub" (formula "24") (term "0,1,1,2,1,0"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "1,0,1,1,2,1,0"))
                                                   (rule "mul_literals" (formula "24") (term "1,1,0,1,1,2,1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "1,0,1,1,2,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,1,2,1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,0,1,1,2,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,2,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,1,2,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,1,2,1,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,1,2,1,0"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0,1,1,2,1,0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "polySimp_pullOutFactor1" (formula "24") (term "1,2,1,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,2,1,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,2,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1,0"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0,0,1,0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "24") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "getOfSeqSub" (formula "24") (term "1,0"))
                                                   (rule "add_zero_left" (formula "24") (term "1,1,1,0"))
                                                   (rule "leq_literals" (formula "24") (term "0,0,1,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "24") (term "1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,0,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0"))
                                                   (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=DoubleLinkedList_Node_l_1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "25"))
                                                   (rule "eqSymm" (formula "1") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "nnf_imp2or" (formula "16") (term "0"))
                                                   (rule "nnf_imp2or" (formula "21") (term "0,0"))
                                                   (rule "nnf_imp2or" (formula "13") (term "0"))
                                                   (rule "nnf_imp2or" (formula "14") (term "0"))
                                                   (rule "nnf_imp2or" (formula "19") (term "0"))
                                                   (rule "nnf_imp2or" (formula "20") (term "0"))
                                                   (rule "nnf_imp2or" (formula "15") (term "0"))
                                                   (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0"))
                                                   (rule "commute_or_2" (formula "13") (term "0"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or_2" (formula "14") (term "0"))
                                                   (rule "commute_or_2" (formula "19") (term "0"))
                                                   (rule "commute_or_2" (formula "20") (term "0"))
                                                   (rule "commute_or_2" (formula "15") (term "0"))
                                                   (rule "lenNonNegative" (formula "12") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                   (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                                                   (rule "leq_literals" (formula "12") (term "0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "seqGetAlphaCast" (formula "18") (term "1,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "seqGetAlphaCast" (formula "10") (term "0"))
                                                   (rule "castedGetAny" (formula "10") (term "0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "seqGetAlphaCast" (formula "7") (term "0"))
                                                   (rule "castedGetAny" (formula "7") (term "0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0"))
                                                   (rule "commute_or" (formula "13") (term "0,0"))
                                                   (rule "commute_or" (formula "14") (term "0,0"))
                                                   (rule "commute_or" (formula "19") (term "0,0"))
                                                   (rule "commute_or" (formula "20") (term "0,0"))
                                                   (rule "commute_or" (formula "15") (term "0,0"))
                                                   (rule "commute_or_2" (formula "13") (term "0"))
                                                   (rule "commute_or_2" (formula "20") (term "0"))
                                                   (rule "commute_or_2" (formula "15") (term "0"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "shift_paren_or" (formula "17") (term "0"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0"))
                                                   (rule "commute_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "(DoubleLinkedList.Node)self.s[1 + k] = x.r TRUE"
                                                      (rule "close" (formula "26") (ifseqformula "2"))
                                                   )
                                                   (branch "(DoubleLinkedList.Node)self.s[1 + k] = x.r FALSE"
                                                      (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                      (rule "eqSymm" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "20") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), k)"))
                                                      (rule "eqSymm" (formula "21") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "22") (inst "t=k"))
                                                      (rule "eqSymm" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0"))
                                                      (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "22") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), k)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "13") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "13") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), k)"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "applyEq" (formula "25") (term "0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "29") (term "0") (ifseqformula "18"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "allLeft" (formula "19") (inst "t=k"))
                                                      (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                      (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "6"))
                                                      (rule "eqSymm" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "19") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "allLeft" (formula "21") (inst "t=k"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                      (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "6"))
                                                      (rule "eqSymm" (formula "21") (term "0,0"))
                                                      (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "21") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "21"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0"))
                                                      (rule "leq_literals" (formula "8"))
                                                      (rule "closeFalse" (formula "8"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "dismissNonSelectedField" (formula "25") (term "1"))
                                                (rule "replaceKnownSelect_taclet0000001_0" (formula "25") (term "1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000001_1" (formula "25") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7"))
                                                (rule "add_zero_right" (formula "7") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10"))
                                                (rule "add_zero_right" (formula "10") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0"))
                                                (rule "leq_literals" (formula "21") (term "0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "false_right" (formula "21"))
                                                (rule "pullOutSelect" (formula "24") (term "0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "getOfSeqConcat" (formula "24") (term "0"))
                                                (rule "polySimp_elimSub" (formula "24") (term "1,2,0"))
                                                (rule "lenOfSeqSub" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0"))
                                                (rule "times_zero_2" (formula "24") (term "1,1,1,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "1,1,0,0"))
                                                (rule "lenOfSeqSub" (formula "24") (term "0,1,1,2,0"))
                                                (rule "polySimp_elimSub" (formula "24") (term "1,0,1,1,2,0"))
                                                (rule "times_zero_2" (formula "24") (term "1,1,0,1,1,2,0"))
                                                (rule "add_zero_right" (formula "24") (term "1,0,1,1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,1,2,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,1,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,1,2,0"))
                                                (rule "replace_known_left" (formula "24") (term "0,0,1,1,2,0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "polySimp_pullOutFactor1" (formula "24") (term "1,2,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,2,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0,0,0"))
                                                (rule "replace_known_left" (formula "24") (term "0,0,1,0,0,0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "getOfSeqSub" (formula "24") (term "0"))
                                                (rule "leq_literals" (formula "24") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "add_zero_left" (formula "24") (term "1,1,0"))
                                                (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "nnf_imp2or" (formula "15") (term "0"))
                                                (rule "nnf_imp2or" (formula "20") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "12") (term "0"))
                                                (rule "nnf_imp2or" (formula "13") (term "0"))
                                                (rule "nnf_imp2or" (formula "18") (term "0"))
                                                (rule "nnf_imp2or" (formula "19") (term "0"))
                                                (rule "nnf_imp2or" (formula "14") (term "0"))
                                                (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "12") (term "0"))
                                                (rule "commute_or" (formula "15") (term "0,0"))
                                                (rule "commute_or_2" (formula "13") (term "0"))
                                                (rule "commute_or_2" (formula "18") (term "0"))
                                                (rule "commute_or_2" (formula "19") (term "0"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "commute_or_2" (formula "20") (term "0,0"))
                                                (rule "commute_or" (formula "12") (term "0,0"))
                                                (rule "commute_or_2" (formula "12") (term "0"))
                                                (rule "commute_or" (formula "13") (term "0,0"))
                                                (rule "seqGetAlphaCast" (formula "9") (term "0"))
                                                (rule "castedGetAny" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "seqGetAlphaCast" (formula "17") (term "1,0"))
                                                (rule "castedGetAny" (formula "17") (term "0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "lenNonNegative" (formula "11") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "11") (term "0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                                (rule "castedGetAny" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "commute_or" (formula "18") (term "0,0"))
                                                (rule "commute_or" (formula "19") (term "0,0"))
                                                (rule "commute_or" (formula "14") (term "0,0"))
                                                (rule "commute_or_2" (formula "19") (term "0"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "15") (term "0"))
                                                (rule "distr_forallAnd" (formula "15"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "commute_or_2" (formula "15") (term "0"))
                                                (rule "commute_or_2" (formula "21") (term "0,0"))
                                                (rule "shift_paren_or" (formula "16") (term "0"))
                                                (rule "commute_or" (formula "15") (term "0,0"))
                                                (rule "commute_or" (formula "20") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "20") (term "0,0"))
                                                (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                (rule "eqSymm" (formula "20") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,1,0,0"))
                                                (rule "leq_literals" (formula "20") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "allLeft" (formula "13") (inst "t=k"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "6"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                                (rule "leq_literals" (formula "13") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "13") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "allLeft" (formula "19") (inst "t=k"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                                (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "6"))
                                                (rule "eqSymm" (formula "19") (term "0,0"))
                                                (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                (rule "leq_literals" (formula "19") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "19") (term "0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "dismissNonSelectedField" (formula "25") (term "0,1"))
                                             (rule "dismissNonSelectedField" (formula "25") (term "0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "add_zero_right" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7"))
                                             (rule "add_zero_right" (formula "7") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "21") (term "0,0"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "false_right" (formula "21"))
                                             (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=DoubleLinkedList_Node_l_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "24") (term "0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "getOfSeqConcat" (formula "24") (term "0"))
                                             (rule "polySimp_elimSub" (formula "24") (term "1,2,0"))
                                             (rule "lenOfSeqSub" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "1,1,0,0"))
                                             (rule "lenOfSeqSub" (formula "24") (term "0,1,1,2,0"))
                                             (rule "polySimp_elimSub" (formula "24") (term "1,0,1,1,2,0"))
                                             (rule "times_zero_2" (formula "24") (term "1,1,0,1,1,2,0"))
                                             (rule "add_zero_right" (formula "24") (term "1,0,1,1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,1,2,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,0,1,1,2,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,1,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,1,2,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,1,2,0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,1,1,2,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "1,2,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,1,2,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,1,2,0"))
                                             (rule "add_zero_right" (formula "24") (term "1,2,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "getOfSeqSub" (formula "24") (term "0"))
                                             (rule "add_zero_right" (formula "24") (term "1,1,0"))
                                             (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor2" (formula "24") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "0,1,0,0"))
                                             (rule "leq_literals" (formula "24") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "nnf_imp2or" (formula "15") (term "0"))
                                             (rule "nnf_imp2or" (formula "14") (term "0"))
                                             (rule "nnf_imp2or" (formula "13") (term "0"))
                                             (rule "nnf_imp2or" (formula "18") (term "0"))
                                             (rule "nnf_imp2or" (formula "12") (term "0"))
                                             (rule "nnf_imp2or" (formula "19") (term "0"))
                                             (rule "nnf_imp2or" (formula "20") (term "0,0"))
                                             (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "14") (term "0"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or_2" (formula "13") (term "0"))
                                             (rule "commute_or_2" (formula "18") (term "0"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "commute_or_2" (formula "19") (term "0"))
                                             (rule "lenNonNegative" (formula "11") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "seqGetAlphaCast" (formula "6") (term "0"))
                                             (rule "castedGetAny" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "seqGetAlphaCast" (formula "9") (term "0"))
                                             (rule "castedGetAny" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "seqGetAlphaCast" (formula "17") (term "1,0"))
                                             (rule "castedGetAny" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "commute_or_2" (formula "20") (term "0,0"))
                                             (rule "commute_or" (formula "14") (term "0,0"))
                                             (rule "commute_or" (formula "13") (term "0,0"))
                                             (rule "commute_or" (formula "18") (term "0,0"))
                                             (rule "commute_or" (formula "12") (term "0,0"))
                                             (rule "commute_or" (formula "19") (term "0,0"))
                                             (rule "commute_or_2" (formula "14") (term "0"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "commute_or_2" (formula "19") (term "0"))
                                             (rule "cnf_rightDist" (formula "15") (term "0"))
                                             (rule "distr_forallAnd" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "commute_or_2" (formula "15") (term "0"))
                                             (rule "shift_paren_or" (formula "16") (term "0"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0"))
                                             (rule "commute_or" (formula "20") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0"))
                                             (rule "seqGetAlphaCast" (formula "24") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "allLeft" (formula "18") (inst "t=k"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                             (rule "applyEq" (formula "18") (term "1,0,0,0") (ifseqformula "6"))
                                             (rule "eqSymm" (formula "18") (term "0,0"))
                                             (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "18"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                          (rule "replaceKnownSelect_taclet0000001_0" (formula "1") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000001_1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11"))
                                          (rule "add_zero_right" (formula "11") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8"))
                                          (rule "add_zero_right" (formula "8") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "11"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "false_right" (formula "22"))
                                          (rule "nnf_imp2or" (formula "19") (term "0"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_imp2or" (formula "20") (term "0"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "13") (term "0"))
                                          (rule "nnf_imp2or" (formula "21") (term "0,0"))
                                          (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "commute_or_2" (formula "19") (term "0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or_2" (formula "20") (term "0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_or_2" (formula "21") (term "0,0"))
                                          (rule "commute_or" (formula "19") (term "0,0"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or" (formula "20") (term "0,0"))
                                          (rule "commute_or_2" (formula "20") (term "0"))
                                          (rule "commute_or" (formula "13") (term "0,0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "21") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "16") (term "0"))
                                          (rule "distr_forallAnd" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "shift_paren_or" (formula "17") (term "0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "21") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "21") (term "0,0"))
                                          (rule "seqGetAlphaCast" (formula "18") (term "1,0"))
                                          (rule "castedGetAny" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "lenNonNegative" (formula "12") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "seqGetAlphaCast" (formula "7") (term "0"))
                                          (rule "castedGetAny" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "seqGetAlphaCast" (formula "10") (term "0"))
                                          (rule "castedGetAny" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "allLeft" (formula "15") (inst "t=k"))
                                          (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                          (rule "applyEq" (formula "15") (term "1,0,0,0,0") (ifseqformula "7"))
                                          (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "15"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_literals" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "closeFalse" (formula "9"))
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "allRight" (formula "25") (inst "sk=i_0"))
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "26"))
                                       (rule "orRight" (formula "26"))
                                       (rule "polySimp_addComm0" (formula "27") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "26"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_geqRight" (formula "27"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13"))
                                       (rule "add_zero_right" (formula "13") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10"))
                                       (rule "add_zero_right" (formula "10") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "13"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "false_right" (formula "24"))
                                       (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                       (rule "simplifySelectOfStore" (formula "3"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "castDel" (formula "3") (term "0"))
                                       (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "getOfSeqConcat" (formula "3") (term "0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1,2,0"))
                                       (rule "lenOfSeqSub" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "1,1,0,0"))
                                       (rule "lenOfSeqSub" (formula "3") (term "0,1,1,2,0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1,0,1,1,2,0"))
                                       (rule "times_zero_2" (formula "3") (term "1,1,0,1,1,2,0"))
                                       (rule "add_zero_right" (formula "3") (term "1,0,1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1,1,2,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0,1,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,1,2,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,1,2,0"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,1,1,2,0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0,0"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "getOfSeqSub" (formula "3") (term "2,0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1,1,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,1,1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,1,1,0,2,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,1,1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "1,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "1,1,2,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1,1,2,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "3") (term "1,1,2,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,1,1,2,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,1,1,2,0"))
                                       (rule "add_zero_right" (formula "3") (term "1,1,2,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,1,0,2,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,1,0,0,1,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0,0,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,1,0,2,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,2,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,2,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,2,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,2,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,1,0,2,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,2,0"))
                                       (rule "times_zero_2" (formula "3") (term "1,0,0,0,2,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,1,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,0,0,2,0"))
                                       (rule "getOfSeqSub" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "1,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,1,0"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,1,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,0,1,0"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,2,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "nnf_imp2or" (formula "18") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_imp2or" (formula "23") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_imp2or" (formula "22") (term "0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "commute_or" (formula "18") (term "0,0"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or_2" (formula "21") (term "0"))
                                       (rule "commute_or_2" (formula "17") (term "0"))
                                       (rule "lenNonNegative" (formula "14") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "seqGetAlphaCast" (formula "20") (term "1,0"))
                                       (rule "castedGetAny" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "seqGetAlphaCast" (formula "9") (term "0"))
                                       (rule "castedGetAny" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "seqGetAlphaCast" (formula "12") (term "0"))
                                       (rule "castedGetAny" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commute_or" (formula "15") (term "0,0"))
                                       (rule "commute_or" (formula "16") (term "0,0"))
                                       (rule "commute_or" (formula "21") (term "0,0"))
                                       (rule "commute_or" (formula "17") (term "0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "commute_or_2" (formula "17") (term "0"))
                                       (rule "commute_or" (formula "22") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "cnf_rightDist" (formula "18") (term "0"))
                                       (rule "distr_forallAnd" (formula "18"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "commute_or_2" (formula "18") (term "0"))
                                       (rule "shift_paren_or" (formula "19") (term "0"))
                                       (rule "commute_or" (formula "18") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "k >= 1 + i_0 TRUE"
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "allLeft" (formula "18") (inst "t=i_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                          (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "4"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                          (rule "eqSymm" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "24") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "allLeft" (formula "23") (inst "t=i_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                          (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "23") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "26") (inst "t=k"))
                                          (rule "eqSymm" (formula "26") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0"))
                                          (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "allLeft" (formula "24") (inst "t=k"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                          (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "10"))
                                          (rule "eqSymm" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "allLeft" (formula "18") (inst "t=k"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                          (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "allLeft" (formula "22") (inst "t=k"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "10"))
                                          (rule "eqSymm" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "17") (inst "t=k"))
                                          (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                          (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                          (rule "leq_literals" (formula "17") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "17") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "5"))
                                          (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "5"))
                                          (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "5"))
                                          (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "allLeft" (formula "29") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "29") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "29"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "k >= 1 + i_0 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "24"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                          (rule "eqSymm" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "24") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "allLeft" (formula "23") (inst "t=k"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                          (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "9"))
                                          (rule "eqSymm" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_0)"))
                                          (rule "eqSymm" (formula "26") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
                                          (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "allLeft" (formula "27") (inst "t=k"))
                                          (rule "eqSymm" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                          (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "27") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "allLeft" (formula "18") (inst "t=k"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                          (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "9"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "allLeft" (formula "22") (inst "t=k"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "9"))
                                          (rule "eqSymm" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "22") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                          (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                          (rule "leq_literals" (formula "17") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0)"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "26") (inst "t=i_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                          (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "23"))
                                          (rule "eqSymm" (formula "26") (term "0,0"))
                                          (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                          (rule "leq_literals" (formula "26") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "26") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "allLeft" (formula "17") (inst "t=k"))
                                          (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                          (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "4"))
                                          (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "4"))
                                          (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "allLeft" (formula "30") (inst "t=k"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "30") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "1"))
                                          (rule "andLeft" (formula "30"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0"))
                                          (rule "add_zero_right" (formula "30") (term "0"))
                                          (rule "leq_literals" (formula "30"))
                                          (rule "closeFalse" (formula "30"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "Class_invariant_axiom_for_DoubleLinkedList" (formula "25") (inst "j=j") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "i_5=i_5") (ifseqformula "23") (userinteraction))
                                    (rule "andRight" (formula "25"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "25"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "25"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "25"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "25"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "25"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "25"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "25"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "25"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "25"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "25"))
                                                                  (branch "Case 1"
                                                                     (rule "andRight" (formula "25"))
                                                                     (branch "Case 1"
                                                                        (rule "eqSeqEmpty" (formula "25") (term "1"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "22"))
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "notRight" (formula "25"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                        (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "11"))
                                                                        (rule "add_zero_right" (formula "11") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                        (rule "add_zero_right" (formula "8") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                        (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                        (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "11"))
                                                                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                        (rule "leq_literals" (formula "22") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "false_right" (formula "22"))
                                                                        (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "0"))
                                                                        (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "lenOfSeqConcat" (formula "1") (term "0"))
                                                                        (rule "lenOfSeqSub" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_elimSub" (formula "1") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
                                                                        (rule "lenOfSeqSub" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_elimSub" (formula "1") (term "1,0,0"))
                                                                        (rule "times_zero_2" (formula "1") (term "1,1,0,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                                        (rule "eqSymm" (formula "1"))
                                                                        (rule "polySimp_homoEq" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0"))
                                                                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "polySimp_homoEq" (formula "1"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                        (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                        (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "1"))
                                                                        (rule "add_literals" (formula "18") (term "1,1,0"))
                                                                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                        (rule "mul_literals" (formula "9") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                        (rule "add_literals" (formula "9") (term "0,0"))
                                                                        (rule "applyEq" (formula "16") (term "1,1,0,0,0") (ifseqformula "1"))
                                                                        (rule "add_literals" (formula "16") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                        (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "1"))
                                                                        (rule "add_literals" (formula "20") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "11"))
                                                                        (rule "true_left" (formula "11"))
                                                                        (rule "applyEq" (formula "12") (term "1,1,0,0,0") (ifseqformula "1"))
                                                                        (rule "add_literals" (formula "12") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,0") (ifseqformula "1"))
                                                                        (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                                                        (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "1"))
                                                                        (rule "add_literals" (formula "14") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                                        (rule "mul_literals" (formula "9") (term "1"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "8"))
                                                                        (rule "qeq_literals" (formula "9") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "closeFalse" (formula "9"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,1"))
                                                                        (rule "eqSeqEmpty" (formula "25") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                        (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                        (rule "add_zero_right" (formula "7") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                        (rule "add_zero_right" (formula "10") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                        (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                        (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "21") (term "0,0"))
                                                                        (rule "leq_literals" (formula "21") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "false_right" (formula "21"))
                                                                        (rule "pullOutSelect" (formula "24") (term "0,1") (inst "selectSK=DoubleLinkedList_len_0"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "0"))
                                                                        (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "24") (term "1"))
                                                                        (rule "mul_literals" (formula "24") (term "1,1"))
                                                                        (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "0"))
                                                                        (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "lenOfSeqConcat" (formula "24") (term "0,0"))
                                                                        (rule "lenOfSeqSub" (formula "24") (term "0,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "24") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "24") (term "1,1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                                        (rule "lenOfSeqSub" (formula "24") (term "0,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "24") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                                        (rule "polySimp_rightDist" (formula "24") (term "1,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "24") (term "0,1,1,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "24") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0"))
                                                                        (rule "replace_known_left" (formula "24") (term "0,0,1,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                                        (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "polySimp_homoEq" (formula "24") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "24") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "24") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                                        (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "closeTrue" (formula "24"))
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "impRight" (formula "25"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "andRight" (formula "26"))
                                                                     (branch "Case 1"
                                                                        (rule "castedGetAny" (formula "26") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "1"))
                                                                        (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "1"))
                                                                        (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "1"))
                                                                        (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "0,0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "1"))
                                                                        (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                        (rule "add_zero_right" (formula "7") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                        (rule "add_zero_right" (formula "10") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                        (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                        (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                        (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                        (rule "leq_literals" (formula "21") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "false_right" (formula "21"))
                                                                        (rule "pullOutSelect" (formula "24") (term "0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "0"))
                                                                        (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "getOfSeqConcat" (formula "24") (term "0"))
                                                                        (rule "polySimp_elimSub" (formula "24") (term "1,2,0"))
                                                                        (rule "add_zero_left" (formula "24") (term "1,2,0"))
                                                                        (rule "lenOfSeqSub" (formula "24") (term "1,0,0"))
                                                                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0"))
                                                                        (rule "times_zero_2" (formula "24") (term "1,1,1,0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "1,1,0,0"))
                                                                        (rule "lenOfSeqSub" (formula "24") (term "0,1,2,0"))
                                                                        (rule "polySimp_elimSub" (formula "24") (term "1,0,1,2,0"))
                                                                        (rule "times_zero_2" (formula "24") (term "1,1,0,1,2,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "1,0,1,2,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,2,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0,0,0,1,2,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,2,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,2,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,2,0"))
                                                                        (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,2,0"))
                                                                        (rule "replace_known_left" (formula "24") (term "0,0,1,2,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,0"))
                                                                        (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "7")))
                                                                        (rule "getOfSeqSub" (formula "24") (term "0"))
                                                                        (rule "add_zero_left" (formula "24") (term "1,1,0"))
                                                                        (rule "leq_literals" (formula "24") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                                        (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                                                                        (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "9"))
                                                                         (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "orRight" (formula "24"))
                                                                        (rule "inEqSimp_leqRight" (formula "24"))
                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_invertInEq1" (formula "1"))
                                                                        (rule "times_zero_2" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                                                                        (rule "qeq_literals" (formula "1") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "1"))
                                                                        (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "26") (term "1"))
                                                                        (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                        (rule "inEqSimp_ltRight" (formula "25"))
                                                                        (rule "add_zero_right" (formula "1") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                        (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "11"))
                                                                        (rule "add_zero_right" (formula "11") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                        (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "9"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                        (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                        (rule "add_zero_right" (formula "8") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_invertInEq1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "times_zero_2" (formula "1") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "11"))
                                                                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                        (rule "leq_literals" (formula "22") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "false_right" (formula "22"))
                                                                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "0"))
                                                                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "mul_literals" (formula "1") (term "1"))
                                                                        (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "11"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                        (rule "mul_literals" (formula "9") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                        (rule "add_literals" (formula "9") (term "0,0"))
                                                                        (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "11"))
                                                                        (rule "add_literals" (formula "17") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "11"))
                                                                        (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                        (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "11"))
                                                                        (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                        (rule "applyEq" (formula "21") (term "1,1,0,0,0") (ifseqformula "11"))
                                                                        (rule "add_literals" (formula "21") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                                                                        (rule "leq_literals" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "10"))
                                                                        (rule "add_literals" (formula "18") (term "1,1,0"))
                                                                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                                                        (rule "qeq_literals" (formula "11"))
                                                                        (rule "true_left" (formula "11"))
                                                                        (rule "applyEq" (formula "12") (term "1,1,0,0,0") (ifseqformula "10"))
                                                                        (rule "add_literals" (formula "12") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,0") (ifseqformula "10"))
                                                                        (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                                                        (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "10"))
                                                                        (rule "add_literals" (formula "14") (term "1,0,0,0"))
                                                                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "9"))
                                                                        (rule "applyEq" (formula "11") (term "1") (ifseqformula "10"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                        (rule "mul_literals" (formula "8") (term "1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "8"))
                                                                        (rule "qeq_literals" (formula "7") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "7"))
                                                                        (rule "closeFalse" (formula "7"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "dismissNonSelectedField" (formula "25") (term "1"))
                                                                  (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "25") (term "1"))
                                                                  (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "25") (term "0,0"))
                                                                  (rule "eqSymm" (formula "25"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                  (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                  (rule "add_zero_right" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                  (rule "add_zero_right" (formula "10") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0"))
                                                                  (rule "leq_literals" (formula "21") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "false_right" (formula "21"))
                                                                  (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "0"))
                                                                  (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "24"))
                                                                  (rule "pullOutSelect" (formula "24") (term "0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "0"))
                                                                  (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "lenOfSeqConcat" (formula "24") (term "0"))
                                                                  (rule "polySimp_homoEq" (formula "24"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                  (rule "lenOfSeqSub" (formula "24") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "24") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "24") (term "1,1,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "24") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                  (rule "lenOfSeqSub" (formula "24") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "24") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "24") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,1"))
                                                                  (rule "replace_known_left" (formula "24") (term "0,0,1,1") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "orRight" (formula "24"))
                                                                  (rule "polySimp_homoEq" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "25") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "24"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "25"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "9"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "25") (term "0,0"))
                                                                  (rule "leq_literals" (formula "25") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "false_right" (formula "25"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0"))
                                                                  (rule "add_literals" (formula "9") (term "0"))
                                                                  (rule "leq_literals" (formula "9"))
                                                                  (rule "closeFalse" (formula "9"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "allRight" (formula "25") (inst "sk=i_5_0"))
                                                               (rule "impRight" (formula "25"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notRight" (formula "27"))
                                                               (rule "dismissNonSelectedField" (formula "3") (term "1"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                                               (rule "dismissNonSelectedField" (formula "3") (term "1"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13"))
                                                               (rule "add_zero_right" (formula "13") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                               (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                               (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10"))
                                                               (rule "add_zero_right" (formula "10") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "2"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "13"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "24") (term "0,0"))
                                                               (rule "leq_literals" (formula "24") (term "0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "false_right" (formula "24"))
                                                               (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "0"))
                                                               (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "getOfSeqConcat" (formula "1") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,2,0"))
                                                               (rule "lenOfSeqSub" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "1,1,1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "1,1,0,0"))
                                                               (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,0"))
                                                               (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,0"))
                                                               (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,0"))
                                                               (rule "ifEqualsNull" (formula "1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,0,1,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,0,1,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,0,1,1"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,1,1,0,1,1") (ifseqformula "10"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "10"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,1"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0,1") (ifseqformula "10"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "getOfSeqSub" (formula "1") (term "0,1,0"))
                                                               (rule "castDel" (formula "1") (term "2,0,1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "1,1,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_2" (formula "1") (term "1,1,1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "1,1,0,0,1,0"))
                                                               (rule "ifEqualsNull" (formula "1") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,1,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,1,1,0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0"))
                                                               (rule "getOfSeqSub" (formula "1") (term "0,1,1"))
                                                               (rule "castDel" (formula "1") (term "2,0,1,1"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,0,1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,1,1,0,0,1,1"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "1,1,0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0,1,1"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "1") (term "1,1,0,1,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,1,1,0,1,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,1,1,0,1,1"))
                                                               (rule "add_zero_right" (formula "1") (term "1,1,0,1,1"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1,1"))
                                                               (rule "ifEqualsNull" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,0,1,1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1,1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,1,1,1"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,1,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1,1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,1,1,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,1,1,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,1,1,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,1,1,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,1,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,0,1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,1,1"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,1,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,1,1"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,1,1"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,1,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0,1,1"))
                                                               (rule "times_zero_2" (formula "1") (term "1,0,0,0,0,1,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,0,0,1,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0,1,1,1"))
                                                               (rule "times_zero_2" (formula "1") (term "1,0,0,0,0,1,1,1"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,0,0,1,1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,1,1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,1,1"))
                                                               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                                               (rule "simplifySelectOfStore" (formula "3"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "castDel" (formula "3") (term "0"))
                                                               (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                               (rule "replace_known_left" (formula "1") (term "1,0,0,1,1") (ifseqformula "3"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                                               (rule "inEqSimp_notGeq" (formula "1") (term "0,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                                               (rule "inEqSimp_notLeq" (formula "1") (term "0,1,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,1,1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,1,1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,1,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,1,1"))
                                                               (rule "inEqSimp_notGeq" (formula "1") (term "0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,1,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0,0,1,1,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,0"))
                                                               (rule "nnf_imp2or" (formula "17") (term "0"))
                                                               (rule "nnf_imp2or" (formula "21") (term "0"))
                                                               (rule "nnf_imp2or" (formula "23") (term "0,0"))
                                                               (rule "nnf_imp2or" (formula "16") (term "0"))
                                                               (rule "nnf_imp2or" (formula "15") (term "0"))
                                                               (rule "nnf_imp2or" (formula "18") (term "0"))
                                                               (rule "nnf_imp2or" (formula "22") (term "0"))
                                                               (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "16") (term "0,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "1,1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                                                               (rule "seqGetAlphaCast" (formula "20") (term "1,0"))
                                                               (rule "castedGetAny" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "seqGetAlphaCast" (formula "9") (term "0"))
                                                               (rule "castedGetAny" (formula "9") (term "0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "seqGetAlphaCast" (formula "12") (term "0"))
                                                               (rule "castedGetAny" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "lenNonNegative" (formula "14") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "14"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "13"))
                                                               (rule "leq_literals" (formula "14") (term "0"))
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "commute_or_2" (formula "17") (term "0"))
                                                               (rule "commute_or_2" (formula "21") (term "0"))
                                                               (rule "commute_or_2" (formula "16") (term "0"))
                                                               (rule "commute_and" (formula "1") (term "0,1,1"))
                                                               (rule "commute_and" (formula "1") (term "0,1,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_and" (formula "1") (term "1,1,1"))
                                                               (rule "commute_and" (formula "1") (term "1,1,0"))
                                                               (rule "commute_or_2" (formula "22") (term "0"))
                                                               (rule "commute_or" (formula "18") (term "0,0"))
                                                               (rule "commute_or_2" (formula "23") (term "0,0"))
                                                               (rule "commute_or" (formula "17") (term "0,0"))
                                                               (rule "commute_or_2" (formula "17") (term "0"))
                                                               (rule "commute_or" (formula "21") (term "0,0"))
                                                               (rule "commute_or" (formula "16") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "commute_or_2" (formula "15") (term "0"))
                                                               (rule "commute_or" (formula "22") (term "0,0"))
                                                               (rule "commute_or_2" (formula "22") (term "0"))
                                                               (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "23") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "18") (term "0"))
                                                               (rule "distr_forallAnd" (formula "18"))
                                                               (rule "andLeft" (formula "18"))
                                                               (rule "commute_or_2" (formula "18") (term "0"))
                                                               (rule "shift_paren_or" (formula "19") (term "0"))
                                                               (rule "commute_or" (formula "18") (term "0,0"))
                                                               (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "23") (term "0,0"))
                                                               (rule "orLeft" (formula "1"))
                                                               (branch " k >= 1 + i_5_0 & ( self.s[i_5_0] = null & k >= 1 + i_5_0 | seqGetOutside = null & k <= i_5_0)"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "2") (term "1,1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,1"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,1,1"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,1,1"))
                                                                  (rule "leq_literals" (formula "2") (term "0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "allLeft" (formula "16") (inst "t=i_5_0"))
                                                                  (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "2"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                                                  (rule "qeq_literals" (formula "16") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "16"))
                                                                  (rule "andLeft" (formula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                  (rule "add_literals" (formula "4") (term "0"))
                                                                  (rule "leq_literals" (formula "4"))
                                                                  (rule "closeFalse" (formula "4"))
                                                               )
                                                               (branch " k <= i_5_0 & ( self.s[1 + i_5_0] = null & k <= i_5_0 | seqGetOutside = null & k >= 1 + i_5_0)"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "2") (term "1,1") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,1"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,0,0,1,1"))
                                                                  (rule "add_zero_right" (formula "2") (term "0,0,1,1"))
                                                                  (rule "leq_literals" (formula "2") (term "0,1,1"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "mul_literals" (formula "11") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                                                  (rule "leq_literals" (formula "3") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_5_0)"))
                                                                  (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "2"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "16") (term "0,1"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "10"))
                                                                  (rule "qeq_literals" (formula "16") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "closeFalse" (formula "16"))
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "allRight" (formula "25") (inst "sk=i_4_0"))
                                                            (rule "impRight" (formula "25"))
                                                            (rule "notRight" (formula "26"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "castedGetAny" (formula "1") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "3") (term "1"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                                            (rule "dismissNonSelectedField" (formula "3") (term "1"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                            (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "11"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13"))
                                                            (rule "add_zero_right" (formula "13") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10"))
                                                            (rule "add_zero_right" (formula "10") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "add_zero_right" (formula "2") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "13"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0"))
                                                            (rule "leq_literals" (formula "24") (term "0"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "false_right" (formula "24"))
                                                            (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "0"))
                                                            (rule "applyEqReverse" (formula "2") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "getOfSeqConcat" (formula "1") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "1,2,1,0"))
                                                            (rule "lenOfSeqSub" (formula "1") (term "1,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,0"))
                                                            (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,1,0"))
                                                            (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,0"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,0"))
                                                            (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,0"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,0") (ifseqformula "10"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,0"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0,0,1,0") (ifseqformula "10"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "getOfSeqSub" (formula "1") (term "2,1,0"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "1,1,0,2,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,2,1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,2,1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,1,1,0,2,1,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "1,1,0,2,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "1,1,2,1,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,1,2,1,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "1") (term "1,1,2,1,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,1,1,2,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,1,1,2,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,2,1,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "1,1,2,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,2,1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,2,1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,2,1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,2,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,2,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,2,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,1,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,2,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,2,1,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,2,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,1,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,2,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,2,1,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,2,1,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,2,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,2,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,2,1,0"))
                                                            (rule "times_zero_2" (formula "1") (term "1,0,0,0,2,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,0,2,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,2,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,2,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1,0,2,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,2,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,2,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,1,0"))
                                                            (rule "getOfSeqSub" (formula "1") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,1,0"))
                                                            (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,1,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "1") (term "0,0,1,1,0") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "1") (term "0,0,0,1,1,0"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "castDel" (formula "3") (term "0"))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "replace_known_left" (formula "1") (term "1,0,2,1,0") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=DoubleLinkedList_Node_l_0"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                                            (rule "ifEqualsNull" (formula "1"))
                                                            (rule "nnf_imp2or" (formula "18") (term "0"))
                                                            (rule "nnf_imp2or" (formula "23") (term "0"))
                                                            (rule "nnf_imp2or" (formula "24") (term "0,0"))
                                                            (rule "nnf_imp2or" (formula "16") (term "0"))
                                                            (rule "nnf_imp2or" (formula "17") (term "0"))
                                                            (rule "nnf_imp2or" (formula "22") (term "0"))
                                                            (rule "nnf_imp2or" (formula "19") (term "0"))
                                                            (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "22") (term "0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "1,1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                                            (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                                            (rule "commute_or_2" (formula "18") (term "0"))
                                                            (rule "commute_and" (formula "1") (term "0"))
                                                            (rule "commute_or_2" (formula "23") (term "0"))
                                                            (rule "commute_or_2" (formula "16") (term "0"))
                                                            (rule "commute_or_2" (formula "17") (term "0"))
                                                            (rule "seqGetAlphaCast" (formula "10") (term "0"))
                                                            (rule "castedGetAny" (formula "10") (term "0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "lenNonNegative" (formula "15") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "15"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "15") (term "0"))
                                                             (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                                            (rule "castedGetAny" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "seqGetAlphaCast" (formula "21") (term "1,0"))
                                                            (rule "castedGetAny" (formula "21") (term "0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "commute_or_2" (formula "22") (term "0"))
                                                            (rule "commute_or" (formula "19") (term "0,0"))
                                                            (rule "commute_or_2" (formula "24") (term "0,0"))
                                                            (rule "commute_or" (formula "18") (term "0,0"))
                                                            (rule "commute_or" (formula "23") (term "0,0"))
                                                            (rule "commute_or" (formula "16") (term "0,0"))
                                                            (rule "commute_or" (formula "17") (term "0,0"))
                                                            (rule "commute_or_2" (formula "18") (term "0"))
                                                            (rule "commute_or_2" (formula "23") (term "0"))
                                                            (rule "commute_or_2" (formula "16") (term "0"))
                                                            (rule "commute_or" (formula "22") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "1"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "commute_or" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "2"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "commute_or" (formula "2"))
                                                            (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "26") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "commute_or" (formula "1"))
                                                            (rule "cnf_rightDist" (formula "21") (term "0"))
                                                            (rule "distr_forallAnd" (formula "21"))
                                                            (rule "andLeft" (formula "21"))
                                                            (rule "commute_or_2" (formula "21") (term "0"))
                                                            (rule "shift_paren_or" (formula "22") (term "0"))
                                                            (rule "commute_or" (formula "21") (term "0,0"))
                                                            (rule "commute_or" (formula "26") (term "0,0,0,0"))
                                                            (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "26") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                            (branch "k >= 1 + i_4_0 TRUE"
                                                               (rule "replace_known_left" (formula "2") (term "0,1,1,0,1") (ifseqformula "3"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,1") (ifseqformula "3"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                                               (rule "replace_known_left" (formula "4") (term "0,1,0,1") (ifseqformula "3"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                                               (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                               (rule "eqSymm" (formula "27") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "27") (term "0,1,0,0"))
                                                               (rule "leq_literals" (formula "27") (term "1,0,0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "allLeft" (formula "28") (inst "t=k"))
                                                               (rule "eqSymm" (formula "28") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                                               (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "13"))
                                                               (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                                               (rule "leq_literals" (formula "28") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "allLeft" (formula "26") (inst "t=i_4_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "6"))
                                                               (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "26") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "allLeft" (formula "20") (inst "t=k"))
                                                               (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                               (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "13"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "20") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "notLeft" (formula "20"))
                                                               (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "allLeft" (formula "23") (inst "t=i_4_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                               (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "23") (term "0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "23") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "23") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "23"))
                                                               (rule "allLeft" (formula "29") (inst "t=i_4_0"))
                                                               (rule "eqSymm" (formula "29") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                                               (rule "leq_literals" (formula "29") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "allLeft" (formula "24") (inst "t=k"))
                                                               (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                               (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "11"))
                                                               (rule "eqSymm" (formula "24") (term "0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                               (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "24") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "24") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "allLeft" (formula "27") (inst "t=k"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                                               (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "11"))
                                                               (rule "eqSymm" (formula "27") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "27") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "27") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "allLeft" (formula "19") (inst "t=i_4_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                                               (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "27"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "19") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "19") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "notLeft" (formula "19"))
                                                               (rule "allLeft" (formula "19") (inst "t=k"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                                               (rule "applyEq" (formula "19") (term "1,0,0,0,0") (ifseqformula "11"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "13"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "19") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "notLeft" (formula "19"))
                                                               (rule "allLeft" (formula "18") (inst "t=i_4_0"))
                                                               (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "18") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "5"))
                                                               (rule "andLeft" (formula "18"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0"))
                                                               (rule "add_zero_right" (formula "18") (term "0"))
                                                               (rule "leq_literals" (formula "18"))
                                                               (rule "closeFalse" (formula "18"))
                                                            )
                                                            (branch "k >= 1 + i_4_0 FALSE"
                                                               (rule "replace_known_right" (formula "2") (term "0,1,0,1") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")))
                                                               (rule "replace_known_right" (formula "3") (term "0,1,1,0,1") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,1") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                               (rule "inEqSimp_geqRight" (formula "27"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                                               (rule "replace_known_left" (formula "2") (term "0,0,0,1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "replace_known_left" (formula "3") (term "0,1,0,1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                                               (rule "mul_literals" (formula "14") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                               (rule "mul_literals" (formula "14") (term "1"))
                                                               (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                               (rule "eqSymm" (formula "27") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "27") (term "0,1,0,0"))
                                                               (rule "leq_literals" (formula "27") (term "1,0,0"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "allLeft" (formula "28") (inst "t=k"))
                                                               (rule "eqSymm" (formula "28") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0"))
                                                               (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "13"))
                                                               (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                                               (rule "leq_literals" (formula "28") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "allLeft" (formula "25") (inst "t=k"))
                                                               (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "13"))
                                                               (rule "eqSymm" (formula "25") (term "0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "25") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_4_0)"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                                                               (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                                                               (rule "add_zero_left" (formula "26") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                                               (rule "mul_literals" (formula "26") (term "1,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "6"))
                                                               (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "26") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "26"))
                                                               (rule "commute_or" (formula "4"))
                                                               (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_4_0)"))
                                                               (rule "eqSymm" (formula "31") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                               (rule "leq_literals" (formula "31") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "21") (inst "t=k"))
                                                               (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                               (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "13"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                               (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "21") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "21") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "21"))
                                                               (rule "notLeft" (formula "21"))
                                                               (rule "allLeft" (formula "28") (inst "t=k"))
                                                               (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                                               (rule "applyEq" (formula "28") (term "1,0,0,0") (ifseqformula "13"))
                                                               (rule "eqSymm" (formula "28") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                                               (rule "mul_literals" (formula "28") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "28") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "28") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "allLeft" (formula "20") (inst "t=k"))
                                                               (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                               (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "13"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "15"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "20") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "14"))
                                                               (rule "qeq_literals" (formula "20") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "notLeft" (formula "20"))
                                                               (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "34"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "applyEq" (formula "24") (term "1") (ifseqformula "2"))
                                                               (rule "allLeft" (formula "27") (inst "t=i_4_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                                               (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "2"))
                                                               (rule "eqSymm" (formula "27") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "27") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "27") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "27"))
                                                               (rule "applyEq" (formula "33") (term "0") (ifseqformula "27"))
                                                               (rule "eqSymm" (formula "33"))
                                                               (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "31") (term "1,0,0,0,0") (ifseqformula "27"))
                                                               (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_4_0)"))
                                                               (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                               (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "28"))
                                                               (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "25"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0"))
                                                               (rule "mul_literals" (formula "18") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "4"))
                                                               (rule "qeq_literals" (formula "18") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "5"))
                                                               (rule "andLeft" (formula "18"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0"))
                                                               (rule "add_zero_right" (formula "18") (term "0"))
                                                               (rule "leq_literals" (formula "18"))
                                                               (rule "closeFalse" (formula "18"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "translateJavaSubInt" (formula "25") (term "1,1,0,0"))
                                                         (rule "allRight" (formula "25") (inst "sk=i_3_0"))
                                                         (rule "impRight" (formula "25"))
                                                         (rule "notRight" (formula "26"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                                                         (rule "dismissNonSelectedField" (formula "3") (term "1,1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "3") (term "1,1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
                                                         (rule "castedGetAny" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10"))
                                                         (rule "add_zero_right" (formula "10") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "13"))
                                                         (rule "add_zero_right" (formula "13") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "3"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "2"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "13"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "false_right" (formula "24"))
                                                         (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "2") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "getOfSeqConcat" (formula "1") (term "1,0"))
                                                         (rule "polySimp_elimSub" (formula "1") (term "1,2,1,0"))
                                                         (rule "lenOfSeqSub" (formula "1") (term "1,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,0"))
                                                         (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "1,1,0,1,0"))
                                                         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,0"))
                                                         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,0") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,1,0") (ifseqformula "10"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                                         (rule "getOfSeqSub" (formula "1") (term "2,1,0"))
                                                         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,2,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,2,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,2,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,1,1,0,2,1,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "1,1,0,2,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "1,1,2,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1,1,2,1,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "1") (term "1,1,2,1,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,1,1,2,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,1,1,2,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "1,1,2,1,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "1,1,2,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,2,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,2,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,2,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,2,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,2,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,2,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1,0,2,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,2,1,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,2,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,2,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,2,1,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,2,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,2,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1,0,2,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,2,1,0"))
                                                         (rule "times_zero_2" (formula "1") (term "1,0,0,0,2,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0,2,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,2,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,2,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,1,0,2,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,2,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,2,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,1,0"))
                                                         (rule "getOfSeqSub" (formula "1") (term "1,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "1,1,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,1,0"))
                                                         (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1,1,0"))
                                                         (rule "replace_known_left" (formula "1") (term "0,0,1,1,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                                         (rule "simplifySelectOfStore" (formula "3"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "castDel" (formula "3") (term "0"))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,2,1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,2,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,2,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,2,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,2,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,2,1,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,2,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,2,1,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,2,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,2,1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1,0,2,1,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,0,2,1,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=DoubleLinkedList_Node_r_1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                                                         (rule "ifEqualsNull" (formula "1"))
                                                         (rule "nnf_imp2or" (formula "18") (term "0"))
                                                         (rule "nnf_imp2or" (formula "19") (term "0"))
                                                         (rule "nnf_imp2or" (formula "16") (term "0"))
                                                         (rule "nnf_imp2or" (formula "17") (term "0"))
                                                         (rule "nnf_imp2or" (formula "22") (term "0"))
                                                         (rule "nnf_imp2or" (formula "24") (term "0,0"))
                                                         (rule "nnf_imp2or" (formula "23") (term "0"))
                                                         (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "22") (term "0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "24") (term "0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                                         (rule "commute_or_2" (formula "18") (term "0"))
                                                         (rule "commute_and" (formula "1") (term "0"))
                                                         (rule "commute_or_2" (formula "16") (term "0"))
                                                         (rule "commute_or" (formula "19") (term "0,0"))
                                                         (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                                         (rule "castedGetAny" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "seqGetAlphaCast" (formula "10") (term "0"))
                                                         (rule "castedGetAny" (formula "10") (term "0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "seqGetAlphaCast" (formula "21") (term "1,0"))
                                                         (rule "castedGetAny" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "commute_or_2" (formula "17") (term "0"))
                                                         (rule "lenNonNegative" (formula "15") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "15"))
                                                         (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "15") (term "0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "commute_or_2" (formula "22") (term "0"))
                                                         (rule "commute_or_2" (formula "23") (term "0"))
                                                         (rule "commute_or_2" (formula "24") (term "0,0"))
                                                         (rule "commute_or" (formula "18") (term "0,0"))
                                                         (rule "commute_or" (formula "16") (term "0,0"))
                                                         (rule "commute_or_2" (formula "18") (term "0"))
                                                         (rule "commute_or_2" (formula "16") (term "0"))
                                                         (rule "commute_or" (formula "17") (term "0,0"))
                                                         (rule "commute_or" (formula "22") (term "0,0"))
                                                         (rule "commute_or" (formula "23") (term "0,0"))
                                                         (rule "commute_or_2" (formula "23") (term "0"))
                                                         (rule "cnf_rightDist" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "commute_or" (formula "1"))
                                                         (rule "cnf_rightDist" (formula "20") (term "0"))
                                                         (rule "distr_forallAnd" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "commute_or_2" (formula "20") (term "0"))
                                                         (rule "shift_paren_or" (formula "21") (term "0"))
                                                         (rule "commute_or" (formula "20") (term "0,0"))
                                                         (rule "cnf_rightDist" (formula "2"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "commute_or" (formula "2"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                         (rule "cnf_rightDist" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_or" (formula "1"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0"))
                                                         (rule "commute_or" (formula "26") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0,0"))
                                                         (branch "k >= 1 + i_3_0 TRUE"
                                                            (rule "replace_known_left" (formula "2") (term "0,1,1,0,1") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                                            (rule "replace_known_left" (formula "1") (term "0,1,0,0,1") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                                            (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                                            (rule "allLeft" (formula "21") (inst "t=k"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                            (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "13"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "21") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "21") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "notLeft" (formula "21"))
                                                            (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "28"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "allLeft" (formula "19") (inst "t=i_3_0"))
                                                            (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                            (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "19") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "19"))
                                                            (rule "qeq_literals" (formula "4") (term "0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                         (branch "k >= 1 + i_3_0 FALSE"
                                                            (rule "replace_known_right" (formula "2") (term "0,1,0,1") (ifseqformula "27"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "27")))
                                                            (rule "replace_known_right" (formula "3") (term "0,1,1,0,1") (ifseqformula "27"))
                                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,1") (ifseqformula "27"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                            (rule "inEqSimp_geqRight" (formula "27"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "replace_known_left" (formula "4") (term "0,1,0,1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                                            (rule "replace_known_left" (formula "2") (term "0,0,0,1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "2"))
                                                            (rule "replace_known_left" (formula "3") (term "0,1,0,1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "14") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                            (rule "mul_literals" (formula "14") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "14"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "allLeft" (formula "20") (inst "t=k"))
                                                            (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                            (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "12"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "20") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "20") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "notLeft" (formula "20"))
                                                            (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_3_0)"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "21") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "21"))
                                                            (rule "notLeft" (formula "21"))
                                                            (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "28"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "28"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "3"))
                                                            (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                            (rule "eqSymm" (formula "26") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "26") (term "0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0,1,0,0"))
                                                            (rule "leq_literals" (formula "26") (term "1,0,0"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "allLeft" (formula "25") (inst "t=k"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                            (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "11"))
                                                            (rule "eqSymm" (formula "25") (term "0,0"))
                                                            (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "14"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                            (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "25") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_3_0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                            (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "26") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "26") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "26"))
                                                            (rule "allLeft" (formula "20") (inst "t=k"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                                            (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "11"))
                                                            (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "20") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "14"))
                                                            (rule "andLeft" (formula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0"))
                                                            (rule "add_zero_right" (formula "20") (term "0"))
                                                            (rule "leq_literals" (formula "20"))
                                                            (rule "closeFalse" (formula "20"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "allRight" (formula "25") (inst "sk=i_2_0"))
                                                      (rule "impRight" (formula "25"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,1"))
                                                      (rule "dismissNonSelectedField" (formula "2") (term "1"))
                                                      (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,1"))
                                                      (rule "dismissNonSelectedField" (formula "2") (term "1"))
                                                      (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9"))
                                                      (rule "add_zero_right" (formula "9") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12"))
                                                      (rule "add_zero_right" (formula "12") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "12"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0"))
                                                      (rule "leq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "false_right" (formula "23"))
                                                      (rule "pullOutSelect" (formula "26") (term "0,0,0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                      (rule "applyEq" (formula "27") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "27") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "27") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "getOfSeqConcat" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,2,0,0,0"))
                                                      (rule "lenOfSeqSub" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "1,1,1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,0,0,0,0"))
                                                      (rule "lenOfSeqSub" (formula "26") (term "0,1,1,2,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,0,1,1,2,0,0,0"))
                                                      (rule "times_zero_2" (formula "26") (term "1,1,0,1,1,2,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,0,1,1,2,0,0,0"))
                                                      (rule "ifEqualsNull" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,1,0,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,0,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,0,1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,0,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,1,0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,1,0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,1,0,1,1,0,0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,1,1,0,1,1,0,0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0,0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,1,0,0,0,1,0,0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0,0,0,0,0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,1,0,0,0,0,0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "getOfSeqSub" (formula "26") (term "0,1,0,0,0"))
                                                      (rule "castDel" (formula "26") (term "2,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,0,1,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "1,1,1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "ifEqualsNull" (formula "26") (term "1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0,0,0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,1,0,0,0"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,0,1,1,0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0,0,0"))
                                                      (rule "getOfSeqSub" (formula "26") (term "0,1,1,0,0"))
                                                      (rule "castDel" (formula "26") (term "2,0,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,0,1,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,1,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0,1,1,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "26") (term "1,1,0,1,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,1,1,0,1,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,1,1,0,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "1,1,0,1,1,0,0"))
                                                      (rule "ifEqualsNull" (formula "26") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,1,1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0,1,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,1,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,1,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,1,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0,1,1,1,0,0"))
                                                      (rule "times_zero_2" (formula "26") (term "1,0,0,0,0,1,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,0,1,1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0,1,1,0,0"))
                                                      (rule "times_zero_2" (formula "26") (term "1,0,0,0,0,1,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,0,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,0,0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,1,1,0,0"))
                                                      (rule "getOfSeqConcat" (formula "26") (term "0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,2,0,0,1"))
                                                      (rule "lenOfSeqSub" (formula "26") (term "1,0,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,0,1"))
                                                      (rule "times_zero_2" (formula "26") (term "1,1,1,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,0,0,0,1"))
                                                      (rule "lenOfSeqSub" (formula "26") (term "0,1,1,2,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,0,1,1,2,0,0,1"))
                                                      (rule "times_zero_2" (formula "26") (term "1,1,0,1,1,2,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "1,0,1,1,2,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,1,2,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,2,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,2,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,1,2,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,1,2,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,1,2,0,0,1"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,1,1,2,0,0,1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0,0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0,0,0,0,1"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,1,0,0,0,0,1") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,1"))
                                                      (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                                      (rule "simplifySelectOfStore" (formula "2"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "castDel" (formula "2") (term "0"))
                                                      (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "replace_known_left" (formula "26") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "2")))
                                                      (rule "getOfSeqSub" (formula "26") (term "1,0,0,1"))
                                                      (rule "castDel" (formula "26") (term "2,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "26") (term "1,1,1,0,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,0,1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,0,0,1"))
                                                      (rule "replace_known_left" (formula "26") (term "0,0,1,0,0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,1,0,0,1"))
                                                      (rule "getOfSeqSub" (formula "26") (term "2,0,0,1"))
                                                      (rule "castDel" (formula "26") (term "2,2,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "26") (term "1,1,0,2,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,2,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,2,0,0,1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,1,1,0,2,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "1,1,0,2,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "1,1,2,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,1,2,0,0,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "26") (term "1,1,2,0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "1,1,1,1,2,0,0,1"))
                                                      (rule "times_zero_1" (formula "26") (term "1,1,1,2,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,2,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "1,1,2,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,2,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,2,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,2,0,0,1"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,2,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,2,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,2,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,2,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,2,0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,2,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,2,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,2,0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,2,0,0,1"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,2,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0,2,0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,2,0,0,1"))
                                                      (rule "mul_literals" (formula "26") (term "1,0,0,0,2,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,2,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,2,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,2,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,1,0,2,0,0,1"))
                                                      (rule "replace_known_left" (formula "26") (term "1,0,2,0,0,1") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,2,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,0,2,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,0,2,0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "26") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "26") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "26") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,1,0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "26") (term "0,0,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "26") (term "0,1,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,1,1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,1,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "22") (term "0,0"))
                                                      (rule "nnf_imp2or" (formula "17") (term "0"))
                                                      (rule "nnf_imp2or" (formula "15") (term "0"))
                                                      (rule "nnf_imp2or" (formula "20") (term "0"))
                                                      (rule "nnf_imp2or" (formula "14") (term "0"))
                                                      (rule "nnf_imp2or" (formula "16") (term "0"))
                                                      (rule "nnf_imp2or" (formula "21") (term "0"))
                                                      (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "20") (term "0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0"))
                                                      (rule "seqGetAlphaCast" (formula "11") (term "0"))
                                                      (rule "castedGetAny" (formula "11") (term "0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "seqGetAlphaCast" (formula "19") (term "1,0"))
                                                      (rule "castedGetAny" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "lenNonNegative" (formula "13") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                      (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "12"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "seqGetAlphaCast" (formula "8") (term "0"))
                                                      (rule "castedGetAny" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "commute_or_2" (formula "15") (term "0"))
                                                      (rule "commute_or" (formula "17") (term "0,0"))
                                                      (rule "commute_or_2" (formula "20") (term "0"))
                                                      (rule "commute_or_2" (formula "14") (term "0"))
                                                      (rule "commute_or_2" (formula "16") (term "0"))
                                                      (rule "commute_and" (formula "26") (term "0,1,1,0,0"))
                                                      (rule "commute_and" (formula "26") (term "0,1,0,0,0"))
                                                      (rule "commute_or_2" (formula "21") (term "0"))
                                                      (rule "commute_and" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "commute_and" (formula "26") (term "1,1,1,0,0"))
                                                      (rule "commute_or_2" (formula "22") (term "0,0"))
                                                      (rule "commute_or" (formula "15") (term "0,0"))
                                                      (rule "commute_or" (formula "20") (term "0,0"))
                                                      (rule "commute_or" (formula "14") (term "0,0"))
                                                      (rule "commute_or_2" (formula "14") (term "0"))
                                                      (rule "commute_or" (formula "16") (term "0,0"))
                                                      (rule "commute_or_2" (formula "16") (term "0"))
                                                      (rule "commute_or" (formula "21") (term "0,0"))
                                                      (rule "commute_or_2" (formula "21") (term "0"))
                                                      (rule "ifthenelse_split" (formula "26") (term "1,0,0,1"))
                                                      (branch "k >= 1 + i_2_0 TRUE"
                                                         (rule "replace_known_left" (formula "27") (term "1,1,1,1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                         (rule "inEqSimp_contradInEq1" (formula "27") (term "0,1,0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "inEqSimp_contradInEq1" (formula "27") (term "1,1,0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0,1,1,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,1,1,0,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0,0,1,1,0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,1,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "commute_or_2" (formula "18") (term "0"))
                                                         (rule "commute_or_2" (formula "24") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "19") (term "0"))
                                                         (rule "commute_or" (formula "18") (term "0,0"))
                                                         (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0"))
                                                         (rule "allLeft" (formula "17") (inst "t=k"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "notLeft" (formula "17"))
                                                         (rule "allLeft" (formula "21") (inst "t=k"))
                                                         (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                         (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "9"))
                                                         (rule "eqSymm" (formula "21") (term "0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "21") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "21") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "allLeft" (formula "16") (inst "t=k"))
                                                         (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                         (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "16") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "16") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "16") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "notLeft" (formula "16"))
                                                         (rule "allLeft" (formula "23") (inst "t=i_2_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "23") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "allLeft" (formula "25") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                         (rule "eqSymm" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "1,0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "allLeft" (formula "18") (inst "t=i_2_0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "18") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "18") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "18") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "18"))
                                                          (builtin "One Step Simplification" (formula "33"))
                                                         (rule "notRight" (formula "33"))
                                                         (rule "typeEqDerived" (formula "19") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "allLeft" (formula "27") (inst "t=k"))
                                                         (rule "eqSymm" (formula "27") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                                         (rule "applyEq" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "10"))
                                                         (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0") (ifseqformula "12"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "allLeft" (formula "25") (inst "t=k"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                         (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "10"))
                                                         (rule "eqSymm" (formula "25") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "12"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "25") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "25") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "allLeft" (formula "16") (inst "t=i_2_0"))
                                                         (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "4"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0"))
                                                         (rule "leq_literals" (formula "16"))
                                                         (rule "closeFalse" (formula "16"))
                                                      )
                                                      (branch "k >= 1 + i_2_0 FALSE"
                                                         (rule "replace_known_right" (formula "27") (term "1,1,1,1,0,0") (ifseqformula "26"))
                                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
                                                         (rule "inEqSimp_geqRight" (formula "26"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "replace_known_left" (formula "27") (term "0,0,0,1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "10") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "mul_literals" (formula "10") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                         (rule "cnf_rightDist" (formula "18") (term "0"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "commute_or_2" (formula "18") (term "0"))
                                                         (rule "commute_or_2" (formula "24") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "19") (term "0"))
                                                         (rule "commute_or" (formula "18") (term "0,0"))
                                                         (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "23") (term "0,0"))
                                                         (rule "allLeft" (formula "16") (inst "t=k"))
                                                         (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                         (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "16") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "16") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "notLeft" (formula "16"))
                                                         (rule "allLeft" (formula "21") (inst "t=k"))
                                                         (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                         (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "8"))
                                                         (rule "eqSymm" (formula "21") (term "0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "21") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "21") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "allLeft" (formula "17") (inst "t=k"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "17") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "17") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "notLeft" (formula "17"))
                                                         (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                         (rule "eqSymm" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "24") (term "1,0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "allLeft" (formula "25") (inst "t=k"))
                                                         (rule "eqSymm" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0"))
                                                         (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "25"))
                                                         (rule "allLeft" (formula "23") (inst "t=k"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "8"))
                                                         (rule "eqSymm" (formula "23") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "23") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_2_0)"))
                                                         (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "15") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "15"))
                                                         (rule "notLeft" (formula "15"))
                                                         (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "28"))
                                                          (builtin "One Step Simplification" (formula "34"))
                                                         (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_2_0)"))
                                                         (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "35"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "18") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "closeFalse" (formula "18"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "impRight" (formula "25"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "26") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "26") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "26") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "26") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "7"))
                                                   (rule "add_zero_right" (formula "7") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10"))
                                                   (rule "add_zero_right" (formula "10") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "8"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                   (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "false_right" (formula "21"))
                                                   (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=DoubleLinkedList_Node_l_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "17"))
                                                   (rule "nnf_imp2or" (formula "16") (term "0"))
                                                   (rule "nnf_imp2or" (formula "13") (term "0"))
                                                   (rule "nnf_imp2or" (formula "20") (term "0"))
                                                   (rule "nnf_imp2or" (formula "19") (term "0"))
                                                   (rule "nnf_imp2or" (formula "14") (term "0"))
                                                   (rule "nnf_imp2or" (formula "21") (term "0,0"))
                                                   (rule "nnf_imp2or" (formula "15") (term "0"))
                                                   (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0,0"))
                                                   (rule "commute_or_2" (formula "13") (term "0"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or_2" (formula "20") (term "0"))
                                                   (rule "commute_or_2" (formula "19") (term "0"))
                                                   (rule "commute_or_2" (formula "14") (term "0"))
                                                   (rule "commute_or_2" (formula "15") (term "0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0"))
                                                   (rule "commute_or" (formula "13") (term "0,0"))
                                                   (rule "commute_or_2" (formula "13") (term "0"))
                                                   (rule "commute_or" (formula "20") (term "0,0"))
                                                   (rule "commute_or_2" (formula "20") (term "0"))
                                                   (rule "commute_or" (formula "19") (term "0,0"))
                                                   (rule "commute_or" (formula "14") (term "0,0"))
                                                   (rule "commute_or" (formula "15") (term "0,0"))
                                                   (rule "commute_or_2" (formula "15") (term "0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0"))
                                                   (rule "cnf_rightDist" (formula "16") (term "0"))
                                                   (rule "distr_forallAnd" (formula "16"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "shift_paren_or" (formula "17") (term "0"))
                                                   (rule "commute_or" (formula "16") (term "0,0"))
                                                   (rule "commute_or" (formula "21") (term "0,0,0,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "21") (term "0,0"))
                                                   (rule "seqGetAlphaCast" (formula "7") (term "0"))
                                                   (rule "castedGetAny" (formula "7") (term "0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "lenNonNegative" (formula "12") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                   (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                                                   (rule "leq_literals" (formula "12") (term "0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "seqGetAlphaCast" (formula "18") (term "1,0"))
                                                   (rule "castedGetAny" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "seqGetAlphaCast" (formula "10") (term "0"))
                                                   (rule "castedGetAny" (formula "10") (term "0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "self.head = x.r TRUE"
                                                      (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "applyEq" (formula "10") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "1"))
                                                      (rule "allLeft" (formula "21") (inst "t=k"))
                                                      (rule "eqSymm" (formula "21") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0"))
                                                      (rule "applyEq" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                      (rule "eqSymm" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "22") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "allLeft" (formula "19") (inst "t=k"))
                                                      (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                      (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "19") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "19") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "allLeft" (formula "15") (inst "t=k"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                                      (rule "applyEq" (formula "15") (term "1,0,0,0,0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "allLeft" (formula "14") (inst "t=k"))
                                                      (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                      (rule "applyEq" (formula "14") (term "1,0,0,0,0") (ifseqformula "7"))
                                                      (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "allLeft" (formula "21") (inst "t=k"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                      (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "21") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "21") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "21") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "2"))
                                                      (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "19"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), k)"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "20") (term "1,1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                      (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "17"))
                                                      (rule "eqSymm" (formula "20") (term "0,0"))
                                                      (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0"))
                                                      (rule "mul_literals" (formula "20") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "20") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "20"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0"))
                                                      (rule "leq_literals" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                   (branch "self.head = x.r FALSE"
                                                      (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "closeTrue" (formula "26"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "impRight" (formula "25"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "translateJavaSubInt" (formula "26") (term "1,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "26") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "26") (term "1,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "1,1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "castedGetAny" (formula "26") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7"))
                                                (rule "add_zero_right" (formula "7") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10"))
                                                (rule "add_zero_right" (formula "10") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0"))
                                                (rule "leq_literals" (formula "21") (term "0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "false_right" (formula "21"))
                                                (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=DoubleLinkedList_Node_r_1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                                (rule "applyEq" (formula "2") (term "0,1,2,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,1,2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "getOfSeqConcat" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,2,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "1,2,0,0,0"))
                                                (rule "lenOfSeqSub" (formula "1") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "lenOfSeqSub" (formula "1") (term "0,1,0,1,2,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,0,1,0,1,2,0,0,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,1,0,1,0,1,2,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "1,0,1,0,1,2,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "1,2,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "1,2,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,0"))
                                                (rule "getOfSeqSub" (formula "1") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,0,0,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "1,1,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,1,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,0,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0,0"))
                                                (rule "getOfSeqConcat" (formula "1") (term "1,2,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,2,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "1,2,1,2,0"))
                                                (rule "lenOfSeqSub" (formula "1") (term "1,0,1,2,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,2,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "1,1,0,1,2,0"))
                                                (rule "lenOfSeqSub" (formula "1") (term "0,1,0,1,2,1,2,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,0,1,0,1,2,1,2,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,1,0,1,0,1,2,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "1,0,1,0,1,2,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "1,2,1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1,2,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,0,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,2,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "1,2,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,2,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,1,2,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "0,1,2,0"))
                                                (rule "getOfSeqSub" (formula "1") (term "2,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,1,0,2,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,2,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "1,1,2,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,2,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,1,0,2,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "1,1,0,2,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,2,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,2,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,1,2,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,1,2,0,0,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "1") (term "0,1,1,2,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,2,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,2,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "1,1,2,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,2,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,2,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,2,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,2,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,2,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,2,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,2,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,2,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,2,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,2,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,2,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,0,2,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,2,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,0,2,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0,2,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,2,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,2,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,2,0,0,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,0,0,0,2,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,2,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,2,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,2,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,2,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,2,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,2,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,2,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,2,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,2,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,2,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,2,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,2,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,2,0,0,0"))
                                                (rule "getOfSeqSub" (formula "1") (term "1,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "1,1,1,1,2,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1,0,1,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,1,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,1,2,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,1,2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,1,1,2,0"))
                                                (rule "times_zero_2" (formula "1") (term "1,0,0,0,1,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,1,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,1,2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,1,1,2,0"))
                                                (rule "getOfSeqSub" (formula "1") (term "2,1,2,0"))
                                                (rule "polySimp_elimSub" (formula "1") (term "1,1,0,2,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,2,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "1,1,2,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,2,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,1,0,2,1,2,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "1,1,0,2,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,2,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,2,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,1,2,1,2,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "1") (term "0,1,1,2,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,2,1,2,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,2,1,2,0"))
                                                (rule "add_zero_left" (formula "1") (term "1,1,2,1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,2,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,2,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,2,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,2,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,2,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,2,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,2,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,2,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,2,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,2,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,2,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,0,2,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,2,1,2,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,0,2,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0,2,1,2,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,2,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,2,1,2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,2,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,2,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,2,1,2,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,2,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,2,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,2,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,2,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,2,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,2,1,2,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,2,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,2,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,2,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,2,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,2,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,2,1,2,0"))
                                                (rule "pullOutSelect" (formula "1") (term "1,1,1,1,0,0,0") (inst "selectSK=DoubleLinkedList_len_0"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,1,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,1,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,2,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,1,1,1,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,2,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,1,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,2,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,1,2,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,1,2,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,2,0,0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "2") (term "1,1,1,1,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,1,0,1,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,1,0,1,1,2,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,1,0,2,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,1,1,1,1,2,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,1,0,2,1,2,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,1,2,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,1,1,2,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,2,1,2,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,1,2,1,2,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,1,2,0,0,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,2,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "1,1,1,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,1,1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "1,1,1,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "0,1,1,1,1,2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,1,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,1,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,1,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,1,0,1,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1,1,2,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0,1,1,2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,2,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,2,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,0,2,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,0,2,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,2,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,2,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,2,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,2,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,2,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,2,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,2,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,2,1,2,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,2,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,0,2,1,2,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,0,2,1,2,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,2,1,2,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,2,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,2,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,2,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,2,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,2,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,2,1,2,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,2,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,2,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,1,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,1,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,2,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,2,0,0,0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,2,1,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1,2,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,2,1,2,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,2,1,2,0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0,1,2,0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,1,2,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,2,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,2,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,2,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,2,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,2,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0,1,2,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "18"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "nnf_imp2or" (formula "16") (term "0"))
                                                (rule "nnf_imp2or" (formula "19") (term "0"))
                                                (rule "nnf_imp2or" (formula "14") (term "0"))
                                                (rule "nnf_imp2or" (formula "13") (term "0"))
                                                (rule "nnf_imp2or" (formula "21") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "15") (term "0"))
                                                (rule "nnf_imp2or" (formula "20") (term "0"))
                                                (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "1,1,0,0,0"))
                                                (rule "seqGetAlphaCast" (formula "18") (term "1,0"))
                                                (rule "castedGetAny" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "lenNonNegative" (formula "12") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "12"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "seqGetAlphaCast" (formula "10") (term "0"))
                                                (rule "castedGetAny" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "seqGetAlphaCast" (formula "7") (term "0"))
                                                (rule "castedGetAny" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "19") (term "0"))
                                                (rule "commute_or" (formula "16") (term "0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0"))
                                                (rule "commute_or_2" (formula "13") (term "0"))
                                                (rule "commute_or_2" (formula "15") (term "0"))
                                                (rule "commute_or_2" (formula "20") (term "0"))
                                                (rule "commute_or_2" (formula "21") (term "0,0"))
                                                (rule "commute_or" (formula "19") (term "0,0"))
                                                (rule "commute_or" (formula "14") (term "0,0"))
                                                (rule "commute_or" (formula "13") (term "0,0"))
                                                (rule "commute_or_2" (formula "13") (term "0"))
                                                (rule "commute_or" (formula "15") (term "0,0"))
                                                (rule "commute_or_2" (formula "15") (term "0"))
                                                (rule "commute_or" (formula "20") (term "0,0"))
                                                (rule "commute_or_2" (formula "20") (term "0"))
                                                (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "21") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "16") (term "0"))
                                                (rule "distr_forallAnd" (formula "16"))
                                                (rule "andLeft" (formula "16"))
                                                (rule "commute_or_2" (formula "16") (term "0"))
                                                (rule "shift_paren_or" (formula "17") (term "0"))
                                                (rule "commute_or" (formula "16") (term "0,0"))
                                                (rule "commute_or" (formula "21") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "21") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "(DoubleLinkedList.Node)self.s[-1 + self.len] = x.l TRUE"
                                                   (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
                                                   (rule "allLeft" (formula "14") (inst "t=k"))
                                                   (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                   (rule "applyEq" (formula "14") (term "1,0,0,0,0") (ifseqformula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "14") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "14") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "allLeft" (formula "19") (inst "t=k"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "7"))
                                                   (rule "eqSymm" (formula "19") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "19") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "allLeft" (formula "22") (inst "t=k"))
                                                   (rule "eqSymm" (formula "22") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0"))
                                                   (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "22") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                   (rule "eqSymm" (formula "23") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "23") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "1"))
                                                   (rule "allLeft" (formula "15") (inst "t=k"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                                   (rule "applyEq" (formula "15") (term "1,0,0,0,0") (ifseqformula "7"))
                                                   (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "allLeft" (formula "21") (inst "t=k"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                   (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "7"))
                                                   (rule "eqSymm" (formula "21") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "21") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1") (ifseqformula "2"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "2"))
                                                   (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "allLeft" (formula "25") (inst "t=add(Z(neglit(1(#))), k)"))
                                                   (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "25") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_invertInEq1" (formula "25") (term "0"))
                                                   (rule "mul_literals" (formula "25") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "25") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "9"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0"))
                                                   (rule "add_zero_right" (formula "25") (term "0"))
                                                   (rule "leq_literals" (formula "25"))
                                                   (rule "closeFalse" (formula "25"))
                                                )
                                                (branch "(DoubleLinkedList.Node)self.s[-1 + self.len] = x.l FALSE"
                                                   (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "closeTrue" (formula "26"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "translateJavaSubInt" (formula "25") (term "1,0,1,1,0"))
                                             (rule "allRight" (formula "25") (inst "sk=i_1_0"))
                                             (rule "impRight" (formula "25"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "polySimp_elimSub" (formula "27") (term "1,0,0"))
                                             (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "2") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,1"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "2") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,1"))
                                             (rule "castedGetAny" (formula "27") (term "0"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "castedGetAny" (formula "27") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,1"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "27") (term "0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9"))
                                             (rule "add_zero_right" (formula "9") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12"))
                                             (rule "add_zero_right" (formula "12") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "12"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "false_right" (formula "23"))
                                             (rule "pullOutSelect" (formula "26") (term "0,1,0") (inst "selectSK=DoubleLinkedList_s_0"))
                                             (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "getOfSeqConcat" (formula "26") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,2,1,0"))
                                             (rule "lenOfSeqSub" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,0,1,0"))
                                             (rule "lenOfSeqSub" (formula "26") (term "0,1,1,2,1,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,0,1,1,2,1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,1,0,1,1,2,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,0,1,1,2,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,1,2,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,2,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,2,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,1,2,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,1,2,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,1,2,1,0"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,1,1,2,1,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,1,0"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,0,1,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "getOfSeqSub" (formula "26") (term "2,1,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,1,0,2,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,2,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,2,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,1,0,2,1,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "1,1,0,2,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,1,2,1,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,1,2,1,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "26") (term "1,1,2,1,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,1,1,2,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,1,1,2,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,2,1,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "1,1,2,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,2,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,2,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,2,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,2,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,2,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,2,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,1,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,2,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,2,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,2,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,1,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,2,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,2,1,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,2,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,2,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,0,2,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,2,1,0"))
                                             (rule "times_zero_2" (formula "26") (term "1,0,0,0,2,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,2,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,2,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,2,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0,2,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,0,2,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,2,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0,2,1,0"))
                                             (rule "getOfSeqConcat" (formula "26") (term "1"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,2,0"))
                                             (rule "lenOfSeqSub" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0"))
                                             (rule "times_zero_2" (formula "26") (term "1,1,1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,0,0"))
                                             (rule "lenOfSeqSub" (formula "26") (term "0,1,1,2,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,0,1,1,2,0"))
                                             (rule "times_zero_2" (formula "26") (term "1,1,0,1,1,2,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,0,1,1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,1,2,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,2,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,1,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,1,2,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,1,2,0"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,1,1,2,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,1"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,0,1") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                             (rule "simplifySelectOfStore" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "0"))
                                             (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "replace_known_left" (formula "26") (term "1,0,2,1,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "getOfSeqSub" (formula "26") (term "1,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,1,0"))
                                             (rule "times_zero_2" (formula "26") (term "1,1,1,0,1,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (term "0,0,1,1,0") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "26") (term "0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "getOfSeqSub" (formula "26") (term "2,1"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,1,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,2,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,2,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,1,0,2,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "1,1,0,2,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,1,2,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,1,2,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "26") (term "1,1,2,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,1,1,2,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,1,1,2,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,2,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "1,1,2,0"))
                                             (rule "add_literals" (formula "26") (term "0,1,1,2,0"))
                                             (rule "add_zero_left" (formula "26") (term "1,1,2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,2,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,2,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,2,0"))
                                             (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,2,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,2,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,2,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,2,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,2,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,2,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,2,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,2,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,2,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,0,2,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,2,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,2,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,2,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,2,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,2,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,2,0"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0,2,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,0,2,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,2,1"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0,2,0"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (term "1,0,2,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1,0,2,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,2,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,2,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,2,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,2,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,2,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,2,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,2,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,2,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1,0,2,0"))
                                             (rule "qeq_literals" (formula "26") (term "0,1,0,2,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "getOfSeqSub" (formula "26") (term "1,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,1,1,0,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "1,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "26") (term "0,0,1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "pullOutSelect" (formula "26") (term "1") (inst "selectSK=DoubleLinkedList_Node_l_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "nnf_imp2or" (formula "15") (term "0"))
                                             (rule "nnf_imp2or" (formula "23") (term "0,0"))
                                             (rule "nnf_imp2or" (formula "16") (term "0"))
                                             (rule "nnf_imp2or" (formula "18") (term "0"))
                                             (rule "nnf_imp2or" (formula "21") (term "0"))
                                             (rule "nnf_imp2or" (formula "22") (term "0"))
                                             (rule "nnf_imp2or" (formula "17") (term "0"))
                                             (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                             (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                             (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "1,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                                             (rule "seqGetAlphaCast" (formula "12") (term "0"))
                                             (rule "castedGetAny" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "lenNonNegative" (formula "14") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "14"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "13"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "seqGetAlphaCast" (formula "9") (term "0"))
                                             (rule "castedGetAny" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "seqGetAlphaCast" (formula "20") (term "1,0"))
                                             (rule "castedGetAny" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "commute_or_2" (formula "15") (term "0"))
                                             (rule "commute_or_2" (formula "16") (term "0"))
                                             (rule "commute_or_2" (formula "21") (term "0"))
                                             (rule "commute_or" (formula "18") (term "0,0"))
                                             (rule "commute_or_2" (formula "22") (term "0"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or_2" (formula "15") (term "0"))
                                             (rule "commute_or" (formula "16") (term "0,0"))
                                             (rule "commute_or" (formula "21") (term "0,0"))
                                             (rule "commute_or" (formula "22") (term "0,0"))
                                             (rule "commute_or_2" (formula "22") (term "0"))
                                             (rule "commute_or" (formula "17") (term "0,0"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "18") (term "0"))
                                             (rule "distr_forallAnd" (formula "18"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "commute_or_2" (formula "18") (term "0"))
                                             (rule "shift_paren_or" (formula "19") (term "0"))
                                             (rule "commute_or" (formula "18") (term "0,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "1") (term "0,0,0"))
                                             (branch "k >= 1 + i_1_0 TRUE"
                                                (rule "replace_known_left" (formula "2") (term "0,1,1,2,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "0,2,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,2,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,2,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,2,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,0,2,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,2,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,2,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0,2,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,2,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0,2,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,2,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,2,0"))
                                                (rule "leq_literals" (formula "28") (term "0,0,2,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_subsumption1" (formula "28") (term "0,1,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,1,0"))
                                                (rule "qeq_literals" (formula "28") (term "0,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_subsumption1" (formula "28") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "(DoubleLinkedList.Node)self.s[i_1_0] = x.r TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                   (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "17") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "23") (term "1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "23") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0,1,0"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                   (rule "inEqSimp_invertInEq1" (formula "23") (term "1,0"))
                                                   (rule "mul_literals" (formula "23") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "23") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "23") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "allLeft" (formula "25") (inst "t=k"))
                                                   (rule "eqSymm" (formula "25") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0"))
                                                   (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "25") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                                   (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "18") (term "0,0,1"))
                                                   (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "24"))
                                                   (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "allLeft" (formula "24") (inst "t=k"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                   (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "24") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "24") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "allLeft" (formula "25") (inst "t=i_1_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                   (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "eqSymm" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "25") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "25") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "allLeft" (formula "22") (inst "t=k"))
                                                   (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                   (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "22") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "22") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "allLeft" (formula "17") (inst "t=k"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                   (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "17") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "allLeft" (formula "23") (inst "t=i_1_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "eqSymm" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "23") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "23") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "applyEq" (formula "37") (term "0") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "23"))
                                                   (rule "allLeft" (formula "30") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                   (rule "eqSymm" (formula "30") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "30") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "allLeft" (formula "31") (inst "t=i_1_0"))
                                                   (rule "eqSymm" (formula "31") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0"))
                                                   (rule "applyEq" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "31") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "allLeft" (formula "18") (inst "t=k"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "35"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "5"))
                                                   (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1") (ifseqformula "5"))
                                                   (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "5"))
                                                   (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "seqGetAlphaCast" (formula "2") (term "0"))
                                                   (rule "castedGetAny" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "25"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                   (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "25"))
                                                   (rule "eqSymm" (formula "26") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                                   (rule "mul_literals" (formula "26") (term "1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "26") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "allLeft" (formula "35") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                                   (rule "eqSymm" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0"))
                                                   (rule "applyEq" (formula "35") (term "1,0,0,0,0,0") (ifseqformula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "35") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "27") (term "0,1"))
                                                   (rule "leq_literals" (formula "27") (term "1"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                                   (rule "mul_literals" (formula "27") (term "1,1"))
                                                   (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                                                   (rule "leq_literals" (formula "20") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "20") (term "0,1"))
                                                   (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "14"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                                                   (rule "mul_literals" (formula "20") (term "1,1"))
                                                   (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "19") (term "0,1"))
                                                   (rule "leq_literals" (formula "19") (term "1"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                   (rule "mul_literals" (formula "19") (term "1,1"))
                                                   (rule "allLeft" (formula "34") (inst "t=Z(0(#))"))
                                                   (rule "leq_literals" (formula "34") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "add_zero_right" (formula "34") (term "1,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "34") (term "0,1"))
                                                   (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "14"))
                                                   (rule "eqSymm" (formula "34") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                                                   (rule "mul_literals" (formula "34") (term "1,1"))
                                                   (rule "seqGetAlphaCast" (formula "32") (term "0"))
                                                   (rule "castedGetAny" (formula "32") (term "0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "seqGetAlphaCast" (formula "33") (term "0"))
                                                   (rule "castedGetAny" (formula "33") (term "0"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "seqGetAlphaCast" (formula "26") (term "0"))
                                                   (rule "castedGetAny" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "allLeft" (formula "35") (inst "t=add(Z(neglit(1(#))), k)"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "35") (term "0,0,1"))
                                                   (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "26"))
                                                   (rule "eqSymm" (formula "35") (term "0,0"))
                                                   (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_invertInEq1" (formula "35") (term "1,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "35") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_1_0)"))
                                                   (rule "eqSymm" (formula "41") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0,0"))
                                                   (rule "applyEq" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "41") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), k)"))
                                                   (rule "eqSymm" (formula "42") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0"))
                                                   (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "42") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_1_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                   (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "34"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "20") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "20") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "notLeft" (formula "20"))
                                                   (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), k)"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "22") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "22") (term "0,1,0"))
                                                   (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "27"))
                                                   (rule "applyEq" (formula "22") (term "0,0,0,0") (ifseqformula "36"))
                                                   (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), k)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                   (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "33"))
                                                   (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "49"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "allLeft" (formula "43") (inst "t=add(Z(neglit(1(#))), k)"))
                                                   (rule "eqSymm" (formula "43") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0"))
                                                   (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "26"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "43") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), i_1_0)"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "30") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "34"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                   (rule "mul_literals" (formula "30") (term "1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "applyEq" (formula "46") (term "0") (ifseqformula "30"))
                                                   (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), k)"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "31") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                   (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "31") (term "1,0,0,0") (ifseqformula "34"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                   (rule "mul_literals" (formula "31") (term "1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "31") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "31"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0,0") (ifseqformula "31"))
                                                   (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "48"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "applyEq" (formula "41") (term "1,0,0,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "true_left" (formula "32"))
                                                   (rule "applyEq" (formula "26") (term "1") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "48") (term "0") (ifseqformula "30"))
                                                   (rule "allLeft" (formula "37") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                                   (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "26"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_invertInEq1" (formula "37") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "37") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "37"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "(DoubleLinkedList.Node)self.s[i_1_0] = x.r FALSE"
                                                   (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                                   (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "29"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "21") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "21"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "k >= 1 + i_1_0 FALSE"
                                                (rule "replace_known_right" (formula "1") (term "0,1,1,2,0") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                (rule "inEqSimp_geqRight" (formula "24"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "replace_known_left" (formula "2") (term "0,1,2,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                                (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "11") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1"))
                                                (rule "ifthenelse_split" (formula "28") (term "0"))
                                                (branch "k >= i_1_0 TRUE"
                                                   (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0"))
                                                   (rule "qeq_literals" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "(DoubleLinkedList.Node)self.s[1 + i_1_0] = x.r TRUE"
                                                      (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "allLeft" (formula "16") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "16") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                      (rule "inEqSimp_invertInEq1" (formula "16") (term "1,0"))
                                                      (rule "times_zero_2" (formula "16") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "16") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "16") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "notLeft" (formula "16"))
                                                      (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                      (rule "eqSymm" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "22") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "allLeft" (formula "20") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                      (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "10"))
                                                      (rule "eqSymm" (formula "20") (term "0,0"))
                                                      (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "20") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0"))
                                                      (rule "leq_literals" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                   (branch "(DoubleLinkedList.Node)self.s[1 + i_1_0] = x.r FALSE"
                                                      (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "allLeft" (formula "15") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                      (rule "inEqSimp_invertInEq1" (formula "15") (term "1,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "15") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "15") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                      (rule "eqSymm" (formula "21") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "21") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                      (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "9"))
                                                      (rule "eqSymm" (formula "19") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "19") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "19") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEq" (formula "29") (term "1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "19"))
                                                      (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "eqSymm" (formula "23") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "23") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                                      (rule "eqSymm" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                                                      (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "allLeft" (formula "14") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "14") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "14") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                      (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "9"))
                                                      (rule "eqSymm" (formula "21") (term "0,0"))
                                                      (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "21") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "closeFalse" (formula "21"))
                                                   )
                                                )
                                                (branch "k >= i_1_0 FALSE"
                                                   (rule "inEqSimp_geqRight" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "11") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "(DoubleLinkedList.Node)self.s[1 + i_1_0] = x.r TRUE"
                                                      (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "4"))
                                                      (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "4"))
                                                      (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "4"))
                                                      (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "allLeft" (formula "18") (inst "t=k"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "9"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "notLeft" (formula "18"))
                                                      (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "23") (term "1,1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                      (rule "mul_literals" (formula "23") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "applyEq" (formula "31") (term "0") (ifseqformula "23"))
                                                      (rule "allLeft" (formula "17") (inst "t=k"))
                                                      (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                      (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "notLeft" (formula "17"))
                                                      (rule "allLeft" (formula "26") (inst "t=i_1_0"))
                                                      (rule "eqSymm" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0"))
                                                      (rule "applyEq" (formula "26") (term "1,0,0,0,0,0") (ifseqformula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "allLeft" (formula "25") (inst "t=k"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                      (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "9"))
                                                      (rule "eqSymm" (formula "25") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "25") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "allLeft" (formula "26") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                      (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "23"))
                                                      (rule "eqSymm" (formula "26") (term "0,0"))
                                                      (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "26") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                      (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "notLeft" (formula "17"))
                                                      (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "24"))
                                                      (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "27"))
                                                      (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "33"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "allLeft" (formula "24") (inst "t=k"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                      (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "9"))
                                                      (rule "eqSymm" (formula "24") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "24") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "23"))
                                                      (rule "eqSymm" (formula "25") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "allLeft" (formula "31") (inst "t=k"))
                                                      (rule "eqSymm" (formula "31") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0"))
                                                      (rule "applyEq" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                      (rule "eqSymm" (formula "32") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "32") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "eqSymm" (formula "33") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                                                      (rule "applyEq" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "33") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                      (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "notLeft" (formula "17"))
                                                      (rule "seqGetAlphaCast" (formula "2") (term "0"))
                                                      (rule "castedGetAny" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                                      (rule "castedGetAny" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                                                      (rule "leq_literals" (formula "29") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "add_zero_right" (formula "29") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                                      (rule "mul_literals" (formula "29") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "29") (term "0,1"))
                                                      (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "13"))
                                                      (rule "eqSymm" (formula "29") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1"))
                                                      (rule "mul_literals" (formula "29") (term "1,1"))
                                                      (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,1"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "27") (term "0,1"))
                                                      (rule "leq_literals" (formula "27") (term "1"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                                      (rule "mul_literals" (formula "27") (term "1,1"))
                                                      (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0,1"))
                                                      (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "32") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                                      (rule "leq_literals" (formula "19") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "19") (term "0,1"))
                                                      (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "13"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                      (rule "mul_literals" (formula "19") (term "1,1"))
                                                      (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "0,1"))
                                                      (rule "leq_literals" (formula "17") (term "1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                      (rule "mul_literals" (formula "17") (term "1,1"))
                                                      (rule "seqGetAlphaCast" (formula "31") (term "0"))
                                                      (rule "castedGetAny" (formula "31") (term "0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), k)"))
                                                      (rule "replace_known_left" (formula "39") (term "0,0,0") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,0,1"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "39") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "39") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "closeFalse" (formula "39"))
                                                   )
                                                   (branch "(DoubleLinkedList.Node)self.s[1 + i_1_0] = x.r FALSE"
                                                      (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "eqSymm" (formula "28"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1") (ifseqformula "3"))
                                                      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "3"))
                                                      (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "3"))
                                                      (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                                       (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                                      (rule "eqSymm" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "allLeft" (formula "25") (inst "t=k"))
                                                      (rule "eqSymm" (formula "25") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                                      (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "25") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "allLeft" (formula "23") (inst "t=k"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                      (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "8"))
                                                      (rule "eqSymm" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "24") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                      (rule "eqSymm" (formula "28") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "28") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                      (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "25"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "notLeft" (formula "18"))
                                                      (rule "allLeft" (formula "22") (inst "t=k"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                      (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "8"))
                                                      (rule "eqSymm" (formula "22") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "eqSymm" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                                      (rule "mul_literals" (formula "17") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "17") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "notLeft" (formula "17"))
                                                      (rule "allLeft" (formula "18") (inst "t=k"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "18") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "notLeft" (formula "18"))
                                                      (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_1_0)"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "23") (term "1,1,0,0"))
                                                      (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "40"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0"))
                                                      (rule "mul_literals" (formula "23") (term "1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "23"))
                                                      (rule "qeq_literals" (formula "9") (term "0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "translateJavaAddInt" (formula "25") (term "1,0,1,1,0"))
                                          (rule "translateJavaSubInt" (formula "25") (term "1,1,0,0"))
                                          (rule "allRight" (formula "25") (inst "sk=i_0_0"))
                                          (rule "impRight" (formula "25"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "27"))
                                          (rule "polySimp_elimSub" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "0,0,0"))
                                          (rule "eqSymm" (formula "27"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "1,1"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                          (rule "castedGetAny" (formula "27") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "1,1"))
                                          (rule "castedGetAny" (formula "27") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9"))
                                          (rule "add_zero_right" (formula "9") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "add_zero_right" (formula "12") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "12"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "leq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "false_right" (formula "23"))
                                          (rule "pullOutSelect" (formula "26") (term "0,1") (inst "selectSK=DoubleLinkedList_s_0"))
                                          (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "getOfSeqConcat" (formula "26") (term "1"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,2,0"))
                                          (rule "lenOfSeqSub" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,0,0"))
                                          (rule "lenOfSeqSub" (formula "26") (term "0,1,1,2,0"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,0,1,1,2,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,1,0,1,1,2,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,0,1,1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,1,2,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,2,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,1,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,1,2,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,1,2,0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0,1,1,2,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "getOfSeqSub" (formula "26") (term "1,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,1,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (term "0,0,1,0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "26") (term "0,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "getOfSeqSub" (formula "26") (term "2,0"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,2,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "1,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "1,1,2,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,1,2,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "26") (term "1,1,2,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,1,1,2,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,1,1,2,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,2,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "1,1,2,0"))
                                          (rule "add_literals" (formula "26") (term "0,1,1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,2,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,2,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,2,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,2,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,2,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,2,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,2,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,0,0,0,2,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,2,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,1,0,2,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,0,2,0"))
                                          (rule "getOfSeqConcat" (formula "26") (term "1,1"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,2,1,0"))
                                          (rule "lenOfSeqSub" (formula "26") (term "1,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,0,1,0"))
                                          (rule "lenOfSeqSub" (formula "26") (term "0,1,1,2,1,0"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,0,1,1,2,1,0"))
                                          (rule "times_zero_2" (formula "26") (term "1,1,0,1,1,2,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,0,1,1,2,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,1,2,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,2,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,2,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,1,2,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,1,2,1,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,1,2,1,0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0,1,1,2,1,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,1,0"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,1,1"))
                                          (rule "replace_known_left" (formula "26") (term "0,0,0,1,1") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                          (rule "simplifySelectOfStore" (formula "2"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "castDel" (formula "2") (term "0"))
                                          (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "replace_known_left" (formula "26") (term "1,0,2,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "getOfSeqSub" (formula "26") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,1,1,1"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "26") (term "1,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,1,0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0,1,1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,1,0"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,1,1,1"))
                                          (rule "getOfSeqSub" (formula "26") (term "2,1,1"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,1,0,2,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,2,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,1,0,2,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,1,0,2,1,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "1,1,0,2,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "1,1,2,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,1,2,1,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "26") (term "1,1,2,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,1,1,2,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,1,1,2,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "1,1,2,1,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "1,1,2,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,2,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,2,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,2,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,2,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,2,1,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,0,1,0,0,1,0,2,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0,2,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,2,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,2,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,2,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,2,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,2,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,2,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0,2,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,2,1,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,0,2,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,2,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,2,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,2,1,0"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,1,0,2,1,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "0,0,2,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,2,1,1"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0,0,0,2,1,0"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "inEqSimp_subsumption1" (formula "26") (term "1,0,2,1,1") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1,0,2,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,2,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,2,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,2,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,2,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,2,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,2,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,2,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,2,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,2,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0,2,1,0"))
                                          (rule "qeq_literals" (formula "26") (term "0,1,0,2,1,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "pullOutSelect" (formula "26") (term "1") (inst "selectSK=DoubleLinkedList_Node_r_1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "nnf_imp2or" (formula "18") (term "0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_imp2or" (formula "23") (term "0,0"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "21") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "22") (term "0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "20") (term "1,0"))
                                          (rule "castedGetAny" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "seqGetAlphaCast" (formula "12") (term "0"))
                                          (rule "castedGetAny" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "seqGetAlphaCast" (formula "9") (term "0"))
                                          (rule "castedGetAny" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "lenNonNegative" (formula "14") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14"))
                                          (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "commute_or_2" (formula "21") (term "0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "commute_or_2" (formula "22") (term "0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "21") (term "0,0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "commute_or" (formula "22") (term "0,0"))
                                          (rule "commute_or_2" (formula "22") (term "0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "18") (term "0"))
                                          (rule "distr_forallAnd" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "commute_or_2" (formula "18") (term "0"))
                                          (rule "shift_paren_or" (formula "19") (term "0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0,0,0"))
                                          (branch "k >= 1 + i_0_0 TRUE"
                                             (rule "replace_known_left" (formula "2") (term "0,1,2,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                             (rule "ifthenelse_split" (formula "28") (term "0"))
                                             (branch "k >= 2 + i_0_0 TRUE"
                                                (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "(DoubleLinkedList.Node)self.s[i_0_0] = x.l TRUE"
                                                   (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "allLeft" (formula "24") (inst "t=k"))
                                                   (rule "eqSymm" (formula "24") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0"))
                                                   (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "24") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "eqSymm" (formula "25") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "25") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "23") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "23") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,1"))
                                                   (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "24"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "22") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                   (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                                   (rule "mul_literals" (formula "22") (term "1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "22") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "22") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                   (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "23"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                                   (rule "mul_literals" (formula "17") (term "1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "17") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "allLeft" (formula "18") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                   (rule "eqSymm" (formula "28") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "28") (term "0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "28") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "allLeft" (formula "25") (inst "t=k"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                   (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "25") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "allLeft" (formula "18") (inst "t=k"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "allLeft" (formula "26") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                   (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "eqSymm" (formula "26") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "26") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "26") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "applyEq" (formula "29") (term "1,0,0,0,0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "39") (term "0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "26"))
                                                   (rule "eqSymm" (formula "24"))
                                                   (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "26"))
                                                   (rule "applyEq" (formula "35") (term "0") (ifseqformula "24"))
                                                   (rule "allLeft" (formula "23") (inst "t=k"))
                                                   (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "23") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "allLeft" (formula "17") (inst "t=k"))
                                                   (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                   (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "10"))
                                                   (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "36"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "5"))
                                                   (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "5"))
                                                   (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "5"))
                                                   (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "seqGetAlphaCast" (formula "2") (term "0"))
                                                   (rule "castedGetAny" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                                                   (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                                                   (rule "leq_literals" (formula "29") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                                   (rule "mul_literals" (formula "29") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "29") (term "0,1"))
                                                   (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "13"))
                                                   (rule "eqSymm" (formula "29") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1"))
                                                   (rule "mul_literals" (formula "29") (term "1,1"))
                                                   (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "17") (term "0,1"))
                                                   (rule "leq_literals" (formula "17") (term "1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                   (rule "mul_literals" (formula "17") (term "1,1"))
                                                   (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                                   (rule "leq_literals" (formula "19") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                   (rule "times_zero_2" (formula "19") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "19") (term "0,1"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                   (rule "mul_literals" (formula "19") (term "1,1"))
                                                   (rule "allLeft" (formula "18") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "allLeft" (formula "37") (inst "t=i_0_0"))
                                                   (rule "eqSymm" (formula "37") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0"))
                                                   (rule "applyEq" (formula "37") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "37") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "28") (term "0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "28") (term "0,1"))
                                                   (rule "leq_literals" (formula "28") (term "1"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                                   (rule "mul_literals" (formula "28") (term "1,1"))
                                                   (rule "allLeft" (formula "29") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                   (rule "applyEq" (formula "29") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "eqSymm" (formula "29") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "29") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "allLeft" (formula "30") (inst "t=add(Z(1(#)), k)"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "30") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "33"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                   (rule "mul_literals" (formula "30") (term "1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "allLeft" (formula "31") (inst "t=add(Z(2(#)), i_0_0)"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                   (rule "applyEq" (formula "31") (term "1,0,0,0") (ifseqformula "33"))
                                                   (rule "eqSymm" (formula "31") (term "0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "35"))
                                                   (rule "eqSymm" (formula "31") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                   (rule "mul_literals" (formula "31") (term "1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "31") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "31") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), k)"))
                                                   (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "21") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "21") (term "0,0,1"))
                                                   (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "28"))
                                                   (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), k)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0,0,0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "31"))
                                                   (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "allLeft" (formula "42") (inst "t=add(Z(1(#)), k)"))
                                                   (rule "eqSymm" (formula "42") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0"))
                                                   (rule "applyEq" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "42") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "allLeft" (formula "43") (inst "t=add(Z(2(#)), i_0_0)"))
                                                   (rule "eqSymm" (formula "43") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0"))
                                                   (rule "applyEq" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "43") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "43"))
                                                   (rule "allLeft" (formula "44") (inst "t=add(Z(neglit(1(#))), k)"))
                                                   (rule "eqSymm" (formula "44") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0"))
                                                   (rule "applyEq" (formula "44") (term "1,0,0,0,0,0") (ifseqformula "27"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "44") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                   (rule "applyEq" (formula "38") (term "0,0,0,0") (ifseqformula "35"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "38") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "38") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "notLeft" (formula "38"))
                                                   (rule "allLeft" (formula "38") (inst "t=add(Z(neglit(1(#))), k)"))
                                                   (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "38") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "38") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,1"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "38") (term "0,1"))
                                                   (rule "leq_literals" (formula "38") (term "1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "27"))
                                                   (rule "inEqSimp_invertInEq1" (formula "38") (term "1"))
                                                   (rule "mul_literals" (formula "38") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "38") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "38") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "38") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "notLeft" (formula "38"))
                                                   (rule "allLeft" (formula "19") (inst "t=add(Z(2(#)), i_0_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "32"))
                                                   (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "50"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "allLeft" (formula "38") (inst "t=Z(0(#))"))
                                                   (rule "leq_literals" (formula "38") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                   (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "38") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "notLeft" (formula "38"))
                                                   (rule "allLeft" (formula "37") (inst "t=add(Z(neglit(1(#))), k)"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "37") (term "1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,1"))
                                                   (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "37") (term "1,0,0,0") (ifseqformula "27"))
                                                   (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "49"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                                   (rule "inEqSimp_invertInEq1" (formula "37") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                   (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "37") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "37") (term "0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "closeFalse" (formula "37"))
                                                )
                                                (branch "(DoubleLinkedList.Node)self.s[i_0_0] = x.l FALSE"
                                                   (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "allLeft" (formula "22") (inst "t=i_0_0"))
                                                   (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "29"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "22") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0"))
                                                   (rule "leq_literals" (formula "22"))
                                                   (rule "closeFalse" (formula "22"))
                                                )
                                             )
                                             (branch "k >= 2 + i_0_0 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "28"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "2"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                (rule "add_literals" (formula "14") (term "0,1"))
                                                (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "add_literals" (formula "13") (term "0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "qeq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_invertInEq0" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "(DoubleLinkedList.Node)self.s[i_0_0] = x.l TRUE"
                                                   (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1") (ifseqformula "5"))
                                                   (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "5"))
                                                   (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "5"))
                                                   (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "eqSymm" (formula "23") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "allLeft" (formula "17") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                                   (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "17") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "notLeft" (formula "17"))
                                                   (rule "allLeft" (formula "22") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                   (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "22") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "22") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "applyEq" (formula "26") (term "0") (ifseqformula "22"))
                                                   (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "10"))
                                                   (rule "eqSymm" (formula "23") (term "0,0"))
                                                   (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "23") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "4"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0"))
                                                   (rule "leq_literals" (formula "23"))
                                                   (rule "closeFalse" (formula "23"))
                                                )
                                                (branch "(DoubleLinkedList.Node)self.s[i_0_0] = x.l FALSE"
                                                   (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "eqSymm" (formula "26"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "4"))
                                                   (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "4"))
                                                   (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1") (ifseqformula "4"))
                                                   (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                                   (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "21") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "21") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "applyEq" (formula "28") (term "1") (ifseqformula "21"))
                                                   (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "eqSymm" (formula "23") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "allLeft" (formula "16") (inst "t=i_0_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "16") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "16") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                                   (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "9"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "16") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "notLeft" (formula "16"))
                                                   (rule "allLeft" (formula "24") (inst "t=add(Z(2(#)), i_0_0)"))
                                                   (rule "eqSymm" (formula "24") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0"))
                                                   (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "21"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "24") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "allLeft" (formula "25") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                   (rule "eqSymm" (formula "25") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "25") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "25") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_0_0)"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "20") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                   (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "9"))
                                                   (rule "eqSymm" (formula "20") (term "0,0"))
                                                   (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "30"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0"))
                                                   (rule "mul_literals" (formula "20") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "20") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                          (branch "k >= 1 + i_0_0 FALSE"
                                             (rule "replace_known_right" (formula "1") (term "0,1,1,2,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                             (rule "inEqSimp_geqRight" (formula "24"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "replace_known_left" (formula "2") (term "0,1,2,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                             (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_subsumption0" (formula "28") (term "0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "(DoubleLinkedList.Node)self.s[1 + i_0_0] = x.l TRUE"
                                                (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_0_0)"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "22") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "22") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "22") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                (rule "leq_literals" (formula "22") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "allLeft" (formula "24") (inst "t=k"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "9"))
                                                (rule "eqSymm" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                (rule "leq_literals" (formula "24") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "24") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0_0)"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                                (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                (rule "leq_literals" (formula "25") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "applyEq" (formula "31") (term "0") (ifseqformula "25"))
                                                (rule "allLeft" (formula "26") (inst "t=i_0_0"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "22"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                (rule "leq_literals" (formula "26") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "allLeft" (formula "28") (inst "t=k"))
                                                (rule "eqSymm" (formula "28") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0"))
                                                (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "28") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "allLeft" (formula "18") (inst "t=k"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "9"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                (rule "leq_literals" (formula "18") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "notLeft" (formula "18"))
                                                (rule "allLeft" (formula "23") (inst "t=add(Z(2(#)), i_0_0)"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "26"))
                                                (rule "eqSymm" (formula "23") (term "0,0"))
                                                (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "23") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                (rule "leq_literals" (formula "23") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "23") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_0_0)"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "2"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                                (rule "mul_literals" (formula "17") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                (rule "leq_literals" (formula "17") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "17") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "notLeft" (formula "17"))
                                                (rule "allLeft" (formula "30") (inst "t=add(Z(2(#)), i_0_0)"))
                                                (rule "eqSymm" (formula "30") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0"))
                                                (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "30") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "allLeft" (formula "31") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                (rule "eqSymm" (formula "31") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,1,0,0"))
                                                (rule "leq_literals" (formula "31") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_0_0)"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "2"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                (rule "leq_literals" (formula "18") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "18") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "notLeft" (formula "18"))
                                                (rule "allLeft" (formula "24") (inst "t=k"))
                                                (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "9"))
                                                (rule "eqSymm" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                (rule "leq_literals" (formula "24") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "24") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_0_0)"))
                                                (rule "eqSymm" (formula "33") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0"))
                                                (rule "applyEq" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "33") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "33"))
                                                (rule "allLeft" (formula "17") (inst "t=k"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                (rule "leq_literals" (formula "17") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "notLeft" (formula "17"))
                                                (rule "allLeft" (formula "17") (inst "t=add(Z(2(#)), i_0_0)"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "24"))
                                                (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0") (ifseqformula "4"))
                                                (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "4"))
                                                (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "4"))
                                                (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "allLeft" (formula "26") (inst "t=i_0_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "23"))
                                                (rule "eqSymm" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                (rule "leq_literals" (formula "26") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "26") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "allLeft" (formula "36") (inst "t=i_0_0"))
                                                (rule "eqSymm" (formula "36") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0"))
                                                (rule "applyEq" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "23"))
                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "36") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "allLeft" (formula "17") (inst "t=i_0_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "24"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                (rule "leq_literals" (formula "17") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "17") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "notLeft" (formula "17"))
                                                (rule "allLeft" (formula "18") (inst "t=i_0_0"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "24"))
                                                (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "31"))
                                                (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "seqGetAlphaCast" (formula "2") (term "0"))
                                                (rule "castedGetAny" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "seqGetAlphaCast" (formula "23") (term "0"))
                                                (rule "castedGetAny" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "seqGetAlphaCast" (formula "28") (term "0"))
                                                (rule "castedGetAny" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "seqGetAlphaCast" (formula "29") (term "0"))
                                                (rule "castedGetAny" (formula "29") (term "0"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                                                (rule "leq_literals" (formula "31") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "31"))
                                                (rule "add_zero_right" (formula "31") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "1"))
                                                (rule "mul_literals" (formula "31") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "31") (term "0,1"))
                                                (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "13"))
                                                (rule "eqSymm" (formula "31") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1"))
                                                (rule "mul_literals" (formula "31") (term "1,1"))
                                                (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "17") (term "0,1"))
                                                (rule "leq_literals" (formula "17") (term "1"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                (rule "mul_literals" (formula "17") (term "1,1"))
                                                (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "28") (term "0,1"))
                                                (rule "leq_literals" (formula "28") (term "1"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                                (rule "mul_literals" (formula "28") (term "1,1"))
                                                (rule "allLeft" (formula "19") (inst "t=add(Z(2(#)), i_0_0)"))
                                                (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                (rule "add_literals" (formula "19") (term "0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                                (rule "applyEq" (formula "19") (term "1,0,0,0,0") (ifseqformula "32"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "allLeft" (formula "35") (inst "t=add(Z(2(#)), i_0_0)"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "35") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                                (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "32"))
                                                (rule "eqSymm" (formula "35") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                                (rule "mul_literals" (formula "35") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                                                (rule "leq_literals" (formula "20") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                                (rule "mul_literals" (formula "20") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "20") (term "0,1"))
                                                (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "13"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                                                (rule "mul_literals" (formula "20") (term "1,1"))
                                                (rule "allLeft" (formula "41") (inst "t=add(Z(neglit(1(#))), k)"))
                                                (rule "replace_known_left" (formula "41") (term "0,0,0") (ifseqformula "28"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "41") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "41") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,1"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0,0,1"))
                                                (rule "add_literals" (formula "41") (term "0,0,0,1"))
                                                (rule "inEqSimp_invertInEq1" (formula "41") (term "0"))
                                                (rule "mul_literals" (formula "41") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "41") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "11"))
                                                (rule "qeq_literals" (formula "41") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "1"))
                                                (rule "andLeft" (formula "41"))
                                                (rule "inEqSimp_homoInEq1" (formula "41"))
                                                (rule "polySimp_pullOutFactor1b" (formula "41") (term "0"))
                                                (rule "add_literals" (formula "41") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0"))
                                                (rule "add_literals" (formula "41") (term "0"))
                                                (rule "leq_literals" (formula "41"))
                                                (rule "closeFalse" (formula "41"))
                                             )
                                             (branch "(DoubleLinkedList.Node)self.s[1 + i_0_0] = x.l FALSE"
                                                (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "28"))
                                                (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0_0)"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "21") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                                (rule "mul_literals" (formula "21") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "21") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                                (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                (rule "leq_literals" (formula "21") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "allLeft" (formula "23") (inst "t=k"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "8"))
                                                (rule "eqSymm" (formula "23") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                (rule "leq_literals" (formula "23") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_0_0)"))
                                                (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "22"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0"))
                                                (rule "mul_literals" (formula "16") (term "1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                (rule "leq_literals" (formula "16") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "notLeft" (formula "16"))
                                                (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), i_0_0)"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "32"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1"))
                                                (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "allRight" (formula "25") (inst "sk=j_0"))
                                       (rule "allRight" (formula "25") (inst "sk=i_0"))
                                       (rule "impRight" (formula "25"))
                                       (rule "notRight" (formula "26"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "4") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "4") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11"))
                                       (rule "add_zero_right" (formula "11") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14"))
                                       (rule "add_zero_right" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "14"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "leq_literals" (formula "25") (term "0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "false_right" (formula "25"))
                                       (rule "pullOutSelect" (formula "1") (term "0,1") (inst "selectSK=DoubleLinkedList_s_0"))
                                       (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "getOfSeqConcat" (formula "1") (term "1"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,2,0"))
                                       (rule "lenOfSeqSub" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,1,0,0"))
                                       (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,0"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,0"))
                                       (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                       (rule "getOfSeqSub" (formula "1") (term "2,0"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,1,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,2,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "1,1,2,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,1,2,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "1,1,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,1,1,2,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,1,1,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,1,2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,2,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,2,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,2,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,2,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,2,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,0,0,0,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,1,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,0"))
                                       (rule "getOfSeqConcat" (formula "1") (term "1"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,2,0"))
                                       (rule "lenOfSeqSub" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,1,0,0"))
                                       (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,0"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "11"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
                                       (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=DoubleLinkedList_len_0"))
                                       (rule "simplifySelectOfStore" (formula "4"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "castDel" (formula "4") (term "0"))
                                       (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "getOfSeqSub" (formula "1") (term "1,1"))
                                       (rule "add_zero_right" (formula "1") (term "1,1,1,1"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,1,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,1,0,1,1"))
                                       (rule "getOfSeqSub" (formula "1") (term "2,1"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,1,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,2,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "1,1,2,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,1,2,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "1,1,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,1,1,2,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,1,1,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,1,2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,2,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,2,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,2,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,2,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1,0,2,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,2,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,2,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,1,0,2,1"))
                                       (rule "replace_known_left" (formula "1") (term "1,0,2,1") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,2,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                                       (rule "getOfSeqSub" (formula "1") (term "1,1"))
                                       (rule "add_zero_right" (formula "1") (term "1,1,1,1"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,0"))
                                       (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1"))
                                       (rule "nnf_imp2or" (formula "19") (term "0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "nnf_imp2or" (formula "24") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "22") (term "0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_imp2or" (formula "18") (term "0"))
                                       (rule "nnf_imp2or" (formula "23") (term "0"))
                                       (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "seqGetAlphaCast" (formula "21") (term "1,0"))
                                       (rule "castedGetAny" (formula "21") (term "0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "lenNonNegative" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "seqGetAlphaCast" (formula "10") (term "0"))
                                       (rule "castedGetAny" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "commute_or_2" (formula "17") (term "0"))
                                       (rule "commute_or_2" (formula "18") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "commute_or_2" (formula "24") (term "0,0"))
                                       (rule "commute_or" (formula "16") (term "0,0"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or" (formula "22") (term "0,0"))
                                       (rule "commute_or" (formula "17") (term "0,0"))
                                       (rule "commute_or" (formula "18") (term "0,0"))
                                       (rule "commute_or_2" (formula "18") (term "0"))
                                       (rule "commute_or" (formula "23") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "24") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "19") (term "0"))
                                       (rule "distr_forallAnd" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "commute_or_2" (formula "19") (term "0"))
                                       (rule "shift_paren_or" (formula "20") (term "0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "24") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "24") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "k >= 1 + j_0 TRUE"
                                          (rule "eqSymm" (formula "2"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "allLeft" (formula "25") (inst "t=j_0"))
                                          (rule "eqSymm" (formula "25") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "25") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "23") (inst "t=k"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "11"))
                                          (rule "eqSymm" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                          (rule "eqSymm" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "27") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "allLeft" (formula "19") (inst "t=k"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                          (rule "applyEq" (formula "19") (term "1,0,0,0,0") (ifseqformula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                          (rule "mul_literals" (formula "19") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                          (rule "leq_literals" (formula "19") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "19") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "allLeft" (formula "28") (inst "t=k"))
                                          (rule "eqSymm" (formula "28") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "allLeft" (formula "25") (inst "t=k"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                          (rule "applyEq" (formula "25") (term "1,0,0,0") (ifseqformula "11"))
                                          (rule "eqSymm" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "25") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "18") (inst "t=k"))
                                          (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                          (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "k >= 1 + i_0 TRUE"
                                             (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "eqSymm" (formula "3"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "7"))
                                             (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "7"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "8"))
                                             (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "seqGetAlphaCast" (formula "29") (term "1,0,0,0,0"))
                                             (rule "castedGetAny" (formula "29") (term "0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "seqGetAlphaCast" (formula "25") (term "0"))
                                             (rule "castedGetAny" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "28") (term "1,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,1,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "28") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "28") (term "0,0,1"))
                                             (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "28") (term "1,0,0,0") (ifseqformula "25"))
                                             (rule "inEqSimp_invertInEq1" (formula "28") (term "1,0"))
                                             (rule "mul_literals" (formula "28") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                             (rule "leq_literals" (formula "28") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "21") (term "0,0,1"))
                                             (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "29"))
                                             (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "39"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), k)"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "1,1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                             (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                             (rule "leq_literals" (formula "26") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "26") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "allLeft" (formula "31") (inst "t=i_0"))
                                             (rule "eqSymm" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), k)"))
                                             (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                             (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "20") (term "0,0,0,0") (ifseqformula "27"))
                                             (rule "replace_known_right" (formula "20") (term "0,0,0") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), k)"))
                                             (rule "eqSymm" (formula "34") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                                             (rule "applyEq" (formula "34") (term "1,0,0,0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "34") (term "0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "eqSymm" (formula "32") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,1"))
                                             (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "25"))
                                             (rule "inEqSimp_invertInEq1" (formula "32") (term "1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                             (rule "leq_literals" (formula "32") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "allLeft" (formula "32") (inst "t=k"))
                                             (rule "eqSymm" (formula "32") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                             (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "13"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                             (rule "leq_literals" (formula "32") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "32") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "allLeft" (formula "33") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "33") (term "0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,1"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "33") (term "0,1"))
                                             (rule "leq_literals" (formula "33") (term "1"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                             (rule "add_literals" (formula "33") (term "0,0,1"))
                                             (rule "add_zero_left" (formula "33") (term "0,1"))
                                             (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "25"))
                                             (rule "inEqSimp_invertInEq1" (formula "33") (term "1"))
                                             (rule "mul_literals" (formula "33") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "33") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "notLeft" (formula "33"))
                                             (rule "allLeft" (formula "33") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "33") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                             (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "16"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "33") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "notLeft" (formula "33"))
                                             (rule "allLeft" (formula "33") (inst "t=i_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                             (rule "leq_literals" (formula "33") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "33") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "notLeft" (formula "33"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "j_0 >= 0 TRUE"
                                                (rule "close" (formula "42") (ifseqformula "5"))
                                             )
                                             (branch "j_0 >= 0 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "36"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                          )
                                          (branch "k >= 1 + i_0 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "31"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0"))
                                             (rule "add_zero_right" (formula "6") (term "0"))
                                             (rule "leq_literals" (formula "6"))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                       )
                                       (branch "k >= 1 + j_0 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "25"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1"))
                                          (rule "allLeft" (formula "24") (inst "t=k"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "11"))
                                          (rule "eqSymm" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "14"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "24") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "allLeft" (formula "27") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                          (rule "eqSymm" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "27") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "27") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "allLeft" (formula "28") (inst "t=k"))
                                          (rule "eqSymm" (formula "28") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0"))
                                          (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0") (ifseqformula "14"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "allLeft" (formula "29") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "eqSymm" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "allLeft" (formula "20") (inst "t=k"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                          (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "14"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                          (rule "leq_literals" (formula "20") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "allLeft" (formula "26") (inst "t=k"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                          (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "11"))
                                          (rule "eqSymm" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "14"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                          (rule "leq_literals" (formula "26") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "26") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "allLeft" (formula "27") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                          (rule "leq_literals" (formula "27") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                          (rule "mul_literals" (formula "25") (term "1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "25") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "19") (inst "t=k"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                          (rule "applyEq" (formula "19") (term "1,0,0,0,0") (ifseqformula "11"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "14"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                          (rule "leq_literals" (formula "19") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "19") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                          (rule "applyEq" (formula "19") (term "0,0,0,0") (ifseqformula "26"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0"))
                                          (rule "mul_literals" (formula "19") (term "1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                          (rule "leq_literals" (formula "19") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "notLeft" (formula "19"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "k >= 1 + i_0 TRUE"
                                             (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "eqSymm" (formula "3"))
                                             (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "33") (term "1,0,0,0,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "29") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "allLeft" (formula "30") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "1,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,1"))
                                             (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "25"))
                                             (rule "inEqSimp_invertInEq1" (formula "30") (term "1,0"))
                                             (rule "times_zero_2" (formula "30") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                             (rule "leq_literals" (formula "30") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "21") (term "0,0,1"))
                                             (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "31"))
                                             (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "7"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "8"))
                                             (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "8"))
                                             (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "seqGetAlphaCast" (formula "26") (term "0"))
                                             (rule "castedGetAny" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "allLeft" (formula "35") (inst "t=i_0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                             (rule "mul_literals" (formula "35") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                             (rule "leq_literals" (formula "35") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "35"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                          (branch "k >= 1 + i_0 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "34"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                             (rule "mul_literals" (formula "14") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "allLeft" (formula "30") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "1,1,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,1,0"))
                                             (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "25"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                             (rule "inEqSimp_invertInEq1" (formula "30") (term "1,0"))
                                             (rule "mul_literals" (formula "30") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                             (rule "leq_literals" (formula "30") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "21") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,1,0"))
                                             (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "21") (term "0,0,0,0") (ifseqformula "31"))
                                             (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "6"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "7"))
                                             (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "7"))
                                             (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "seqGetAlphaCast" (formula "26") (term "0"))
                                             (rule "castedGetAny" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "seqGetAlphaCast" (formula "35") (term "1,0,0,0,0"))
                                             (rule "castedGetAny" (formula "35") (term "0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), i_0)"))
                                             (rule "eqSymm" (formula "36") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0"))
                                             (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0)"))
                                             (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                             (rule "mul_literals" (formula "21") (term "1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                             (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "22") (term "0,1"))
                                             (rule "leq_literals" (formula "22") (term "1"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                             (rule "mul_literals" (formula "22") (term "1,1"))
                                             (rule "allLeft" (formula "30") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,1"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "30") (term "0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "30") (term "0,1"))
                                             (rule "leq_literals" (formula "30") (term "1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1"))
                                             (rule "mul_literals" (formula "30") (term "1,1"))
                                             (rule "allLeft" (formula "24") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "24") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,1"))
                                             (rule "applyEq" (formula "24") (term "1,0,0,0") (ifseqformula "17"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "1,1"))
                                             (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "37") (inst "t=Z(0(#))"))
                                             (rule "leq_literals" (formula "37") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "add_zero_right" (formula "37") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                             (rule "mul_literals" (formula "37") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "37") (term "0,1"))
                                             (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "17"))
                                             (rule "eqSymm" (formula "37") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                                             (rule "mul_literals" (formula "37") (term "1,1"))
                                             (rule "allLeft" (formula "38") (inst "t=i_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                                             (rule "mul_literals" (formula "38") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_0)"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "33") (term "1,1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0"))
                                             (rule "mul_literals" (formula "33") (term "1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_0)"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,1"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,1"))
                                             (rule "mul_literals" (formula "41") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "allLeft" (formula "26") (inst "t=add(Z(1(#)), i_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "allLeft" (formula "27") (inst "t=i_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "allLeft" (formula "49") (inst "t=i_0"))
                                             (rule "eqSymm" (formula "49") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "49") (term "1,0,0"))
                                             (rule "allLeft" (formula "23") (inst "t=i_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "allLeft" (formula "37") (inst "t=i_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "seqGetAlphaCast" (formula "39") (term "0"))
                                             (rule "castedGetAny" (formula "39") (term "0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                             (rule "applyEq" (formula "24") (term "1,0,0,0,0") (ifseqformula "34"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                             (rule "mul_literals" (formula "24") (term "1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "39") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                             (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "34"))
                                             (rule "eqSymm" (formula "39") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                             (rule "leq_literals" (formula "39") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "allLeft" (formula "54") (inst "t=add(Z(neglit(1(#))), k)"))
                                             (rule "eqSymm" (formula "54") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "54") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0"))
                                             (rule "applyEq" (formula "54") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0,0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "54") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "54") (term "0,0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "54") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "54") (term "0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "allLeft" (formula "55") (inst "t=j_0"))
                                             (rule "eqSymm" (formula "55") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "55") (term "1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "55") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "55") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "55") (term "0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "allLeft" (formula "30") (inst "t=j_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "1"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,1"))
                                             (rule "applyEq" (formula "30") (term "0,0,0,0") (ifseqformula "43"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                             (rule "leq_literals" (formula "30") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "notLeft" (formula "30"))
                                             (rule "allLeft" (formula "56") (inst "t=add(Z(1(#)), k)"))
                                             (rule "eqSymm" (formula "56") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "56") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0,0"))
                                             (rule "applyEq" (formula "56") (term "1,0,0,0,0,0") (ifseqformula "41"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0,0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "56") (term "0,0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "56") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "56") (term "0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "allLeft" (formula "25") (inst "t=j_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                             (rule "leq_literals" (formula "25") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "notLeft" (formula "25"))
                                             (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), k)"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                             (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "42"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                             (rule "mul_literals" (formula "25") (term "1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                             (rule "leq_literals" (formula "25") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "25") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "notLeft" (formula "25"))
                                             (rule "allLeft" (formula "40") (inst "t=j_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "40") (term "0,0,1"))
                                             (rule "leq_literals" (formula "40") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "40") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "40"))
                                             (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), k)"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "41") (term "1,1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                             (rule "applyEq" (formula "41") (term "1,0,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "41") (term "1,0,0,0") (ifseqformula "43"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                             (rule "mul_literals" (formula "41") (term "1,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "41") (term "0,0,1"))
                                             (rule "leq_literals" (formula "41") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "41") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "41"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "self.len >= 2 + i_0 TRUE"
                                                (rule "eqSymm" (formula "5"))
                                                (rule "applyEq" (formula "54") (term "1,0,0,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "28") (term "1,0,0,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "45") (term "1") (ifseqformula "5"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "36"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "54") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "54") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "54") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "54") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "54") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                (rule "leq_literals" (formula "23") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "notLeft" (formula "23"))
                                                (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "37") (term "0,0,1"))
                                                (rule "leq_literals" (formula "37") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "37"))
                                                (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "36") (term "0,0,1"))
                                                (rule "leq_literals" (formula "36") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "applyEq" (formula "56") (term "1,0,0,0,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "34") (term "1") (ifseqformula "36"))
                                                (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "36"))
                                                (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "37"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "43"))
                                                (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "38"))
                                                (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0,0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "52") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "52") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "allLeft" (formula "48") (inst "t=j_0"))
                                                (rule "eqSymm" (formula "48") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                                (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "35"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                                (rule "mul_literals" (formula "48") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                                (rule "leq_literals" (formula "48") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "14"))
                                                (rule "qeq_literals" (formula "48") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "notLeft" (formula "48"))
                                                (rule "allLeft" (formula "48") (inst "t=add(Z(neglit(1(#))), k)"))
                                                (rule "eqSymm" (formula "48") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                                (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "48") (term "0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,1"))
                                                (rule "add_zero_left" (formula "48") (term "0,0,1"))
                                                (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "32"))
                                                (rule "inEqSimp_invertInEq1" (formula "48") (term "1,0"))
                                                (rule "mul_literals" (formula "48") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "17"))
                                                (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "48") (term "0,0,1"))
                                                (rule "leq_literals" (formula "48") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "48") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "notLeft" (formula "48"))
                                                (rule "allLeft" (formula "48") (inst "t=k"))
                                                (rule "eqSymm" (formula "48") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                                (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "13"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                                (rule "mul_literals" (formula "48") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "17"))
                                                (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "48") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "48") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                                (rule "leq_literals" (formula "48") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "48") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "notLeft" (formula "48"))
                                                (rule "allLeft" (formula "49") (inst "t=add(Z(neglit(1(#))), k)"))
                                                (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                                (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "49") (term "0,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "49") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,0,1"))
                                                (rule "mul_literals" (formula "49") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "49") (term "0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,1"))
                                                (rule "add_literals" (formula "49") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "49") (term "0,1"))
                                                (rule "leq_literals" (formula "49") (term "1"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "32"))
                                                (rule "inEqSimp_invertInEq1" (formula "49") (term "1"))
                                                (rule "times_zero_2" (formula "49") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "49") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "49") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "notLeft" (formula "49"))
                                                (rule "allLeft" (formula "49") (inst "t=Z(0(#))"))
                                                (rule "leq_literals" (formula "49") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "inEqSimp_commuteGeq" (formula "49") (term "1"))
                                                (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "18"))
                                                (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "49") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "notLeft" (formula "49"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "1") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "66"))
                                                 (builtin "One Step Simplification" (formula "32"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "8"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cut_direct" (formula "23") (term "1"))
                                                (branch "CUT: self.len <= 1 TRUE"
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "true_left" (formula "46"))
                                                   (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "56") (term "1,1,0,0,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "48") (term "1,1,1,0") (ifseqformula "20"))
                                                   (rule "add_literals" (formula "48") (term "1,1,0"))
                                                   (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "20"))
                                                   (rule "add_literals" (formula "59") (term "1,0"))
                                                   (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "20"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0"))
                                                   (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq0" (formula "45") (term "1"))
                                                   (rule "mul_literals" (formula "45") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,1"))
                                                   (rule "add_literals" (formula "45") (term "0,0,1"))
                                                   (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "20"))
                                                   (rule "add_literals" (formula "29") (term "1,1,0"))
                                                   (rule "applyEq" (formula "61") (term "1,1,0") (ifseqformula "20"))
                                                   (rule "add_literals" (formula "61") (term "1,0"))
                                                   (rule "eqSymm" (formula "61"))
                                                   (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                                   (rule "add_literals" (formula "28") (term "0,0,1"))
                                                   (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                                   (rule "mul_literals" (formula "27") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                                   (rule "add_literals" (formula "27") (term "0,0,1"))
                                                   (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "47") (term "1,1,1,0") (ifseqformula "20"))
                                                   (rule "add_literals" (formula "47") (term "1,1,0"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "0,0"))
                                                   (rule "applyEq" (formula "60") (term "1,1,0") (ifseqformula "20"))
                                                   (rule "add_literals" (formula "60") (term "1,0"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "0,0"))
                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "20"))
                                                   (rule "leq_literals" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq0" (formula "44") (term "1"))
                                                   (rule "mul_literals" (formula "44") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                                                   (rule "add_literals" (formula "44") (term "0,0,1"))
                                                   (rule "applyEq" (formula "59") (term "1") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "57") (term "0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "46") (term "1,1,1,0,0,0,0") (ifseqformula "20"))
                                                   (rule "add_literals" (formula "46") (term "1,1,0,0,0,0"))
                                                   (rule "applyEq" (formula "21") (term "1") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "46") (term "1,0,0,0,0") (ifseqformula "19"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1"))
                                                   (rule "mul_literals" (formula "43") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
                                                   (rule "mul_literals" (formula "26") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1"))
                                                   (rule "mul_literals" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1"))
                                                   (rule "mul_literals" (formula "44") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "25") (term "1") (ifseqformula "15"))
                                                   (rule "leq_literals" (formula "25") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "8") (term "0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "closeFalse" (formula "8"))
                                                )
                                                (branch "CUT: self.len <= 1 FALSE"
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "notLeft" (formula "23"))
                                                   (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_leqRight" (formula "59"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "35"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "allLeft" (formula "27") (inst "t=add(Z(1(#)), k)"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                   (rule "applyEq" (formula "27") (term "1,0,0,0,0") (ifseqformula "42"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "18"))
                                                   (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), k)"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "48") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                                   (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                                   (rule "add_literals" (formula "48") (term "0,0,0,1"))
                                                   (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "42"))
                                                   (rule "eqSymm" (formula "48") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "48") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "18"))
                                                   (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "cut_direct" (formula "25") (term "1"))
                                                   (branch "CUT: self.len <= 2 + j_0 TRUE"
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "true_left" (formula "46"))
                                                      (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "25"))
                                                      (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "28") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "28") (term "0,0,1"))
                                                      (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "65") (term "1,0"))
                                                      (rule "add_literals" (formula "65") (term "0,1,0"))
                                                      (rule "applyEq" (formula "26") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26"))
                                                      (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "0"))
                                                      (rule "qeq_literals" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "applyEq" (formula "35") (term "1,1,1,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "1,1,0"))
                                                      (rule "add_literals" (formula "35") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "59") (term "1,0"))
                                                      (rule "add_literals" (formula "59") (term "0,1,0"))
                                                      (rule "add_zero_left" (formula "59") (term "1,0"))
                                                      (rule "applyEq" (formula "48") (term "1,1,1,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "1,1,0"))
                                                      (rule "add_literals" (formula "48") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "62") (term "1,1,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "1,0"))
                                                      (rule "add_literals" (formula "62") (term "0,1,0"))
                                                      (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "26") (term "0,0,1"))
                                                      (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "20") (term "0,0"))
                                                      (rule "applyEq" (formula "63") (term "1,1,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "1,0"))
                                                      (rule "add_literals" (formula "63") (term "0,1,0"))
                                                      (rule "applyEq" (formula "49") (term "1,1,1,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "1,1,0"))
                                                      (rule "add_literals" (formula "49") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,1"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "47") (term "0,0,1"))
                                                      (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "46") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                                      (rule "add_literals" (formula "46") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "46") (term "0,0,1"))
                                                      (rule "applyEq" (formula "57") (term "1,1,0,0,0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,0"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10"))
                                                      (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                                      (rule "add_literals" (formula "10") (term "1,0"))
                                                      (rule "times_zero_1" (formula "10") (term "0"))
                                                      (rule "leq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "1,1,0"))
                                                      (rule "add_literals" (formula "30") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "1,1,0"))
                                                      (rule "add_literals" (formula "27") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "7"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "true_left" (formula "45"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "61") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "34") (term "1,1,1") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "1,1"))
                                                      (rule "add_literals" (formula "34") (term "0,1,1"))
                                                      (rule "add_zero_left" (formula "34") (term "1,1"))
                                                      (rule "applyEq" (formula "21") (term "1") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0") (ifseqformula "9"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "1,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "46") (term "1,0,0,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_invertInEq0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "8"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0"))
                                                      (rule "leq_literals" (formula "24"))
                                                      (rule "closeFalse" (formula "24"))
                                                   )
                                                   (branch "CUT: self.len <= 2 + j_0 FALSE"
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "notLeft" (formula "25"))
                                                      (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "58"))
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "58"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_leqRight" (formula "58"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "45"))
                                                      (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "45"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_0)"))
                                                      (rule "eqSymm" (formula "48") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                                      (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                                      (rule "add_literals" (formula "48") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "17"))
                                                      (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "allLeft" (formula "49") (inst "t=Z(0(#))"))
                                                      (rule "leq_literals" (formula "49") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "eqSymm" (formula "49") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "49") (term "1"))
                                                      (rule "mul_literals" (formula "49") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "49") (term "0,1"))
                                                      (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1"))
                                                      (rule "mul_literals" (formula "49") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "49") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "notLeft" (formula "49"))
                                                      (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), j_0)"))
                                                      (rule "eqSymm" (formula "49") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,1,0"))
                                                      (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "49") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,1"))
                                                      (rule "add_literals" (formula "49") (term "0,0,0,1"))
                                                      (rule "applyEq" (formula "49") (term "1,0,0,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "16"))
                                                      (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "inEqSimp_contradInEq1" (formula "49") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "49") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "49") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "49") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "notLeft" (formula "49"))
                                                      (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "58"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "true_left" (formula "48"))
                                                      (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), k)"))
                                                      (rule "eqSymm" (formula "48") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                                      (rule "add_literals" (formula "48") (term "0,0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                                      (rule "add_literals" (formula "48") (term "0,0,1,0"))
                                                      (rule "applyEq" (formula "48") (term "1,0,0,0") (ifseqformula "40"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "48") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "allLeft" (formula "57") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                                      (rule "eqSymm" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0"))
                                                      (rule "applyEq" (formula "57") (term "1,0,0,0,0,0") (ifseqformula "37"))
                                                      (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "57") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "57") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "57") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "57") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "57") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "allLeft" (formula "58") (inst "t=add(Z(neglit(2(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                                                      (rule "eqSymm" (formula "58") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "58") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "58") (term "0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "58") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "58") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "cut_direct" (formula "45") (term "1"))
                                                      (branch "CUT: self.len <= 2 + i_0 TRUE"
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "applyEq" (formula "65") (term "1,1,0") (ifseqformula "7"))
                                                         (rule "polySimp_addAssoc" (formula "65") (term "1,0"))
                                                         (rule "add_literals" (formula "65") (term "0,1,0"))
                                                         (rule "add_zero_left" (formula "65") (term "1,0"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0"))
                                                         (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                                         (rule "add_zero_left" (formula "26") (term "0,0,1"))
                                                         (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "59") (term "1,1,1,0") (ifseqformula "7"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "1,1,0"))
                                                         (rule "add_literals" (formula "59") (term "0,1,1,0"))
                                                         (rule "add_zero_left" (formula "59") (term "1,1,0"))
                                                         (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8"))
                                                         (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "0"))
                                                         (rule "leq_literals" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "applyEq" (formula "45") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "45"))
                                                         (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                                         (rule "add_literals" (formula "45") (term "1,0"))
                                                         (rule "times_zero_1" (formula "45") (term "0"))
                                                         (rule "qeq_literals" (formula "45"))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "45") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,1"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,1"))
                                                         (rule "add_zero_left" (formula "45") (term "0,0,1"))
                                                         (rule "applyEq" (formula "46") (term "1,1,1,0") (ifseqformula "7"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "1,1,0"))
                                                         (rule "add_literals" (formula "46") (term "0,1,1,0"))
                                                         (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "59") (term "1,1,0") (ifseqformula "7"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "1,0"))
                                                         (rule "add_literals" (formula "59") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "closeTrue" (formula "59"))
                                                      )
                                                      (branch "CUT: self.len <= 2 + i_0 FALSE"
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "inEqSimp_leqRight" (formula "60"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "applyEq" (formula "63") (term "0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "45") (term "1") (ifseqformula "46"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "8") (term "0,0"))
                                                         (rule "qeq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "cut_direct" (formula "23") (term "1"))
                                                         (branch "CUT: k <= 1 TRUE"
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "true_left" (formula "24"))
                                                            (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "23"))
                                                             (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "7") (term "0") (ifseqformula "18"))
                                                            (rule "inEqSimp_commuteLeq" (formula "7"))
                                                            (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "17"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6"))
                                                            (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "16"))
                                                            (rule "add_literals" (formula "18") (term "1"))
                                                            (rule "applyEq" (formula "48") (term "1,1,0") (ifseqformula "16"))
                                                            (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "16"))
                                                            (rule "add_literals" (formula "44") (term "1,0,0"))
                                                            (rule "applyEq" (formula "46") (term "1,1,1") (ifseqformula "16"))
                                                            (rule "add_literals" (formula "46") (term "1,1"))
                                                            (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "16"))
                                                            (rule "add_literals" (formula "38") (term "1,0"))
                                                            (rule "applyEq" (formula "54") (term "1,1,1,0") (ifseqformula "16"))
                                                            (rule "add_literals" (formula "54") (term "1,1,0"))
                                                            (rule "applyEq" (formula "44") (term "1,1,1") (ifseqformula "16"))
                                                            (rule "add_literals" (formula "44") (term "1,1"))
                                                            (rule "applyEq" (formula "24") (term "1,1,1") (ifseqformula "16"))
                                                            (rule "add_literals" (formula "24") (term "1,1"))
                                                            (rule "applyEq" (formula "22") (term "0") (ifseqformula "16"))
                                                            (rule "leq_literals" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "applyEq" (formula "51") (term "1,1,1,0") (ifseqformula "16"))
                                                            (rule "add_literals" (formula "51") (term "1,1,0"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "16"))
                                                            (rule "add_literals" (formula "28") (term "1,0"))
                                                            (rule "applyEq" (formula "39") (term "0") (ifseqformula "13"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "applyEq" (formula "28") (term "0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "59") (term "0") (ifseqformula "39"))
                                                            (rule "applyEq" (formula "60") (term "0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "69") (term "0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "17") (term "1") (ifseqformula "27"))
                                                            (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "27"))
                                                            (rule "applyEq" (formula "55") (term "1") (ifseqformula "27"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "16"))
                                                            (rule "leq_literals" (formula "3") (term "0"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_or_antiSymm1" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "1,0,1,1,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,1,0"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "notLeft" (formula "43"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "16"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "46") (term "0"))
                                                            (rule "add_zero_right" (formula "46") (term "1,1,0"))
                                                            (rule "qeq_literals" (formula "46") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "allLeft" (formula "43") (inst "t=add(Z(1(#)), i_0)"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                                                            (rule "add_literals" (formula "43") (term "0,0,0,1"))
                                                            (rule "add_zero_left" (formula "43") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "43") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (ifseqformula "5"))
                                                            (rule "andLeft" (formula "43"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0"))
                                                            (rule "add_zero_right" (formula "43") (term "0"))
                                                            (rule "leq_literals" (formula "43"))
                                                            (rule "closeFalse" (formula "43"))
                                                         )
                                                         (branch "CUT: k <= 1 FALSE"
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "notLeft" (formula "23"))
                                                            (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "60"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "inEqSimp_leqRight" (formula "60"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                                                            (rule "mul_literals" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "mul_literals" (formula "2") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                             (builtin "One Step Simplification" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_0)"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,1"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,1"))
                                                            (rule "add_zero_left" (formula "50") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "50") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "50") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_contradInEq1" (formula "50") (ifseqformula "12"))
                                                            (rule "andLeft" (formula "50"))
                                                            (rule "inEqSimp_homoInEq1" (formula "50"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                                            (rule "add_literals" (formula "50") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "50") (term "1,0"))
                                                            (rule "add_zero_right" (formula "50") (term "0"))
                                                            (rule "leq_literals" (formula "50"))
                                                            (rule "closeFalse" (formula "50"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "self.len >= 2 + i_0 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "60"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "replace_known_left" (formula "55") (term "1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "true_left" (formula "55"))
                                                (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "true_left" (formula "37"))
                                                (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "inEqSimp_subsumption0" (formula "46") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "46") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "46") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "46") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                (rule "qeq_literals" (formula "28") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "7"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0"))
                                                (rule "add_zero_right" (formula "6") (term "0"))
                                                (rule "leq_literals" (formula "6"))
                                                (rule "closeFalse" (formula "6"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "closeTrue" (formula "25"))
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "25"))
                              (rule "allRight" (formula "25") (inst "sk=f_0"))
                              (rule "allRight" (formula "25") (inst "sk=o_0"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "eqSymm" (formula "30"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "10"))
                              (rule "add_zero_right" (formula "10") (term "0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7"))
                              (rule "add_zero_right" (formula "7") (term "0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "leq_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "false_right" (formula "21"))
                              (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "30"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Null Reference (n_4 = null)"
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "false_right" (formula "26"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "8"))
                           (rule "add_zero_right" (formula "8") (term "0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                           (rule "polySimp_elimOne" (formula "9") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "11"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0"))
                           (rule "leq_literals" (formula "22") (term "0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "false_right" (formula "22"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "nnf_imp2or" (formula "19") (term "0"))
                           (rule "nnf_imp2or" (formula "13") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_imp2or" (formula "20") (term "0"))
                           (rule "nnf_imp2or" (formula "21") (term "0,0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "19") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "20") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "commute_or" (formula "16") (term "0,0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "commute_or_2" (formula "20") (term "0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "21") (term "0,0"))
                           (rule "commute_or" (formula "19") (term "0,0"))
                           (rule "commute_or" (formula "13") (term "0,0"))
                           (rule "commute_or_2" (formula "13") (term "0"))
                           (rule "commute_or" (formula "14") (term "0,0"))
                           (rule "commute_or" (formula "20") (term "0,0"))
                           (rule "commute_or_2" (formula "20") (term "0"))
                           (rule "commute_or" (formula "15") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "21") (term "0,0,0"))
                           (rule "commute_or_2" (formula "21") (term "0,0"))
                           (rule "cnf_rightDist" (formula "16") (term "0"))
                           (rule "distr_forallAnd" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "shift_paren_or" (formula "17") (term "0"))
                           (rule "commute_or" (formula "16") (term "0,0"))
                           (rule "commute_or" (formula "21") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "21") (term "0,0,0"))
                           (rule "commute_or_2" (formula "21") (term "0,0"))
                           (rule "seqGetAlphaCast" (formula "10") (term "0"))
                           (rule "castedGetAny" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "lenNonNegative" (formula "12") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "12"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "seqGetAlphaCast" (formula "18") (term "1,0"))
                           (rule "castedGetAny" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "seqGetAlphaCast" (formula "7") (term "0"))
                           (rule "castedGetAny" (formula "7") (term "0"))
                            (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "allLeft" (formula "19") (inst "t=k"))
                           (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                           (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "7"))
                           (rule "eqSymm" (formula "19") (term "0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "19") (term "0,1"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "allLeft" (formula "15") (inst "t=k"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                           (rule "applyEq" (formula "15") (term "1,0,0,0,0") (ifseqformula "7"))
                           (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                           (rule "mul_literals" (formula "15") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "15") (term "0,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "9"))
                           (rule "andLeft" (formula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0"))
                           (rule "add_literals" (formula "15") (term "0"))
                           (rule "leq_literals" (formula "15"))
                           (rule "closeFalse" (formula "15"))
                        )
                     )
                     (branch "Null Reference (_x = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (_x = null)"
                     (rule "false_right" (formula "26"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (n_1 = null)"
                  (rule "false_right" (formula "26"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_ltToLeq" (formula "9"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "8"))
                  (rule "add_zero_right" (formula "8") (term "0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11"))
                  (rule "add_zero_right" (formula "11") (term "0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                  (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "11"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0"))
                  (rule "leq_literals" (formula "22") (term "0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "false_right" (formula "22"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "13") (term "0"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                  (rule "nnf_imp2or" (formula "19") (term "0"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0,0"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "commute_or_2" (formula "13") (term "0"))
                  (rule "commute_or_2" (formula "15") (term "0"))
                  (rule "commute_or_2" (formula "19") (term "0"))
                  (rule "commute_or_2" (formula "14") (term "0"))
                  (rule "commute_or" (formula "16") (term "0,0"))
                  (rule "commute_or_2" (formula "21") (term "0,0"))
                  (rule "commute_or" (formula "20") (term "0,0"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "commute_or" (formula "13") (term "0,0"))
                  (rule "commute_or_2" (formula "13") (term "0"))
                  (rule "commute_or" (formula "15") (term "0,0"))
                  (rule "commute_or_2" (formula "15") (term "0"))
                  (rule "commute_or" (formula "19") (term "0,0"))
                  (rule "commute_or" (formula "14") (term "0,0"))
                  (rule "commute_or_2" (formula "21") (term "0,0,0"))
                  (rule "commute_or_2" (formula "21") (term "0,0"))
                  (rule "cnf_rightDist" (formula "16") (term "0"))
                  (rule "distr_forallAnd" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "commute_or_2" (formula "16") (term "0"))
                  (rule "shift_paren_or" (formula "17") (term "0"))
                  (rule "commute_or" (formula "16") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "21") (term "0,0,0"))
                  (rule "commute_or_2" (formula "21") (term "0,0"))
                  (rule "lenNonNegative" (formula "12") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                  (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "11"))
                  (rule "leq_literals" (formula "12") (term "0"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "seqGetAlphaCast" (formula "18") (term "1,0"))
                  (rule "castedGetAny" (formula "18") (term "0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "seqGetAlphaCast" (formula "10") (term "0"))
                  (rule "castedGetAny" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "seqGetAlphaCast" (formula "7") (term "0"))
                  (rule "castedGetAny" (formula "7") (term "0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "allLeft" (formula "20") (inst "t=k"))
                  (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                  (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "7"))
                  (rule "eqSymm" (formula "20") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                  (rule "mul_literals" (formula "20") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "20") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "20") (term "0,0,1"))
                  (rule "leq_literals" (formula "20") (term "0,1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "allLeft" (formula "19") (inst "t=k"))
                  (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                  (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "7"))
                  (rule "eqSymm" (formula "19") (term "0,0"))
                  (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "19") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "19") (term "0,0,1"))
                  (rule "leq_literals" (formula "19") (term "0,1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
                  (rule "eqSymm" (formula "23") (term "0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,1,0,0"))
                  (rule "leq_literals" (formula "23") (term "1,0,0"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "allLeft" (formula "14") (inst "t=k"))
                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0") (ifseqformula "7"))
                  (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,1"))
                  (rule "leq_literals" (formula "14") (term "0,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "closeFalse" (formula "14"))
               )
            )
            (branch "Null Reference (_x = null)"
               (rule "false_right" (formula "26"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (_x = null)"
            (rule "false_right" (formula "26"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (d_1 = null)"
         (rule "false_right" (formula "26"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (d = null)"
      (rule "false_right" (formula "26"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
