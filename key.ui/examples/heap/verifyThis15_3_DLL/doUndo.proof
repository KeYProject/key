\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jan 16 00:33:47 CET 2023
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , moreSeqRules-moreSeqRules\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , floatRules-floatRules\\:strictfpOnly , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=50000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation {
	"contract": "DoubleLinkedList[DoubleLinkedList::doUndo(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0",
	"name": "DoubleLinkedList[DoubleLinkedList::doUndo(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0",
	"class": "de.uka.ilkd.key.proof.init.FunctionalOperationContractPO",
 }

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "c2a4d52c2ad58a473b8d4f6ce4c8d074ffe247f6"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "d707dbd7db"))

(autoModeTime "77624143920")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "11") (userinteraction))
 (builtin "One Step Simplification" (formula "4"))
(rule "Class_invariant_axiom_for_DoubleLinkedList" (formula "9") (inst "i_5=i_5") (inst "i_4=i_4") (inst "i_3=i_3") (inst "i_2=i_2") (inst "i_1=i_1") (inst "i_0=i_0") (inst "i=i") (inst "j=j") (ifseqformula "10") (userinteraction))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
 (builtin "One Step Simplification" (formula "14"))
 (builtin "One Step Simplification" (formula "21"))
 (builtin "One Step Simplification" (formula "20"))
 (builtin "One Step Simplification" (formula "19"))
 (builtin "One Step Simplification" (formula "16"))
 (builtin "One Step Simplification" (formula "15"))
 (builtin "One Step Simplification" (formula "13"))
(rule "cut_direct" (formula "18") (term "0,0") (userinteraction))
(branch "CUT: self.head = null TRUE"
    (builtin "One Step Simplification" (formula "19"))
   (rule "true_left" (formula "19"))
   (rule "eqSymm" (formula "19") (term "1,0"))
   (rule "eqSymm" (formula "21") (term "0,1,0,0"))
   (rule "eqSymm" (formula "24") (term "0,0,0,1"))
   (rule "eqSymm" (formula "20") (term "1,0"))
   (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "17"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
   (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "7") (term "1"))
   (rule "mul_literals" (formula "7") (term "1,1"))
   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "7") (term "1"))
   (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
   (rule "castedGetAny" (formula "8") (term "0"))
   (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
   (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
   (rule "castedGetAny" (formula "19") (term "1,0,1,0,0"))
   (rule "castedGetAny" (formula "19") (term "0,0,1,0,0"))
   (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
   (rule "eqSeqEmpty" (formula "9"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "6"))
   (rule "add_zero_right" (formula "6") (term "0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
   (rule "castedGetAny" (formula "18") (term "0,1,0"))
   (rule "eqSymm" (formula "18") (term "1,0"))
   (rule "castedGetAny" (formula "17") (term "0,1,0"))
   (rule "eqSymm" (formula "17") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "7"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "7") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "applyEq" (formula "9") (term "0") (ifseqformula "11"))
   (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "7") (term "1,0"))
   (rule "add_zero_right" (formula "7") (term "0"))
   (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "12") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "11") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "13") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
   (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "17") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "18") (term "1,0,0,1,0,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
   (rule "polySimp_elimOne" (formula "6") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
   (rule "mul_literals" (formula "7") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
   (rule "mul_literals" (formula "12") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
   (rule "mul_literals" (formula "14") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
   (rule "mul_literals" (formula "11") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "mul_literals" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
   (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
   (rule "qeq_literals" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "closeFalse" (formula "7"))
)
(branch "CUT: self.head = null FALSE"
   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "22") (userinteraction))
    (builtin "One Step Simplification" (formula "9"))
   (rule "notLeft" (formula "9") (userinteraction))
   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "21") (userinteraction))
    (builtin "One Step Simplification" (formula "9"))
   (rule "notLeft" (formula "9") (userinteraction))
   (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "22") (userinteraction))
    (builtin "One Step Simplification" (formula "9"))
   (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "22") (userinteraction))
    (builtin "One Step Simplification" (formula "15"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "eqSymm" (formula "25") (term "0,0,0,1"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_doUndo,savedHeapBefore_doUndo"))
    (builtin "One Step Simplification" (formula "25"))
    (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_remove,exc_0,heapAfter_remove,anon_heap_remove") (contract "DoubleLinkedList[DoubleLinkedList::remove(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0"))
   (branch "Post (remove)"
       (builtin "One Step Simplification" (formula "21"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "selectOfAnonEQ" (formula "26") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "26") (term "0,0"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfSingleton" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "selectOfAnonEQ" (formula "29") (term "0,0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "29") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "29") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "elementOfUnion" (formula "29") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "29") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "elementOfUnion" (formula "29") (term "0,0,0,0"))
      (rule "elementOfSingleton" (formula "29") (term "0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "elementOfSingleton" (formula "29") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "selectOfAnonEQ" (formula "27") (term "0,0,1") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "27") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0,0,1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfUnion" (formula "27") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0,0,1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfUnion" (formula "27") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "27") (term "0,0,0,0,1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "selectOfAnonEQ" (formula "28") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "28") (term "0,0"))
      (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfUnion" (formula "28") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "28") (term "1,0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfUnion" (formula "28") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "28") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "selectOfAnonEQ" (formula "27") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "27") (term "0,0"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfUnion" (formula "27") (term "0,0"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfUnion" (formula "27") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "27") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfSingleton" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "selectOfAnonEQ" (formula "28") (term "0,0,1") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "28") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfUnion" (formula "28") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfUnion" (formula "28") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "28") (term "0,0,0,0,1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "selectOfAnonEQ" (formula "30") (term "1,1,0,0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "30") (term "0,1,1,0,0"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,1,1,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,1,1,0,0"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,1,1,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,1,1,0,0"))
      (rule "elementOfSingleton" (formula "30") (term "0,0,1,1,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfSingleton" (formula "30") (term "0,1,1,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "selectOfAnonEQ" (formula "24") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfSingleton" (formula "24") (term "0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "selectOfAnonEQ" (formula "30") (term "0,0,1,0,1,0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "30") (term "0,0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,1,0,1,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,1,0,1,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "30") (term "0,0,0,0,1,0,1,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "selectOfAnonEQ" (formula "25") (term "0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfSingleton" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfSingleton" (formula "25") (term "0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "selectOfAnonEQ" (formula "26") (term "0,0,1,1") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,1,1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,1,1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1,1"))
      (rule "elementOfSingleton" (formula "26") (term "0,0,0,0,1,1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "selectOfAnonEQ" (formula "26") (term "1") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfSingleton" (formula "26") (term "0,0,0,1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "notLeft" (formula "29"))
       (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_unremove,exc_1,heapAfter_unremove,anon_heap_unremove") (contract "DoubleLinkedList[DoubleLinkedList::unremove(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0"))
      (branch "Post (unremove)"
          (builtin "One Step Simplification" (formula "32"))
          (builtin "One Step Simplification" (formula "39"))
         (rule "andLeft" (formula "32"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "34"))
         (rule "selectOfAnonEQ" (formula "36") (term "0,0,1") (ifseqformula "32"))
          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "42")))
         (rule "elementOfUnion" (formula "36") (term "0,0,0,0,1"))
         (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0,1"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "elementOfUnion" (formula "36") (term "0,0,0,0,1"))
         (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0,1"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "elementOfUnion" (formula "36") (term "0,0,0,0,1"))
         (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0,1"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "elementOfSingleton" (formula "36") (term "0,0,0,0,1"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "selectOfAnonEQ" (formula "32") (term "0,1,1,0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
         (rule "elementOfUnion" (formula "32") (term "0,0,1,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfUnion" (formula "32") (term "0,0,1,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfUnion" (formula "32") (term "0,0,0,1,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfSingleton" (formula "32") (term "0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "selectOfAnonEQ" (formula "34") (term "0,1,1,1") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "34") (term "0,0,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,1,1,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,1,1,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,1,1,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "selectOfAnonEQ" (formula "35") (term "0,1") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "42")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "35") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,1"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "elementOfUnion" (formula "35") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,1"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "elementOfUnion" (formula "35") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,1"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "selectOfAnonEQ" (formula "34") (term "0,0,1") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "34") (term "0,0,0,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,0,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,0,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfSingleton" (formula "34") (term "0,0,0,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "selectOfAnonEQ" (formula "32") (term "0,1,0,1,0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
         (rule "elementOfUnion" (formula "32") (term "0,0,1,0,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,1,0,1,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfUnion" (formula "32") (term "0,0,0,1,0,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,0,1,0,1,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfUnion" (formula "32") (term "0,0,0,1,0,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,0,1,0,1,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfSingleton" (formula "32") (term "0,0,0,1,0,1,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "selectOfAnonEQ" (formula "34") (term "2,1,1,1") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "34") (term "0,2,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,2,1,1,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,2,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,2,1,1,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,2,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,2,1,1,1"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "selectOfAnonEQ" (formula "34") (term "0") (ifseqformula "32"))
          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")))
         (rule "elementOfUnion" (formula "34") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "34"))
         (rule "selectOfAnonEQ" (formula "35") (term "0") (ifseqformula "32"))
          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "42")))
         (rule "elementOfUnion" (formula "35") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "elementOfUnion" (formula "35") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "elementOfUnion" (formula "35") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "methodCallEmpty" (formula "44") (term "1") (userinteraction))
         (rule "tryEmpty" (formula "44") (term "1") (userinteraction))
         (rule "emptyModality" (formula "44") (term "1") (userinteraction))
          (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "37")))
         (rule "selectOfAnonEQ" (formula "44") (term "1") (ifseqformula "32"))
          (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "42")))
         (rule "elementOfUnion" (formula "44") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "44") (term "1,0,0,1"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "elementOfUnion" (formula "44") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "44") (term "1,0,0,1"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "elementOfUnion" (formula "44") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "44") (term "1,0,0,1"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "elementOfSingleton" (formula "44") (term "0,0,1"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "applyEq" (formula "44") (term "1") (ifseqformula "34") (userinteraction))
         (rule "applyEq" (formula "44") (term "2,1,1,1") (ifseqformula "25") (userinteraction))
         (rule "applyEq" (formula "44") (term "0,1,1,1") (ifseqformula "24") (userinteraction))
         (rule "applyEq" (formula "44") (term "0,0,1") (ifseqformula "24") (userinteraction))
         (rule "eqSeqConcat" (formula "44") (userinteraction))
         (rule "commute_and_2" (formula "44") (userinteraction))
         (rule "andRight" (formula "44") (userinteraction))
         (branch "Case 1"
            (rule "andRight" (formula "44") (userinteraction))
            (branch "Case 1"
               (rule "eqSymm" (formula "38") (term "0,0"))
               (rule "eqSymm" (formula "26"))
               (rule "eqSymm" (formula "27") (term "0,0"))
               (rule "eqSymm" (formula "32") (term "0,0,1,0,1,0"))
               (rule "eqSymm" (formula "36"))
               (rule "eqSymm" (formula "28") (term "0,0"))
               (rule "eqSymm" (formula "29") (term "0,1,0"))
               (rule "eqSymm" (formula "32") (term "0,0,1,1,0"))
               (rule "eqSymm" (formula "18") (term "1,0"))
               (rule "eqSymm" (formula "19") (term "1,0"))
               (rule "eqSymm" (formula "34"))
               (rule "eqSymm" (formula "20") (term "0,1,0,0"))
               (rule "eqSymm" (formula "24"))
               (rule "eqSymm" (formula "26") (term "0,1"))
               (rule "polySimp_elimSub" (formula "28") (term "1,0,1"))
               (rule "mul_literals" (formula "28") (term "1,1,0,1"))
               (rule "polySimp_elimSub" (formula "44") (term "2,1,0,1,1"))
               (rule "mul_literals" (formula "44") (term "1,2,1,0,1,1"))
               (rule "polySimp_elimSub" (formula "7") (term "1"))
               (rule "mul_literals" (formula "7") (term "1,1"))
               (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
               (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "25") (term "1"))
               (rule "mul_literals" (formula "25") (term "1,1"))
               (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
               (rule "polySimp_homoEq" (formula "44"))
               (rule "polySimp_addComm0" (formula "35") (term "1"))
               (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "28") (term "1,0,1"))
               (rule "polySimp_addComm0" (formula "7") (term "1"))
               (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "25") (term "1"))
               (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "44") (term "0"))
               (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "44") (term "1,1,0,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "44") (term "2,1,0,1,0"))
               (rule "polySimp_addComm0" (formula "44") (term "0,0"))
               (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
               (rule "castedGetAny" (formula "8") (term "0"))
               (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
               (rule "castedGetAny" (formula "9") (term "0"))
               (rule "castedGetAny" (formula "27") (term "1"))
               (rule "eqSeqEmpty" (formula "40"))
               (rule "ifEqualsNull" (formula "38"))
               (rule "orRight" (formula "38"))
               (rule "castedGetAny" (formula "26") (term "1,0,0,1,1,0,0"))
               (rule "castedGetAny" (formula "26") (term "1,1,0"))
               (rule "castedGetAny" (formula "26") (term "0,0,0,1,0,0"))
               (rule "castedGetAny" (formula "26") (term "0,0,0,0"))
               (rule "castedGetAny" (formula "26") (term "1,2,0"))
               (rule "castedGetAny" (formula "36") (term "0"))
               (rule "castedGetAny" (formula "29") (term "0,0,1,0"))
               (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
               (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
               (rule "castedGetAny" (formula "20") (term "1,0,1,0,0"))
               (rule "castedGetAny" (formula "20") (term "0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10"))
               (rule "add_zero_right" (formula "10") (term "0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
               (rule "castedGetAny" (formula "19") (term "0,1,0"))
               (rule "eqSymm" (formula "19") (term "1,0"))
               (rule "castedGetAny" (formula "28") (term "1"))
               (rule "castedGetAny" (formula "17") (term "1,0"))
               (rule "castedGetAny" (formula "18") (term "0,1,0"))
               (rule "eqSymm" (formula "18") (term "1,0"))
               (rule "lenOfSeqConcat" (formula "45") (term "1,0"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0"))
               (rule "polySimp_addComm1" (formula "45") (term "0,0"))
               (rule "polySimp_addComm0" (formula "45") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
               (rule "lenOfSeqSub" (formula "45") (term "1,0"))
               (rule "polySimp_elimSub" (formula "45") (term "1,1,0"))
               (rule "polySimp_addComm1" (formula "45") (term "1,1,0"))
               (rule "lenOfSeqSub" (formula "45") (term "1,0,0"))
               (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0"))
               (rule "times_zero_2" (formula "45") (term "1,1,1,0,0"))
               (rule "add_zero_right" (formula "45") (term "1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "45") (term "0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "45") (term "0,1,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "45") (term "0,0,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0"))
               (rule "replace_known_left" (formula "45") (term "0,1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "polySimp_addComm1" (formula "45") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0"))
               (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "45") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,1,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
               (rule "replace_known_left" (formula "45") (term "0,1,0") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "polySimp_addComm1" (formula "45") (term "0"))
               (rule "polySimp_addComm1" (formula "45") (term "0,0"))
               (rule "polySimp_pullOutFactor2" (formula "45") (term "0,0,0"))
               (rule "add_literals" (formula "45") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "45") (term "0,0,0"))
               (rule "add_zero_left" (formula "45") (term "0,0"))
               (rule "applyEq" (formula "41") (term "0") (ifseqformula "11"))
               (rule "applyEq" (formula "34") (term "2,1,1,0") (ifseqformula "25"))
               (rule "applyEq" (formula "32") (term "0,1,1,0") (ifseqformula "27"))
               (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "11"))
               (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
               (rule "add_literals" (formula "44") (term "1,0"))
               (rule "times_zero_1" (formula "44") (term "0"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "closeTrue" (formula "44"))
            )
            (branch "Case 2"
               (rule "eqTermCut" (formula "44") (term "2,0,0,0,1,0") (inst "s=seqLen(seqSub(seqConcat(seqSub(Seq::select(heap,
                                           self,
                                           DoubleLinkedList::$s),
                               Z(0(#)),
                               k),
                        seqSub(Seq::select(heap,
                                           self,
                                           DoubleLinkedList::$s),
                               add(k, Z(1(#))),
                               int::select(heap,
                                           self,
                                           DoubleLinkedList::$len))),
              Z(0(#)),
              k))") (userinteraction))
               (branch "Assume k = seqSub(seqConcat(seqSub(self.s, 0, k), seqSub(self.s, k + 1, self.len)), 0, k).length"
                  (rule "applyEqReverse" (formula "45") (term "1,0") (ifseqformula "1") (userinteraction))
                  (rule "eqSeqConcat" (formula "45") (userinteraction))
                  (rule "cut_direct" (formula "45") (term "0,0") (userinteraction))
                  (branch "CUT: seqSub(self.s, k, self.s.length).length = seqSingleton(x).length + seqSub(seqConcat(seqSub(self.s, 0, k), seqSub(self.s, k + 1, self.len)), k, self.len - 1).length TRUE"
                      (builtin "One Step Simplification" (formula "46") (userinteraction))
                     (rule "andRight" (formula "46") (userinteraction))
                     (branch "Case 1"
                        (rule "eqSeqSingleton" (formula "46") (userinteraction))
                        (rule "andRight" (formula "46") (userinteraction))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "20") (term "1,0"))
                           (rule "eqSymm" (formula "21") (term "1,0"))
                           (rule "eqSymm" (formula "22") (term "0,1,0,0"))
                           (rule "eqSymm" (formula "26"))
                           (rule "eqSymm" (formula "30") (term "0,0"))
                           (rule "eqSymm" (formula "31") (term "0,1,0"))
                           (rule "eqSymm" (formula "2"))
                           (rule "eqSymm" (formula "34") (term "0,0,1,1,0"))
                           (rule "eqSymm" (formula "40") (term "0,0"))
                           (rule "eqSymm" (formula "36"))
                           (rule "eqSymm" (formula "28"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "eqSymm" (formula "34") (term "0,0,1,0,1,0"))
                           (rule "eqSymm" (formula "38"))
                           (rule "eqSymm" (formula "28") (term "0,1"))
                           (rule "polySimp_elimSub" (formula "19") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "1,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "27") (term "1"))
                           (rule "mul_literals" (formula "27") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "9") (term "1"))
                           (rule "mul_literals" (formula "9") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "30") (term "1,0,1"))
                           (rule "mul_literals" (formula "30") (term "1,1,0,1"))
                           (rule "polySimp_homoEq" (formula "1"))
                           (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,2,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "37") (term "1"))
                           (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "19") (term "1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "1"))
                           (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "9") (term "1"))
                           (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "30") (term "1,0,1"))
                           (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "2,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "castedGetAny" (formula "15") (term "1,0,0,1,0"))
                           (rule "lenOfSeqSub" (formula "46") (term "0"))
                           (rule "sub_literals" (formula "46") (term "1,0"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "equal_literals" (formula "46") (term "1"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "less_literals" (formula "46"))
                           (rule "closeTrue" (formula "46"))
                        )
                        (branch "Case 2"
                           (rule "getOfSeqSub" (formula "46") (term "0") (userinteraction))
                           (rule "ifthenelse_split" (formula "46") (term "0") (userinteraction))
                           (branch "0 <= 0 & 0 < 1 - 0 TRUE"
                              (rule "add_zero_right" (formula "47") (term "1,0") (userinteraction))
                              (rule "applyEq" (formula "47") (term "2,0,0") (ifseqformula "14") (userinteraction))
                              (rule "getOfSeqSub" (formula "47") (term "0") (userinteraction))
                              (rule "ifthenelse_split" (formula "47") (term "0") (userinteraction))
                              (branch "0 <= 0 & 0 < self.len - k TRUE"
                                 (rule "add_zero_left" (formula "48") (term "1,0") (userinteraction))
                                 (rule "ifEqualsNull" (formula "42") (userinteraction))
                                 (rule "orRight" (formula "42") (userinteraction))
                                 (rule "castedGetAny" (formula "13") (term "0") (userinteraction))
                                 (rule "castedGetAny" (formula "12") (term "0") (userinteraction))
                                 (rule "allLeft" (formula "19") (inst "t=k<<origin(\"User_Interaction @ node 39588 (allLeft)\",\"[]\")>>") (userinteraction))
                                 (rule "impLeft" (formula "19") (userinteraction))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "sub_literals" (formula "2") (term "1"))
                                    (rule "less_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "eqSymm" (formula "30") (term "0,0"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "eqSymm" (formula "43") (term "0,0"))
                                    (rule "eqSymm" (formula "42") (term "0"))
                                    (rule "eqSymm" (formula "35") (term "0,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "eqSymm" (formula "31") (term "0,0"))
                                    (rule "eqSymm" (formula "32") (term "0,1,0"))
                                    (rule "eqSymm" (formula "35") (term "0,0,1,1,0"))
                                    (rule "eqSymm" (formula "22") (term "1,0"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "eqSymm" (formula "23") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "27"))
                                    (rule "eqSymm" (formula "29") (term "0,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "1"))
                                    (rule "mul_literals" (formula "28") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "31") (term "1,0,1"))
                                    (rule "mul_literals" (formula "31") (term "1,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "20") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "10") (term "1"))
                                    (rule "mul_literals" (formula "10") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "2,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "1,2,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_homoEq" (formula "2"))
                                    (rule "polySimp_addComm0" (formula "38") (term "1"))
                                    (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "1"))
                                    (rule "polySimp_addComm0" (formula "31") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "20") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1"))
                                    (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "1"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "2,0,1,0"))
                                    (rule "castedGetAny" (formula "16") (term "1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "30") (term "1"))
                                    (rule "eqSeqEmpty" (formula "45"))
                                    (rule "castedGetAny" (formula "17") (term "1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "29") (term "1,2,0"))
                                    (rule "castedGetAny" (formula "29") (term "1,1,0"))
                                    (rule "castedGetAny" (formula "29") (term "0,0,0,0"))
                                    (rule "castedGetAny" (formula "29") (term "0,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "29") (term "1,0,0,1,1,0,0"))
                                    (rule "castedGetAny" (formula "39") (term "0"))
                                    (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "32") (term "0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13"))
                                    (rule "add_zero_right" (formula "13") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "22") (term "1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9"))
                                    (rule "add_zero_right" (formula "9") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "23") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                                    (rule "castedGetAny" (formula "23") (term "1,0,1,0,0"))
                                    (rule "lenOfSeqSub" (formula "3") (term "0"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                    (rule "times_zero_2" (formula "3") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "eqSymm" (formula "3") (term "1"))
                                    (rule "castedGetAny" (formula "22") (term "0,1,0"))
                                    (rule "eqSymm" (formula "22") (term "1,0"))
                                    (rule "castedGetAny" (formula "31") (term "1"))
                                    (rule "castedGetAny" (formula "20") (term "1,0"))
                                    (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "lenOfSeqSub" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,0,1,0,0"))
                                    (rule "lenOfSeqSub" (formula "2") (term "1,0"))
                                    (rule "replace_known_left" (formula "2") (term "0,1,0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_geqRight" (formula "40"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "0,1,0,0,0,1,0") (ifseqformula "14"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,1,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "31"))
                                    (rule "applyEq" (formula "44") (term "0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "37") (term "2,1,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "35") (term "0,1,0,1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "28"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "1"))
                                    (rule "add_literals" (formula "38") (term "0,1"))
                                    (rule "add_zero_left" (formula "38") (term "1"))
                                    (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "28"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                    (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "14"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,0"))
                                    (rule "times_zero_1" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "12"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0"))
                                    (rule "leq_literals" (formula "42") (term "0"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "false_right" (formula "42"))
                                    (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "closeFalse" (formula "8"))
                                 )
                                 (branch "Case 2"
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "castAdd" (formula "44") (term "0") (ifseqformula "20") (userinteraction))
                                    (rule "castAdd" (formula "52") (term "0") (ifseqformula "20") (userinteraction))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "sub_literals" (formula "2") (term "1"))
                                    (rule "less_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "eqSymm" (formula "43") (term "0"))
                                    (rule "eqSymm" (formula "31") (term "0,0"))
                                    (rule "eqSymm" (formula "33") (term "0,1,0"))
                                    (rule "eqSymm" (formula "44") (term "0,0"))
                                    (rule "eqSymm" (formula "24") (term "0,1,0,0"))
                                    (rule "eqSymm" (formula "22") (term "1,0"))
                                    (rule "eqSymm" (formula "32") (term "0,0"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "eqSymm" (formula "36") (term "0,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "36") (term "0,0,1,1,0"))
                                    (rule "eqSymm" (formula "23") (term "1,0"))
                                    (rule "eqSymm" (formula "40"))
                                    (rule "eqSymm" (formula "38"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "eqSymm" (formula "30") (term "0,1"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "29") (term "1"))
                                    (rule "mul_literals" (formula "29") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "32") (term "1,0,1"))
                                    (rule "mul_literals" (formula "32") (term "1,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "10") (term "1"))
                                    (rule "mul_literals" (formula "10") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1"))
                                    (rule "polySimp_elimSub" (formula "2") (term "2,0,1,1"))
                                    (rule "mul_literals" (formula "2") (term "1,2,0,1,1"))
                                    (rule "polySimp_elimSub" (formula "22") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_homoEq" (formula "2"))
                                    (rule "polySimp_addComm0" (formula "39") (term "1"))
                                    (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "1"))
                                    (rule "polySimp_addComm0" (formula "32") (term "1,0,1"))
                                    (rule "polySimp_addComm0" (formula "10") (term "1"))
                                    (rule "polySimp_addComm0" (formula "1") (term "1"))
                                    (rule "polySimp_addComm0" (formula "22") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "2,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "castedGetAny" (formula "42") (term "0"))
                                    (rule "eqSeqEmpty" (formula "46"))
                                    (rule "castedGetAny" (formula "16") (term "1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "50") (term "0"))
                                    (rule "close" (formula "50") (ifseqformula "11"))
                                 )
                              )
                              (branch "0 <= 0 & 0 < self.len - k FALSE"
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "castDel" (formula "48") (term "0"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "leq_literals" (formula "47") (term "0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "sub_literals" (formula "1") (term "1"))
                                 (rule "less_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "eqSymm" (formula "30") (term "0,0"))
                                 (rule "eqSymm" (formula "31") (term "0,1,0"))
                                 (rule "eqSymm" (formula "34") (term "0,0,1,1,0"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "eqSymm" (formula "29") (term "0,0"))
                                 (rule "eqSymm" (formula "40") (term "0,0"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "eqSymm" (formula "20") (term "1,0"))
                                 (rule "eqSymm" (formula "34") (term "0,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "38"))
                                 (rule "eqSymm" (formula "21") (term "1,0"))
                                 (rule "eqSymm" (formula "22") (term "0,1,0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "eqSymm" (formula "28") (term "0,1"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "27") (term "1"))
                                 (rule "mul_literals" (formula "27") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "9") (term "1"))
                                 (rule "mul_literals" (formula "9") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "30") (term "1,0,1"))
                                 (rule "mul_literals" (formula "30") (term "1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "1") (term "2,0,1,1"))
                                 (rule "mul_literals" (formula "1") (term "1,2,0,1,1"))
                                 (rule "polySimp_elimSub" (formula "46") (term "1"))
                                 (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_homoEq" (formula "1"))
                                 (rule "polySimp_addComm0" (formula "37") (term "1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "1"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1"))
                                 (rule "polySimp_addComm0" (formula "30") (term "1,0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "46") (term "1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "2,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "castedGetAny" (formula "16") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "29") (term "1"))
                                 (rule "eqSeqEmpty" (formula "42"))
                                 (rule "castedGetAny" (formula "15") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "11") (term "0"))
                                 (rule "castedGetAny" (formula "10") (term "0"))
                                 (rule "castedGetAny" (formula "31") (term "0,0,1,0"))
                                 (rule "castedGetAny" (formula "28") (term "1,0,0,1,1,0,0"))
                                 (rule "castedGetAny" (formula "28") (term "1,2,0"))
                                 (rule "castedGetAny" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "28") (term "1,1,0"))
                                 (rule "castedGetAny" (formula "28") (term "0,0,0,0"))
                                 (rule "ifEqualsNull" (formula "40"))
                                 (rule "orRight" (formula "40"))
                                 (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                 (rule "castedGetAny" (formula "38") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8"))
                                 (rule "add_zero_right" (formula "8") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12"))
                                 (rule "add_zero_right" (formula "12") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "22") (term "1,0,1,0,0"))
                                 (rule "castedGetAny" (formula "22") (term "0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0"))
                                 (rule "lenOfSeqSub" (formula "2") (term "0"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                 (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "eqSymm" (formula "2") (term "1"))
                                 (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                 (rule "eqSymm" (formula "21") (term "1,0"))
                                 (rule "castedGetAny" (formula "30") (term "1"))
                                 (rule "castedGetAny" (formula "19") (term "1,0"))
                                 (rule "castedGetAny" (formula "20") (term "0,1,0"))
                                 (rule "eqSymm" (formula "20") (term "1,0"))
                                 (rule "lenOfSeqSub" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "1") (term "1,0,1,0,0"))
                                 (rule "lenOfSeqSub" (formula "1") (term "1,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_ltRight" (formula "47"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "9"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0,0,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "34") (term "0,1,1,0") (ifseqformula "29"))
                                 (rule "applyEq" (formula "2") (term "1,1,0,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "43") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "34") (term "0,1,0,1,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "28") (term "1") (ifseqformula "30"))
                                 (rule "applyEq" (formula "36") (term "2,1,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "27"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                 (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "27"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "1"))
                                 (rule "add_literals" (formula "37") (term "0,1"))
                                 (rule "add_zero_left" (formula "37") (term "1"))
                                 (rule "polySimp_sepNegMonomial" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "polySimp_homoEq" (formula "2") (term "1"))
                                 (rule "times_zero_2" (formula "2") (term "1,0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_contradEq7" (formula "2") (term "1") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                 (rule "leq_literals" (formula "2") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "12"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0"))
                                 (rule "leq_literals" (formula "42") (term "0"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "false_right" (formula "42"))
                                 (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "9"))
                                 (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0"))
                                 (rule "add_zero_right" (formula "9") (term "0"))
                                 (rule "leq_literals" (formula "9"))
                                 (rule "closeFalse" (formula "9"))
                              )
                           )
                           (branch "0 <= 0 & 0 < 1 - 0 FALSE"
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "47") (term "0"))
                              (rule "leq_literals" (formula "46") (term "0"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "sub_literals" (formula "46") (term "1"))
                              (rule "less_literals" (formula "46"))
                              (rule "closeTrue" (formula "46"))
                           )
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "2"))
                        (rule "eqSymm" (formula "40") (term "0,0"))
                        (rule "eqSymm" (formula "30") (term "0,0"))
                        (rule "eqSymm" (formula "31") (term "0,1,0"))
                        (rule "eqSymm" (formula "46"))
                        (rule "eqSymm" (formula "34") (term "0,0,1,1,0"))
                        (rule "eqSymm" (formula "36"))
                        (rule "eqSymm" (formula "28"))
                        (rule "eqSymm" (formula "29") (term "0,0"))
                        (rule "eqSymm" (formula "20") (term "1,0"))
                        (rule "eqSymm" (formula "34") (term "0,0,1,0,1,0"))
                        (rule "eqSymm" (formula "38"))
                        (rule "eqSymm" (formula "21") (term "1,0"))
                        (rule "eqSymm" (formula "22") (term "0,1,0,0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "eqSymm" (formula "28") (term "0,1"))
                        (rule "polySimp_elimSub" (formula "30") (term "1,0,1"))
                        (rule "mul_literals" (formula "30") (term "1,1,0,1"))
                        (rule "polySimp_elimSub" (formula "9") (term "1"))
                        (rule "mul_literals" (formula "9") (term "1,1"))
                        (rule "polySimp_elimSub" (formula "19") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "19") (term "1,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "27") (term "1"))
                        (rule "mul_literals" (formula "27") (term "1,1"))
                        (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                        (rule "polySimp_homoEq" (formula "1"))
                        (rule "polySimp_elimSub" (formula "46") (term "2,0"))
                        (rule "mul_literals" (formula "46") (term "1,2,0"))
                        (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "2,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,2,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "37") (term "1"))
                        (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "46") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "30") (term "1,0,1"))
                        (rule "polySimp_addComm0" (formula "9") (term "1"))
                        (rule "polySimp_addComm0" (formula "19") (term "1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "27") (term "1"))
                        (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "46") (term "2,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "2,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "castedGetAny" (formula "16") (term "1,0,0,1,0"))
                        (rule "castedGetAny" (formula "10") (term "0"))
                        (rule "castedGetAny" (formula "15") (term "1,0,0,1,0"))
                        (rule "castedGetAny" (formula "11") (term "0"))
                        (rule "eqSeqEmpty" (formula "42"))
                        (rule "castedGetAny" (formula "29") (term "1"))
                        (rule "ifEqualsNull" (formula "40"))
                        (rule "orRight" (formula "40"))
                        (rule "castedGetAny" (formula "31") (term "0,0,1,0"))
                        (rule "lenOfSeqSub" (formula "47") (term "2,1"))
                        (rule "eqSymm" (formula "47"))
                        (rule "polySimp_elimSub" (formula "47") (term "1,2,0"))
                        (rule "polySimp_addComm0" (formula "47") (term "1,2,0"))
                        (rule "castedGetAny" (formula "28") (term "0,0,0,0"))
                        (rule "castedGetAny" (formula "28") (term "1,2,0"))
                        (rule "castedGetAny" (formula "28") (term "1,0,0,1,1,0,0"))
                        (rule "castedGetAny" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "castedGetAny" (formula "28") (term "1,1,0"))
                        (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                        (rule "castedGetAny" (formula "38") (term "0"))
                        (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                        (rule "castedGetAny" (formula "22") (term "0,0,1,0,0"))
                        (rule "castedGetAny" (formula "22") (term "1,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12"))
                        (rule "add_zero_right" (formula "12") (term "0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8"))
                        (rule "add_zero_right" (formula "8") (term "0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0"))
                        (rule "lenOfSeqSub" (formula "2") (term "0"))
                        (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                        (rule "times_zero_2" (formula "2") (term "1,1,0"))
                        (rule "add_zero_right" (formula "2") (term "1,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "2") (term "1"))
                        (rule "castedGetAny" (formula "21") (term "0,1,0"))
                        (rule "eqSymm" (formula "21") (term "1,0"))
                        (rule "castedGetAny" (formula "30") (term "1"))
                        (rule "castedGetAny" (formula "19") (term "1,0"))
                        (rule "castedGetAny" (formula "20") (term "0,1,0"))
                        (rule "eqSymm" (formula "20") (term "1,0"))
                        (rule "lenOfSeqSub" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,0,1,0,0"))
                        (rule "lenOfSeqSub" (formula "1") (term "1,0"))
                        (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "47") (term "0,2,0"))
                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,2,0"))
                        (rule "polySimp_addComm1" (formula "47") (term "0,0,2,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
                        (rule "applyEq" (formula "1") (term "0,1,0,0,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "46") (term "0,1,0,0,2,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "46") (term "1,1,2,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "46") (term "2,0,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "42") (term "0") (ifseqformula "12"))
                        (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "25"))
                        (rule "applyEq" (formula "27") (term "1") (ifseqformula "29"))
                        (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "1") (term "1,1,0,1,0") (ifseqformula "12"))
                        (rule "applyEq" (formula "33") (term "0,1,0,1,0") (ifseqformula "29"))
                        (rule "applyEq" (formula "35") (term "2,1,1,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "26"))
                        (rule "polySimp_addAssoc" (formula "36") (term "1"))
                        (rule "add_literals" (formula "36") (term "0,1"))
                        (rule "add_zero_left" (formula "36") (term "1"))
                        (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "26"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "polySimp_homoEq" (formula "1") (term "1"))
                        (rule "times_zero_2" (formula "1") (term "1,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0,0,2,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "0,0,2,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                        (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "11"))
                        (rule "times_zero_1" (formula "41") (term "1,0,0"))
                        (rule "add_zero_right" (formula "41") (term "0,0"))
                        (rule "leq_literals" (formula "41") (term "0"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "false_right" (formula "41"))
                        (rule "inEqSimp_contradEq7" (formula "1") (term "1") (ifseqformula "8"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "leq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_left" (formula "44") (term "0,2,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "43") (inst "iv=iv"))
                        (rule "lenOfSeqSub" (formula "43") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "43") (term "1,0,0"))
                        (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "43") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "43") (term "0,1,0,0"))
                        (rule "lenOfSeqSub" (formula "43") (term "1,0"))
                        (rule "eqSymm" (formula "43") (term "0"))
                        (rule "polySimp_elimSub" (formula "43") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "43") (term "1,0,0"))
                        (rule "lenOfSeqSub" (formula "43") (term "1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "43") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "43") (term "1,1,1,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "43") (term "1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "43") (term "0,1,1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                        (rule "eqSymm" (formula "43") (term "0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "43") (term "0,0,1,1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,1,0,0,1"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                        (rule "eqSymm" (formula "43") (term "0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,0"))
                        (rule "eqSymm" (formula "43") (term "0"))
                        (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "allRight" (formula "43") (inst "sk=iv_0"))
                        (rule "impRight" (formula "43"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "getOfSeqConcatEQ" (formula "28") (term "1") (ifseqformula "26"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,2,1"))
                        (rule "lenOfSeqSub" (formula "28") (term "1,0,1"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1"))
                        (rule "times_zero_2" (formula "28") (term "1,1,1,0,1"))
                        (rule "add_zero_right" (formula "28") (term "1,1,0,1"))
                        (rule "lenOfSeqSub" (formula "28") (term "0,1,1,2,1"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,0,1,1,2,1"))
                        (rule "times_zero_2" (formula "28") (term "1,1,0,1,1,2,1"))
                        (rule "add_zero_right" (formula "28") (term "1,0,1,1,2,1"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,1"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,2,1"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,2,1"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,2,1"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                        (rule "add_zero_left" (formula "28") (term "0,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,1,2,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1,2,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,2,1"))
                        (rule "replace_known_left" (formula "28") (term "0,0,1,1,2,1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "1,2,1"))
                        (rule "add_literals" (formula "28") (term "1,1,1,2,1"))
                        (rule "times_zero_1" (formula "28") (term "1,1,2,1"))
                        (rule "add_literals" (formula "28") (term "1,2,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,1"))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                        (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0,1"))
                        (rule "add_literals" (formula "28") (term "1,0,0,1"))
                        (rule "times_zero_1" (formula "28") (term "0,0,1"))
                        (rule "leq_literals" (formula "28") (term "0,1"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "getOfSeqConcatEQ" (formula "34") (term "0,1,1,0") (ifseqformula "26"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,2,0,1,1,0"))
                        (rule "lenOfSeqSub" (formula "34") (term "1,0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "34") (term "1,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,1,0"))
                        (rule "lenOfSeqSub" (formula "34") (term "0,1,1,2,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,0,1,1,2,0,1,1,0"))
                        (rule "times_zero_2" (formula "34") (term "1,1,0,1,1,2,0,1,1,0"))
                        (rule "add_zero_right" (formula "34") (term "1,0,1,1,2,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,2,0,1,1,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,1,1,2,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1,2,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,1,2,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,1,2,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,1,2,0,1,1,0"))
                        (rule "replace_known_left" (formula "34") (term "0,0,1,1,2,0,1,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "polySimp_pullOutFactor1" (formula "34") (term "1,2,0,1,1,0"))
                        (rule "add_literals" (formula "34") (term "1,1,2,0,1,1,0"))
                        (rule "times_zero_1" (formula "34") (term "1,2,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,0,0,0,1,1,0"))
                        (rule "replace_known_left" (formula "34") (term "0,0,0,0,1,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "leq_literals" (formula "34") (term "0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "getOfSeqConcatEQ" (formula "29") (term "1") (ifseqformula "26"))
                        (rule "eqSymm" (formula "29"))
                        (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
                        (rule "lenOfSeqSub" (formula "29") (term "1,0,0"))
                        (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
                        (rule "lenOfSeqSub" (formula "29") (term "0,1,1,2,0"))
                        (rule "polySimp_elimSub" (formula "29") (term "1,0,1,1,2,0"))
                        (rule "times_zero_2" (formula "29") (term "1,1,0,1,1,2,0"))
                        (rule "add_zero_right" (formula "29") (term "1,0,1,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,1,2,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0,0,1,1,2,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,1,2,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,1,2,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,1,2,0"))
                        (rule "replace_known_left" (formula "29") (term "0,0,1,1,2,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_pullOutFactor1" (formula "29") (term "1,2,0"))
                        (rule "add_literals" (formula "29") (term "1,1,2,0"))
                        (rule "times_zero_1" (formula "29") (term "1,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,0,0,0"))
                        (rule "replace_known_left" (formula "29") (term "0,0,1,0,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                        (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0,0"))
                        (rule "leq_literals" (formula "29") (term "0,0"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "eqSymm" (formula "29"))
                        (rule "getOfSeqConcatEQ" (formula "31") (term "0,0,1,0") (ifseqformula "26"))
                        (rule "polySimp_elimSub" (formula "31") (term "1,2,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "1,2,0,0,1,0"))
                        (rule "lenOfSeqSub" (formula "31") (term "1,0,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0,0,1,0"))
                        (rule "times_zero_2" (formula "31") (term "1,1,1,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "1,1,0,0,0,1,0"))
                        (rule "lenOfSeqSub" (formula "31") (term "0,0,1,2,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "1,0,0,1,2,0,0,1,0"))
                        (rule "times_zero_2" (formula "31") (term "1,1,0,0,1,2,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "1,0,0,1,2,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,2,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,1,2,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,2,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0,1,2,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,2,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,0,0,0,1,2,0,0,1,0"))
                        (rule "replace_known_left" (formula "31") (term "0,0,0,1,2,0,0,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,0,0,0,0,0,1,0"))
                        (rule "replace_known_left" (formula "31") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                        (rule "getOfSeqConcatEQ" (formula "30") (term "1") (ifseqformula "26"))
                        (rule "eqSymm" (formula "30"))
                        (rule "polySimp_elimSub" (formula "30") (term "1,2,0"))
                        (rule "lenOfSeqSub" (formula "30") (term "1,0,0"))
                        (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
                        (rule "lenOfSeqSub" (formula "30") (term "0,1,1,2,0"))
                        (rule "polySimp_elimSub" (formula "30") (term "1,0,1,1,2,0"))
                        (rule "mul_literals" (formula "30") (term "1,1,0,1,1,2,0"))
                        (rule "add_zero_right" (formula "30") (term "1,0,1,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,1,2,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,1,1,2,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,1,2,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,1,2,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,1,2,0"))
                        (rule "replace_known_left" (formula "30") (term "0,0,1,1,2,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "polySimp_pullOutFactor1b" (formula "30") (term "1,2,0"))
                        (rule "add_literals" (formula "30") (term "1,1,1,2,0"))
                        (rule "times_zero_1" (formula "30") (term "1,1,2,0"))
                        (rule "add_zero_right" (formula "30") (term "1,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,0,0,0"))
                        (rule "replace_known_left" (formula "30") (term "0,0,1,0,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,0"))
                        (rule "add_literals" (formula "30") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "30") (term "0,0,0"))
                        (rule "leq_literals" (formula "30") (term "0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "eqSymm" (formula "30"))
                        (rule "getOfSeqConcatEQ" (formula "38") (term "0") (ifseqformula "36"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
                        (rule "lenOfSeqSub" (formula "38") (term "1,0,0"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0"))
                        (rule "times_zero_2" (formula "38") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "38") (term "1,1,0,0"))
                        (rule "lenOfSeqSub" (formula "38") (term "0,1,1,2,0"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,0,1,1,2,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,0,1,1,2,0"))
                        (rule "add_zero_right" (formula "38") (term "1,0,1,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,1,2,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,0,1,1,2,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,1,2,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,1,2,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,1,2,0"))
                        (rule "replace_known_left" (formula "38") (term "0,0,1,1,2,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "polySimp_pullOutFactor1" (formula "38") (term "1,2,0"))
                        (rule "add_literals" (formula "38") (term "1,1,2,0"))
                        (rule "times_zero_1" (formula "38") (term "1,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,0,0,0"))
                        (rule "replace_known_left" (formula "38") (term "0,0,1,0,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                        (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0"))
                        (rule "leq_literals" (formula "38") (term "0,0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "subSeqConcatEQ" (formula "36") (term "0,0") (ifseqformula "26"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,1,0,0"))
                        (rule "add_zero_left" (formula "36") (term "2,1,1,0,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "1,2,0,0,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,0,0"))
                        (rule "times_zero_2" (formula "36") (term "1,1,1,2,0,0,0"))
                        (rule "add_zero_right" (formula "36") (term "1,1,2,0,0,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "0,0,2,0,0,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,0,0,2,0,0,0"))
                        (rule "times_zero_2" (formula "36") (term "1,1,0,0,2,0,0,0"))
                        (rule "add_zero_right" (formula "36") (term "1,0,0,2,0,0,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "1,0,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0,0"))
                        (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,0,0"))
                        (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,0,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "0,1,2,1,0,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,0,1,2,1,0,0"))
                        (rule "mul_literals" (formula "36") (term "1,1,0,1,2,1,0,0"))
                        (rule "add_zero_right" (formula "36") (term "1,0,1,2,1,0,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "0,2,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,0,2,1,1,0,0"))
                        (rule "mul_literals" (formula "36") (term "1,1,0,2,1,1,0,0"))
                        (rule "add_zero_right" (formula "36") (term "1,0,2,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,2,0,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0,0,2,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,2,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,1,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,2,1,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0,1,2,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,2,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,2,1,1,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0,2,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,2,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,2,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,2,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,2,0,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,1,2,0,0,0"))
                        (rule "replace_known_left" (formula "36") (term "0,1,2,0,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,2,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,2,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0,2,1,1,0,0"))
                        (rule "replace_known_left" (formula "36") (term "0,0,2,1,1,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0,0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0,0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0,0,1,1,0,0"))
                        (rule "replace_known_left" (formula "36") (term "0,0,1,0,0,1,1,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,2,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,2,1,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,2,1,0,0"))
                        (rule "replace_known_left" (formula "36") (term "0,0,1,2,1,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "polySimp_pullOutFactor1" (formula "36") (term "2,1,0,0"))
                        (rule "add_literals" (formula "36") (term "1,2,1,0,0"))
                        (rule "times_zero_1" (formula "36") (term "2,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,1,1,0,0"))
                        (rule "replace_known_left" (formula "36") (term "0,1,1,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "getOfSeqSub" (formula "45") (term "1"))
                        (rule "castDel" (formula "45") (term "2,1"))
                        (rule "eqSymm" (formula "45"))
                        (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "45") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "45") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                        (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "0,0,0"))
                        (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "eqSymm" (formula "45"))
                        (rule "getOfSeqSub" (formula "28") (term "1"))
                        (rule "add_zero_right" (formula "28") (term "1,1,1"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1"))
                        (rule "times_zero_2" (formula "28") (term "1,1,1,0,1"))
                        (rule "add_zero_right" (formula "28") (term "1,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,1"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,1"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,1"))
                        (rule "polySimp_pullOutFactor2" (formula "28") (term "0,1,0,1"))
                        (rule "add_literals" (formula "28") (term "1,0,1,0,1"))
                        (rule "times_zero_1" (formula "28") (term "0,1,0,1"))
                        (rule "leq_literals" (formula "28") (term "1,0,1"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1"))
                        (rule "times_zero_2" (formula "28") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1"))
                        (rule "mul_literals" (formula "28") (term "1,0,1"))
                        (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "getOfSeqSub" (formula "34") (term "0,1,1,0"))
                        (rule "leq_literals" (formula "34") (term "0,0,0,1,1,0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "add_zero_left" (formula "34") (term "1,1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "34") (term "1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,1,0"))
                        (rule "replace_known_left" (formula "34") (term "0,0,1,1,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "getOfSeqSub" (formula "29") (term "1"))
                        (rule "leq_literals" (formula "29") (term "0,0,1"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "add_zero_left" (formula "29") (term "1,1,1"))
                        (rule "eqSymm" (formula "29"))
                        (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "29") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                        (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "eqSymm" (formula "29"))
                        (rule "getOfSeqSub" (formula "31") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "1,1,0,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "31") (term "1,1,1,0,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "1,1,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,0,0,1,0"))
                        (rule "getOfSeqSub" (formula "31") (term "2,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "1,1,0,2,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "1,1,2,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,1,0,2,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "1,1,0,2,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,1,1,2,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "31") (term "0,0,1,1,2,0,0,1,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,1,1,2,0,0,1,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,1,1,2,0,0,1,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,1,1,2,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "0,1,1,2,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,2,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,2,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,1,0,2,0,0,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,0,1,0,0,1,0,2,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,2,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,2,0,0,1,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,2,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,2,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0,2,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,1,0,2,0,0,1,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0,0,1,0,2,0,0,1,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0,0,1,0,2,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,1,0,2,0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0,2,0,0,1,0"))
                        (rule "times_zero_2" (formula "31") (term "1,0,0,0,2,0,0,1,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,2,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,2,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,2,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,2,0,0,1,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,2,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,2,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,0,0,2,0,0,1,0"))
                        (rule "getOfSeqSub" (formula "30") (term "1"))
                        (rule "add_zero_right" (formula "30") (term "1,1,1"))
                        (rule "eqSymm" (formula "30"))
                        (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
                        (rule "times_zero_2" (formula "30") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor2" (formula "30") (term "0,1,0,0"))
                        (rule "add_literals" (formula "30") (term "1,0,1,0,0"))
                        (rule "times_zero_1" (formula "30") (term "0,1,0,0"))
                        (rule "leq_literals" (formula "30") (term "1,0,0"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                        (rule "times_zero_2" (formula "30") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,0"))
                        (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "eqSymm" (formula "30"))
                        (rule "getOfSeqConcat" (formula "38") (term "0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "castDel" (formula "38") (term "1,0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "sub_literals" (formula "38") (term "1,0,1"))
                        (rule "less_literals" (formula "38") (term "0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "true_left" (formula "38"))
                        (rule "getOfSeqSub" (formula "44") (term "0"))
                        (rule "castDel" (formula "44") (term "2,0"))
                        (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "44") (term "0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                        (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,0,0"))
                        (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "subSeqConcatEQ" (formula "36") (term "1,1,0") (ifseqformula "26"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,1,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "1,0,1,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,1,1,0"))
                        (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,1,1,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "0,0,2,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,0,0,2,0,1,1,0"))
                        (rule "mul_literals" (formula "36") (term "1,1,0,0,2,0,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "1,0,0,2,0,1,1,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "1,2,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,1,1,0"))
                        (rule "times_zero_2" (formula "36") (term "1,1,1,2,0,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "1,1,2,0,1,1,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "0,1,2,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,0,1,2,1,1,1,0"))
                        (rule "times_zero_2" (formula "36") (term "1,1,0,1,2,1,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "1,0,1,2,1,1,1,0"))
                        (rule "lenOfSeqSub" (formula "36") (term "0,1,2,1,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "36") (term "1,0,1,2,1,1,1,1,0"))
                        (rule "times_zero_2" (formula "36") (term "1,1,0,1,2,1,1,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "1,0,1,2,1,1,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,1,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,2,0,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,2,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,2,1,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0,1,2,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,2,1,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,2,1,1,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0,1,2,1,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,2,1,1,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,1,1,1,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0,0,1,1,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,2,0,1,1,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,0,2,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,2,0,1,1,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,2,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,2,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,1,2,0,1,1,0"))
                        (rule "replace_known_left" (formula "36") (term "0,1,2,0,1,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0,0,1,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0,0,1,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0,0,1,1,1,1,0"))
                        (rule "replace_known_left" (formula "36") (term "0,0,1,0,0,1,1,1,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,1,1,1,0"))
                        (rule "add_literals" (formula "36") (term "1,1,0,0,1,1,1,1,0"))
                        (rule "times_zero_1" (formula "36") (term "1,0,0,1,1,1,1,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,1,1,1,1,0"))
                        (rule "leq_literals" (formula "36") (term "0,1,1,1,1,0"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,2,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,2,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,2,0,1,1,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,2,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,2,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,2,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,1,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,1,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,1,1,1,1,0"))
                        (rule "replace_known_left" (formula "36") (term "0,0,1,1,1,1,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "polySimp_pullOutFactor1" (formula "36") (term "1,1,1,1,0"))
                        (rule "add_literals" (formula "36") (term "1,1,1,1,1,0"))
                        (rule "times_zero_1" (formula "36") (term "1,1,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,2,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,2,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,2,1,1,1,0"))
                        (rule "replace_known_left" (formula "36") (term "0,0,1,2,1,1,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "polySimp_addComm1" (formula "36") (term "2,1,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0,2,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
                        (rule "replace_known_left" (formula "36") (term "0,0,0,2,0,1,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_homoInEq0" (formula "36") (term "0,2,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "36") (term "0,0,2,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,2,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0,2,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,2,0,1,1,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,2,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,2,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,2,0,1,1,0"))
                        (rule "replace_known_left" (formula "36") (term "0,2,0,1,1,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "getOfSeqConcatEQ" (formula "28") (term "0,0,0,1,0,0") (ifseqformula "26"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,2,0,0,0,1,0,0"))
                        (rule "lenOfSeqSub" (formula "28") (term "1,0,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,1,1,0,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,0,0,0,0,1,0,0"))
                        (rule "lenOfSeqSub" (formula "28") (term "0,1,1,2,0,0,0,1,0,0"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,0,1,1,2,0,0,0,1,0,0"))
                        (rule "times_zero_2" (formula "28") (term "1,1,0,1,1,2,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,0,1,1,2,0,0,0,1,0,0"))
                        (rule "ifEqualsNull" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,0,1,1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,1,1,0,1,1,0,0,1,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_pullOutFactor1" (formula "28") (term "1,0,1,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,1,1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,1,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,0,1,0,0,1,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "leq_literals" (formula "28") (term "0,0,1,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,0,0,1,0,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,0,0"))
                        (rule "leq_literals" (formula "28") (term "0,0,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "getOfSeqSub" (formula "44") (term "0"))
                        (rule "castDel" (formula "44") (term "2,0"))
                        (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "44") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0,0"))
                        (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0,0"))
                        (rule "times_zero_2" (formula "44") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "44") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,1,0,0"))
                        (rule "replace_known_left" (formula "44") (term "1,0,0") (ifseqformula "2"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                        (rule "mul_literals" (formula "44") (term "1,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "44") (term "0,0") (ifseqformula "1"))
                        (rule "leq_literals" (formula "44") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "eqSymm" (formula "44"))
                        (rule "getOfSeqConcatEQ" (formula "34") (term "0,1,0,1,0") (ifseqformula "26"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,2,0,1,0,1,0"))
                        (rule "lenOfSeqSub" (formula "34") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "34") (term "1,1,1,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,0,1,0"))
                        (rule "lenOfSeqSub" (formula "34") (term "0,1,1,2,0,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,0,1,1,2,0,1,0,1,0"))
                        (rule "times_zero_2" (formula "34") (term "1,1,0,1,1,2,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "34") (term "1,0,1,1,2,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,2,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,1,1,2,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1,2,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,0,1,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,1,2,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,1,2,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,1,2,0,1,0,1,0"))
                        (rule "replace_known_left" (formula "34") (term "0,0,1,1,2,0,1,0,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "1,2,0,1,0,1,0"))
                        (rule "add_literals" (formula "34") (term "1,1,1,2,0,1,0,1,0"))
                        (rule "times_zero_1" (formula "34") (term "1,1,2,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "34") (term "1,2,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,0,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,0,0,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,0,0,0,1,0,1,0"))
                        (rule "replace_known_left" (formula "34") (term "0,0,1,0,0,0,1,0,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,0,1,0,1,0"))
                        (rule "add_literals" (formula "34") (term "1,0,0,0,1,0,1,0"))
                        (rule "times_zero_1" (formula "34") (term "0,0,0,1,0,1,0"))
                        (rule "leq_literals" (formula "34") (term "0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "getOfSeqSub" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "28") (term "1,1,0,0,0,1,0,0"))
                        (rule "leq_literals" (formula "28") (term "0,0,0,0,0,1,0,0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,0,0,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "28") (term "1,0,0,0,0,1,0,0"))
                        (rule "ifEqualsNull" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,1,0,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,0,1,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "getOfSeqSub" (formula "34") (term "0,1,0,1,0"))
                        (rule "add_zero_right" (formula "34") (term "1,1,0,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1,0"))
                        (rule "times_zero_2" (formula "34") (term "1,1,1,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
                        (rule "polySimp_pullOutFactor2" (formula "34") (term "0,1,0,0,1,0,1,0"))
                        (rule "add_literals" (formula "34") (term "1,0,1,0,0,1,0,1,0"))
                        (rule "times_zero_1" (formula "34") (term "0,1,0,0,1,0,1,0"))
                        (rule "leq_literals" (formula "34") (term "1,0,0,1,0,1,0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,1,0,1,0"))
                        (rule "times_zero_2" (formula "34") (term "1,0,0,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "34") (term "1,0,0,1,0,1,0"))
                        (rule "replace_known_left" (formula "34") (term "0,0,1,0,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "getOfSeqConcatEQ" (formula "44") (term "0") (ifseqformula "26"))
                        (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
                        (rule "lenOfSeqSub" (formula "44") (term "1,0,0"))
                        (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
                        (rule "add_zero_right" (formula "44") (term "1,1,0,0"))
                        (rule "lenOfSeqSub" (formula "44") (term "0,1,1,2,0"))
                        (rule "polySimp_elimSub" (formula "44") (term "1,0,1,1,2,0"))
                        (rule "times_zero_2" (formula "44") (term "1,1,0,1,1,2,0"))
                        (rule "add_zero_right" (formula "44") (term "1,0,1,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0,0"))
                        (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,1,2,0"))
                        (rule "add_zero_right" (formula "44") (term "0,0,0,1,1,2,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,1,1,2,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,1,2,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,0,0,1,1,2,0"))
                        (rule "replace_known_left" (formula "44") (term "0,0,1,1,2,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "polySimp_pullOutFactor1b" (formula "44") (term "1,2,0"))
                        (rule "add_literals" (formula "44") (term "1,1,1,2,0"))
                        (rule "times_zero_1" (formula "44") (term "1,1,2,0"))
                        (rule "add_zero_right" (formula "44") (term "1,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,0,0,0,0"))
                        (rule "replace_known_left" (formula "44") (term "0,0,0,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
                        (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "44") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0"))
                        (rule "mul_literals" (formula "44") (term "1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "44") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "getOfSeqConcatEQ" (formula "28") (term "1,1,0") (ifseqformula "26"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,2,1,1,0"))
                        (rule "lenOfSeqSub" (formula "28") (term "1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "28") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqSub" (formula "28") (term "0,1,1,2,1,1,0"))
                        (rule "polySimp_elimSub" (formula "28") (term "1,0,1,1,2,1,1,0"))
                        (rule "times_zero_2" (formula "28") (term "1,1,0,1,1,2,1,1,0"))
                        (rule "add_zero_right" (formula "28") (term "1,0,1,1,2,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,2,1,1,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,2,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,2,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,1,2,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1,2,1,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,2,1,1,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,1,1,2,1,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_pullOutFactor1" (formula "28") (term "1,2,1,1,0"))
                        (rule "add_literals" (formula "28") (term "1,1,2,1,1,0"))
                        (rule "times_zero_1" (formula "28") (term "1,2,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "replace_known_left" (formula "28") (term "0,0,1,0,0,1,1,0") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,1,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,1,0"))
                        (rule "add_literals" (formula "28") (term "0,0,1,1,0"))
                        (rule "leq_literals" (formula "28") (term "0,1,1,0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "commuteUnion" (formula "24") (term "0,1,0"))
                        (rule "getOfSeqSub" (formula "44") (term "0"))
                        (rule "castDel" (formula "44") (term "2,0"))
                        (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "1,1,0"))
                        (rule "polySimp_addComm0" (formula "44") (term "0,1,1,0"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "orRight" (formula "44"))
                        (rule "eqSymm" (formula "45"))
                        (rule "inEqSimp_ltToLeq" (formula "44") (term "1"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "44") (term "0,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1"))
                        (rule "add_literals" (formula "44") (term "0,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "44") (term "0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "44") (term "0"))
                        (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "inEqSimp_leqRight" (formula "44"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
                  (branch "CUT: seqSub(self.s, k, self.s.length).length = seqSingleton(x).length + seqSub(seqConcat(seqSub(self.s, 0, k), seqSub(self.s, k + 1, self.len)), k, self.len - 1).length FALSE"
                      (builtin "One Step Simplification" (formula "46"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "false_right" (formula "46"))
                     (rule "eqSymm" (formula "39") (term "0,0"))
                     (rule "eqSymm" (formula "19") (term "1,0"))
                     (rule "eqSymm" (formula "20") (term "1,0"))
                     (rule "eqSymm" (formula "27"))
                     (rule "eqSymm" (formula "1"))
                     (rule "eqSymm" (formula "21") (term "0,1,0,0"))
                     (rule "eqSymm" (formula "29") (term "0,0"))
                     (rule "eqSymm" (formula "25"))
                     (rule "eqSymm" (formula "28") (term "0,0"))
                     (rule "eqSymm" (formula "30") (term "0,1,0"))
                     (rule "eqSymm" (formula "33") (term "0,0,1,1,0"))
                     (rule "eqSymm" (formula "35"))
                     (rule "eqSymm" (formula "33") (term "0,0,1,0,1,0"))
                     (rule "eqSymm" (formula "37"))
                     (rule "eqSymm" (formula "27") (term "0,1"))
                     (rule "polySimp_elimSub" (formula "26") (term "1"))
                     (rule "mul_literals" (formula "26") (term "1,1"))
                     (rule "polySimp_elimSub" (formula "29") (term "1,0,1"))
                     (rule "mul_literals" (formula "29") (term "1,1,0,1"))
                     (rule "polySimp_elimSub" (formula "18") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "20") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "8") (term "1"))
                     (rule "mul_literals" (formula "8") (term "1,1"))
                     (rule "polySimp_homoEq" (formula "45"))
                     (rule "polySimp_elimSub" (formula "19") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "45") (term "2,0,1,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,2,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "36") (term "1"))
                     (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "1,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "1"))
                     (rule "polySimp_addComm0" (formula "29") (term "1,0,1"))
                     (rule "polySimp_addComm0" (formula "18") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "1"))
                     (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "45") (term "2,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0"))
                     (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
                     (rule "castedGetAny" (formula "10") (term "0"))
                     (rule "castedGetAny" (formula "28") (term "1"))
                     (rule "castedGetAny" (formula "15") (term "1,0,0,1,0"))
                     (rule "eqSeqEmpty" (formula "41"))
                     (rule "castedGetAny" (formula "9") (term "0"))
                     (rule "ifEqualsNull" (formula "39"))
                     (rule "orRight" (formula "39"))
                     (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                     (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                     (rule "castedGetAny" (formula "27") (term "1,0,0,1,1,0,0"))
                     (rule "castedGetAny" (formula "27") (term "0,0,0,0"))
                     (rule "castedGetAny" (formula "27") (term "0,0,0,1,0,0"))
                     (rule "castedGetAny" (formula "27") (term "1,2,0"))
                     (rule "castedGetAny" (formula "27") (term "1,1,0"))
                     (rule "castedGetAny" (formula "21") (term "0,0,1,0,0"))
                     (rule "castedGetAny" (formula "21") (term "1,0,1,0,0"))
                     (rule "castedGetAny" (formula "30") (term "0,0,1,0"))
                     (rule "castedGetAny" (formula "37") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "7"))
                     (rule "add_zero_right" (formula "7") (term "0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11"))
                     (rule "add_zero_right" (formula "11") (term "0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,0"))
                     (rule "castedGetAny" (formula "20") (term "0,1,0"))
                     (rule "eqSymm" (formula "20") (term "1,0"))
                     (rule "lenOfSeqSub" (formula "1") (term "0"))
                     (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                     (rule "times_zero_2" (formula "1") (term "1,1,0"))
                     (rule "add_zero_right" (formula "1") (term "1,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1") (term "1"))
                     (rule "castedGetAny" (formula "29") (term "1"))
                     (rule "castedGetAny" (formula "18") (term "1,0"))
                     (rule "castedGetAny" (formula "19") (term "0,1,0"))
                     (rule "eqSymm" (formula "19") (term "1,0"))
                     (rule "lenOfSeqSub" (formula "46") (term "1,0"))
                     (rule "replace_known_left" (formula "46") (term "0,1,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "polySimp_elimSub" (formula "46") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "46") (term "0"))
                     (rule "polySimp_addComm1" (formula "46") (term "1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                     (rule "lenOfSeqSub" (formula "46") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "46") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "46") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "46") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0"))
                     (rule "applyEq" (formula "34") (term "2,1,1,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "41") (term "0") (ifseqformula "11"))
                     (rule "applyEq" (formula "32") (term "0,1,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "28"))
                     (rule "applyEq" (formula "32") (term "0,1,0,1,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "44") (term "0,1,0,0,0,1,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "44") (term "1,1,0,1,0") (ifseqformula "11"))
                     (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "25"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                     (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "25"))
                     (rule "polySimp_addAssoc" (formula "35") (term "1"))
                     (rule "add_literals" (formula "35") (term "0,1"))
                     (rule "add_zero_left" (formula "35") (term "1"))
                     (rule "polySimp_sepNegMonomial" (formula "44"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                     (rule "polySimp_elimOne" (formula "44") (term "0"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "orRight" (formula "44"))
                     (rule "polySimp_homoEq" (formula "45"))
                     (rule "times_zero_2" (formula "45") (term "1,0"))
                     (rule "add_zero_right" (formula "45") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "44"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1"))
                     (rule "polySimp_elimOne" (formula "45") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradEq7" (formula "45") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                     (rule "add_literals" (formula "45") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0"))
                     (rule "add_zero_right" (formula "45") (term "0,0"))
                     (rule "leq_literals" (formula "45") (term "0"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "false_right" (formula "45"))
                     (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "11"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0"))
                     (rule "leq_literals" (formula "41") (term "0"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "false_right" (formula "41"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Assume k != seqSub(seqConcat(seqSub(self.s, 0, k), seqSub(self.s, k + 1, self.len)), 0, k).length"
                  (rule "notLeft" (formula "1"))
                  (rule "eqSymm" (formula "26"))
                  (rule "eqSymm" (formula "39") (term "0,0"))
                  (rule "eqSymm" (formula "45"))
                  (rule "eqSymm" (formula "27") (term "0,0"))
                  (rule "eqSymm" (formula "28") (term "0,0"))
                  (rule "eqSymm" (formula "36"))
                  (rule "eqSymm" (formula "18") (term "1,0"))
                  (rule "eqSymm" (formula "19") (term "1,0"))
                  (rule "eqSymm" (formula "29") (term "0,1,0"))
                  (rule "eqSymm" (formula "20") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "eqSymm" (formula "32") (term "0,0,1,0,1,0"))
                  (rule "eqSymm" (formula "32") (term "0,0,1,1,0"))
                  (rule "eqSymm" (formula "34"))
                  (rule "eqSymm" (formula "38"))
                  (rule "eqSymm" (formula "26") (term "0,1"))
                  (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "28") (term "1,0,1"))
                  (rule "mul_literals" (formula "28") (term "1,1,0,1"))
                  (rule "polySimp_elimSub" (formula "7") (term "1"))
                  (rule "mul_literals" (formula "7") (term "1,1"))
                  (rule "polySimp_elimSub" (formula "25") (term "1"))
                  (rule "mul_literals" (formula "25") (term "1,1"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "45") (term "2,1,0"))
                  (rule "mul_literals" (formula "45") (term "1,2,1,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "35") (term "1"))
                  (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,1,1"))
                  (rule "polySimp_addComm0" (formula "45") (term "1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "38") (term "1,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "1,0,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "1"))
                  (rule "polySimp_addComm0" (formula "25") (term "1"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "45") (term "2,1,0"))
                  (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                  (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
                  (rule "eqSeqEmpty" (formula "41"))
                  (rule "castedGetAny" (formula "27") (term "1"))
                  (rule "castedGetAny" (formula "8") (term "0"))
                  (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
                  (rule "castedGetAny" (formula "9") (term "0"))
                  (rule "castedGetAny" (formula "26") (term "1,1,0"))
                  (rule "castedGetAny" (formula "26") (term "1,0,0,1,1,0,0"))
                  (rule "castedGetAny" (formula "26") (term "1,2,0"))
                  (rule "castedGetAny" (formula "26") (term "0,0,0,1,0,0"))
                  (rule "castedGetAny" (formula "26") (term "0,0,0,0"))
                  (rule "ifEqualsNull" (formula "39"))
                  (rule "orRight" (formula "39"))
                  (rule "castedGetAny" (formula "36") (term "0"))
                  (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                  (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                  (rule "castedGetAny" (formula "29") (term "0,0,1,0"))
                  (rule "castedGetAny" (formula "20") (term "0,0,1,0,0"))
                  (rule "castedGetAny" (formula "20") (term "1,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10"))
                  (rule "add_zero_right" (formula "10") (term "0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "add_zero_right" (formula "6") (term "0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "lenOfSeqSub" (formula "46") (term "1,1"))
                  (rule "eqSymm" (formula "46"))
                  (rule "polySimp_elimSub" (formula "46") (term "1,1,0"))
                  (rule "times_zero_2" (formula "46") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "46") (term "1,1,0"))
                  (rule "castedGetAny" (formula "19") (term "0,1,0"))
                  (rule "eqSymm" (formula "19") (term "1,0"))
                  (rule "lenOfSeqSub" (formula "38") (term "0"))
                  (rule "polySimp_elimSub" (formula "38") (term "1,0"))
                  (rule "times_zero_2" (formula "38") (term "1,1,0"))
                  (rule "add_zero_right" (formula "38") (term "1,0"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "orRight" (formula "38"))
                  (rule "eqSymm" (formula "39"))
                  (rule "replace_known_right" (formula "47") (term "0,1,0") (ifseqformula "38"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "eqSymm" (formula "47"))
                  (rule "castedGetAny" (formula "28") (term "1"))
                  (rule "castedGetAny" (formula "17") (term "1,0"))
                  (rule "castedGetAny" (formula "18") (term "0,1,0"))
                  (rule "eqSymm" (formula "18") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_ltRight" (formula "38"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                  (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "28"))
                  (rule "applyEq" (formula "47") (term "0,1,0") (ifseqformula "25"))
                  (rule "applyEq" (formula "35") (term "2,1,1,0") (ifseqformula "26"))
                  (rule "applyEq" (formula "33") (term "0,1,0,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "27") (term "1") (ifseqformula "29"))
                  (rule "applyEq" (formula "43") (term "0") (ifseqformula "12"))
                  (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "26"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                  (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "26"))
                  (rule "polySimp_addAssoc" (formula "36") (term "1"))
                  (rule "add_literals" (formula "36") (term "0,1"))
                  (rule "add_zero_left" (formula "36") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                  (rule "inEqSimp_invertInEq1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                  (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "11"))
                  (rule "times_zero_1" (formula "42") (term "1,0,0"))
                  (rule "add_zero_right" (formula "42") (term "0,0"))
                  (rule "leq_literals" (formula "42") (term "0"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "false_right" (formula "42"))
                  (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0"))
                  (rule "leq_literals" (formula "39") (term "0"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "false_right" (formula "39"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Case 2"
            (rule "eqSymm" (formula "18") (term "1,0"))
            (rule "eqSymm" (formula "19") (term "1,0"))
            (rule "eqSymm" (formula "26"))
            (rule "eqSymm" (formula "20") (term "0,1,0,0"))
            (rule "eqSymm" (formula "24"))
            (rule "eqSymm" (formula "38") (term "0,0"))
            (rule "eqSymm" (formula "28") (term "0,0"))
            (rule "eqSymm" (formula "29") (term "0,1,0"))
            (rule "eqSymm" (formula "32") (term "0,0,1,1,0"))
            (rule "eqSymm" (formula "34"))
            (rule "eqSymm" (formula "27") (term "0,0"))
            (rule "eqSymm" (formula "32") (term "0,0,1,0,1,0"))
            (rule "eqSymm" (formula "36"))
            (rule "eqSymm" (formula "26") (term "0,1"))
            (rule "polySimp_elimSub" (formula "25") (term "1"))
            (rule "mul_literals" (formula "25") (term "1,1"))
            (rule "polySimp_elimSub" (formula "7") (term "1"))
            (rule "mul_literals" (formula "7") (term "1,1"))
            (rule "polySimp_elimSub" (formula "28") (term "1,0,1"))
            (rule "mul_literals" (formula "28") (term "1,1,0,1"))
            (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
            (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
            (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "44") (term "1,1,0,1"))
            (rule "polySimp_addComm0" (formula "35") (term "1"))
            (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "25") (term "1"))
            (rule "polySimp_addComm0" (formula "7") (term "1"))
            (rule "polySimp_addComm0" (formula "28") (term "1,0,1"))
            (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
            (rule "castedGetAny" (formula "9") (term "0"))
            (rule "castedGetAny" (formula "27") (term "1"))
            (rule "eqSeqEmpty" (formula "40"))
            (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
            (rule "castedGetAny" (formula "8") (term "0"))
            (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
            (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
            (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
            (rule "castedGetAny" (formula "26") (term "0,0,0,0"))
            (rule "castedGetAny" (formula "26") (term "1,0,0,1,1,0,0"))
            (rule "castedGetAny" (formula "26") (term "1,1,0"))
            (rule "castedGetAny" (formula "26") (term "1,2,0"))
            (rule "castedGetAny" (formula "26") (term "0,0,0,1,0,0"))
            (rule "castedGetAny" (formula "20") (term "0,0,1,0,0"))
            (rule "castedGetAny" (formula "20") (term "1,0,1,0,0"))
            (rule "ifEqualsNull" (formula "38"))
            (rule "orRight" (formula "38"))
            (rule "castedGetAny" (formula "29") (term "0,0,1,0"))
            (rule "castedGetAny" (formula "36") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10"))
            (rule "add_zero_right" (formula "10") (term "0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "6"))
            (rule "add_zero_right" (formula "6") (term "0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
            (rule "lenOfSeqSub" (formula "45") (term "2,0"))
            (rule "polySimp_elimSub" (formula "45") (term "1,2,0"))
            (rule "mul_literals" (formula "45") (term "1,1,2,0"))
            (rule "add_zero_right" (formula "45") (term "1,2,0"))
            (rule "castedGetAny" (formula "19") (term "0,1,0"))
            (rule "eqSymm" (formula "19") (term "1,0"))
            (rule "castedGetAny" (formula "28") (term "1"))
            (rule "castedGetAny" (formula "17") (term "1,0"))
            (rule "castedGetAny" (formula "18") (term "0,1,0"))
            (rule "eqSymm" (formula "18") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "7"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "0,2,0"))
            (rule "add_zero_right" (formula "45") (term "0,0,2,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,2,0"))
            (rule "replace_known_left" (formula "45") (term "0,2,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "eqSymm" (formula "45"))
            (rule "applyEq" (formula "34") (term "2,1,1,0") (ifseqformula "25"))
            (rule "applyEq" (formula "26") (term "1") (ifseqformula "28"))
            (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "24"))
            (rule "applyEq" (formula "32") (term "0,1,0,1,0") (ifseqformula "28"))
            (rule "applyEq" (formula "41") (term "0") (ifseqformula "11"))
            (rule "applyEq" (formula "32") (term "0,1,1,0") (ifseqformula "27"))
            (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "25"))
            (rule "polySimp_addAssoc" (formula "35") (term "1"))
            (rule "add_literals" (formula "35") (term "0,1"))
            (rule "add_zero_left" (formula "35") (term "1"))
            (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "25"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "polySimp_elimOne" (formula "10") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "polySimp_elimOne" (formula "7") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
            (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "10"))
            (rule "mul_literals" (formula "40") (term "1,0,0"))
            (rule "add_zero_right" (formula "40") (term "0,0"))
            (rule "leq_literals" (formula "40") (term "0"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "false_right" (formula "40"))
            (rule "equalityToSeqGetAndSeqLenRight" (formula "43") (inst "iv=iv"))
            (rule "lenOfSeqSub" (formula "43") (term "1,0"))
            (rule "eqSymm" (formula "43") (term "0"))
            (rule "polySimp_elimSub" (formula "43") (term "1,0,0"))
            (rule "mul_literals" (formula "43") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "43") (term "1,0,0"))
            (rule "lenOfSeqSub" (formula "43") (term "1,1,0,0,1"))
            (rule "polySimp_elimSub" (formula "43") (term "1,1,1,0,0,1"))
            (rule "times_zero_2" (formula "43") (term "1,1,1,1,0,0,1"))
            (rule "add_zero_right" (formula "43") (term "1,1,1,0,0,1"))
            (rule "lenOfSeqSub" (formula "43") (term "1,0"))
            (rule "eqSymm" (formula "43") (term "0"))
            (rule "polySimp_elimSub" (formula "43") (term "1,0,0"))
            (rule "times_zero_2" (formula "43") (term "1,1,0,0"))
            (rule "add_zero_right" (formula "43") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "43"))
            (rule "allRight" (formula "43") (inst "sk=iv_0"))
            (rule "impRight" (formula "43"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
            (rule "add_zero_right" (formula "2") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "getOfSeqConcatEQ" (formula "28") (term "1") (ifseqformula "26"))
            (rule "polySimp_elimSub" (formula "28") (term "1,2,1"))
            (rule "lenOfSeqSub" (formula "28") (term "1,0,1"))
            (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1"))
            (rule "times_zero_2" (formula "28") (term "1,1,1,0,1"))
            (rule "add_zero_right" (formula "28") (term "1,1,0,1"))
            (rule "lenOfSeqSub" (formula "28") (term "0,1,1,2,1"))
            (rule "polySimp_elimSub" (formula "28") (term "1,0,1,1,2,1"))
            (rule "times_zero_2" (formula "28") (term "1,1,0,1,1,2,1"))
            (rule "add_zero_right" (formula "28") (term "1,0,1,1,2,1"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,2,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,2,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,2,1"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
            (rule "add_zero_left" (formula "28") (term "0,0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,1,2,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1,2,1"))
            (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,2,1"))
            (rule "replace_known_left" (formula "28") (term "0,0,1,1,2,1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_pullOutFactor1b" (formula "28") (term "1,2,1"))
            (rule "add_literals" (formula "28") (term "1,1,1,2,1"))
            (rule "times_zero_1" (formula "28") (term "1,1,2,1"))
            (rule "add_zero_right" (formula "28") (term "1,2,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
            (rule "polySimp_elimOne" (formula "28") (term "0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,1"))
            (rule "replace_known_left" (formula "28") (term "0,0,0,1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
            (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0,1"))
            (rule "add_literals" (formula "28") (term "1,0,0,1"))
            (rule "times_zero_1" (formula "28") (term "0,0,1"))
            (rule "leq_literals" (formula "28") (term "0,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "getOfSeqConcatEQ" (formula "30") (term "1") (ifseqformula "26"))
            (rule "eqSymm" (formula "30"))
            (rule "polySimp_elimSub" (formula "30") (term "1,2,0"))
            (rule "lenOfSeqSub" (formula "30") (term "1,0,0"))
            (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "1,1,1,0,0"))
            (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
            (rule "lenOfSeqSub" (formula "30") (term "0,1,1,2,0"))
            (rule "polySimp_elimSub" (formula "30") (term "1,0,1,1,2,0"))
            (rule "mul_literals" (formula "30") (term "1,1,0,1,1,2,0"))
            (rule "add_zero_right" (formula "30") (term "1,0,1,1,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,1,2,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,0,1,1,2,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,1,2,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,1,2,0"))
            (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,1,2,0"))
            (rule "replace_known_left" (formula "30") (term "0,0,1,1,2,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "polySimp_pullOutFactor1b" (formula "30") (term "1,2,0"))
            (rule "add_literals" (formula "30") (term "1,1,1,2,0"))
            (rule "times_zero_1" (formula "30") (term "1,1,2,0"))
            (rule "add_literals" (formula "30") (term "1,2,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,0,0,0"))
            (rule "replace_known_left" (formula "30") (term "0,0,1,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,0"))
            (rule "add_literals" (formula "30") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "30") (term "0,0,0"))
            (rule "leq_literals" (formula "30") (term "0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "eqSymm" (formula "30"))
            (rule "getOfSeqConcatEQ" (formula "31") (term "0,0,1,0") (ifseqformula "26"))
            (rule "polySimp_elimSub" (formula "31") (term "1,2,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "31") (term "1,2,0,0,1,0"))
            (rule "lenOfSeqSub" (formula "31") (term "1,0,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0,0,1,0"))
            (rule "times_zero_2" (formula "31") (term "1,1,1,0,0,0,1,0"))
            (rule "add_zero_right" (formula "31") (term "1,1,0,0,0,1,0"))
            (rule "lenOfSeqSub" (formula "31") (term "0,0,1,2,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "31") (term "1,0,0,1,2,0,0,1,0"))
            (rule "times_zero_2" (formula "31") (term "1,1,0,0,1,2,0,0,1,0"))
            (rule "add_zero_right" (formula "31") (term "1,0,0,1,2,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0,0,1,0"))
            (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,2,0,0,1,0"))
            (rule "add_zero_right" (formula "31") (term "0,0,0,0,1,2,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,2,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0,1,2,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,2,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "31") (term "0,0,0,0,1,2,0,0,1,0"))
            (rule "replace_known_left" (formula "31") (term "0,0,0,1,2,0,0,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,0,0,0,0,0,1,0"))
            (rule "replace_known_left" (formula "31") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
            (rule "subSeqConcatEQ" (formula "36") (term "0,0") (ifseqformula "26"))
            (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0"))
            (rule "polySimp_elimSub" (formula "36") (term "2,1,1,0,0"))
            (rule "add_zero_left" (formula "36") (term "2,1,1,0,0"))
            (rule "lenOfSeqSub" (formula "36") (term "0,0,2,0,0,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,0,0,2,0,0,0"))
            (rule "times_zero_2" (formula "36") (term "1,1,0,0,2,0,0,0"))
            (rule "add_zero_right" (formula "36") (term "1,0,0,2,0,0,0"))
            (rule "lenOfSeqSub" (formula "36") (term "1,0,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0,0"))
            (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,0,0"))
            (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,0,0"))
            (rule "lenOfSeqSub" (formula "36") (term "1,2,0,0,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,0,0"))
            (rule "times_zero_2" (formula "36") (term "1,1,1,2,0,0,0"))
            (rule "add_zero_right" (formula "36") (term "1,1,2,0,0,0"))
            (rule "lenOfSeqSub" (formula "36") (term "0,1,2,1,0,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,0,1,2,1,0,0"))
            (rule "times_zero_2" (formula "36") (term "1,1,0,1,2,1,0,0"))
            (rule "add_zero_right" (formula "36") (term "1,0,1,2,1,0,0"))
            (rule "lenOfSeqSub" (formula "36") (term "0,2,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,0,2,1,1,0,0"))
            (rule "mul_literals" (formula "36") (term "1,1,0,2,1,1,0,0"))
            (rule "add_zero_right" (formula "36") (term "1,0,2,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,2,0,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,0,0,2,0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,2,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,1,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,2,1,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,0,1,2,1,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,2,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,2,1,1,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,0,2,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,2,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,2,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,2,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,2,0,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "0,0,1,2,0,0,0"))
            (rule "replace_known_left" (formula "36") (term "0,1,2,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,2,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,2,1,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,2,1,0,0"))
            (rule "replace_known_left" (formula "36") (term "0,0,1,2,1,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "polySimp_pullOutFactor1" (formula "36") (term "2,1,0,0"))
            (rule "add_literals" (formula "36") (term "1,2,1,0,0"))
            (rule "times_zero_1" (formula "36") (term "2,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0,0,1,1,0,0"))
            (rule "replace_known_left" (formula "36") (term "0,0,1,0,0,1,1,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,2,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,2,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "0,0,0,2,1,1,0,0"))
            (rule "replace_known_left" (formula "36") (term "0,0,2,1,1,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "36") (term "0,0,1,1,0,0"))
            (rule "replace_known_left" (formula "36") (term "0,1,1,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "getOfSeqConcatEQ" (formula "29") (term "1") (ifseqformula "26"))
            (rule "eqSymm" (formula "29"))
            (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
            (rule "lenOfSeqSub" (formula "29") (term "1,0,0"))
            (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
            (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
            (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
            (rule "lenOfSeqSub" (formula "29") (term "0,1,1,2,0"))
            (rule "polySimp_elimSub" (formula "29") (term "1,0,1,1,2,0"))
            (rule "times_zero_2" (formula "29") (term "1,1,0,1,1,2,0"))
            (rule "add_zero_right" (formula "29") (term "1,0,1,1,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,1,2,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,0,1,1,2,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,1,2,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,1,2,0"))
            (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,1,2,0"))
            (rule "replace_known_left" (formula "29") (term "0,0,1,1,2,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "polySimp_pullOutFactor1" (formula "29") (term "1,2,0"))
            (rule "add_literals" (formula "29") (term "1,1,2,0"))
            (rule "times_zero_1" (formula "29") (term "1,2,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,0,0,0"))
            (rule "replace_known_left" (formula "29") (term "0,0,1,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
            (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0"))
            (rule "leq_literals" (formula "29") (term "0,0"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "eqSymm" (formula "29"))
            (rule "getOfSeqSub" (formula "45") (term "1"))
            (rule "castDel" (formula "45") (term "2,1"))
            (rule "add_zero_right" (formula "45") (term "1,1,1"))
            (rule "eqSymm" (formula "45"))
            (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0"))
            (rule "times_zero_2" (formula "45") (term "1,1,1,0,0"))
            (rule "add_zero_right" (formula "45") (term "1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
            (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "0,0,0"))
            (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "eqSymm" (formula "45"))
            (rule "getOfSeqConcatEQ" (formula "34") (term "0,1,0,1,0") (ifseqformula "26"))
            (rule "polySimp_elimSub" (formula "34") (term "1,2,0,1,0,1,0"))
            (rule "lenOfSeqSub" (formula "34") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1,0"))
            (rule "times_zero_2" (formula "34") (term "1,1,1,0,0,1,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,0,1,0"))
            (rule "lenOfSeqSub" (formula "34") (term "0,1,1,2,0,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "34") (term "1,0,1,1,2,0,1,0,1,0"))
            (rule "mul_literals" (formula "34") (term "1,1,0,1,1,2,0,1,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "1,0,1,1,2,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,0,1,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,2,0,1,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,1,1,2,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1,2,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,0,1,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,0,1,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,1,2,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,1,2,0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,1,2,0,1,0,1,0"))
            (rule "replace_known_left" (formula "34") (term "0,0,1,1,2,0,1,0,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "polySimp_pullOutFactor1b" (formula "34") (term "1,2,0,1,0,1,0"))
            (rule "add_literals" (formula "34") (term "1,1,1,2,0,1,0,1,0"))
            (rule "times_zero_1" (formula "34") (term "1,1,2,0,1,0,1,0"))
            (rule "add_literals" (formula "34") (term "1,2,0,1,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,0,0,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,0,0,0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,0,0,0,1,0,1,0"))
            (rule "replace_known_left" (formula "34") (term "0,0,1,0,0,0,1,0,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,0,1,0,1,0"))
            (rule "add_literals" (formula "34") (term "1,0,0,0,1,0,1,0"))
            (rule "times_zero_1" (formula "34") (term "0,0,0,1,0,1,0"))
            (rule "leq_literals" (formula "34") (term "0,0,1,0,1,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "28") (term "1"))
            (rule "add_zero_right" (formula "28") (term "1,1,1"))
            (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1"))
            (rule "times_zero_2" (formula "28") (term "1,1,1,0,1"))
            (rule "add_zero_right" (formula "28") (term "1,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,1"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,1"))
            (rule "polySimp_pullOutFactor2" (formula "28") (term "0,1,0,1"))
            (rule "add_literals" (formula "28") (term "1,0,1,0,1"))
            (rule "times_zero_1" (formula "28") (term "0,1,0,1"))
            (rule "leq_literals" (formula "28") (term "1,0,1"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1"))
            (rule "times_zero_2" (formula "28") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1"))
            (rule "mul_literals" (formula "28") (term "1,0,1"))
            (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "getOfSeqSub" (formula "30") (term "1"))
            (rule "add_zero_right" (formula "30") (term "1,1,1"))
            (rule "eqSymm" (formula "30"))
            (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
            (rule "times_zero_2" (formula "30") (term "1,1,1,0,0"))
            (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
            (rule "polySimp_pullOutFactor2" (formula "30") (term "0,1,0,0"))
            (rule "add_literals" (formula "30") (term "1,0,1,0,0"))
            (rule "times_zero_1" (formula "30") (term "0,1,0,0"))
            (rule "leq_literals" (formula "30") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
            (rule "times_zero_2" (formula "30") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
            (rule "mul_literals" (formula "30") (term "1,0,0"))
            (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "eqSymm" (formula "30"))
            (rule "getOfSeqSub" (formula "31") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "31") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "31") (term "1,1,0,1,0,0,1,0"))
            (rule "times_zero_2" (formula "31") (term "1,1,1,0,1,0,0,1,0"))
            (rule "add_zero_right" (formula "31") (term "1,1,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "31") (term "0,1,1,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,0,0,1,0"))
            (rule "getOfSeqSub" (formula "31") (term "2,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "31") (term "1,1,0,2,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "31") (term "1,1,2,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
            (rule "mul_literals" (formula "31") (term "0,1,1,1,0,2,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "31") (term "1,1,0,2,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,1,1,2,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "31") (term "0,0,1,1,2,0,0,1,0"))
            (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,1,1,2,0,0,1,0"))
            (rule "add_literals" (formula "31") (term "1,1,0,1,1,2,0,0,1,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,1,1,2,0,0,1,0"))
            (rule "add_literals" (formula "31") (term "0,1,1,2,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,2,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,2,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,1,0,2,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
            (rule "mul_literals" (formula "31") (term "0,0,1,0,0,1,0,2,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,2,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,2,0,0,1,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,2,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,2,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0,2,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,1,0,2,0,0,1,0"))
            (rule "add_literals" (formula "31") (term "1,1,0,0,0,1,0,2,0,0,1,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0,0,1,0,2,0,0,1,0"))
            (rule "add_literals" (formula "31") (term "0,0,0,1,0,2,0,0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0,2,0,0,1,0"))
            (rule "times_zero_2" (formula "31") (term "1,0,0,0,2,0,0,1,0"))
            (rule "add_zero_right" (formula "31") (term "0,0,0,2,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,2,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,2,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "31") (term "1,1,0,2,0,0,1,0"))
            (rule "mul_literals" (formula "31") (term "0,1,1,0,2,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,2,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "31") (term "1,0,0,2,0,0,1,0"))
            (rule "getOfSeqSub" (formula "29") (term "1"))
            (rule "add_zero_left" (formula "29") (term "1,1,1"))
            (rule "leq_literals" (formula "29") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "eqSymm" (formula "29"))
            (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "29") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0"))
            (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
            (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "eqSymm" (formula "29"))
            (rule "getOfSeqSub" (formula "45") (term "0"))
            (rule "castDel" (formula "45") (term "2,0"))
            (rule "add_zero_right" (formula "45") (term "1,1,0"))
            (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0"))
            (rule "times_zero_2" (formula "45") (term "1,1,1,0,0"))
            (rule "add_zero_right" (formula "45") (term "1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
            (rule "replace_known_left" (formula "45") (term "0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "0,0,0"))
            (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "getOfSeqConcatEQ" (formula "38") (term "0") (ifseqformula "36"))
            (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
            (rule "lenOfSeqSub" (formula "38") (term "1,0,0"))
            (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0"))
            (rule "times_zero_2" (formula "38") (term "1,1,1,0,0"))
            (rule "add_zero_right" (formula "38") (term "1,1,0,0"))
            (rule "lenOfSeqSub" (formula "38") (term "0,1,1,2,0"))
            (rule "polySimp_elimSub" (formula "38") (term "1,0,1,1,2,0"))
            (rule "mul_literals" (formula "38") (term "1,1,0,1,1,2,0"))
            (rule "add_zero_right" (formula "38") (term "1,0,1,1,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0,0"))
            (rule "add_zero_right" (formula "38") (term "0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,1,2,0"))
            (rule "add_zero_right" (formula "38") (term "0,0,0,1,1,2,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,1,2,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,1,2,0"))
            (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,1,2,0"))
            (rule "replace_known_left" (formula "38") (term "0,0,1,1,2,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "polySimp_pullOutFactor1" (formula "38") (term "1,2,0"))
            (rule "add_literals" (formula "38") (term "1,1,2,0"))
            (rule "times_zero_1" (formula "38") (term "1,2,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,0,0,0"))
            (rule "replace_known_left" (formula "38") (term "0,0,1,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
            (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
            (rule "add_literals" (formula "38") (term "0,0,0"))
            (rule "leq_literals" (formula "38") (term "0,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "getOfSeqSub" (formula "34") (term "0,1,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "1,1,0,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1,0"))
            (rule "times_zero_2" (formula "34") (term "1,1,1,0,0,1,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0,1,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
            (rule "polySimp_pullOutFactor2" (formula "34") (term "0,1,0,0,1,0,1,0"))
            (rule "add_literals" (formula "34") (term "1,0,1,0,0,1,0,1,0"))
            (rule "times_zero_1" (formula "34") (term "0,1,0,0,1,0,1,0"))
            (rule "leq_literals" (formula "34") (term "1,0,0,1,0,1,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0,1,0,1,0"))
            (rule "times_zero_2" (formula "34") (term "1,0,0,0,1,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,1,0,1,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,1,0,1,0"))
            (rule "replace_known_left" (formula "34") (term "0,0,1,0,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "subSeqConcatEQ" (formula "36") (term "1,1,0") (ifseqformula "26"))
            (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0"))
            (rule "lenOfSeqSub" (formula "36") (term "1,0,1,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,1,1,0"))
            (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,1,1,0"))
            (rule "lenOfSeqSub" (formula "36") (term "0,0,2,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,0,0,2,0,1,1,0"))
            (rule "times_zero_2" (formula "36") (term "1,1,0,0,2,0,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "1,0,0,2,0,1,1,0"))
            (rule "lenOfSeqSub" (formula "36") (term "1,2,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,1,1,0"))
            (rule "times_zero_2" (formula "36") (term "1,1,1,2,0,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "1,1,2,0,1,1,0"))
            (rule "lenOfSeqSub" (formula "36") (term "0,1,2,1,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,0,1,2,1,1,1,1,0"))
            (rule "mul_literals" (formula "36") (term "1,1,0,1,2,1,1,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "1,0,1,2,1,1,1,1,0"))
            (rule "lenOfSeqSub" (formula "36") (term "0,1,2,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "36") (term "1,0,1,2,1,1,1,0"))
            (rule "times_zero_2" (formula "36") (term "1,1,0,1,2,1,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "1,0,1,2,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,1,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,2,0,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,2,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,2,1,1,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,0,1,2,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,2,1,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,2,1,1,1,0"))
            (rule "add_zero_right" (formula "36") (term "0,0,0,1,2,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,2,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "36") (term "0,0,1,1,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,2,0,1,1,0"))
            (rule "mul_literals" (formula "36") (term "0,1,0,0,0,2,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,2,0,1,1,0"))
            (rule "add_literals" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,2,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,2,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "36") (term "0,0,1,2,0,1,1,0"))
            (rule "replace_known_left" (formula "36") (term "0,1,2,0,1,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,2,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,2,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,0,2,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,2,0,1,1,0"))
            (rule "mul_literals" (formula "36") (term "0,1,0,2,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,0,2,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,2,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,2,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,2,1,1,1,0"))
            (rule "replace_known_left" (formula "36") (term "0,0,1,2,1,1,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "polySimp_addComm1" (formula "36") (term "2,1,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,2,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,2,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,2,1,1,1,1,0"))
            (rule "replace_known_left" (formula "36") (term "0,0,1,2,1,1,1,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "polySimp_pullOutFactor1" (formula "36") (term "2,1,1,1,1,0"))
            (rule "add_literals" (formula "36") (term "1,2,1,1,1,1,0"))
            (rule "times_zero_1" (formula "36") (term "2,1,1,1,1,0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0,2,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
            (rule "replace_known_left" (formula "36") (term "0,0,0,2,0,1,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "inEqSimp_homoInEq0" (formula "36") (term "0,2,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "36") (term "0,0,2,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,2,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "36") (term "1,0,2,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "36") (term "1,0,2,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,2,0,1,1,0"))
            (rule "mul_literals" (formula "36") (term "0,1,0,2,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1,0,2,0,1,1,0"))
            (rule "replace_known_left" (formula "36") (term "0,2,0,1,1,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "getOfSeqConcat" (formula "38") (term "0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "castDel" (formula "38") (term "1,0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "sub_literals" (formula "38") (term "1,0,1"))
            (rule "less_literals" (formula "38") (term "0"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "true_left" (formula "38"))
            (rule "getOfSeqConcatEQ" (formula "28") (term "0,0,0,0") (ifseqformula "26"))
            (rule "polySimp_elimSub" (formula "28") (term "1,2,0,0,0,0"))
            (rule "lenOfSeqSub" (formula "28") (term "1,0,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,0,0,0"))
            (rule "times_zero_2" (formula "28") (term "1,1,1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "1,1,0,0,0,0,0"))
            (rule "lenOfSeqSub" (formula "28") (term "0,1,1,2,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "28") (term "1,0,1,1,2,0,0,0,0"))
            (rule "times_zero_2" (formula "28") (term "1,1,0,1,1,2,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "1,0,1,1,2,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,2,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,2,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,2,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,1,2,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1,2,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,2,0,0,0,0"))
            (rule "replace_known_left" (formula "28") (term "0,0,1,1,2,0,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_pullOutFactor1" (formula "28") (term "1,2,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "1,1,2,0,0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,2,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0,0,0,0,0,0"))
            (rule "replace_known_left" (formula "28") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
            (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "getOfSeqConcatEQ" (formula "44") (term "0") (ifseqformula "26"))
            (rule "polySimp_elimSub" (formula "44") (term "1,2,0"))
            (rule "lenOfSeqSub" (formula "44") (term "1,0,0"))
            (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0"))
            (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
            (rule "add_zero_right" (formula "44") (term "1,1,0,0"))
            (rule "lenOfSeqSub" (formula "44") (term "0,1,1,2,0"))
            (rule "polySimp_elimSub" (formula "44") (term "1,0,1,1,2,0"))
            (rule "times_zero_2" (formula "44") (term "1,1,0,1,1,2,0"))
            (rule "add_zero_right" (formula "44") (term "1,0,1,1,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0,0"))
            (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,1,1,2,0"))
            (rule "add_zero_right" (formula "44") (term "0,0,0,1,1,2,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,1,2,0"))
            (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,1,1,2,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,1,2,0"))
            (rule "polySimp_elimOne" (formula "44") (term "0,0,0,1,1,2,0"))
            (rule "replace_known_left" (formula "44") (term "0,0,1,1,2,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "44") (term "0,0,0,1,0,0,0"))
            (rule "replace_known_left" (formula "44") (term "0,0,1,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "44") (term "0,0,0"))
            (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "getOfSeqConcatEQ" (formula "34") (term "0,1,1,0") (ifseqformula "26"))
            (rule "polySimp_elimSub" (formula "34") (term "1,2,0,1,1,0"))
            (rule "lenOfSeqSub" (formula "34") (term "1,0,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,1,0"))
            (rule "mul_literals" (formula "34") (term "1,1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,1,0"))
            (rule "lenOfSeqSub" (formula "34") (term "0,1,1,2,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "34") (term "1,0,1,1,2,0,1,1,0"))
            (rule "times_zero_2" (formula "34") (term "1,1,0,1,1,2,0,1,1,0"))
            (rule "add_zero_right" (formula "34") (term "1,0,1,1,2,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,2,0,1,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,1,1,2,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1,2,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,1,2,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,1,2,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,1,2,0,1,1,0"))
            (rule "replace_known_left" (formula "34") (term "0,0,1,1,2,0,1,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "polySimp_pullOutFactor1" (formula "34") (term "1,2,0,1,1,0"))
            (rule "add_literals" (formula "34") (term "1,1,2,0,1,1,0"))
            (rule "times_zero_1" (formula "34") (term "1,2,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "replace_known_left" (formula "34") (term "0,0,1,0,0,0,1,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,1,1,0"))
            (rule "add_literals" (formula "34") (term "1,1,0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,1,1,0"))
            (rule "leq_literals" (formula "34") (term "0,0,1,1,0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "getOfSeqSub" (formula "28") (term "0,0,0,0"))
            (rule "leq_literals" (formula "28") (term "0,0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "add_zero_left" (formula "28") (term "1,1,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "28") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "28") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,0"))
            (rule "replace_known_left" (formula "28") (term "0,0,0,0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "getOfSeqSub" (formula "44") (term "0"))
            (rule "castDel" (formula "44") (term "2,0"))
            (rule "add_zero_right" (formula "44") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "orRight" (formula "44"))
            (rule "eqSymm" (formula "45"))
            (rule "polySimp_elimSub" (formula "44") (term "1,1"))
            (rule "times_zero_2" (formula "44") (term "1,1,1"))
            (rule "add_zero_right" (formula "44") (term "1,1"))
            (rule "inEqSimp_ltToLeq" (formula "44") (term "1"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
            (rule "polySimp_addComm1" (formula "44") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "44") (term "0"))
            (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "inEqSimp_leqRight" (formula "44"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
            (rule "andLeft" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
      )
      (branch "Exceptional Post (unremove)"
          (builtin "One Step Simplification" (formula "32"))
          (builtin "One Step Simplification" (formula "39"))
         (rule "andLeft" (formula "32"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "35"))
         (rule "notLeft" (formula "33"))
         (rule "close" (formula "36") (ifseqformula "35"))
      )
      (branch "Pre (unremove)"
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "6")) (ifInst ""  (formula "30")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,1") (ifseqformula "22"))
         (rule "wellFormedAnonEQ" (formula "37") (term "0,1") (ifseqformula "22"))
         (rule "eqSymm" (formula "31") (term "0,0"))
         (rule "eqSymm" (formula "29") (term "0,1,0"))
         (rule "eqSymm" (formula "28") (term "0,0"))
         (rule "eqSymm" (formula "37") (term "0,1,0,1,0"))
         (rule "eqSymm" (formula "20") (term "0,1,0,0"))
         (rule "eqSymm" (formula "19") (term "1,0"))
         (rule "eqSymm" (formula "26"))
         (rule "eqSymm" (formula "27") (term "0,0"))
         (rule "eqSymm" (formula "37") (term "1,0,0,0"))
         (rule "eqSymm" (formula "37") (term "1,0,0,0,0,0"))
         (rule "eqSymm" (formula "18") (term "1,0"))
         (rule "eqSymm" (formula "24"))
         (rule "eqSymm" (formula "37") (term "1,0,0,0,0"))
         (rule "eqSymm" (formula "26") (term "0,1"))
         (rule "replace_known_left" (formula "37") (term "1,0,1") (ifseqformula "21"))
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
         (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
         (rule "polySimp_elimSub" (formula "28") (term "1,0,1"))
         (rule "mul_literals" (formula "28") (term "1,1,0,1"))
         (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "7") (term "1"))
         (rule "mul_literals" (formula "7") (term "1,1"))
         (rule "polySimp_elimSub" (formula "25") (term "1"))
         (rule "mul_literals" (formula "25") (term "1,1"))
         (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "37") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "28") (term "1,0,1"))
         (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_addComm0" (formula "7") (term "1"))
         (rule "polySimp_addComm0" (formula "25") (term "1"))
         (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "37") (term "1,0,0,1,0,0"))
         (rule "castedGetAny" (formula "8") (term "0"))
         (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
         (rule "eqSeqEmpty" (formula "33"))
         (rule "castedGetAny" (formula "27") (term "1"))
         (rule "castedGetAny" (formula "9") (term "0"))
         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
         (rule "ifEqualsNull" (formula "31"))
         (rule "orRight" (formula "31"))
         (rule "castedGetAny" (formula "29") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "20") (term "1,0,1,0,0"))
         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0"))
         (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
         (rule "castedGetAny" (formula "26") (term "1,0,0,1,1,0,0"))
         (rule "castedGetAny" (formula "26") (term "0,0,0,1,0,0"))
         (rule "castedGetAny" (formula "26") (term "0,0,0,0"))
         (rule "castedGetAny" (formula "26") (term "1,2,0"))
         (rule "castedGetAny" (formula "26") (term "1,1,0"))
         (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
         (rule "castedGetAny" (formula "38") (term "0,0,1,0,1"))
         (rule "castedGetAny" (formula "38") (term "1,0,1,0,0,0,0"))
         (rule "castedGetAny" (formula "38") (term "0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "6"))
         (rule "add_zero_right" (formula "6") (term "0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10"))
         (rule "add_zero_right" (formula "10") (term "0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
         (rule "castedGetAny" (formula "19") (term "0,1,0"))
         (rule "eqSymm" (formula "19") (term "1,0"))
         (rule "castedGetAny" (formula "17") (term "1,0"))
         (rule "castedGetAny" (formula "28") (term "1"))
         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0"))
         (rule "castedGetAny" (formula "18") (term "0,1,0"))
         (rule "eqSymm" (formula "18") (term "1,0"))
         (rule "castedGetAny" (formula "38") (term "0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "7"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "applyEq" (formula "26") (term "1") (ifseqformula "28"))
         (rule "applyEq" (formula "34") (term "0") (ifseqformula "11"))
         (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "25"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
         (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "10"))
         (rule "times_zero_1" (formula "33") (term "1,0,0"))
         (rule "add_zero_right" (formula "33") (term "0,0"))
         (rule "leq_literals" (formula "33") (term "0"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "false_right" (formula "33"))
         (rule "pullOutSelect" (formula "36") (term "1,1,0,0") (inst "selectSK=DoubleLinkedList_Node_l_0"))
         (rule "applyEq" (formula "37") (term "1,1,0,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "5")))
         (rule "pullOutSelect" (formula "37") (term "0,0,1,0") (inst "selectSK=DoubleLinkedList_Node_r_0"))
         (rule "applyEq" (formula "38") (term "1,1,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "6")))
         (rule "pullOutSelect" (formula "38") (term "0,0,0,1,0,1") (inst "selectSK=DoubleLinkedList_s_0"))
         (rule "applyEq" (formula "39") (term "0,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "39") (term "0,1,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "39") (term "0,0,1,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "5")))
         (rule "getOfSeqConcatEQ" (formula "32") (term "0,0,1,0") (ifseqformula "27"))
         (rule "polySimp_elimSub" (formula "32") (term "1,2,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "32") (term "1,2,0,0,1,0"))
         (rule "lenOfSeqSub" (formula "32") (term "1,0,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "32") (term "1,1,0,0,0,1,0"))
         (rule "times_zero_2" (formula "32") (term "1,1,1,0,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "1,1,0,0,0,1,0"))
         (rule "lenOfSeqSub" (formula "32") (term "0,0,1,2,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "32") (term "1,0,0,1,2,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "1,1,0,0,1,2,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "1,0,0,1,2,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,1,2,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "0,0,0,0,1,2,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,1,2,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0,0,1,2,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0,1,2,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "0,0,0,0,1,2,0,0,1,0"))
         (rule "replace_known_left" (formula "32") (term "0,0,0,1,2,0,0,1,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0,1,0,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,0"))
         (rule "replace_known_left" (formula "32") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
         (rule "getOfSeqConcatEQ" (formula "30") (term "1") (ifseqformula "27"))
         (rule "eqSymm" (formula "30"))
         (rule "polySimp_elimSub" (formula "30") (term "1,2,0"))
         (rule "lenOfSeqSub" (formula "30") (term "1,0,0"))
         (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
         (rule "times_zero_2" (formula "30") (term "1,1,1,0,0"))
         (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
         (rule "lenOfSeqSub" (formula "30") (term "0,1,1,2,0"))
         (rule "polySimp_elimSub" (formula "30") (term "1,0,1,1,2,0"))
         (rule "times_zero_2" (formula "30") (term "1,1,0,1,1,2,0"))
         (rule "add_zero_right" (formula "30") (term "1,0,1,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,1,2,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,1,1,2,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,1,2,0"))
         (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,1,2,0"))
         (rule "replace_known_left" (formula "30") (term "0,0,1,1,2,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "polySimp_pullOutFactor1" (formula "30") (term "1,2,0"))
         (rule "add_literals" (formula "30") (term "1,1,2,0"))
         (rule "times_zero_1" (formula "30") (term "1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "0,0,0,0,0"))
         (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
         (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0"))
         (rule "leq_literals" (formula "30") (term "0,0"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "eqSymm" (formula "30"))
         (rule "getOfSeqConcatEQ" (formula "29") (term "1,0,0,1,1,0,0") (ifseqformula "27"))
         (rule "polySimp_elimSub" (formula "29") (term "1,2,1,0,0,1,1,0,0"))
         (rule "lenOfSeqSub" (formula "29") (term "1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "29") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "times_zero_2" (formula "29") (term "1,1,1,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "29") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "lenOfSeqSub" (formula "29") (term "0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "29") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "times_zero_2" (formula "29") (term "1,1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "29") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "29") (term "0,0,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "29") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "29") (term "0,0,1,1,2,1,0,0,1,1,0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "polySimp_pullOutFactor1" (formula "29") (term "1,2,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "29") (term "1,1,2,1,0,0,1,1,0,0"))
         (rule "times_zero_1" (formula "29") (term "1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "29") (term "0,0,1,0,0,1,0,0,1,1,0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,1,1,0,0"))
         (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,1,1,0,0"))
         (rule "leq_literals" (formula "29") (term "0,1,0,0,1,1,0,0"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "getOfSeqConcatEQ" (formula "31") (term "1") (ifseqformula "27"))
         (rule "eqSymm" (formula "31"))
         (rule "polySimp_elimSub" (formula "31") (term "1,2,0"))
         (rule "lenOfSeqSub" (formula "31") (term "1,0,0"))
         (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0"))
         (rule "times_zero_2" (formula "31") (term "1,1,1,0,0"))
         (rule "add_zero_right" (formula "31") (term "1,1,0,0"))
         (rule "lenOfSeqSub" (formula "31") (term "0,1,1,2,0"))
         (rule "polySimp_elimSub" (formula "31") (term "1,0,1,1,2,0"))
         (rule "times_zero_2" (formula "31") (term "1,1,0,1,1,2,0"))
         (rule "add_zero_right" (formula "31") (term "1,0,1,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,1,2,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,0,1,1,2,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,1,2,0"))
         (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,1,2,0"))
         (rule "replace_known_left" (formula "31") (term "0,0,1,1,2,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "polySimp_pullOutFactor1b" (formula "31") (term "1,2,0"))
         (rule "add_literals" (formula "31") (term "1,1,1,2,0"))
         (rule "times_zero_1" (formula "31") (term "1,1,2,0"))
         (rule "add_zero_right" (formula "31") (term "1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,0,0,0"))
         (rule "replace_known_left" (formula "31") (term "0,0,1,0,0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "polySimp_pullOutFactor1" (formula "31") (term "0,0,0"))
         (rule "add_literals" (formula "31") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "31") (term "0,0,0"))
         (rule "leq_literals" (formula "31") (term "0,0"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "eqSymm" (formula "31"))
         (rule "elementOfUnion" (formula "3") (term "0,0"))
         (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "eqSymm" (formula "3") (term "1,0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "32") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "32") (term "1,1,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "1,1,1,0,1,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "1,1,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,1,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,1,0,0,1,0"))
         (rule "getOfSeqSub" (formula "32") (term "2,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "32") (term "1,1,0,2,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0,2,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "32") (term "1,1,2,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0,2,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,1,1,0,2,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "32") (term "1,1,0,2,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,1,1,2,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "32") (term "0,0,1,1,2,0,0,1,0"))
         (rule "polySimp_pullOutFactor2b" (formula "32") (term "0,1,1,2,0,0,1,0"))
         (rule "add_literals" (formula "32") (term "1,1,0,1,1,2,0,0,1,0"))
         (rule "times_zero_1" (formula "32") (term "1,0,1,1,2,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "0,1,1,2,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,2,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,1,0,2,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,0,1,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,2,0,0,1,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,2,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,1,0,2,0,0,1,0"))
         (rule "add_literals" (formula "32") (term "1,1,0,0,0,1,0,2,0,0,1,0"))
         (rule "times_zero_1" (formula "32") (term "1,0,0,0,1,0,2,0,0,1,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,1,0,2,0,0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0,2,0,0,1,0"))
         (rule "times_zero_2" (formula "32") (term "1,0,0,0,2,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "0,0,0,2,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,2,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,2,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,2,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,2,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,1,0,2,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,2,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,2,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,2,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,0,0,2,0,0,1,0"))
         (rule "pullOutSelect" (formula "39") (term "1,1,1,0,0,1") (inst "selectSK=DoubleLinkedList_len_0"))
         (rule "applyEq" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "6")))
         (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,0"))
         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "29"))
         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
         (rule "getOfSeqSub" (formula "31") (term "1"))
         (rule "leq_literals" (formula "31") (term "0,0,1"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "add_zero_left" (formula "31") (term "1,1,1"))
         (rule "eqSymm" (formula "31"))
         (rule "polySimp_elimSub" (formula "31") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
         (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "31") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0"))
         (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
         (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "eqSymm" (formula "31"))
         (rule "pullOutSelect" (formula "40") (term "0,1,0,0,0,0") (inst "selectSK=DoubleLinkedList_Node_l_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "31") (term "1,0,0,1,1,0,0"))
         (rule "leq_literals" (formula "31") (term "0,0,1,0,0,1,1,0,0"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "add_zero_left" (formula "31") (term "1,1,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "31") (term "1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "31") (term "0,1,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "31") (term "1,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "31") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "0,0,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "31") (term "0,1,0,0,1,1,0,0") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "getOfSeqSub" (formula "33") (term "1"))
         (rule "add_zero_right" (formula "33") (term "1,1,1"))
         (rule "eqSymm" (formula "33"))
         (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0"))
         (rule "times_zero_2" (formula "33") (term "1,1,1,0,0"))
         (rule "add_zero_right" (formula "33") (term "1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0"))
         (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
         (rule "polySimp_pullOutFactor2" (formula "33") (term "0,1,0,0"))
         (rule "add_literals" (formula "33") (term "1,0,1,0,0"))
         (rule "times_zero_1" (formula "33") (term "0,1,0,0"))
         (rule "leq_literals" (formula "33") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
         (rule "times_zero_2" (formula "33") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "33") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0"))
         (rule "mul_literals" (formula "33") (term "1,0,0"))
         (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "eqSymm" (formula "33"))
         (rule "elementOfUnion" (formula "5") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "elementOfUnion" (formula "4") (term "0,0"))
         (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "eqSymm" (formula "4") (term "1,0,0"))
         (rule "elementOfUnion" (formula "3") (term "0,0"))
         (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "5") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "applyEq" (formula "5") (term "0") (ifseqformula "33"))
         (rule "applyEqReverse" (formula "41") (term "1,1,0,0") (ifseqformula "5"))
         (rule "applyEqReverse" (formula "41") (term "1,1,0,0,0,0") (ifseqformula "5"))
         (rule "hideAuxiliaryEq" (formula "5"))
         (rule "eqSymm" (formula "40") (term "1,0,0"))
         (rule "eqSymm" (formula "40") (term "1,0,0,0,0"))
         (rule "elementOfUnion" (formula "4") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "applyEq" (formula "4") (term "0") (ifseqformula "31"))
         (rule "applyEqReverse" (formula "40") (term "1,1,0,0,0") (ifseqformula "4"))
         (rule "applyEqReverse" (formula "40") (term "0,0,1,0") (ifseqformula "4"))
         (rule "hideAuxiliaryEq" (formula "4"))
         (rule "eqSymm" (formula "39") (term "1,0,0,0"))
         (rule "elementOfUnion" (formula "3") (term "0,0"))
         (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,1,2,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,1,0,0,1,1,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "39") (term "0,1,1,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0,1") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "39") (term "0,1,1,0,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "eqSymm" (formula "38") (term "1,0,0"))
         (rule "eqSymm" (formula "38") (term "1,0,0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "getOfSeqConcatEQ" (formula "28") (term "1,2,0") (ifseqformula "26"))
         (rule "polySimp_elimSub" (formula "28") (term "1,2,1,2,0"))
         (rule "lenOfSeqSub" (formula "28") (term "1,0,1,2,0"))
         (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1,2,0"))
         (rule "mul_literals" (formula "28") (term "1,1,1,0,1,2,0"))
         (rule "add_zero_right" (formula "28") (term "1,1,0,1,2,0"))
         (rule "lenOfSeqSub" (formula "28") (term "0,1,1,2,1,2,0"))
         (rule "polySimp_elimSub" (formula "28") (term "1,0,1,1,2,1,2,0"))
         (rule "mul_literals" (formula "28") (term "1,1,0,1,1,2,1,2,0"))
         (rule "add_zero_right" (formula "28") (term "1,0,1,1,2,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,1,2,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,1,0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,2,1,2,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,2,1,2,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,2,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,2,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0,0,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,1,2,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1,2,1,2,0"))
         (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,2,1,2,0"))
         (rule "replace_known_left" (formula "28") (term "0,0,1,1,2,1,2,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "polySimp_pullOutFactor1" (formula "28") (term "1,2,1,2,0"))
         (rule "add_literals" (formula "28") (term "1,1,2,1,2,0"))
         (rule "times_zero_1" (formula "28") (term "1,2,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0,0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0,0,1,2,0"))
         (rule "replace_known_left" (formula "28") (term "0,0,1,0,0,1,2,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,2,0"))
         (rule "add_literals" (formula "28") (term "1,1,0,0,1,2,0"))
         (rule "times_zero_1" (formula "28") (term "1,0,0,1,2,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,1,2,0"))
         (rule "leq_literals" (formula "28") (term "0,1,2,0"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfSingleton" (formula "2") (term "0,0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "applyEqReverse" (formula "38") (term "1,1,0,0,0,0,0") (ifseqformula "2"))
         (rule "applyEqReverse" (formula "38") (term "1,1,1,0,0,1") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "polySimp_addAssoc" (formula "37") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "37") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,1"))
         (rule "add_literals" (formula "37") (term "0,1,1,0,0,1"))
         (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,0,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqSub" (formula "27") (term "1,2,0"))
         (rule "add_zero_left" (formula "27") (term "1,1,1,2,0"))
         (rule "leq_literals" (formula "27") (term "0,0,1,2,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,2,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,1,2,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,0,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,2,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,2,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,2,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,2,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,2,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,1,2,0"))
         (rule "replace_known_left" (formula "27") (term "0,1,2,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "37") (term "0,1,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "37") (term "1,2,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "37") (term "1,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "37") (term "1,1,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "37") (term "0,1,1,2,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,1,1,2,0,1,0,0"))
         (rule "mul_literals" (formula "37") (term "1,1,0,1,1,2,0,1,0,0"))
         (rule "add_zero_right" (formula "37") (term "1,0,1,1,2,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,1,2,0,1,0,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,1,1,2,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,1,2,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "37") (term "0,0,0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "37") (term "0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,1,2,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,1,2,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,1,2,0,1,0,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,1,1,2,0,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "polySimp_pullOutFactor1b" (formula "37") (term "1,2,0,1,0,0"))
         (rule "add_literals" (formula "37") (term "1,1,1,2,0,1,0,0"))
         (rule "times_zero_1" (formula "37") (term "1,1,2,0,1,0,0"))
         (rule "add_zero_right" (formula "37") (term "1,2,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,0,0,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1" (formula "37") (term "0,0,0,1,0,0"))
         (rule "add_literals" (formula "37") (term "1,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "37") (term "0,0,0,1,0,0"))
         (rule "leq_literals" (formula "37") (term "0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqConcatEQ" (formula "27") (term "1,1,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "27") (term "1,2,1,1,0"))
         (rule "lenOfSeqSub" (formula "27") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,1,0"))
         (rule "mul_literals" (formula "27") (term "1,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,1,1,0"))
         (rule "lenOfSeqSub" (formula "27") (term "0,1,1,2,1,1,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,1,2,1,1,0"))
         (rule "mul_literals" (formula "27") (term "1,1,0,1,1,2,1,1,0"))
         (rule "add_zero_right" (formula "27") (term "1,0,1,1,2,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,2,1,1,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,2,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,2,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,2,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,2,1,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,1,2,1,1,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,1,2,1,1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1" (formula "27") (term "1,2,1,1,0"))
         (rule "add_literals" (formula "27") (term "1,1,2,1,1,0"))
         (rule "times_zero_1" (formula "27") (term "1,2,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,1,1,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0,0,1,1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,1,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,1,0"))
         (rule "leq_literals" (formula "27") (term "0,1,1,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "1,1,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,1,1,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,1,0"))
         (rule "mul_literals" (formula "1") (term "1,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,1,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,1,0"))
         (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,1,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,1,1,0"))
         (rule "add_literals" (formula "1") (term "1,1,2,1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,2,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,1,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,1,1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,1,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
         (rule "leq_literals" (formula "1") (term "0,1,1,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "37") (term "0,1,0,0"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,1,0,0"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,0,0"))
         (rule "times_zero_2" (formula "37") (term "1,1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,0,0"))
         (rule "add_literals" (formula "37") (term "0,0,0,1,0,1,0,0"))
         (rule "add_zero_left" (formula "37") (term "0,0,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor2" (formula "37") (term "0,1,0,1,0,0"))
         (rule "add_literals" (formula "37") (term "1,0,1,0,1,0,0"))
         (rule "times_zero_1" (formula "37") (term "0,1,0,1,0,0"))
         (rule "leq_literals" (formula "37") (term "1,0,1,0,0"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_homoInEq0" (formula "37") (term "0,1,0,0"))
         (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0,0"))
         (rule "mul_literals" (formula "37") (term "1,0,1,0,0"))
         (rule "replace_known_left" (formula "37") (term "0,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqSub" (formula "27") (term "1,1,0"))
         (rule "leq_literals" (formula "27") (term "0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "add_zero_left" (formula "27") (term "1,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,1,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,1,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,1,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,1,1,0"))
         (rule "replace_known_left" (formula "27") (term "0,1,1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqSub" (formula "1") (term "1,1,0"))
         (rule "leq_literals" (formula "1") (term "0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "add_zero_left" (formula "1") (term "1,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,1,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "37") (term "0,0,1,0,1") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "37") (term "1,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "37") (term "1,2,0,0,1,0,1"))
         (rule "lenOfSeqSub" (formula "37") (term "1,0,0,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "1,1,1,0,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,0,0,1,0,1"))
         (rule "lenOfSeqSub" (formula "37") (term "0,0,1,2,0,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,0,1,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "1,1,0,0,1,2,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "1,0,0,1,2,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,1,2,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,0,1,2,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,2,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,1,2,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,1,2,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,0,1,2,0,0,1,0,1"))
         (rule "replace_known_left" (formula "37") (term "0,0,0,1,2,0,0,1,0,1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,0,0,0,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0,0,0,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0,0,0,0,0,1,0,1"))
         (rule "replace_known_left" (formula "37") (term "0,0,1,0,0,0,0,0,1,0,1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,1,0,1"))
         (rule "getOfSeqConcatEQ" (formula "27") (term "1") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "27") (term "1,2,1"))
         (rule "lenOfSeqSub" (formula "27") (term "1,0,1"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1"))
         (rule "mul_literals" (formula "27") (term "1,1,1,0,1"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,1"))
         (rule "lenOfSeqSub" (formula "27") (term "0,1,1,2,1"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,1,2,1"))
         (rule "mul_literals" (formula "27") (term "1,1,0,1,1,2,1"))
         (rule "add_zero_right" (formula "27") (term "1,0,1,1,2,1"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,2,1"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,2,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,2,1"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
         (rule "add_zero_left" (formula "27") (term "0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,2,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,2,1"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,1,2,1"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,1,2,1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "1,2,1"))
         (rule "add_literals" (formula "27") (term "1,1,1,2,1"))
         (rule "times_zero_1" (formula "27") (term "1,1,2,1"))
         (rule "add_literals" (formula "27") (term "1,2,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,1"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0,0,1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0,1"))
         (rule "add_literals" (formula "27") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "27") (term "0,0,1"))
         (rule "leq_literals" (formula "27") (term "0,1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,1,0,0,1,1,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "1") (term "1,1,1,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,0,0,1,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,2,1,0,0,1,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0,1,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,1,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,1,0,0,1,1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "37") (term "2,0,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addComm1" (formula "37") (term "1,1,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "37") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,1,1,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "37") (term "0,0,1,1,2,0,0,1,0,1"))
         (rule "polySimp_pullOutFactor2b" (formula "37") (term "0,1,1,2,0,0,1,0,1"))
         (rule "add_literals" (formula "37") (term "1,1,0,1,1,2,0,0,1,0,1"))
         (rule "times_zero_1" (formula "37") (term "1,0,1,1,2,0,0,1,0,1"))
         (rule "add_literals" (formula "37") (term "0,1,1,2,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,1,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,0,1,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,2,0,0,1,0,1"))
         (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,1,0,2,0,0,1,0,1"))
         (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,0,2,0,0,1,0,1"))
         (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,0,2,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,2,0,0,1,0,1"))
         (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "1,0,0,0,2,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,2,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,2,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,2,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,2,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,2,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,0,0,2,0,0,1,0,1"))
         (rule "getOfSeqSub" (formula "37") (term "1,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "1,1,1,0,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "1,1,1,0,1,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,1,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,0,0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,1,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,1,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,1,0,1,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,1,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,1,0,0,1,0,1"))
         (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqSub" (formula "27") (term "1"))
         (rule "add_zero_right" (formula "27") (term "1,1,1"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1"))
         (rule "mul_literals" (formula "27") (term "1,1,1,0,1"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,1"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,1"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,1"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,1"))
         (rule "polySimp_pullOutFactor2" (formula "27") (term "0,1,0,1"))
         (rule "add_literals" (formula "27") (term "1,0,1,0,1"))
         (rule "times_zero_1" (formula "27") (term "0,1,0,1"))
         (rule "leq_literals" (formula "27") (term "1,0,1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1"))
         (rule "mul_literals" (formula "27") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "27") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1"))
         (rule "mul_literals" (formula "27") (term "1,0,1"))
         (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqSub" (formula "1") (term "1,0,0,1,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "add_zero_left" (formula "1") (term "1,1,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,0,0,1,1,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "27") (term "0,0,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "27") (term "1,2,0,0,0,0"))
         (rule "lenOfSeqSub" (formula "27") (term "1,0,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "1,1,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,0,0,0,0"))
         (rule "lenOfSeqSub" (formula "27") (term "0,1,1,2,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,1,2,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "1,1,0,1,1,2,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "1,0,1,1,2,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,2,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,2,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,1,2,0,0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1" (formula "27") (term "1,2,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,2,0,0,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,2,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,0,0,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0"))
         (rule "leq_literals" (formula "27") (term "0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqConcatEQ" (formula "37") (term "0,1,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "37") (term "1,2,0,1,0"))
         (rule "lenOfSeqSub" (formula "37") (term "1,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,1,0"))
         (rule "times_zero_2" (formula "37") (term "1,1,1,0,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,0,1,0"))
         (rule "lenOfSeqSub" (formula "37") (term "0,1,1,2,0,1,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,1,1,2,0,1,0"))
         (rule "times_zero_2" (formula "37") (term "1,1,0,1,1,2,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "1,0,1,1,2,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,1,2,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,1,1,2,0,1,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,1,2,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,1,2,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,1,2,0,1,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,1,2,0,1,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,1,1,2,0,1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "polySimp_pullOutFactor1" (formula "37") (term "1,2,0,1,0"))
         (rule "add_literals" (formula "37") (term "1,1,2,0,1,0"))
         (rule "times_zero_1" (formula "37") (term "1,2,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,0,0,1,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,0,0,1,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,0"))
         (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,1,0"))
         (rule "leq_literals" (formula "37") (term "0,0,1,0"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "1,2,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,1,2,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,1,2,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,2,0"))
         (rule "mul_literals" (formula "1") (term "1,1,1,0,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,1,2,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,2,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,2,0"))
         (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,2,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,2,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,1,2,0"))
         (rule "add_literals" (formula "1") (term "1,1,2,1,2,0"))
         (rule "times_zero_1" (formula "1") (term "1,2,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,2,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,1,2,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,2,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,1,2,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,2,0"))
         (rule "leq_literals" (formula "1") (term "0,1,2,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "27") (term "0,0,0,0"))
         (rule "leq_literals" (formula "27") (term "0,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "add_zero_left" (formula "27") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqSub" (formula "37") (term "0,1,0"))
         (rule "leq_literals" (formula "37") (term "0,0,0,1,0"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "add_zero_left" (formula "37") (term "1,1,0,1,0"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1,0"))
         (rule "mul_literals" (formula "37") (term "0,1,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "37") (term "1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,1,0"))
         (rule "mul_literals" (formula "37") (term "0,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "37") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,1,0"))
         (rule "replace_known_left" (formula "37") (term "0,1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "commuteUnion_2" (formula "23") (term "0,1,0"))
         (rule "getOfSeqSub" (formula "1") (term "1,2,0"))
         (rule "add_zero_left" (formula "1") (term "1,1,1,2,0"))
         (rule "leq_literals" (formula "1") (term "0,0,1,2,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,2,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,1,2,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,2,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,2,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,2,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,2,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,2,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,0,0,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "1,1,1,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,0,0,0,1,0,0"))
         (rule "ifEqualsNull" (formula "1") (term "0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,0,1,1,0,0,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,0,1,1,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,1,1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,0,1,0,0,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,1,0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "27") (term "1,2,0,0,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "27") (term "1,0,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "1,1,1,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,0,0,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "27") (term "0,1,1,2,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,1,2,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "1,1,0,1,1,2,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "1,0,1,1,2,0,0,0,1,0,0"))
         (rule "ifEqualsNull" (formula "27") (term "0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,1,0,1,1,0,0,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1" (formula "27") (term "1,0,1,1,0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,1,1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0,0,0,1,0,0,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0,0,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "leq_literals" (formula "27") (term "0,0,1,0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0,0,0,0,0,1,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,0,0"))
         (rule "leq_literals" (formula "27") (term "0,0,0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqSub" (formula "1") (term "0,0,0,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0,1,0,0"))
         (rule "ifEqualsNull" (formula "1") (term "0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "27") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "27") (term "1,1,0,0,0,1,0,0"))
         (rule "leq_literals" (formula "27") (term "0,0,0,0,0,1,0,0"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,0,0,0,0,1,0,0"))
         (rule "ifEqualsNull" (formula "27") (term "0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,0,0,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,1,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,0,0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,0,0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,2,0,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,2,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,0,0,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "1") (term "0,0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "27"))
         (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "37"))
         (rule "notRight" (formula "37"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "27") (term "1,2,0") (ifseqformula "1"))
         (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "1"))
         (rule "eqSymm" (formula "27") (term "0,0"))
         (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
         (rule "ifEqualsNull" (formula "28"))
         (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "32"))
          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "33")))
         (rule "closeFalse" (formula "28"))
      )
   )
   (branch "Exceptional Post (remove)"
       (builtin "One Step Simplification" (formula "21"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "25"))
      (rule "notLeft" (formula "23"))
      (rule "close" (formula "26") (ifseqformula "25"))
   )
   (branch "Pre (remove)"
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "8")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")) (ifInst ""  (formula "1")) (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
      (rule "andLeft" (formula "9"))
      (rule "eqSymm" (formula "18") (term "1,0"))
      (rule "eqSymm" (formula "19") (term "1,0"))
      (rule "eqSymm" (formula "20") (term "0,1,0,0"))
      (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "7") (term "1"))
      (rule "mul_literals" (formula "7") (term "1,1"))
      (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
      (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_addComm0" (formula "7") (term "1"))
      (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
      (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
      (rule "castedGetAny" (formula "8") (term "0"))
      (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
      (rule "eqSeqEmpty" (formula "22"))
      (rule "castedGetAny" (formula "9") (term "0"))
      (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
      (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
      (rule "castedGetAny" (formula "20") (term "0,0,1,0,0"))
      (rule "castedGetAny" (formula "20") (term "1,0,1,0,0"))
      (rule "castedGetAny" (formula "19") (term "0,1,0"))
      (rule "eqSymm" (formula "19") (term "1,0"))
      (rule "castedGetAny" (formula "17") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "castedGetAny" (formula "18") (term "0,1,0"))
      (rule "eqSymm" (formula "18") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "6"))
      (rule "add_zero_right" (formula "6") (term "0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10"))
      (rule "add_zero_right" (formula "10") (term "0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
      (rule "applyEq" (formula "22") (term "0") (ifseqformula "11"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
      (rule "polySimp_elimOne" (formula "6") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "polySimp_elimOne" (formula "10") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
      (rule "times_zero_1" (formula "21") (term "1,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0"))
      (rule "leq_literals" (formula "21") (term "0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "false_right" (formula "21"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "18") (term "0"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "20") (term "0,0"))
      (rule "nnf_imp2or" (formula "19") (term "0"))
      (rule "nnf_imp2or" (formula "14") (term "0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "18") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "18") (term "0"))
      (rule "commute_or_2" (formula "13") (term "0"))
      (rule "commute_or_2" (formula "19") (term "0"))
      (rule "Class_invariant_axiom_for_DoubleLinkedList" (formula "24") (inst "j=j") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "i_5=i_5") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "11")) (ifInst ""  (formula "21")) (ifInst ""  (formula "16")) (ifInst ""  (formula "21")))
      (rule "eqSymm" (formula "24") (term "0,1,0,0,1"))
      (rule "eqSymm" (formula "24") (term "1,0,1,0"))
      (rule "eqSymm" (formula "24") (term "1,0,1,0,0"))
      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "24") (term "1,0,1,0,1,0,0,0"))
      (rule "mul_literals" (formula "24") (term "1,1,0,1,0,1,0,0,0"))
      (rule "polySimp_elimSub" (formula "24") (term "1,0,0,1,0,1,0,0"))
      (rule "mul_literals" (formula "24") (term "1,1,0,0,1,0,1,0,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,0,0,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,0,1,0,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,0,0,1,0,1,0,0"))
      (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,1,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,1,0,0,0,0,0"))
      (rule "eqSeqEmpty" (formula "24") (term "0,1,0,0,0,0,0,0,0,0,0"))
      (rule "eqSeqEmpty" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "24") (term "0,0,1,0,0,0,0,0,0,0,0"))
      (rule "replace_known_left" (formula "24") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "castedGetAny" (formula "24") (term "0,0,1,0,0,1"))
      (rule "castedGetAny" (formula "24") (term "0,1,0,1,0"))
      (rule "eqSymm" (formula "24") (term "1,0,1,0"))
      (rule "castedGetAny" (formula "24") (term "1,0,1,0,0,0"))
      (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "castedGetAny" (formula "24") (term "1,0,1,0,1,0"))
      (rule "castedGetAny" (formula "24") (term "0,1,0,1,0,0"))
      (rule "eqSymm" (formula "24") (term "1,0,1,0,0"))
      (rule "castedGetAny" (formula "24") (term "1,0,1,0,0,1"))
      (rule "castedGetAny" (formula "24") (term "1,0,1,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
      (rule "applyEq" (formula "24") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "applyEq" (formula "24") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "11"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
      (rule "replace_known_left" (formula "24") (term "1,0,0,0,0,0,0,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
      (rule "inEqSimp_contradEq7" (formula "24") (term "0,0,0,0,0,0,0,0") (ifseqformula "10"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
      (rule "nnf_imp2or" (formula "24") (term "0,0,1"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,0,0,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0,0,0,0"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0,0,0,0,0"))
      (rule "nnf_imp2or" (formula "24") (term "0,0,0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,1"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,1"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,1"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,1"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,1"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,1"))
      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "commute_or_2" (formula "14") (term "0"))
      (rule "cnf_rightDist" (formula "15") (term "0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,0,0,1,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0,0,0"))
      (rule "commute_or_2" (formula "20") (term "0,0"))
      (rule "commute_or" (formula "12") (term "0,0"))
      (rule "commute_or" (formula "18") (term "0,0"))
      (rule "commute_or" (formula "13") (term "0,0"))
      (rule "commute_or" (formula "19") (term "0,0"))
      (rule "lenNonNegative" (formula "11") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "11"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
      (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "10"))
      (rule "leq_literals" (formula "11") (term "0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "seqGetAlphaCast" (formula "8") (term "0"))
      (rule "castedGetAny" (formula "8") (term "0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "seqGetAlphaCast" (formula "9") (term "0"))
      (rule "castedGetAny" (formula "9") (term "0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "seqGetAlphaCast" (formula "17") (term "1,0"))
      (rule "castedGetAny" (formula "17") (term "0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "distr_forallAnd" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "replace_known_left" (formula "25") (term "0,0,0,0,0") (ifseqformula "15"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "commute_or" (formula "14") (term "0,0"))
      (rule "commute_or_2" (formula "15") (term "0"))
      (rule "commute_or_2" (formula "21") (term "0,0,0"))
      (rule "shift_paren_or" (formula "16") (term "0"))
      (rule "commute_or" (formula "15") (term "0,0"))
      (rule "commute_or_2" (formula "20") (term "0,0"))
      (rule "commute_or" (formula "20") (term "0,0,0,0"))
      (rule "andRight" (formula "24"))
      (branch "Case 1"
         (rule "andRight" (formula "24"))
         (branch "Case 1"
            (rule "andRight" (formula "24"))
            (branch "Case 1"
               (rule "andRight" (formula "24"))
               (branch "Case 1"
                  (rule "allRight" (formula "24") (inst "sk=i_4_0"))
                  (rule "orRight" (formula "24"))
                  (rule "orRight" (formula "24"))
                  (rule "notRight" (formula "26"))
                  (rule "inEqSimp_leqRight" (formula "25"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "allLeft" (formula "16") (inst "t=i_4_0"))
                  (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "16"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "24") (inst "sk=i_3_0"))
                  (rule "orRight" (formula "24"))
                  (rule "notRight" (formula "25"))
                  (rule "orRight" (formula "25"))
                  (rule "inEqSimp_leqRight" (formula "25"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "26"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "allLeft" (formula "17") (inst "t=i_3_0"))
                  (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                  (rule "mul_literals" (formula "17") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "17") (term "0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "1"))
                  (rule "andLeft" (formula "17"))
                  (rule "inEqSimp_homoInEq1" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0"))
                  (rule "add_literals" (formula "17") (term "0"))
                  (rule "leq_literals" (formula "17"))
                  (rule "closeFalse" (formula "17"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "24") (inst "sk=i_2_0"))
               (rule "orRight" (formula "24"))
               (rule "orRight" (formula "24"))
               (rule "inEqSimp_leqRight" (formula "24"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "25"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "allLeft" (formula "14") (inst "t=i_2_0"))
               (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "14") (term "0,1,0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
               (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "14") (term "0,0,1"))
               (rule "leq_literals" (formula "14") (term "0,1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "notLeft" (formula "14"))
               (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "23"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "allLeft" (formula "17") (inst "t=i_2_0"))
               (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "28"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
               (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "17") (term "0,0,1"))
               (rule "leq_literals" (formula "17") (term "0,1"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "2"))
               (rule "qeq_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "closeFalse" (formula "17"))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "24") (inst "sk=i_1_0"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "inEqSimp_leqRight" (formula "24"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_geqRight" (formula "25"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "allLeft" (formula "20") (inst "t=i_1_0"))
            (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
            (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "20") (term "0,0,1"))
            (rule "leq_literals" (formula "20") (term "0,1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "2"))
            (rule "qeq_literals" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "closeFalse" (formula "20"))
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "24") (inst "sk=i_0_0"))
         (rule "orRight" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "inEqSimp_leqRight" (formula "24"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "25"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "allLeft" (formula "21") (inst "t=i_0_0"))
         (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
         (rule "polySimp_addComm1" (formula "21") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
         (rule "polySimp_rightDist" (formula "21") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
         (rule "mul_literals" (formula "21") (term "0,1,1"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
         (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "21") (term "0,0"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "1"))
         (rule "andLeft" (formula "21"))
         (rule "inEqSimp_homoInEq1" (formula "21"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0"))
         (rule "polySimp_addComm1" (formula "21") (term "0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
         (rule "add_literals" (formula "21") (term "1,1,0"))
         (rule "times_zero_1" (formula "21") (term "1,0"))
         (rule "add_zero_right" (formula "21") (term "0"))
         (rule "leq_literals" (formula "21"))
         (rule "closeFalse" (formula "21"))
      )
   )
)
)
}
