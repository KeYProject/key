\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jun 03 19:49:56 CEST 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=50000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=wdChecks-wdChecks\\:off , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , Strings-Strings\\:on , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , modelFields-modelFields\\:treatAsAxiom , assertions-assertions\\:safe , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , permissions-permissions\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Wed Jun 03 19:49:56 CEST 2015
name=DoubleLinkedList[DoubleLinkedList\\:\\:doUndo(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0
contract=DoubleLinkedList[DoubleLinkedList\\:\\:doUndo(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "c2a4d52c2ad58a473b8d4f6ce4c8d074ffe247f6"))

(autoModeTime "77624093806")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "11") (userinteraction))
(builtin "One Step Simplification" (formula "4"))
(rule "Class_invariant_axiom_for_DoubleLinkedList" (formula "9") (inst "j=j") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "i_5=i_5") (userinteraction))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "9"))
(builtin "One Step Simplification" (formula "14"))
(builtin "One Step Simplification" (formula "21"))
(builtin "One Step Simplification" (formula "20"))
(builtin "One Step Simplification" (formula "19"))
(builtin "One Step Simplification" (formula "16"))
(builtin "One Step Simplification" (formula "15"))
(builtin "One Step Simplification" (formula "13"))
(rule "cut_direct" (formula "18") (term "0,0") (userinteraction))
(branch "CUT: self.head = null TRUE"
   (builtin "One Step Simplification" (formula "19"))
   (rule "true_left" (formula "19"))
   (rule "translateJavaSubInt" (formula "19") (term "1,0,1,1,0"))
   (rule "translateJavaSubInt" (formula "7") (term "1"))
   (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
   (rule "translateJavaSubInt" (formula "20") (term "1,1,0,0"))
   (rule "translateJavaAddInt" (formula "20") (term "1,0,1,1,0"))
   (rule "eqSymm" (formula "21") (term "0,1,0,0"))
   (rule "eqSymm" (formula "24") (term "0,0,0,1"))
   (rule "eqSymm" (formula "19") (term "1,0"))
   (rule "eqSymm" (formula "20") (term "1,0"))
   (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "18"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "18"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "polySimp_elimSub" (formula "7") (term "1"))
   (rule "mul_literals" (formula "7") (term "1,1"))
   (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
   (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "7") (term "1"))
   (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
   (rule "castedGetAny" (formula "8") (term "0"))
   (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
   (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
   (rule "castedGetAny" (formula "19") (term "1,0,1,0,0"))
   (rule "castedGetAny" (formula "19") (term "0,0,1,0,0"))
   (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
   (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
   (rule "eqSeqEmpty" (formula "9"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "6"))
   (rule "add_zero_right" (formula "6") (term "0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
   (rule "castedGetAny" (formula "18") (term "0,1,0"))
   (rule "eqSymm" (formula "18") (term "1,0"))
   (rule "castedGetAny" (formula "17") (term "0,1,0"))
   (rule "eqSymm" (formula "17") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "7"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "7") (term "0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "assignment" (formula "22") (term "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "applyEq" (formula "9") (term "0") (ifseqformula "11"))
   (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "7") (term "1,0"))
   (rule "add_zero_right" (formula "7") (term "0"))
   (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
   (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "18") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0"))
   (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "11") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "13") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
   (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
   (rule "times_zero_2" (formula "17") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
   (rule "polySimp_elimOne" (formula "6") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
   (rule "mul_literals" (formula "7") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
   (rule "mul_literals" (formula "11") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
   (rule "mul_literals" (formula "14") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
   (rule "mul_literals" (formula "12") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "mul_literals" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0"))
   (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
   (rule "qeq_literals" (formula "7") (term "0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeFalse" (formula "7"))
)
(branch "CUT: self.head = null FALSE"
   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "22") (userinteraction))
   (builtin "One Step Simplification" (formula "9"))
   (rule "notLeft" (formula "9") (userinteraction))
   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "21") (userinteraction))
   (builtin "One Step Simplification" (formula "9"))
   (rule "notLeft" (formula "9") (userinteraction))
   (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "22") (userinteraction))
   (builtin "One Step Simplification" (formula "9"))
   (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "22") (userinteraction))
   (builtin "One Step Simplification" (formula "15"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "eqSymm" (formula "25") (term "0,0,0,1"))
   (rule "assignment" (formula "25") (term "1"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_doUndo,savedHeapBefore_doUndo"))
   (builtin "One Step Simplification" (formula "25"))
   (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_remove,exc_0,heapAfter_remove,anon_heap_remove") (contract "DoubleLinkedList[DoubleLinkedList::remove(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0"))
   (branch "Post (remove)"
      (builtin "One Step Simplification" (formula "21"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "24"))
      (rule "selectOfAnonEQ" (formula "26") (term "0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "26") (term "0,0"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfSingleton" (formula "26") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "selectOfAnonEQ" (formula "29") (term "0,0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "29") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "29") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "elementOfUnion" (formula "29") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "29") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "elementOfUnion" (formula "29") (term "0,0,0,0"))
      (rule "elementOfSingleton" (formula "29") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "elementOfSingleton" (formula "29") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "selectOfAnonEQ" (formula "27") (term "0,0,1") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "27") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfUnion" (formula "27") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfUnion" (formula "27") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "27") (term "0,0,0,0,1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "selectOfAnonEQ" (formula "28") (term "0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "28") (term "0,0"))
      (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfUnion" (formula "28") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "28") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfUnion" (formula "28") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "28") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "selectOfAnonEQ" (formula "27") (term "0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "36")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "27") (term "0,0"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfUnion" (formula "27") (term "0,0"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfUnion" (formula "27") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "27") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfSingleton" (formula "27") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "selectOfAnonEQ" (formula "28") (term "0,0,1") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "28") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfUnion" (formula "28") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfUnion" (formula "28") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "28") (term "0,0,0,0,1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "selectOfAnonEQ" (formula "30") (term "1,1,0,0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "30") (term "0,1,1,0,0"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,1,1,0,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,1,1,0,0"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,1,1,0,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,1,1,0,0"))
      (rule "elementOfSingleton" (formula "30") (term "0,0,1,1,0,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfSingleton" (formula "30") (term "0,1,1,0,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "selectOfAnonEQ" (formula "24") (term "0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfSingleton" (formula "24") (term "0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "selectOfAnonEQ" (formula "30") (term "0,0,1,0,1,0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "30") (term "0,0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "30") (term "0,0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "selectOfAnonEQ" (formula "25") (term "0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfSingleton" (formula "25") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfSingleton" (formula "25") (term "0,0"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "selectOfAnonEQ" (formula "26") (term "0,0,1,1") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,1,1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,1,1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1,1"))
      (rule "elementOfSingleton" (formula "26") (term "0,0,0,0,1,1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "selectOfAnonEQ" (formula "26") (term "1") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfUnion" (formula "26") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "elementOfSingleton" (formula "26") (term "0,0,0,1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "notLeft" (formula "29"))
      (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_unremove,exc_1,heapAfter_unremove,anon_heap_unremove") (contract "DoubleLinkedList[DoubleLinkedList::unremove(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0"))
      (branch "Post (unremove)"
         (builtin "One Step Simplification" (formula "32"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "andLeft" (formula "32"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "34"))
         (rule "selectOfAnonEQ" (formula "36") (term "0,0,1") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "42")))
         (rule "elementOfUnion" (formula "36") (term "0,0,0,0,1"))
         (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "elementOfUnion" (formula "36") (term "0,0,0,0,1"))
         (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "elementOfUnion" (formula "36") (term "0,0,0,0,1"))
         (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "elementOfSingleton" (formula "36") (term "0,0,0,0,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "selectOfAnonEQ" (formula "32") (term "0,1,1,0") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
         (rule "elementOfUnion" (formula "32") (term "0,0,1,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfUnion" (formula "32") (term "0,0,1,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfUnion" (formula "32") (term "0,0,0,1,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfSingleton" (formula "32") (term "0,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "selectOfAnonEQ" (formula "34") (term "0,1,1,1") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "34") (term "0,0,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,1,1,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,1,1,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,1,1,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfSingleton" (formula "34") (term "0,0,1,1,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "selectOfAnonEQ" (formula "35") (term "0,1") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "42")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "35") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,1"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "elementOfUnion" (formula "35") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,1"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "elementOfUnion" (formula "35") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,1"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "selectOfAnonEQ" (formula "34") (term "0,0,1") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "34") (term "0,0,0,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,0,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,0,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfSingleton" (formula "34") (term "0,0,0,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "selectOfAnonEQ" (formula "32") (term "0,1,0,1,0") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
         (rule "elementOfUnion" (formula "32") (term "0,0,1,0,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfUnion" (formula "32") (term "0,0,0,1,0,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfUnion" (formula "32") (term "0,0,0,1,0,1,0"))
         (rule "elementOfSingleton" (formula "32") (term "1,0,0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfSingleton" (formula "32") (term "0,0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "selectOfAnonEQ" (formula "34") (term "2,1,1,1") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "34") (term "0,2,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,2,1,1,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,2,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,2,1,1,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,2,1,1,1"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,2,1,1,1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "selectOfAnonEQ" (formula "34") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")))
         (rule "elementOfUnion" (formula "34") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfUnion" (formula "34") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "selectOfAnonEQ" (formula "35") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "42")))
         (rule "elementOfUnion" (formula "35") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "elementOfUnion" (formula "35") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "elementOfUnion" (formula "35") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "35"))
         (rule "methodCallEmpty" (formula "44") (term "1") (userinteraction))
         (rule "tryEmpty" (formula "44") (term "1") (userinteraction))
         (rule "emptyModality" (formula "44") (term "1") (userinteraction))
         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "37")))
         (rule "selectOfAnonEQ" (formula "44") (term "1") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "42")))
         (rule "elementOfUnion" (formula "44") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "44") (term "1,0,0,1"))
         (builtin "One Step Simplification" (formula "44"))
         (rule "elementOfUnion" (formula "44") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "44") (term "1,0,0,1"))
         (builtin "One Step Simplification" (formula "44"))
         (rule "elementOfUnion" (formula "44") (term "0,0,1"))
         (rule "elementOfSingleton" (formula "44") (term "1,0,0,1"))
         (builtin "One Step Simplification" (formula "44"))
         (rule "elementOfSingleton" (formula "44") (term "0,0,1"))
         (builtin "One Step Simplification" (formula "44"))
         (rule "applyEq" (formula "44") (term "1") (ifseqformula "34") (userinteraction))
         (rule "applyEq" (formula "44") (term "2,1,1,1") (ifseqformula "25") (userinteraction))
         (rule "applyEq" (formula "44") (term "0,1,1,1") (ifseqformula "24") (userinteraction))
         (rule "applyEq" (formula "44") (term "0,0,1") (ifseqformula "24") (userinteraction))
         (rule "translateJavaAddInt" (formula "44") (term "1,1,0,0,1") (userinteraction))
         (rule "translateJavaAddInt" (formula "44") (term "1,1,0,1,1,1") (userinteraction))
         (rule "translateJavaSubInt" (formula "44") (term "2,1,1,1") (userinteraction))
         (rule "sub" (formula "44") (term "2,1,1,1") (userinteraction))
         (rule "neg_literal" (formula "44") (term "1,2,1,1,1") (userinteraction))
         (rule "eqSeqConcat" (formula "44") (userinteraction))
         (rule "lenOfSeqSub" (formula "44") (term "0,1,0,0") (userinteraction))
         (rule "replace_known_left" (formula "44") (term "0,0,1,0,0") (ifseqformula "6") (userinteraction))
         (rule "sub_zero_2" (formula "44") (term "1,0,1,0,0") (userinteraction))
         (rule "lenOfSeqConcat" (formula "44") (term "1,1,0,0") (userinteraction))
         (rule "lenOfSeqSub" (formula "44") (term "1,1,1,0,0") (userinteraction))
         (rule "translateJavaSubInt" (formula "7") (term "1") (userinteraction))
         (rule "sub" (formula "7") (term "1") (userinteraction))
         (rule "neg_literal" (formula "7") (term "1,1") (userinteraction))
         (rule "replace_known_left" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "7") (userinteraction))
         (builtin "One Step Simplification" (formula "44"))
         (rule "polySimp_addComm0" (formula "44") (term "0,1,1,1,0,0") (userinteraction))
         (rule "polySimp_addAssoc" (formula "44") (term "1,0,0") (userinteraction))
         (rule "sub" (formula "44") (term "1,1,0,0") (userinteraction))
         (rule "polySimp_addAssoc" (formula "44") (term "1,0,0") (userinteraction))
         (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0") (userinteraction))
         (rule "polySimp_addLiterals" (formula "44") (term "0,0,1,0,0") (userinteraction))
         (rule "add_zero_right" (formula "44") (term "0,0,1,0,0") (userinteraction))
         (rule "polySimp_addComm1" (formula "44") (term "1,0,0") (userinteraction))
         (rule "add_sub_elim_right" (formula "44") (term "0,1,0,0") (userinteraction))
         (rule "add_zero_left" (formula "44") (term "1,0,0") (userinteraction))
         (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "11") (userinteraction))
         (builtin "One Step Simplification" (formula "44"))
         (rule "applyEq" (formula "44") (term "2,0,1") (ifseqformula "11") (userinteraction))
         (rule "lenOfSeqSub" (formula "44") (term "1,0,1") (userinteraction))
         (rule "sub_zero_2" (formula "44") (term "1,1,0,1") (userinteraction))
         (rule "replace_known_left" (formula "44") (term "0,1,0,1") (ifseqformula "6") (userinteraction))
         (rule "lenOfSeqSub" (formula "44") (term "2,0,0") (userinteraction))
         (rule "replace_known_left" (formula "44") (term "0,2,0,0") (ifseqformula "6") (userinteraction))
         (rule "sub_zero_2" (formula "44") (term "1,2,0,0") (userinteraction))
         (builtin "One Step Simplification" (formula "44"))
         (rule "eqSeqConcat" (formula "44") (term "1") (userinteraction))
         (rule "lenOfSeqSub" (formula "44") (term "0,0,0,1") (userinteraction))
         (rule "sub" (formula "44") (term "1,0,0,0,1") (userinteraction))
         (rule "lenOfSeqSub" (formula "44") (term "1,1,0,0,1") (userinteraction))
         (rule "replace_known_left" (formula "44") (term "0,1,1,0,0,1") (ifseqformula "7") (userinteraction))
         (rule "sub" (formula "44") (term "1,1,1,0,0,1") (userinteraction))
         (rule "defOfSeqSingleton" (formula "44") (term "0,2,0,1,0,1") (inst "uSub=uSub") (userinteraction))
         (rule "lenOfSeqDef" (formula "44") (term "2,0,1,0,1") (userinteraction))
         (rule "less_literals" (formula "44") (term "0,2,0,1,0,1") (userinteraction))
         (rule "sub_literals" (formula "44") (term "1,2,0,1,0,1") (userinteraction))
         (rule "defOfSeqSingleton" (formula "44") (term "0,1,0,1,1") (inst "uSub=uSub") (userinteraction))
         (rule "lenOfSeqDef" (formula "44") (term "1,0,1,1") (userinteraction))
         (rule "less_literals" (formula "44") (term "0,1,0,1,1") (userinteraction))
         (rule "sub_literals" (formula "44") (term "1,1,0,1,1") (userinteraction))
         (rule "lenOfSeqSub" (formula "44") (term "2,0,1,1") (userinteraction))
         (rule "sub" (formula "44") (term "1,2,0,1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "44"))
         (rule "eqSeqSingleton" (formula "44") (term "1,0,1") (userinteraction))
         (rule "lenOfSeqSub" (formula "44") (term "0,0,1,0,1") (userinteraction))
         (rule "sub_literals" (formula "44") (term "1,0,0,1,0,1") (userinteraction))
         (rule "less_literals" (formula "44") (term "0,0,0,1,0,1") (userinteraction))
         (rule "getOfSeqSub" (formula "44") (term "0,1,1,0,1") (userinteraction))
         (builtin "One Step Simplification" (formula "44"))
         (rule "polySimp_addComm0" (formula "44") (term "0,1,1,0,0,1") (userinteraction))
         (rule "polySimp_addAssoc" (formula "44") (term "1,0,0,1") (userinteraction))
         (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0,1") (userinteraction))
         (rule "add_literals" (formula "44") (term "0,0,1,0,0,1") (userinteraction))
         (rule "add_zero_left" (formula "44") (term "0,1,0,0,1") (userinteraction))
         (rule "sub_literals" (formula "44") (term "1,1,0,0,1,0,1") (userinteraction))
         (rule "less_literals" (formula "44") (term "1,0,0,1,0,1") (userinteraction))
         (rule "leq_literals" (formula "44") (term "0,0,0,1,0,1") (userinteraction))
         (builtin "One Step Simplification" (formula "44"))
         (rule "add_zero_right" (formula "44") (term "1,0,1,0,1") (userinteraction))
         (rule "shift_paren_and" (formula "44") (userinteraction))
         (rule "shift_paren_and" (formula "44") (term "0") (userinteraction))
         (rule "cut_direct" (formula "44") (term "0,1,0,0") (userinteraction))
         (branch "CUT: k < self.len TRUE"
            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "1")))
            (rule "equalityToSeqGetAndSeqLen" (formula "45") (term "0,0") (inst "iv=iv") (userinteraction))
            (rule "lenOfSeqSub" (formula "45") (term "0,0,0,0") (userinteraction))
            (rule "replace_known_left" (formula "45") (term "0,0,0,0,0") (ifseqformula "7") (userinteraction))
            (rule "sub_zero_2" (formula "45") (term "1,0,0,0,0") (userinteraction))
            (rule "lenOfSeqSub" (formula "45") (term "1,0,0,0") (userinteraction))
            (rule "sub_zero_2" (formula "45") (term "1,1,0,0,0") (userinteraction))
            (rule "replace_known_left" (formula "45") (term "0,1,0,0,0") (ifseqformula "7") (userinteraction))
            (builtin "One Step Simplification" (formula "45"))
            (rule "lenOfSeqSub" (formula "45") (term "1,1,0,0,0,0") (userinteraction))
            (rule "replace_known_left" (formula "45") (term "0,1,1,0,0,0,0") (ifseqformula "7") (userinteraction))
            (rule "sub_zero_2" (formula "45") (term "1,1,1,0,0,0,0") (userinteraction))
            (builtin "One Step Simplification" (formula "45"))
            (rule "equalityToSeqGetAndSeqLen" (formula "45") (term "1") (inst "iv=iv") (userinteraction))
            (rule "lenOfSeqSub" (formula "45") (term "0,0,1") (userinteraction))
            (rule "lenOfSeqSub" (formula "45") (term "1,0,1") (userinteraction))
            (rule "lenOfSeqSub" (formula "45") (term "1,1,0,0,1,1") (userinteraction))
            (rule "getOfSeqSub" (formula "45") (term "0,1,0") (userinteraction))
            (rule "sub" (formula "45") (term "1,1,0,0,1,0") (userinteraction))
            (rule "leq_literals" (formula "45") (term "0,0,0,1,0") (userinteraction))
            (rule "castDel" (formula "45") (term "2,0,1,0") (userinteraction))
            (rule "add_zero_left" (formula "45") (term "1,1,0,1,0") (userinteraction))
            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "8")))
            (rule "sub" (formula "45") (term "1,0,1") (userinteraction))
            (rule "sub" (formula "45") (term "1,1,1,0,0,1,1") (userinteraction))
            (rule "neg_literal" (formula "45") (term "1,1,1,1,0,0,1,1") (userinteraction))
            (rule "add_less" (formula "45") (term "0,1,1,0,0,1,1") (inst "i1=k") (userinteraction))
            (rule "polySimp_addComm0" (formula "45") (term "1,1,0,1,1,0,0,1,1") (userinteraction))
            (rule "polySimp_addAssoc" (formula "45") (term "1,0,1,1,0,0,1,1") (userinteraction))
            (rule "add_sub_elim_right" (formula "45") (term "0,1,0,1,1,0,0,1,1") (userinteraction))
            (rule "add_zero_left" (formula "45") (term "1,0,1,1,0,0,1,1") (userinteraction))
            (rule "less_add_one" (formula "8") (userinteraction))
            (rule "polySimp_addLiterals" (formula "8") (term "1") (userinteraction))
            (rule "add_zero_right" (formula "8") (term "1") (userinteraction))
            (rule "replace_known_left" (formula "45") (term "0,1,1,0,0,1,1") (ifseqformula "8") (userinteraction))
            (builtin "One Step Simplification" (formula "45"))
            (rule "add_less" (formula "45") (term "0,0,1,0") (inst "i1=k") (userinteraction))
            (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,1,0") (userinteraction))
            (rule "polySimp_addAssoc" (formula "45") (term "1,0,0,1,0") (userinteraction))
            (rule "add_sub_elim_right" (formula "45") (term "0,1,0,0,1,0") (userinteraction))
            (rule "add_zero_left" (formula "45") (term "1,0,0,1,0") (userinteraction))
            (rule "add_zero_right" (formula "45") (term "0,0,0,1,0") (userinteraction))
            (rule "replace_known_left" (formula "45") (term "0,0,1,0") (ifseqformula "1") (userinteraction))
            (builtin "One Step Simplification" (formula "45"))
            (rule "add_less" (formula "45") (term "0,0,0,1") (inst "i1=k") (userinteraction))
            (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,0,1") (userinteraction))
            (rule "polySimp_addAssoc" (formula "45") (term "1,0,0,0,1") (userinteraction))
            (rule "add_sub_elim_right" (formula "45") (term "0,1,0,0,0,1") (userinteraction))
            (rule "add_zero_left" (formula "45") (term "1,0,0,0,1") (userinteraction))
            (rule "replace_known_left" (formula "45") (term "0,0,0,1") (ifseqformula "8") (userinteraction))
            (rule "sub" (formula "45") (term "1,0,0,1") (userinteraction))
            (rule "neg_literal" (formula "45") (term "1,1,0,0,1") (userinteraction))
            (builtin "One Step Simplification" (formula "45"))
            (rule "polySimp_addComm1" (formula "45") (term "1,0,1") (userinteraction))
            (rule "add_eq_back_2" (formula "45") (term "0,1") (userinteraction))
            (rule "add_eq_back_2" (formula "45") (term "0,1") (userinteraction))
            (builtin "One Step Simplification" (formula "45"))
            (rule "getOfSeqSub" (formula "45") (term "0,1,0,1") (userinteraction))
            (rule "getOfSeqSub" (formula "45") (term "1,1,0,1") (userinteraction))
            (rule "castDel" (formula "45") (term "2,0,1,0,1") (userinteraction))
            (rule "castDel" (formula "45") (term "2,1,1,0,1") (userinteraction))
            (rule "sub" (formula "45") (term "1,1,0,0,1,0,1") (userinteraction))
            (rule "neg_literal" (formula "45") (term "1,1,1,0,0,1,0,1") (userinteraction))
            (rule "sub" (formula "45") (term "1,1,0,1,1,0,1") (userinteraction))
            (rule "polySimp_addComm1" (formula "45") (term "1,1,0,1,1,0,1") (userinteraction))
            (rule "getOfSeqSub" (formula "45") (term "0,1,0,0,0") (userinteraction))
            (rule "sub_zero_2" (formula "45") (term "1,1,0,0,1,0,0,0") (userinteraction))
            (rule "add_zero_right" (formula "45") (term "1,1,0,1,0,0,0") (userinteraction))
            (rule "castDel" (formula "45") (term "2,0,1,0,0,0") (userinteraction))
            (rule "getOfSeqSub" (formula "45") (term "1,1,0,0,0") (userinteraction))
            (rule "add_zero_right" (formula "45") (term "1,1,1,1,0,0,0") (userinteraction))
            (rule "castDel" (formula "45") (term "2,1,1,0,0,0") (userinteraction))
            (rule "sub_zero_2" (formula "45") (term "1,1,0,1,1,0,0,0") (userinteraction))
            (rule "getOfSeqConcat" (formula "45") (term "1,1,1,0,0,0") (userinteraction))
            (rule "lenOfSeqSub" (formula "45") (term "1,0,1,1,1,0,0,0") (userinteraction))
            (rule "replace_known_left" (formula "45") (term "0,1,0,1,1,1,0,0,0") (ifseqformula "7") (userinteraction))
            (rule "sub_zero_2" (formula "45") (term "1,1,0,1,1,1,0,0,0") (userinteraction))
            (rule "lenOfSeqSub" (formula "45") (term "1,1,2,1,1,1,0,0,0") (userinteraction))
            (rule "replace_known_left" (formula "45") (term "0,1,1,2,1,1,1,0,0,0") (ifseqformula "7") (userinteraction))
            (rule "sub_zero_2" (formula "45") (term "1,1,1,2,1,1,1,0,0,0") (userinteraction))
            (rule "sub" (formula "45") (term "1,2,1,1,1,0,0,0") (userinteraction))
            (builtin "One Step Simplification" (formula "45"))
            (rule "getOfSeqSub" (formula "45") (term "1,1,1,1,0,0,0") (userinteraction))
            (rule "add_zero_right" (formula "45") (term "1,1,1,1,1,1,0,0,0") (userinteraction))
            (rule "sub_zero_2" (formula "45") (term "1,1,0,1,1,1,1,0,0,0") (userinteraction))
            (rule "castDel" (formula "45") (term "2,1,1,1,1,0,0,0") (userinteraction))
            (rule "getOfSeqSub" (formula "45") (term "2,1,1,1,0,0,0") (userinteraction))
            (rule "castDel" (formula "45") (term "2,2,1,1,1,0,0,0") (userinteraction))
            (rule "polySimp_addAssoc" (formula "45") (term "1,1,2,1,1,1,0,0,0") (userinteraction))
            (rule "switch_brackets" (formula "45") (term "0,1,1,2,1,1,1,0,0,0") (userinteraction))
            (rule "add_sub_elim_left" (formula "45") (term "1,0,1,1,2,1,1,1,0,0,0") (userinteraction))
            (rule "add_zero_right" (formula "45") (term "0,1,1,2,1,1,1,0,0,0") (userinteraction))
            (rule "sub" (formula "45") (term "1,1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "minus_distribute_1" (formula "45") (term "1,1,1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "neg_literal" (formula "45") (term "1,1,1,1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "polySimp_addComm0" (formula "45") (term "0,1,1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "polySimp_addComm0" (formula "45") (term "0,1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "switch_brackets" (formula "45") (term "1,1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "add_less_back" (formula "45") (term "1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "less_add_one" (formula "45") (term "1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "polySimp_addLiterals" (formula "45") (term "1,1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "add_zero_right" (formula "45") (term "1,1,0,2,1,1,1,0,0,0") (userinteraction))
            (rule "andRight" (formula "45") (userinteraction))
            (branch "Case 1"
               (rule "andRight" (formula "45") (userinteraction))
               (branch "Case 1"
                  (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                  (rule "translateJavaSubInt" (formula "29") (term "1,0,1"))
                  (rule "translateJavaAddInt" (formula "36") (term "1"))
                  (rule "translateJavaSubInt" (formula "18") (term "1,0,1,0"))
                  (rule "translateJavaAddInt" (formula "25") (term "1,1,1"))
                  (rule "translateJavaSubInt" (formula "19") (term "1,0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "20") (term "1,1,0,0"))
                  (rule "translateJavaAddInt" (formula "20") (term "1,0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "26") (term "1"))
                  (rule "allRight" (formula "45") (inst "sk=iv_2"))
                  (rule "impRight" (formula "45"))
                  (rule "andLeft" (formula "1"))
                  (rule "eqSymm" (formula "29"))
                  (rule "eqSymm" (formula "32") (term "0,1,0"))
                  (rule "eqSymm" (formula "35") (term "0,0,1,0,1,0"))
                  (rule "eqSymm" (formula "41") (term "0,0"))
                  (rule "eqSymm" (formula "23") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "39"))
                  (rule "eqSymm" (formula "31") (term "0,0"))
                  (rule "eqSymm" (formula "30") (term "0,0"))
                  (rule "eqSymm" (formula "35") (term "0,0,1,1,0"))
                  (rule "eqSymm" (formula "37"))
                  (rule "eqSymm" (formula "27"))
                  (rule "eqSymm" (formula "21") (term "1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0"))
                  (rule "eqSymm" (formula "47"))
                  (rule "eqSymm" (formula "29") (term "0,1"))
                  (rule "replace_known_left" (formula "47") (term "0,0,1") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                  (rule "closeTrue" (formula "47"))
               )
               (branch "Case 2"
                  (rule "ifEqualsNull" (formula "39") (userinteraction))
                  (rule "orRight" (formula "39") (userinteraction))
                  (rule "castedGetAny" (formula "9") (term "0") (userinteraction))
                  (rule "castedGetAny" (formula "10") (term "0") (userinteraction))
                  (rule "instAll" (formula "9") (term "1,0") (ifseqformula "16") (userinteraction))
                  (rule "leq_to_gt_alt" (formula "9") (term "0,0") (userinteraction))
                  (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "7") (userinteraction))
                  (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "1") (userinteraction))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9") (userinteraction))
                  (rule "notLeft" (formula "9") (userinteraction))
                  (rule "castAdd" (formula "40") (term "0") (ifseqformula "9") (userinteraction))
                  (rule "castedGetAny" (formula "40") (term "0") (userinteraction))
                  (rule "castAdd" (formula "48") (term "0") (ifseqformula "9") (userinteraction))
                  (rule "castedGetAny" (formula "48") (term "0") (userinteraction))
                  (rule "close" (formula "48") (ifseqformula "10") (userinteraction))
               )
            )
            (branch "Case 2"
               (rule "translateJavaSubInt" (formula "29") (term "1,0,1"))
               (rule "translateJavaAddInt" (formula "36") (term "1"))
               (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
               (rule "translateJavaSubInt" (formula "18") (term "1,0,1,0"))
               (rule "translateJavaSubInt" (formula "19") (term "1,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "20") (term "1,1,0,0"))
               (rule "translateJavaAddInt" (formula "20") (term "1,0,1,1,0"))
               (rule "translateJavaAddInt" (formula "25") (term "1,1,1"))
               (rule "translateJavaSubInt" (formula "26") (term "1"))
               (rule "allRight" (formula "45") (inst "sk=iv_1"))
               (rule "impRight" (formula "45"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "31") (term "0,0"))
               (rule "eqSymm" (formula "30") (term "0,0"))
               (rule "eqSymm" (formula "39"))
               (rule "eqSymm" (formula "32") (term "0,1,0"))
               (rule "eqSymm" (formula "41") (term "0,0"))
               (rule "eqSymm" (formula "35") (term "0,0,1,0,1,0"))
               (rule "eqSymm" (formula "35") (term "0,0,1,1,0"))
               (rule "eqSymm" (formula "29"))
               (rule "eqSymm" (formula "37"))
               (rule "eqSymm" (formula "23") (term "0,1,0,0"))
               (rule "eqSymm" (formula "21") (term "1,0"))
               (rule "eqSymm" (formula "22") (term "1,0"))
               (rule "eqSymm" (formula "27"))
               (rule "eqSymm" (formula "47"))
               (rule "eqSymm" (formula "29") (term "0,1"))
               (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
               (rule "polySimp_elimSub" (formula "31") (term "1,0,1"))
               (rule "mul_literals" (formula "31") (term "1,1,0,1"))
               (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "20") (term "1,0,1,0"))
               (rule "mul_literals" (formula "20") (term "1,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0"))
               (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "28") (term "1"))
               (rule "mul_literals" (formula "28") (term "1,1"))
               (rule "polySimp_elimNeg" (formula "2") (term "1,0,1"))
               (rule "polySimp_elimSub" (formula "21") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "10") (term "0"))
               (rule "polySimp_addComm0" (formula "38") (term "1"))
               (rule "polySimp_addComm0" (formula "22") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "47") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "47") (term "1,1"))
               (rule "polySimp_addComm0" (formula "31") (term "1,0,1"))
               (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "20") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "28") (term "1"))
               (rule "polySimp_addComm1" (formula "2") (term "1"))
               (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,1"))
               (rule "polySimp_addComm1" (formula "2") (term "1"))
               (rule "castedGetAny" (formula "17") (term "1,0,0,1,0"))
               (rule "castedGetAny" (formula "11") (term "0"))
               (rule "castedGetAny" (formula "12") (term "0"))
               (rule "castedGetAny" (formula "16") (term "1,0,0,1,0"))
               (rule "castedGetAny" (formula "30") (term "1"))
               (rule "eqSeqEmpty" (formula "43"))
               (rule "castedGetAny" (formula "39") (term "0"))
               (rule "castedGetAny" (formula "32") (term "0,0,1,0"))
               (rule "ifEqualsNull" (formula "41"))
               (rule "orRight" (formula "41"))
               (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9"))
               (rule "add_zero_right" (formula "9") (term "0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
               (rule "castedGetAny" (formula "29") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13"))
               (rule "add_zero_right" (formula "13") (term "0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "castedGetAny" (formula "29") (term "1,2,0"))
               (rule "castedGetAny" (formula "29") (term "1,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
               (rule "castedGetAny" (formula "29") (term "0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "castedGetAny" (formula "29") (term "1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
               (rule "castedGetAny" (formula "23") (term "1,0,1,0,0"))
               (rule "castedGetAny" (formula "23") (term "0,0,1,0,0"))
               (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
               (rule "castedGetAny" (formula "22") (term "1,1,1,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
               (rule "castedGetAny" (formula "22") (term "0,1,0"))
               (rule "eqSymm" (formula "22") (term "1,0"))
               (rule "castedGetAny" (formula "31") (term "1"))
               (rule "castedGetAny" (formula "20") (term "1,0"))
               (rule "castedGetAny" (formula "21") (term "0,1,0"))
               (rule "eqSymm" (formula "21") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "applyEq" (formula "44") (term "0") (ifseqformula "14"))
               (rule "applyEq" (formula "29") (term "1") (ifseqformula "31"))
               (rule "applyEq" (formula "37") (term "2,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "35") (term "0,1,1,0") (ifseqformula "30"))
               (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "27"))
               (rule "eqSymm" (formula "47"))
               (rule "applyEq" (formula "35") (term "0,1,0,1,0") (ifseqformula "31"))
               (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "28"))
               (rule "polySimp_addAssoc" (formula "38") (term "1"))
               (rule "add_literals" (formula "38") (term "0,1"))
               (rule "add_zero_left" (formula "38") (term "1"))
               (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "28"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polySimp_elimOne" (formula "13") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
               (rule "polySimp_elimOne" (formula "10") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
               (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
               (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "13"))
               (rule "times_zero_1" (formula "43") (term "1,0,0"))
               (rule "add_literals" (formula "43") (term "0,0"))
               (rule "leq_literals" (formula "43") (term "0"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "false_right" (formula "43"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "qeq_literals" (formula "3") (term "0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "getOfSeqSub" (formula "45") (term "0"))
               (rule "castDel" (formula "45") (term "2,0"))
               (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulAssoc" (formula "45") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0"))
               (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0"))
               (rule "add_literals" (formula "45") (term "0,0,0,0,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0,0"))
               (rule "times_zero_2" (formula "45") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0"))
               (rule "replace_known_left" (formula "45") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0"))
               (rule "mul_literals" (formula "45") (term "1,0,0"))
               (rule "inEqSimp_subsumption1" (formula "45") (term "0,0") (ifseqformula "1"))
               (rule "leq_literals" (formula "45") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "eqSymm" (formula "45"))
               (rule "getOfSeqConcatEQ" (formula "29") (term "1") (ifseqformula "26"))
               (rule "eqSymm" (formula "29"))
               (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
               (rule "lenOfSeqSub" (formula "29") (term "1,0,0"))
               (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0"))
               (rule "times_zero_2" (formula "29") (term "1,1,1,0,0"))
               (rule "add_zero_right" (formula "29") (term "1,1,0,0"))
               (rule "lenOfSeqSub" (formula "29") (term "0,1,1,2,0"))
               (rule "polySimp_elimSub" (formula "29") (term "1,0,1,1,2,0"))
               (rule "mul_literals" (formula "29") (term "1,1,0,1,1,2,0"))
               (rule "add_zero_right" (formula "29") (term "1,0,1,1,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,1,2,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,1,2,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,1,2,0"))
               (rule "replace_known_left" (formula "29") (term "0,0,1,1,2,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "polySimp_pullOutFactor1" (formula "29") (term "1,2,0"))
               (rule "add_literals" (formula "29") (term "1,1,2,0"))
               (rule "times_zero_1" (formula "29") (term "1,2,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
               (rule "add_literals" (formula "29") (term "0,0,0"))
               (rule "leq_literals" (formula "29") (term "0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "eqSymm" (formula "29"))
               (rule "subSeqConcatEQ" (formula "36") (term "0,0") (ifseqformula "26"))
               (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0"))
               (rule "polySimp_elimSub" (formula "36") (term "2,1,1,0,0"))
               (rule "add_zero_left" (formula "36") (term "2,1,1,0,0"))
               (rule "lenOfSeqSub" (formula "36") (term "0,0,2,0,0,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,0,0,2,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,1,0,0,2,0,0,0"))
               (rule "add_zero_right" (formula "36") (term "1,0,0,2,0,0,0"))
               (rule "lenOfSeqSub" (formula "36") (term "1,2,0,0,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,1,1,2,0,0,0"))
               (rule "add_zero_right" (formula "36") (term "1,1,2,0,0,0"))
               (rule "lenOfSeqSub" (formula "36") (term "1,0,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0,0"))
               (rule "times_zero_2" (formula "36") (term "1,1,1,0,1,1,0,0"))
               (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,0,0"))
               (rule "lenOfSeqSub" (formula "36") (term "0,1,2,1,0,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,0,1,2,1,0,0"))
               (rule "mul_literals" (formula "36") (term "1,1,0,1,2,1,0,0"))
               (rule "add_zero_right" (formula "36") (term "1,0,1,2,1,0,0"))
               (rule "lenOfSeqSub" (formula "36") (term "0,2,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,0,2,1,1,0,0"))
               (rule "times_zero_2" (formula "36") (term "1,1,0,2,1,1,0,0"))
               (rule "add_zero_right" (formula "36") (term "1,0,2,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,2,0,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,0,0,2,0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,2,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,2,1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,0,1,2,1,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,2,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,2,1,1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,0,2,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,2,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,2,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,2,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,2,0,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,1,2,0,0,0"))
               (rule "replace_known_left" (formula "36") (term "0,1,2,0,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,2,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,2,1,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,2,1,0,0"))
               (rule "replace_known_left" (formula "36") (term "0,0,1,2,1,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "polySimp_pullOutFactor1" (formula "36") (term "2,1,0,0"))
               (rule "add_literals" (formula "36") (term "1,2,1,0,0"))
               (rule "times_zero_1" (formula "36") (term "2,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,2,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,2,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,0,2,1,1,0,0"))
               (rule "replace_known_left" (formula "36") (term "0,0,2,1,1,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0,0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0,0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0,0,1,1,0,0"))
               (rule "replace_known_left" (formula "36") (term "0,0,1,0,0,1,1,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,1,1,0,0"))
               (rule "replace_known_left" (formula "36") (term "0,1,1,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "getOfSeqConcatEQ" (formula "34") (term "0,1,1,0") (ifseqformula "26"))
               (rule "polySimp_elimSub" (formula "34") (term "1,2,0,1,1,0"))
               (rule "lenOfSeqSub" (formula "34") (term "1,0,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "34") (term "1,1,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,1,0"))
               (rule "lenOfSeqSub" (formula "34") (term "0,1,1,2,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "34") (term "1,0,1,1,2,0,1,1,0"))
               (rule "mul_literals" (formula "34") (term "1,1,0,1,1,2,0,1,1,0"))
               (rule "add_zero_right" (formula "34") (term "1,0,1,1,2,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,0,1,1,0"))
               (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,2,0,1,1,0"))
               (rule "add_zero_right" (formula "34") (term "0,0,0,1,1,2,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1,2,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,1,2,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,1,2,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,1,2,0,1,1,0"))
               (rule "replace_known_left" (formula "34") (term "0,0,1,1,2,0,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "polySimp_pullOutFactor1" (formula "34") (term "1,2,0,1,1,0"))
               (rule "add_literals" (formula "34") (term "1,1,2,0,1,1,0"))
               (rule "times_zero_1" (formula "34") (term "1,2,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,0,0,0,1,1,0"))
               (rule "replace_known_left" (formula "34") (term "0,0,1,0,0,0,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,1,1,0"))
               (rule "add_literals" (formula "34") (term "1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "34") (term "1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,1,1,0"))
               (rule "leq_literals" (formula "34") (term "0,0,1,1,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "getOfSeqConcatEQ" (formula "28") (term "1") (ifseqformula "26"))
               (rule "polySimp_elimSub" (formula "28") (term "1,2,1"))
               (rule "lenOfSeqSub" (formula "28") (term "1,0,1"))
               (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1"))
               (rule "times_zero_2" (formula "28") (term "1,1,1,0,1"))
               (rule "add_zero_right" (formula "28") (term "1,1,0,1"))
               (rule "lenOfSeqSub" (formula "28") (term "0,1,1,2,1"))
               (rule "polySimp_elimSub" (formula "28") (term "1,0,1,1,2,1"))
               (rule "times_zero_2" (formula "28") (term "1,1,0,1,1,2,1"))
               (rule "add_zero_right" (formula "28") (term "1,0,1,1,2,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,1"))
               (rule "add_zero_right" (formula "28") (term "0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,2,1"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,2,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,2,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,1,2,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1,2,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,2,1"))
               (rule "replace_known_left" (formula "28") (term "0,0,1,1,2,1") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "polySimp_pullOutFactor1b" (formula "28") (term "1,2,1"))
               (rule "add_literals" (formula "28") (term "1,1,1,2,1"))
               (rule "times_zero_1" (formula "28") (term "1,1,2,1"))
               (rule "add_literals" (formula "28") (term "1,2,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0,0,1"))
               (rule "replace_known_left" (formula "28") (term "0,0,1,0,0,1") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0,1"))
               (rule "add_literals" (formula "28") (term "1,0,0,1"))
               (rule "times_zero_1" (formula "28") (term "0,0,1"))
               (rule "leq_literals" (formula "28") (term "0,1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "getOfSeqConcatEQ" (formula "30") (term "1") (ifseqformula "26"))
               (rule "eqSymm" (formula "30"))
               (rule "polySimp_elimSub" (formula "30") (term "1,2,0"))
               (rule "lenOfSeqSub" (formula "30") (term "1,0,0"))
               (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
               (rule "times_zero_2" (formula "30") (term "1,1,1,0,0"))
               (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
               (rule "lenOfSeqSub" (formula "30") (term "0,1,1,2,0"))
               (rule "polySimp_elimSub" (formula "30") (term "1,0,1,1,2,0"))
               (rule "mul_literals" (formula "30") (term "1,1,0,1,1,2,0"))
               (rule "add_zero_right" (formula "30") (term "1,0,1,1,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,1,2,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,1,2,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,1,2,0"))
               (rule "replace_known_left" (formula "30") (term "0,0,1,1,2,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "polySimp_pullOutFactor1b" (formula "30") (term "1,2,0"))
               (rule "add_literals" (formula "30") (term "1,1,1,2,0"))
               (rule "times_zero_1" (formula "30") (term "1,1,2,0"))
               (rule "add_zero_right" (formula "30") (term "1,2,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,0,0,0"))
               (rule "replace_known_left" (formula "30") (term "0,0,1,0,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,0"))
               (rule "add_literals" (formula "30") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "30") (term "0,0,0"))
               (rule "leq_literals" (formula "30") (term "0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "eqSymm" (formula "30"))
               (rule "getOfSeqConcatEQ" (formula "31") (term "0,0,1,0") (ifseqformula "26"))
               (rule "polySimp_elimSub" (formula "31") (term "1,2,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "31") (term "1,2,0,0,1,0"))
               (rule "lenOfSeqSub" (formula "31") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "1,1,1,0,0,0,1,0"))
               (rule "add_zero_right" (formula "31") (term "1,1,0,0,0,1,0"))
               (rule "lenOfSeqSub" (formula "31") (term "0,0,1,2,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "31") (term "1,0,0,1,2,0,0,1,0"))
               (rule "times_zero_2" (formula "31") (term "1,1,0,0,1,2,0,0,1,0"))
               (rule "add_zero_right" (formula "31") (term "1,0,0,1,2,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0,0,1,0"))
               (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,2,0,0,1,0"))
               (rule "add_zero_right" (formula "31") (term "0,0,0,0,1,2,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,2,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0,1,2,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,2,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "0,0,0,0,1,2,0,0,1,0"))
               (rule "replace_known_left" (formula "31") (term "0,0,0,1,2,0,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,0,0,0,0,0,1,0"))
               (rule "replace_known_left" (formula "31") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
               (rule "getOfSeqSub" (formula "29") (term "1"))
               (rule "add_zero_left" (formula "29") (term "1,1,1"))
               (rule "leq_literals" (formula "29") (term "0,0,1"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "eqSymm" (formula "29"))
               (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "29") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
               (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
               (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "eqSymm" (formula "29"))
               (rule "getOfSeqSub" (formula "34") (term "0,1,1,0"))
               (rule "leq_literals" (formula "34") (term "0,0,0,1,1,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "add_zero_left" (formula "34") (term "1,1,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "34") (term "1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "34") (term "1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,0"))
               (rule "add_zero_right" (formula "34") (term "0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "34") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,1,0"))
               (rule "replace_known_left" (formula "34") (term "0,0,1,1,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "getOfSeqSub" (formula "28") (term "1"))
               (rule "add_zero_right" (formula "28") (term "1,1,1"))
               (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1"))
               (rule "times_zero_2" (formula "28") (term "1,1,1,0,1"))
               (rule "add_zero_right" (formula "28") (term "1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,1"))
               (rule "polySimp_addComm1" (formula "28") (term "0,0,1,0,1"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,1"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,1"))
               (rule "polySimp_pullOutFactor2" (formula "28") (term "0,1,0,1"))
               (rule "add_literals" (formula "28") (term "1,0,1,0,1"))
               (rule "times_zero_1" (formula "28") (term "0,1,0,1"))
               (rule "leq_literals" (formula "28") (term "1,0,1"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1"))
               (rule "times_zero_2" (formula "28") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "28") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1"))
               (rule "mul_literals" (formula "28") (term "1,0,1"))
               (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "getOfSeqSub" (formula "30") (term "1"))
               (rule "add_zero_right" (formula "30") (term "1,1,1"))
               (rule "eqSymm" (formula "30"))
               (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
               (rule "times_zero_2" (formula "30") (term "1,1,1,0,0"))
               (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
               (rule "polySimp_pullOutFactor2" (formula "30") (term "0,1,0,0"))
               (rule "add_literals" (formula "30") (term "1,0,1,0,0"))
               (rule "times_zero_1" (formula "30") (term "0,1,0,0"))
               (rule "leq_literals" (formula "30") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
               (rule "mul_literals" (formula "30") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
               (rule "mul_literals" (formula "30") (term "1,0,0"))
               (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "eqSymm" (formula "30"))
               (rule "getOfSeqSub" (formula "31") (term "2,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "31") (term "1,1,0,2,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "31") (term "1,1,2,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,1,1,0,2,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "31") (term "1,1,0,2,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,1,1,2,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "31") (term "0,0,1,1,2,0,0,1,0"))
               (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,1,1,2,0,0,1,0"))
               (rule "add_literals" (formula "31") (term "1,1,0,1,1,2,0,0,1,0"))
               (rule "times_zero_1" (formula "31") (term "1,0,1,1,2,0,0,1,0"))
               (rule "add_zero_right" (formula "31") (term "0,1,1,2,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,2,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,2,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,1,0,2,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "0,0,1,0,0,1,0,2,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,2,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,2,0,0,1,0"))
               (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,2,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,2,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0,2,0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,1,0,2,0,0,1,0"))
               (rule "add_literals" (formula "31") (term "1,1,0,0,0,1,0,2,0,0,1,0"))
               (rule "times_zero_1" (formula "31") (term "1,0,0,0,1,0,2,0,0,1,0"))
               (rule "add_literals" (formula "31") (term "0,0,0,1,0,2,0,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0,2,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "1,0,0,0,2,0,0,1,0"))
               (rule "add_zero_right" (formula "31") (term "0,0,0,2,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,2,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,2,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1,0,2,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,1,0,2,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,2,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,2,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,0,0,2,0,0,1,0"))
               (rule "getOfSeqSub" (formula "31") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "31") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "31") (term "1,1,0,1,0,0,1,0"))
               (rule "times_zero_2" (formula "31") (term "1,1,1,0,1,0,0,1,0"))
               (rule "add_zero_right" (formula "31") (term "1,1,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,1,0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,0,0,1,0"))
               (rule "getOfSeqConcatEQ" (formula "38") (term "0") (ifseqformula "36"))
               (rule "polySimp_elimSub" (formula "38") (term "1,2,0"))
               (rule "lenOfSeqSub" (formula "38") (term "1,0,0"))
               (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0"))
               (rule "mul_literals" (formula "38") (term "1,1,1,0,0"))
               (rule "add_zero_right" (formula "38") (term "1,1,0,0"))
               (rule "lenOfSeqSub" (formula "38") (term "0,1,1,2,0"))
               (rule "polySimp_elimSub" (formula "38") (term "1,0,1,1,2,0"))
               (rule "times_zero_2" (formula "38") (term "1,1,0,1,1,2,0"))
               (rule "add_zero_right" (formula "38") (term "1,0,1,1,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,0,0"))
               (rule "add_zero_right" (formula "38") (term "0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,1,2,0"))
               (rule "add_zero_right" (formula "38") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,1,2,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_elimOne" (formula "38") (term "0,0,0,1,1,2,0"))
               (rule "replace_known_left" (formula "38") (term "0,0,1,1,2,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "polySimp_pullOutFactor1" (formula "38") (term "1,2,0"))
               (rule "add_literals" (formula "38") (term "1,1,2,0"))
               (rule "times_zero_1" (formula "38") (term "1,2,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "38") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
               (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
               (rule "add_literals" (formula "38") (term "0,0,0"))
               (rule "leq_literals" (formula "38") (term "0,0"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "getOfSeqConcatEQ" (formula "45") (term "0") (ifseqformula "26"))
               (rule "polySimp_elimSub" (formula "45") (term "1,2,0"))
               (rule "lenOfSeqSub" (formula "45") (term "1,0,0"))
               (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0"))
               (rule "times_zero_2" (formula "45") (term "1,1,1,0,0"))
               (rule "add_zero_right" (formula "45") (term "1,1,0,0"))
               (rule "lenOfSeqSub" (formula "45") (term "0,1,1,2,0"))
               (rule "polySimp_elimSub" (formula "45") (term "1,0,1,1,2,0"))
               (rule "mul_literals" (formula "45") (term "1,1,0,1,1,2,0"))
               (rule "add_zero_right" (formula "45") (term "1,0,1,1,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,1,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,1,2,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,1,2,0"))
               (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,1,1,2,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_elimOne" (formula "45") (term "0,0,0,1,1,2,0"))
               (rule "replace_known_left" (formula "45") (term "0,0,1,1,2,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "polySimp_pullOutFactor1b" (formula "45") (term "1,2,0"))
               (rule "add_literals" (formula "45") (term "1,1,1,2,0"))
               (rule "times_zero_1" (formula "45") (term "1,1,2,0"))
               (rule "add_zero_right" (formula "45") (term "1,2,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "45") (term "0,0,0,1,0,0,0"))
               (rule "replace_known_left" (formula "45") (term "0,0,1,0,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
               (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "45") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0"))
               (rule "mul_literals" (formula "45") (term "1,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "45") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "subSeqConcatEQ" (formula "36") (term "1,1,0") (ifseqformula "26"))
               (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "36") (term "2,1,1,1,0"))
               (rule "lenOfSeqSub" (formula "36") (term "0,0,2,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,0,0,2,0,1,1,0"))
               (rule "times_zero_2" (formula "36") (term "1,1,0,0,2,0,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "1,0,0,2,0,1,1,0"))
               (rule "lenOfSeqSub" (formula "36") (term "1,2,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,1,2,0,1,1,0"))
               (rule "mul_literals" (formula "36") (term "1,1,1,2,0,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "1,1,2,0,1,1,0"))
               (rule "lenOfSeqSub" (formula "36") (term "1,0,1,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,1,1,0"))
               (rule "mul_literals" (formula "36") (term "1,1,1,0,1,1,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "1,1,0,1,1,1,1,0"))
               (rule "lenOfSeqSub" (formula "36") (term "0,1,2,1,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,0,1,2,1,1,1,1,0"))
               (rule "times_zero_2" (formula "36") (term "1,1,0,1,2,1,1,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "1,0,1,2,1,1,1,1,0"))
               (rule "lenOfSeqSub" (formula "36") (term "0,1,2,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "36") (term "1,0,1,2,1,1,1,0"))
               (rule "times_zero_2" (formula "36") (term "1,1,0,1,2,1,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "1,0,1,2,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,2,0,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,2,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,2,0,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,1,2,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,2,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,0,1,1,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,1,0,1,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,1,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,2,1,1,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,0,1,2,1,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,2,1,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,2,1,1,1,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,0,1,2,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,2,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,2,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,2,0,1,1,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0,0,2,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,2,0,1,1,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,0,2,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0,1,1,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,2,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,2,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,1,2,0,1,1,0"))
               (rule "replace_known_left" (formula "36") (term "0,1,2,0,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0,0,1,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0,0,1,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0,0,1,1,1,1,0"))
               (rule "replace_known_left" (formula "36") (term "0,0,1,0,0,1,1,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,1,1,1,0"))
               (rule "add_literals" (formula "36") (term "1,1,0,0,1,1,1,1,0"))
               (rule "times_zero_1" (formula "36") (term "1,0,0,1,1,1,1,0"))
               (rule "add_literals" (formula "36") (term "0,0,1,1,1,1,0"))
               (rule "leq_literals" (formula "36") (term "0,1,1,1,1,0"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,2,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,2,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,2,1,1,1,0"))
               (rule "replace_known_left" (formula "36") (term "0,0,1,2,1,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "polySimp_addComm1" (formula "36") (term "2,1,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,1,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,1,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,1,1,1,1,0"))
               (rule "replace_known_left" (formula "36") (term "0,0,1,1,1,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "polySimp_pullOutFactor1" (formula "36") (term "1,1,1,1,0"))
               (rule "add_literals" (formula "36") (term "1,1,1,1,1,0"))
               (rule "times_zero_1" (formula "36") (term "1,1,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,1,0,0,2,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,0,0,2,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,1,0,0,2,0,1,1,0"))
               (rule "replace_known_left" (formula "36") (term "0,1,0,0,2,0,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "polySimp_addComm1" (formula "36") (term "0,0,2,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,2,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,2,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,0,2,0,1,1,0"))
               (rule "replace_known_left" (formula "36") (term "0,2,0,1,1,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "getOfSeqConcat" (formula "38") (term "0"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "castDel" (formula "38") (term "1,0"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "less_literals" (formula "38") (term "0"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "true_left" (formula "38"))
               (rule "getOfSeqSub" (formula "44") (term "0"))
               (rule "castDel" (formula "44") (term "2,0"))
               (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,0,0"))
               (rule "polySimp_rightDist" (formula "44") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "44") (term "0,1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0"))
               (rule "polySimp_addAssoc" (formula "44") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "44") (term "0,1,1,0"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "orRight" (formula "44"))
               (rule "eqSymm" (formula "45"))
               (rule "inEqSimp_ltToLeq" (formula "44") (term "1"))
               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1"))
               (rule "mul_literals" (formula "44") (term "0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "44") (term "1,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "44") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1"))
               (rule "add_literals" (formula "44") (term "0,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "44") (term "0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "44") (term "0"))
               (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "inEqSimp_leqRight" (formula "44"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
               (rule "andLeft" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
         (branch "CUT: k < self.len FALSE"
            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "44")))
            (rule "translateJavaSubInt" (formula "25") (term "1"))
            (rule "translateJavaAddInt" (formula "35") (term "1"))
            (rule "translateJavaSubInt" (formula "28") (term "1,0,1"))
            (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
            (rule "translateJavaAddInt" (formula "24") (term "1,1,1"))
            (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
            (rule "translateJavaAddInt" (formula "19") (term "1,0,1,1,0"))
            (rule "translateJavaSubInt" (formula "18") (term "1,0,1,1,0"))
            (rule "translateJavaSubInt" (formula "17") (term "1,0,1,0"))
            (rule "eqSymm" (formula "27") (term "0,0"))
            (rule "eqSymm" (formula "32") (term "0,0,1,0,1,0"))
            (rule "eqSymm" (formula "32") (term "0,0,1,1,0"))
            (rule "eqSymm" (formula "36"))
            (rule "eqSymm" (formula "34"))
            (rule "eqSymm" (formula "28") (term "0,0"))
            (rule "eqSymm" (formula "26"))
            (rule "eqSymm" (formula "20") (term "0,1,0,0"))
            (rule "eqSymm" (formula "38") (term "0,0"))
            (rule "eqSymm" (formula "29") (term "0,1,0"))
            (rule "eqSymm" (formula "45") (term "1"))
            (rule "eqSymm" (formula "45") (term "0,0,0"))
            (rule "eqSymm" (formula "24"))
            (rule "eqSymm" (formula "19") (term "1,0"))
            (rule "eqSymm" (formula "18") (term "1,0"))
            (rule "eqSymm" (formula "26") (term "0,1"))
            (rule "polySimp_elimNeg" (formula "45") (term "1,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "25") (term "1"))
            (rule "mul_literals" (formula "25") (term "1,1"))
            (rule "polySimp_elimSub" (formula "28") (term "1,0,1"))
            (rule "mul_literals" (formula "28") (term "1,1,0,1"))
            (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
            (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
            (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
            (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
            (rule "polySimp_homoEq" (formula "45") (term "1,0,0"))
            (rule "times_zero_2" (formula "45") (term "1,0,1,0,0"))
            (rule "add_zero_right" (formula "45") (term "0,1,0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "1"))
            (rule "polySimp_addComm0" (formula "35") (term "1"))
            (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "45") (term "2,0,1"))
            (rule "polySimp_addComm0" (formula "45") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "25") (term "1"))
            (rule "polySimp_addComm0" (formula "28") (term "1,0,1"))
            (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "45") (term "0,1,0,0"))
            (rule "eqSeqEmpty" (formula "40"))
            (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
            (rule "castedGetAny" (formula "27") (term "1"))
            (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
            (rule "castedGetAny" (formula "9") (term "0"))
            (rule "castedGetAny" (formula "8") (term "0"))
            (rule "inEqSimp_ltRight" (formula "44"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "castedGetAny" (formula "37") (term "0"))
            (rule "castedGetAny" (formula "27") (term "1,2,0"))
            (rule "castedGetAny" (formula "27") (term "1,0,0,1,1,0,0"))
            (rule "castedGetAny" (formula "27") (term "0,0,0,0"))
            (rule "castedGetAny" (formula "27") (term "1,1,0"))
            (rule "castedGetAny" (formula "27") (term "0,0,0,1,0,0"))
            (rule "castedGetAny" (formula "21") (term "0,0,1,0,0"))
            (rule "castedGetAny" (formula "21") (term "1,0,1,0,0"))
            (rule "ifEqualsNull" (formula "39"))
            (rule "orRight" (formula "39"))
            (rule "castedGetAny" (formula "30") (term "0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "7"))
            (rule "add_zero_right" (formula "7") (term "0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11"))
            (rule "add_zero_right" (formula "11") (term "0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,0"))
            (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
            (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
            (rule "castedGetAny" (formula "20") (term "0,1,0"))
            (rule "eqSymm" (formula "20") (term "1,0"))
            (rule "castedGetAny" (formula "29") (term "1"))
            (rule "castedGetAny" (formula "18") (term "1,0"))
            (rule "castedGetAny" (formula "19") (term "0,1,0"))
            (rule "eqSymm" (formula "19") (term "1,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
            (rule "applyEq" (formula "33") (term "0,1,1,0") (ifseqformula "28"))
            (rule "applyEq" (formula "46") (term "0,0,1") (ifseqformula "25"))
            (rule "eqSymm" (formula "46") (term "1"))
            (rule "applyEq" (formula "33") (term "0,1,0,1,0") (ifseqformula "29"))
            (rule "applyEq" (formula "27") (term "1") (ifseqformula "29"))
            (rule "applyEq" (formula "35") (term "2,1,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "46") (term "0,0,0,0,0") (ifseqformula "25"))
            (rule "applyEq" (formula "42") (term "0") (ifseqformula "12"))
            (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "26"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
            (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "26"))
            (rule "polySimp_addAssoc" (formula "36") (term "1"))
            (rule "add_literals" (formula "36") (term "0,1"))
            (rule "add_zero_left" (formula "36") (term "1"))
            (rule "polySimp_sepPosMonomial" (formula "45") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "polySimp_elimOne" (formula "7") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
            (rule "polySimp_elimOne" (formula "11") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
            (rule "polySimp_elimOne" (formula "8") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
            (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
            (rule "inEqSimp_contradEq7" (formula "45") (term "1,0,0") (ifseqformula "8"))
            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
            (rule "leq_literals" (formula "45") (term "0,1,0,0"))
            (builtin "One Step Simplification" (formula "45"))
            (rule "false_right" (formula "45"))
            (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "11"))
            (rule "times_zero_1" (formula "41") (term "1,0,0"))
            (rule "add_literals" (formula "41") (term "0,0"))
            (rule "leq_literals" (formula "41") (term "0"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "false_right" (formula "41"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (unremove)"
         (builtin "One Step Simplification" (formula "32"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "translateJavaSubInt" (formula "28") (term "1,0,1"))
         (rule "translateJavaSubInt" (formula "7") (term "1"))
         (rule "translateJavaAddInt" (formula "24") (term "1,1,1"))
         (rule "translateJavaSubInt" (formula "25") (term "1"))
         (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
         (rule "translateJavaSubInt" (formula "17") (term "1,0,1,0"))
         (rule "translateJavaSubInt" (formula "18") (term "1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
         (rule "translateJavaAddInt" (formula "19") (term "1,0,1,1,0"))
         (rule "translateJavaAddInt" (formula "32") (term "1,1,0,0,0,1,1"))
         (rule "andLeft" (formula "32"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "1,0") (ifseqformula "32"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,0") (ifseqformula "22"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "35"))
         (rule "notLeft" (formula "33"))
         (rule "close" (formula "37") (ifseqformula "36"))
      )
      (branch "Pre (unremove)"
         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "6")) (ifInst ""  (formula "30")) (ifInst ""  (formula "36")) (ifInst ""  (formula "36")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,1") (ifseqformula "22"))
         (rule "wellFormedAnonEQ" (formula "37") (term "0,1") (ifseqformula "22"))
         (rule "translateJavaSubInt" (formula "28") (term "1,0,1"))
         (rule "translateJavaSubInt" (formula "18") (term "1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
         (rule "translateJavaAddInt" (formula "19") (term "1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "17") (term "1,0,1,0"))
         (rule "translateJavaAddInt" (formula "24") (term "1,1,1"))
         (rule "translateJavaSubInt" (formula "25") (term "1"))
         (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
         (rule "translateJavaSubInt" (formula "7") (term "1"))
         (rule "translateJavaSubInt" (formula "37") (term "1,0,1,1,0,0,0"))
         (rule "eqSymm" (formula "27") (term "0,0"))
         (rule "eqSymm" (formula "31") (term "0,0"))
         (rule "eqSymm" (formula "26"))
         (rule "eqSymm" (formula "29") (term "0,1,0"))
         (rule "eqSymm" (formula "20") (term "0,1,0,0"))
         (rule "eqSymm" (formula "28") (term "0,0"))
         (rule "eqSymm" (formula "37") (term "0,1,0,1,0"))
         (rule "eqSymm" (formula "37") (term "1,0,0,0,0"))
         (rule "eqSymm" (formula "37") (term "1,0,0,0,0,0"))
         (rule "eqSymm" (formula "18") (term "1,0"))
         (rule "eqSymm" (formula "19") (term "1,0"))
         (rule "eqSymm" (formula "24"))
         (rule "eqSymm" (formula "37") (term "1,0,0,0"))
         (rule "eqSymm" (formula "26") (term "0,1"))
         (rule "replace_known_left" (formula "37") (term "0,1,1") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "1")) (ifInst ""  (formula "21")))
         (rule "polySimp_elimSub" (formula "28") (term "1,0,1"))
         (rule "mul_literals" (formula "28") (term "1,1,0,1"))
         (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
         (rule "polySimp_elimSub" (formula "25") (term "1"))
         (rule "mul_literals" (formula "25") (term "1,1"))
         (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "7") (term "1"))
         (rule "mul_literals" (formula "7") (term "1,1"))
         (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "37") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "24") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "28") (term "1,0,1"))
         (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "25") (term "1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_addComm0" (formula "7") (term "1"))
         (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "37") (term "1,0,0,1,0,0"))
         (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
         (rule "castedGetAny" (formula "27") (term "1"))
         (rule "castedGetAny" (formula "9") (term "0"))
         (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
         (rule "eqSeqEmpty" (formula "33"))
         (rule "castedGetAny" (formula "8") (term "0"))
         (rule "ifEqualsNull" (formula "31"))
         (rule "orRight" (formula "31"))
         (rule "castedGetAny" (formula "26") (term "1,0,0,1,1,0,0"))
         (rule "castedGetAny" (formula "26") (term "0,0,0,1,0,0"))
         (rule "castedGetAny" (formula "26") (term "1,2,0"))
         (rule "castedGetAny" (formula "26") (term "0,0,0,0"))
         (rule "castedGetAny" (formula "26") (term "1,1,0"))
         (rule "castedGetAny" (formula "29") (term "0,0,1,0"))
         (rule "castedGetAny" (formula "20") (term "1,0,1,0,0"))
         (rule "castedGetAny" (formula "20") (term "0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "6"))
         (rule "add_zero_right" (formula "6") (term "0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10"))
         (rule "add_zero_right" (formula "10") (term "0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
         (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
         (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
         (rule "castedGetAny" (formula "38") (term "0,1,0,0,0"))
         (rule "castedGetAny" (formula "38") (term "0,0,1,0,1"))
         (rule "castedGetAny" (formula "38") (term "1,0,1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
         (rule "castedGetAny" (formula "19") (term "0,1,0"))
         (rule "eqSymm" (formula "19") (term "1,0"))
         (rule "castedGetAny" (formula "28") (term "1"))
         (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1"))
         (rule "castedGetAny" (formula "17") (term "1,0"))
         (rule "castedGetAny" (formula "18") (term "0,1,0"))
         (rule "eqSymm" (formula "18") (term "1,0"))
         (rule "castedGetAny" (formula "38") (term "0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "7"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "applyEq" (formula "26") (term "1") (ifseqformula "28"))
         (rule "applyEq" (formula "34") (term "0") (ifseqformula "11"))
         (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "25"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "7"))
         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
         (rule "polySimp_elimOne" (formula "7") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
         (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "10"))
         (rule "mul_literals" (formula "33") (term "1,0,0"))
         (rule "add_literals" (formula "33") (term "0,0"))
         (rule "leq_literals" (formula "33") (term "0"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "false_right" (formula "33"))
         (rule "pullOutSelect" (formula "36") (term "1,1,0,0") (inst "selectSK=DoubleLinkedList_Node_l_0"))
         (rule "applyEq" (formula "37") (term "1,1,0,0,0,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "5")))
         (rule "pullOutSelect" (formula "37") (term "1,1,0,0,0") (inst "selectSK=DoubleLinkedList_Node_r_0"))
         (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "6")))
         (rule "pullOutSelect" (formula "38") (term "0,0,1,0,0,0") (inst "selectSK=DoubleLinkedList_s_0"))
         (rule "applyEq" (formula "39") (term "0,0,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "39") (term "0,1,0,1,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "39") (term "0,0,0,1,0,1") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "5")))
         (rule "getOfSeqConcatEQ" (formula "31") (term "1") (ifseqformula "27"))
         (rule "eqSymm" (formula "31"))
         (rule "polySimp_elimSub" (formula "31") (term "1,2,0"))
         (rule "lenOfSeqSub" (formula "31") (term "1,0,0"))
         (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0"))
         (rule "times_zero_2" (formula "31") (term "1,1,1,0,0"))
         (rule "add_zero_right" (formula "31") (term "1,1,0,0"))
         (rule "lenOfSeqSub" (formula "31") (term "0,1,1,2,0"))
         (rule "polySimp_elimSub" (formula "31") (term "1,0,1,1,2,0"))
         (rule "mul_literals" (formula "31") (term "1,1,0,1,1,2,0"))
         (rule "add_zero_right" (formula "31") (term "1,0,1,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,1,2,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,0,1,1,2,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,1,2,0"))
         (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,1,2,0"))
         (rule "replace_known_left" (formula "31") (term "0,0,1,1,2,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "polySimp_pullOutFactor1b" (formula "31") (term "1,2,0"))
         (rule "add_literals" (formula "31") (term "1,1,1,2,0"))
         (rule "times_zero_1" (formula "31") (term "1,1,2,0"))
         (rule "add_literals" (formula "31") (term "1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,0,0,0"))
         (rule "replace_known_left" (formula "31") (term "0,0,1,0,0,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "polySimp_pullOutFactor1" (formula "31") (term "0,0,0"))
         (rule "add_literals" (formula "31") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "31") (term "0,0,0"))
         (rule "leq_literals" (formula "31") (term "0,0"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "eqSymm" (formula "31"))
         (rule "getOfSeqConcatEQ" (formula "32") (term "0,0,1,0") (ifseqformula "27"))
         (rule "polySimp_elimSub" (formula "32") (term "1,2,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "32") (term "1,2,0,0,1,0"))
         (rule "lenOfSeqSub" (formula "32") (term "1,0,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "32") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "1,1,1,0,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "1,1,0,0,0,1,0"))
         (rule "lenOfSeqSub" (formula "32") (term "0,0,1,2,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "32") (term "1,0,0,1,2,0,0,1,0"))
         (rule "times_zero_2" (formula "32") (term "1,1,0,0,1,2,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "1,0,0,1,2,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,0,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,1,2,0,0,1,0"))
         (rule "add_zero_right" (formula "32") (term "0,0,0,0,1,2,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,1,2,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0,0,1,2,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0,1,2,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "0,0,0,0,1,2,0,0,1,0"))
         (rule "replace_known_left" (formula "32") (term "0,0,0,1,2,0,0,1,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "32") (term "0,0,1,1,0,0,0,1,0"))
         (rule "replace_known_left" (formula "32") (term "0,1,1,0,0,0,1,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "getOfSeqConcatEQ" (formula "29") (term "1,1,0") (ifseqformula "27"))
         (rule "polySimp_elimSub" (formula "29") (term "1,2,1,1,0"))
         (rule "lenOfSeqSub" (formula "29") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "29") (term "1,1,0,1,1,0"))
         (rule "times_zero_2" (formula "29") (term "1,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "29") (term "1,1,0,1,1,0"))
         (rule "lenOfSeqSub" (formula "29") (term "0,1,1,2,1,1,0"))
         (rule "polySimp_elimSub" (formula "29") (term "1,0,1,1,2,1,1,0"))
         (rule "mul_literals" (formula "29") (term "1,1,0,1,1,2,1,1,0"))
         (rule "add_zero_right" (formula "29") (term "1,0,1,1,2,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "29") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,1,2,1,1,0"))
         (rule "add_zero_right" (formula "29") (term "0,0,0,1,1,2,1,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,2,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,1,2,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,1,2,1,1,0"))
         (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,1,2,1,1,0"))
         (rule "replace_known_left" (formula "29") (term "0,0,1,1,2,1,1,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "polySimp_pullOutFactor1" (formula "29") (term "1,2,1,1,0"))
         (rule "add_literals" (formula "29") (term "1,1,2,1,1,0"))
         (rule "times_zero_1" (formula "29") (term "1,2,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,0,0,1,1,0"))
         (rule "replace_known_left" (formula "29") (term "0,0,1,0,0,1,1,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,1,0"))
         (rule "add_literals" (formula "29") (term "1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "29") (term "1,0,0,1,1,0"))
         (rule "add_literals" (formula "29") (term "0,0,1,1,0"))
         (rule "leq_literals" (formula "29") (term "0,1,1,0"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "getOfSeqConcatEQ" (formula "30") (term "1") (ifseqformula "27"))
         (rule "eqSymm" (formula "30"))
         (rule "polySimp_elimSub" (formula "30") (term "1,2,0"))
         (rule "lenOfSeqSub" (formula "30") (term "1,0,0"))
         (rule "polySimp_elimSub" (formula "30") (term "1,1,0,0"))
         (rule "times_zero_2" (formula "30") (term "1,1,1,0,0"))
         (rule "add_zero_right" (formula "30") (term "1,1,0,0"))
         (rule "lenOfSeqSub" (formula "30") (term "0,1,1,2,0"))
         (rule "polySimp_elimSub" (formula "30") (term "1,0,1,1,2,0"))
         (rule "mul_literals" (formula "30") (term "1,1,0,1,1,2,0"))
         (rule "add_zero_right" (formula "30") (term "1,0,1,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,1,2,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,1,1,2,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,1,2,0"))
         (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,1,2,0"))
         (rule "replace_known_left" (formula "30") (term "0,0,1,1,2,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "polySimp_pullOutFactor1" (formula "30") (term "1,2,0"))
         (rule "add_literals" (formula "30") (term "1,1,2,0"))
         (rule "times_zero_1" (formula "30") (term "1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,0,0,0"))
         (rule "replace_known_left" (formula "30") (term "0,0,1,0,0,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
         (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0"))
         (rule "leq_literals" (formula "30") (term "0,0"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "eqSymm" (formula "30"))
         (rule "elementOfUnion" (formula "3") (term "0,0"))
         (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "eqSymm" (formula "3") (term "1,0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "31") (term "1"))
         (rule "add_zero_right" (formula "31") (term "1,1,1"))
         (rule "eqSymm" (formula "31"))
         (rule "polySimp_elimSub" (formula "31") (term "1,1,0,0"))
         (rule "mul_literals" (formula "31") (term "1,1,1,0,0"))
         (rule "add_zero_right" (formula "31") (term "1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,0"))
         (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
         (rule "polySimp_pullOutFactor2" (formula "31") (term "0,1,0,0"))
         (rule "add_literals" (formula "31") (term "1,0,1,0,0"))
         (rule "times_zero_1" (formula "31") (term "0,1,0,0"))
         (rule "leq_literals" (formula "31") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
         (rule "times_zero_2" (formula "31") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
         (rule "mul_literals" (formula "31") (term "1,0,0"))
         (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "eqSymm" (formula "31"))
         (rule "pullOutSelect" (formula "39") (term "0,0,0,0,0,0") (inst "selectSK=DoubleLinkedList_len_0"))
         (rule "applyEq" (formula "40") (term "1,1,1,0,0,1") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "6")))
         (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0,0"))
         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "29"))
         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,0"))
         (rule "getOfSeqSub" (formula "33") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "33") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "33") (term "1,1,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "33") (term "1,1,1,0,1,0,0,1,0"))
         (rule "add_zero_right" (formula "33") (term "1,1,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "33") (term "1,1,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "33") (term "0,1,1,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,1,0,0,1,0"))
         (rule "getOfSeqSub" (formula "33") (term "2,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "33") (term "1,1,0,2,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0,2,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "33") (term "1,1,2,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0,2,0,0,1,0"))
         (rule "mul_literals" (formula "33") (term "0,1,1,1,0,2,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "33") (term "1,1,0,2,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "33") (term "0,1,1,2,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "33") (term "0,0,1,1,2,0,0,1,0"))
         (rule "polySimp_pullOutFactor2b" (formula "33") (term "0,1,1,2,0,0,1,0"))
         (rule "add_literals" (formula "33") (term "1,1,0,1,1,2,0,0,1,0"))
         (rule "times_zero_1" (formula "33") (term "1,0,1,1,2,0,0,1,0"))
         (rule "add_zero_right" (formula "33") (term "0,1,1,2,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,2,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
         (rule "mul_literals" (formula "33") (term "0,0,1,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0,2,0,0,1,0"))
         (rule "add_literals" (formula "33") (term "0,0,0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,2,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,1,0,2,0,0,1,0"))
         (rule "add_literals" (formula "33") (term "1,1,0,0,0,1,0,2,0,0,1,0"))
         (rule "times_zero_1" (formula "33") (term "1,0,0,0,1,0,2,0,0,1,0"))
         (rule "add_literals" (formula "33") (term "0,0,0,1,0,2,0,0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0,2,0,0,1,0"))
         (rule "times_zero_2" (formula "33") (term "1,0,0,0,2,0,0,1,0"))
         (rule "add_zero_right" (formula "33") (term "0,0,0,2,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,2,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,2,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "33") (term "1,1,0,2,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,2,0,0,1,0"))
         (rule "mul_literals" (formula "33") (term "0,1,1,0,2,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,2,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,2,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,2,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "33") (term "1,0,0,2,0,0,1,0"))
         (rule "pullOutSelect" (formula "40") (term "0,1,0,0,0,0") (inst "selectSK=DoubleLinkedList_Node_l_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "31") (term "1,1,0"))
         (rule "leq_literals" (formula "31") (term "0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "add_zero_left" (formula "31") (term "1,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "31") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,1,0"))
         (rule "mul_literals" (formula "31") (term "0,1,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "31") (term "1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,1,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "31") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,1,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "31") (term "0,0,1,1,0"))
         (rule "replace_known_left" (formula "31") (term "0,1,1,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "getOfSeqSub" (formula "32") (term "1"))
         (rule "add_zero_left" (formula "32") (term "1,1,1"))
         (rule "leq_literals" (formula "32") (term "0,0,1"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "eqSymm" (formula "32"))
         (rule "polySimp_elimSub" (formula "32") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
         (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "32") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
         (rule "add_zero_right" (formula "32") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0"))
         (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0"))
         (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
         (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "32"))
         (rule "eqSymm" (formula "32"))
         (rule "elementOfUnion" (formula "5") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "elementOfUnion" (formula "4") (term "0,0"))
         (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "eqSymm" (formula "4") (term "1,0,0"))
         (rule "elementOfUnion" (formula "3") (term "0,0"))
         (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "5") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "applyEq" (formula "5") (term "0") (ifseqformula "33"))
         (rule "applyEqReverse" (formula "41") (term "1,1,0,0") (ifseqformula "5"))
         (rule "applyEqReverse" (formula "41") (term "1,1,0,0,0,0") (ifseqformula "5"))
         (rule "hideAuxiliaryEq" (formula "5"))
         (rule "eqSymm" (formula "40") (term "1,0,0"))
         (rule "eqSymm" (formula "40") (term "1,0,0,0,0"))
         (rule "elementOfUnion" (formula "4") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "applyEq" (formula "4") (term "0") (ifseqformula "31"))
         (rule "applyEqReverse" (formula "40") (term "1,1,0,0,0") (ifseqformula "4"))
         (rule "applyEqReverse" (formula "40") (term "0,0,1,0") (ifseqformula "4"))
         (rule "hideAuxiliaryEq" (formula "4"))
         (rule "eqSymm" (formula "39") (term "1,0,0,0"))
         (rule "elementOfUnion" (formula "3") (term "0,0"))
         (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "elementOfSingleton" (formula "3") (term "0,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "applyEqReverse" (formula "39") (term "0,1,1,0,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0,1") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "39") (term "0,1,1,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,1,1,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,1,0,0,1,1,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "3"))
         (rule "applyEqReverse" (formula "1") (term "0,1,2,0") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "eqSymm" (formula "38") (term "1,0,0,0"))
         (rule "eqSymm" (formula "38") (term "1,0,0"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "getOfSeqConcatEQ" (formula "28") (term "0,0,0,1,0,0") (ifseqformula "26"))
         (rule "polySimp_elimSub" (formula "28") (term "1,2,0,0,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "28") (term "1,0,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "28") (term "1,1,1,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "28") (term "1,1,0,0,0,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "28") (term "0,1,1,2,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "28") (term "1,0,1,1,2,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "28") (term "1,1,0,1,1,2,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "28") (term "1,0,1,1,2,0,0,0,1,0,0"))
         (rule "ifEqualsNull" (formula "28") (term "0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "28") (term "0,0,1,1,0,1,1,0,0,1,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "polySimp_pullOutFactor1" (formula "28") (term "1,0,1,1,0,0,1,0,0"))
         (rule "add_literals" (formula "28") (term "1,1,0,1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "28") (term "1,0,1,1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "28") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1,0,0"))
         (rule "leq_literals" (formula "28") (term "0,0,0,0,1,0,0"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "28") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,0,0"))
         (rule "leq_literals" (formula "28") (term "0,0,0,0,1,0,0"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "2") (term "0,0"))
         (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfSingleton" (formula "2") (term "0,0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "applyEqReverse" (formula "38") (term "1,1,0,0,0,0,0") (ifseqformula "2"))
         (rule "applyEqReverse" (formula "38") (term "1,1,1,0,0,1") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "polySimp_addAssoc" (formula "37") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "37") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,1"))
         (rule "add_literals" (formula "37") (term "0,1,1,0,0,1"))
         (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,0,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqSub" (formula "27") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "27") (term "1,1,0,0,0,1,0,0"))
         (rule "leq_literals" (formula "27") (term "0,0,0,0,0,1,0,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,0,0,0,0,1,0,0"))
         (rule "ifEqualsNull" (formula "27") (term "0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "27") (term "1,0,0,1,1,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "27") (term "1,2,1,0,0,1,1,0,0"))
         (rule "lenOfSeqSub" (formula "27") (term "1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "times_zero_2" (formula "27") (term "1,1,1,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "lenOfSeqSub" (formula "27") (term "0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "27") (term "1,1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,1,2,1,0,0,1,1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1" (formula "27") (term "1,2,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,2,1,0,0,1,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,0,1,0,0,1,1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,1,1,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (rule "leq_literals" (formula "27") (term "0,1,0,0,1,1,0,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,0,0,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0,0,0"))
         (rule "times_zero_2" (formula "1") (term "1,1,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,0,0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,0,0,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,2,0,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,2,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,0,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "37") (term "0,1,0,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "37") (term "1,2,0,1,0,0,0"))
         (rule "lenOfSeqSub" (formula "37") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,1,0,0,0"))
         (rule "times_zero_2" (formula "37") (term "1,1,1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,0,1,0,0,0"))
         (rule "lenOfSeqSub" (formula "37") (term "0,1,1,2,0,1,0,0,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,1,1,2,0,1,0,0,0"))
         (rule "mul_literals" (formula "37") (term "1,1,0,1,1,2,0,1,0,0,0"))
         (rule "add_zero_right" (formula "37") (term "1,0,1,1,2,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,1,2,0,1,0,0,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,1,1,2,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,1,2,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,1,2,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,1,2,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,1,2,0,1,0,0,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,1,1,2,0,1,0,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "polySimp_pullOutFactor1" (formula "37") (term "1,2,0,1,0,0,0"))
         (rule "add_literals" (formula "37") (term "1,1,2,0,1,0,0,0"))
         (rule "times_zero_1" (formula "37") (term "1,2,0,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,0,0,1,0,0,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,0,0,1,0,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,1,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,1,0,0,0"))
         (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,0,0,0"))
         (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,0,0,0"))
         (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0"))
         (rule "leq_literals" (formula "37") (term "0,0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqSub" (formula "27") (term "1,0,0,1,1,0,0"))
         (rule "leq_literals" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "add_zero_left" (formula "27") (term "1,1,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,1,0,0,1,1,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqSub" (formula "1") (term "0,0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "37") (term "0,1,0,0,0"))
         (rule "add_zero_left" (formula "37") (term "1,1,0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "leq_literals" (formula "37") (term "0,0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1,0,0,0"))
         (rule "mul_literals" (formula "37") (term "0,1,1,0,1,0,0,0"))
         (rule "polySimp_addComm0" (formula "37") (term "1,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,0,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "37") (term "0,0,1,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0"))
         (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,1,0,0,0"))
         (rule "replace_known_left" (formula "37") (term "0,1,0,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqConcatEQ" (formula "27") (term "1") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "27") (term "1,2,1"))
         (rule "lenOfSeqSub" (formula "27") (term "1,0,1"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1"))
         (rule "mul_literals" (formula "27") (term "1,1,1,0,1"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,1"))
         (rule "lenOfSeqSub" (formula "27") (term "0,1,1,2,1"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,1,2,1"))
         (rule "times_zero_2" (formula "27") (term "1,1,0,1,1,2,1"))
         (rule "add_zero_right" (formula "27") (term "1,0,1,1,2,1"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,2,1"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,2,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,2,1"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
         (rule "add_zero_left" (formula "27") (term "0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,2,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,2,1"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,1,2,1"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,1,2,1") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "1,2,1"))
         (rule "add_literals" (formula "27") (term "1,1,1,2,1"))
         (rule "times_zero_1" (formula "27") (term "1,1,2,1"))
         (rule "add_literals" (formula "27") (term "1,2,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,1"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0,0,1") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0,1"))
         (rule "add_literals" (formula "27") (term "1,0,0,1"))
         (rule "times_zero_1" (formula "27") (term "0,0,1"))
         (rule "leq_literals" (formula "27") (term "0,1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqConcatEQ" (formula "37") (term "0,0,1,0,1") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "37") (term "1,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "37") (term "1,2,0,0,1,0,1"))
         (rule "lenOfSeqSub" (formula "37") (term "1,0,0,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,0,1,0,1"))
         (rule "times_zero_2" (formula "37") (term "1,1,1,0,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,0,0,1,0,1"))
         (rule "lenOfSeqSub" (formula "37") (term "0,0,1,2,0,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,0,1,2,0,0,1,0,1"))
         (rule "times_zero_2" (formula "37") (term "1,1,0,0,1,2,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "1,0,0,1,2,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,1,2,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,0,1,2,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,2,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,1,2,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,1,2,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,0,1,2,0,0,1,0,1"))
         (rule "replace_known_left" (formula "37") (term "0,0,0,1,2,0,0,1,0,1") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,1,1,0,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,1,0,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,1,1,0,0,0,1,0,1"))
         (rule "replace_known_left" (formula "37") (term "0,1,1,0,0,0,1,0,1") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,0,0,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
         (rule "times_zero_2" (formula "1") (term "1,1,1,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,0,0,0,1,0,0"))
         (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,0,0,0,1,0,0"))
         (rule "ifEqualsNull" (formula "1") (term "0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,0,1,1,0,0,1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,0,1,1,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,1,1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,0,1,0,0,1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,1,0,0,1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0,0,1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "27") (term "1"))
         (rule "add_zero_right" (formula "27") (term "1,1,1"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1"))
         (rule "times_zero_2" (formula "27") (term "1,1,1,0,1"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,1"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,1"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,1"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,1"))
         (rule "polySimp_pullOutFactor2" (formula "27") (term "0,1,0,1"))
         (rule "add_literals" (formula "27") (term "1,0,1,0,1"))
         (rule "times_zero_1" (formula "27") (term "0,1,0,1"))
         (rule "leq_literals" (formula "27") (term "1,0,1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1"))
         (rule "times_zero_2" (formula "27") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "27") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1"))
         (rule "mul_literals" (formula "27") (term "1,0,1"))
         (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqSub" (formula "37") (term "1,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "1,1,1,0,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,0,0,1,0,1"))
         (rule "times_zero_2" (formula "37") (term "1,1,1,0,1,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,1,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,0,0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,1,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,1,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,1,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,1,0,1,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,1,0,0,1,0,1"))
         (rule "getOfSeqSub" (formula "37") (term "2,0,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addComm1" (formula "37") (term "1,1,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,1,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "37") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,1,1,2,0,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "37") (term "0,0,1,1,2,0,0,1,0,1"))
         (rule "polySimp_pullOutFactor2b" (formula "37") (term "0,1,1,2,0,0,1,0,1"))
         (rule "add_literals" (formula "37") (term "1,1,0,1,1,2,0,0,1,0,1"))
         (rule "times_zero_1" (formula "37") (term "1,0,1,1,2,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "0,1,1,2,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,0,1,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,2,0,0,1,0,1"))
         (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,2,0,0,1,0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,1,0,2,0,0,1,0,1"))
         (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,0,2,0,0,1,0,1"))
         (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,0,2,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,2,0,0,1,0,1"))
         (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,2,0,0,1,0,1"))
         (rule "times_zero_2" (formula "37") (term "1,0,0,0,2,0,0,1,0,1"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,2,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,2,0,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "37") (term "1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,2,0,0,1,0,1"))
         (rule "mul_literals" (formula "37") (term "0,1,1,0,2,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,2,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,2,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,2,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "37") (term "1,0,0,2,0,0,1,0,1"))
         (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqSub" (formula "1") (term "0,0,0,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,1,0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0,1,0,0"))
         (rule "ifEqualsNull" (formula "1") (term "0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "27") (term "0,0,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "27") (term "1,2,0,0,0,0"))
         (rule "lenOfSeqSub" (formula "27") (term "1,0,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,0,0,0"))
         (rule "times_zero_2" (formula "27") (term "1,1,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,0,0,0,0"))
         (rule "lenOfSeqSub" (formula "27") (term "0,1,1,2,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,1,2,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "1,1,0,1,1,2,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "1,0,1,1,2,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,2,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,2,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,1,2,0,0,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,1,2,0,0,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1" (formula "27") (term "1,2,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,2,0,0,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,2,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,0,0,0,0,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
         (rule "leq_literals" (formula "27") (term "0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqConcatEQ" (formula "37") (term "0,1,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "37") (term "1,2,0,1,0"))
         (rule "lenOfSeqSub" (formula "37") (term "1,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0,1,0"))
         (rule "times_zero_2" (formula "37") (term "1,1,1,0,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,0,1,0"))
         (rule "lenOfSeqSub" (formula "37") (term "0,1,1,2,0,1,0"))
         (rule "polySimp_elimSub" (formula "37") (term "1,0,1,1,2,0,1,0"))
         (rule "times_zero_2" (formula "37") (term "1,1,0,1,1,2,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "1,0,1,1,2,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,0,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,1,2,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,1,1,2,0,1,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,1,2,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,1,0"))
         (rule "add_literals" (formula "37") (term "0,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "37") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,1,2,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,1,2,0,1,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,1,2,0,1,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,1,1,2,0,1,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "polySimp_pullOutFactor1b" (formula "37") (term "1,2,0,1,0"))
         (rule "add_literals" (formula "37") (term "1,1,1,2,0,1,0"))
         (rule "times_zero_1" (formula "37") (term "1,1,2,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "1,2,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "37") (term "0,0,0,0,0,1,0"))
         (rule "replace_known_left" (formula "37") (term "0,0,0,0,1,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,1,0"))
         (rule "polySimp_pullOutFactor1" (formula "37") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "37") (term "1,0,0,0,1,0"))
         (rule "times_zero_1" (formula "37") (term "0,0,0,1,0"))
         (rule "leq_literals" (formula "37") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "1,2,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,1,2,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,1,2,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,2,0"))
         (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,1,2,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,2,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,2,0"))
         (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,2,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,2,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,1,2,0"))
         (rule "add_literals" (formula "1") (term "1,1,2,1,2,0"))
         (rule "times_zero_1" (formula "1") (term "1,2,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,2,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,1,2,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,2,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,1,2,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1,2,0"))
         (rule "add_literals" (formula "1") (term "0,0,1,2,0"))
         (rule "leq_literals" (formula "1") (term "0,1,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "commuteUnion_2" (formula "23") (term "0,1,0"))
         (rule "getOfSeqSub" (formula "27") (term "0,0,0,0"))
         (rule "leq_literals" (formula "27") (term "0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "add_zero_left" (formula "27") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,0,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqSub" (formula "37") (term "0,1,0"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "polySimp_elimSub" (formula "37") (term "1,1,0,1,0"))
         (rule "times_zero_2" (formula "37") (term "1,1,1,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "1,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,0"))
         (rule "add_literals" (formula "37") (term "0,0,0,1,0,1,0"))
         (rule "add_zero_left" (formula "37") (term "0,0,1,0,1,0"))
         (rule "polySimp_pullOutFactor2" (formula "37") (term "0,1,0,1,0"))
         (rule "add_literals" (formula "37") (term "1,0,1,0,1,0"))
         (rule "times_zero_1" (formula "37") (term "0,1,0,1,0"))
         (rule "leq_literals" (formula "37") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_homoInEq0" (formula "37") (term "0,1,0"))
         (rule "times_zero_2" (formula "37") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,1,0"))
         (rule "mul_literals" (formula "37") (term "1,0,1,0"))
         (rule "replace_known_left" (formula "37") (term "0,1,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "getOfSeqSub" (formula "1") (term "1,2,0"))
         (rule "leq_literals" (formula "1") (term "0,0,1,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "add_zero_left" (formula "1") (term "1,1,1,2,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,2,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,1,2,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,2,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,2,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,2,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,2,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,2,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,2,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "1,1,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,1,1,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,1,0"))
         (rule "mul_literals" (formula "1") (term "1,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,1,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,1,0"))
         (rule "mul_literals" (formula "1") (term "1,1,0,1,1,2,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,1,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,1,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,1,1,0"))
         (rule "add_literals" (formula "1") (term "1,1,2,1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,2,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,1,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,1,1,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,1,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
         (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
         (rule "leq_literals" (formula "1") (term "0,1,1,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqConcatEQ" (formula "27") (term "1,2,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "27") (term "1,2,1,2,0"))
         (rule "lenOfSeqSub" (formula "27") (term "1,0,1,2,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,2,0"))
         (rule "mul_literals" (formula "27") (term "1,1,1,0,1,2,0"))
         (rule "add_zero_right" (formula "27") (term "1,1,0,1,2,0"))
         (rule "lenOfSeqSub" (formula "27") (term "0,1,1,2,1,2,0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,1,2,1,2,0"))
         (rule "mul_literals" (formula "27") (term "1,1,0,1,1,2,1,2,0"))
         (rule "add_zero_right" (formula "27") (term "1,0,1,1,2,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,1,2,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,1,1,2,1,2,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,2,1,2,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,2,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,2,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,1,1,2,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,1,1,2,1,2,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,1,1,2,1,2,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,1,1,2,1,2,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_pullOutFactor1" (formula "27") (term "1,2,1,2,0"))
         (rule "add_literals" (formula "27") (term "1,1,2,1,2,0"))
         (rule "times_zero_1" (formula "27") (term "1,2,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,1,2,0"))
         (rule "replace_known_left" (formula "27") (term "0,0,0,1,2,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,2,0"))
         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,2,0"))
         (rule "add_literals" (formula "27") (term "1,1,0,0,1,2,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,1,2,0"))
         (rule "add_literals" (formula "27") (term "0,0,1,2,0"))
         (rule "leq_literals" (formula "27") (term "0,1,2,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqSub" (formula "1") (term "1,1,0"))
         (rule "leq_literals" (formula "1") (term "0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "add_zero_left" (formula "1") (term "1,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,1,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,1,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,1,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "27") (term "1,2,0"))
         (rule "add_zero_left" (formula "27") (term "1,1,1,2,0"))
         (rule "leq_literals" (formula "27") (term "0,0,1,2,0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "polySimp_elimSub" (formula "27") (term "1,0,1,2,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,2,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,1,2,0"))
         (rule "polySimp_addComm0" (formula "27") (term "1,0,1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,2,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,2,0"))
         (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,2,0"))
         (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,2,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,2,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,2,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,0,1,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1,2,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1,2,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,1,2,0"))
         (rule "replace_known_left" (formula "27") (term "0,1,2,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "getOfSeqConcatEQ" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "25"))
         (rule "polySimp_elimSub" (formula "1") (term "1,2,1,0,0,1,1,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "1") (term "1,1,1,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,0,0,1,1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,2,1,0,0,1,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,2,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,1,0,0,1,1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,1,1,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,1,0,0,1,1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "getOfSeqSub" (formula "1") (term "1,0,0,1,1,0,0"))
         (rule "add_zero_left" (formula "1") (term "1,1,1,0,0,1,1,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "polySimp_elimSub" (formula "1") (term "1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,1,1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
         (rule "replace_known_left" (formula "1") (term "0,1,0,0,1,1,0,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
         (rule "eqSymm" (formula "27"))
         (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "27"))
         (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "notRight" (formula "37"))
         (rule "hideAuxiliaryEq" (formula "28"))
         (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "applyEq" (formula "28") (term "1") (ifseqformula "1"))
         (rule "ifEqualsNull" (formula "28"))
         (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "33"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
         (rule "closeFalse" (formula "28"))
      )
   )
   (branch "Exceptional Post (remove)"
      (builtin "One Step Simplification" (formula "21"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0"))
      (rule "translateJavaSubInt" (formula "17") (term "1,0,1,1,0"))
      (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
      (rule "translateJavaAddInt" (formula "18") (term "1,0,1,1,0"))
      (rule "translateJavaSubInt" (formula "7") (term "1"))
      (rule "translateJavaSubInt" (formula "16") (term "1,0,1,0"))
      (rule "translateJavaAddInt" (formula "21") (term "1,1,1,0,0,0,0,0,0,0,0,1,1"))
      (rule "translateJavaSubInt" (formula "21") (term "1,0,1,1,0,0,0,0,1,1"))
      (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0,0,0,0,0,0,1,1"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "22"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0") (ifseqformula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "25"))
      (rule "notLeft" (formula "23"))
      (rule "close" (formula "27") (ifseqformula "26"))
   )
   (branch "Pre (remove)"
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "8")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "24")) (ifInst ""  (formula "1")) (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
      (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0"))
      (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
      (rule "translateJavaSubInt" (formula "17") (term "1,0,1,1,0"))
      (rule "translateJavaSubInt" (formula "7") (term "1"))
      (rule "translateJavaAddInt" (formula "18") (term "1,0,1,1,0"))
      (rule "translateJavaSubInt" (formula "16") (term "1,0,1,0"))
      (rule "andLeft" (formula "9"))
      (rule "eqSymm" (formula "20") (term "0,1,0,0"))
      (rule "eqSymm" (formula "18") (term "1,0"))
      (rule "eqSymm" (formula "19") (term "1,0"))
      (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "7") (term "1"))
      (rule "mul_literals" (formula "7") (term "1,1"))
      (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0"))
      (rule "mul_literals" (formula "17") (term "1,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_addComm0" (formula "7") (term "1"))
      (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
      (rule "castedGetAny" (formula "14") (term "1,0,0,1,0"))
      (rule "castedGetAny" (formula "8") (term "0"))
      (rule "castedGetAny" (formula "13") (term "1,0,0,1,0"))
      (rule "eqSeqEmpty" (formula "22"))
      (rule "castedGetAny" (formula "9") (term "0"))
      (rule "castedGetAny" (formula "20") (term "0,0,1,0,0"))
      (rule "castedGetAny" (formula "20") (term "1,0,1,0,0"))
      (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
      (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "6"))
      (rule "add_zero_right" (formula "6") (term "0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
      (rule "castedGetAny" (formula "19") (term "0,1,0"))
      (rule "eqSymm" (formula "19") (term "1,0"))
      (rule "castedGetAny" (formula "17") (term "1,0"))
      (rule "castedGetAny" (formula "18") (term "0,1,0"))
      (rule "eqSymm" (formula "18") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10"))
      (rule "add_zero_right" (formula "10") (term "0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "applyEq" (formula "22") (term "0") (ifseqformula "11"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
      (rule "polySimp_elimOne" (formula "6") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "polySimp_elimOne" (formula "10") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "10"))
      (rule "times_zero_1" (formula "21") (term "1,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0"))
      (rule "leq_literals" (formula "21") (term "0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "false_right" (formula "21"))
      (rule "nnf_imp2or" (formula "18") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "14") (term "0"))
      (rule "nnf_imp2or" (formula "20") (term "0,0"))
      (rule "nnf_imp2or" (formula "19") (term "0"))
      (rule "nnf_notAnd" (formula "18") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "19") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "20") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
      (rule "Class_invariant_axiom_for_DoubleLinkedList" (formula "24") (inst "j=j") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "i_5=i_5"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "11")) (ifInst ""  (formula "21")) (ifInst ""  (formula "16")) (ifInst ""  (formula "21")))
      (rule "translateJavaSubInt" (formula "24") (term "1,0,1,1,0,1,0,0"))
      (rule "translateJavaSubInt" (formula "24") (term "1,0,1,0,1,0,0,0"))
      (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1,0,1,0"))
      (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,1,0"))
      (rule "eqSymm" (formula "24") (term "0,1,0,0,1"))
      (rule "eqSymm" (formula "24") (term "1,0,1,0,0"))
      (rule "eqSymm" (formula "24") (term "1,0,1,0"))
      (rule "polySimp_elimSub" (formula "24") (term "1,0,1,0,1,0,0,0"))
      (rule "mul_literals" (formula "24") (term "1,1,0,1,0,1,0,0,0"))
      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "24") (term "1,0,0,1,0,1,0,0"))
      (rule "mul_literals" (formula "24") (term "1,1,0,0,1,0,1,0,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,0,0,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,0,1,0,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "24") (term "1,0,0,1,0,1,0,0"))
      (rule "castedGetAny" (formula "24") (term "0,0,1,0,0,0,0,0,0,0,0"))
      (rule "replace_known_left" (formula "24") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "castedGetAny" (formula "24") (term "1,1,1,0,1,0,0"))
      (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,1,0,0,0,0,0"))
      (rule "castedGetAny" (formula "24") (term "1,0,0,1,0,1,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "24") (term "0,1,0,1,0,0"))
      (rule "eqSymm" (formula "24") (term "1,0,1,0,0"))
      (rule "eqSeqEmpty" (formula "24") (term "0,1,0,0,0,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "24") (term "0,1,0,1,0"))
      (rule "eqSymm" (formula "24") (term "1,0,1,0"))
      (rule "eqSeqEmpty" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0"))
      (rule "castedGetAny" (formula "24") (term "1,0,1,0,0,0"))
      (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "castedGetAny" (formula "24") (term "1,0,1,0,0,1"))
      (rule "castedGetAny" (formula "24") (term "0,0,1,0,0,1"))
      (rule "castedGetAny" (formula "24") (term "1,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0,1"))
      (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0"))
      (rule "applyEq" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "11"))
      (rule "applyEq" (formula "24") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
      (rule "replace_known_left" (formula "24") (term "1,0,0,0,0,0,0,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_contradEq7" (formula "24") (term "0,0,0,0,0,0,0,0") (ifseqformula "10"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0,0,0"))
      (rule "leq_literals" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "nnf_notAnd" (formula "20") (term "0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
      (rule "nnf_imp2or" (formula "24") (term "0,0,1"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0,0"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0"))
      (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,0,0,1,0"))
      (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
      (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
      (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "cnf_rightDist" (formula "15") (term "0"))
      (rule "nnf_imp2or" (formula "24") (term "0,0,0"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,0,0,1,0"))
      (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,0"))
      (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "allRight" (formula "24") (inst "sk=j_0"))
      (rule "allRight" (formula "24") (inst "sk=i_0"))
      (rule "orRight" (formula "24"))
      (rule "notRight" (formula "25"))
      (rule "orRight" (formula "25"))
      (rule "notRight" (formula "25"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "27"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "lenNonNegative" (formula "15") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
      (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "14"))
      (rule "leq_literals" (formula "15") (term "0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "seqGetAlphaCast" (formula "12") (term "0"))
      (rule "castedGetAny" (formula "12") (term "0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "seqGetAlphaCast" (formula "13") (term "0"))
      (rule "castedGetAny" (formula "13") (term "0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "seqGetAlphaCast" (formula "21") (term "1,0"))
      (rule "castedGetAny" (formula "21") (term "0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "distr_forallAnd" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "commute_or_2" (formula "24") (term "0,0,0"))
      (rule "commute_or" (formula "19") (term "0"))
      (rule "allLeft" (formula "24") (inst "t=j_0"))
      (rule "eqSymm" (formula "24") (term "0,1,0"))
      (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0"))
      (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "4"))
      (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0"))
      (rule "leq_literals" (formula "24") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "allLeft" (formula "22") (inst "t=k"))
      (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
      (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "12"))
      (rule "eqSymm" (formula "22") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "22") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0,0"))
      (rule "leq_literals" (formula "22") (term "0,0"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "allLeft" (formula "17") (inst "t=k"))
      (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
      (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "12"))
      (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
      (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
      (rule "leq_literals" (formula "17") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "17") (term "0,0"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "notLeft" (formula "17"))
      (rule "allLeft" (formula "24") (inst "t=k"))
      (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
      (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
      (rule "applyEq" (formula "24") (term "1,0,1") (ifseqformula "12"))
      (rule "eqSymm" (formula "24") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
      (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "24") (term "0,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
      (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
      (rule "leq_literals" (formula "24") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "24") (term "0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "allLeft" (formula "18") (inst "t=k"))
      (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
      (rule "applyEq" (formula "18") (term "1,0,0,1") (ifseqformula "12"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0"))
      (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
      (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
      (rule "leq_literals" (formula "18") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "10"))
      (rule "qeq_literals" (formula "18") (term "0,0"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "notLeft" (formula "18"))
      (rule "allLeft" (formula "27") (inst "t=k"))
      (rule "eqSymm" (formula "27") (term "0,1,0"))
      (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0"))
      (rule "applyEq" (formula "27") (term "1,0,1,0") (ifseqformula "12"))
      (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0") (ifseqformula "11"))
      (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0"))
      (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0"))
      (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0"))
      (rule "leq_literals" (formula "27") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "allLeft" (formula "28") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, DoubleLinkedList::$len))"))
      (rule "eqSymm" (formula "28") (term "0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0"))
      (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,0,0"))
      (rule "polySimp_addComm0" (formula "28") (term "0,0,1,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1,0,0,0"))
      (rule "add_literals" (formula "28") (term "1,1,0,1,0,0,0"))
      (rule "times_zero_1" (formula "28") (term "1,0,1,0,0,0"))
      (rule "add_zero_right" (formula "28") (term "0,1,0,0,0"))
      (rule "leq_literals" (formula "28") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "allLeft" (formula "26") (inst "t=i_0"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
      (rule "qeq_literals" (formula "26") (term "0,0"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "26"))
      (rule "andLeft" (formula "3"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "1,1,0"))
      (rule "times_zero_1" (formula "3") (term "1,0"))
      (rule "add_zero_right" (formula "3") (term "0"))
      (rule "leq_literals" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
)
)

}
