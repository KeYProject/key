\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Apr 03 16:42:25 CEST 2018
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Tue Apr 03 16:42:25 CEST 2018
name=DualPivotQuicksort_sort_external[DualPivotQuicksort_sort_external\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML block contract.3
contract=DualPivotQuicksort_sort_external[DualPivotQuicksort_sort_external\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML block contract.3
class=de.uka.ilkd.key.proof.init.FunctionalBlockContractPO
";

\proof {
(keyLog "0" (keyUser "Flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "2585")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "anonOut_heap,exc#22,heap_Before_BLOCK,savedHeap_Before_BLOCK,heap_Before_METHOD,savedHeap_Before_METHOD,e1_Before_METHOD#23,e2_Before_METHOD#24,a_Before_METHOD#25,o,f,anonIn_heap,anonIn_e1,anonIn_e2,anonIn_a"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "impRight" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "eqSymm" (formula "17") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "13") (term "0") (ifseqformula "16"))
(builtin "One Step Simplification" (formula "13"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "5") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "4"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "4") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
(rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "3"))
(rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "9") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "7") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "6") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "2"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "exc#22_1"))
(rule "assignment" (formula "17") (term "1"))
(builtin "One Step Simplification" (formula "17"))
(rule "inEqSimp_sepNegMonomial0" (formula "5"))
(rule "polySimp_mulLiterals" (formula "5") (term "0"))
(rule "polySimp_elimOne" (formula "5") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "4"))
(rule "polySimp_mulLiterals" (formula "4") (term "0"))
(rule "polySimp_elimOne" (formula "4") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "3"))
(rule "polySimp_mulComm0" (formula "3") (term "1"))
(rule "polySimp_rightDist" (formula "3") (term "1"))
(rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
(rule "mul_literals" (formula "3") (term "0,1"))
(rule "polySimp_elimOne" (formula "3") (term "1,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "9"))
(rule "polySimp_mulLiterals" (formula "9") (term "0"))
(rule "polySimp_elimOne" (formula "9") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8"))
(rule "polySimp_mulLiterals" (formula "8") (term "0"))
(rule "polySimp_elimOne" (formula "8") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "7"))
(rule "polySimp_mulLiterals" (formula "7") (term "0"))
(rule "polySimp_elimOne" (formula "7") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "6"))
(rule "polySimp_mulLiterals" (formula "6") (term "0"))
(rule "polySimp_elimOne" (formula "6") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "elementOfUnion" (formula "17") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "17") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "17") (term "1,0,0,0,0,1,0,1"))
(rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
(rule "times_zero_1" (formula "2") (term "0,0"))
(rule "add_zero_left" (formula "2") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "2"))
(rule "mul_literals" (formula "2") (term "1"))
(rule "nnf_imp2or" (formula "11") (term "0"))
(rule "nnf_imp2or" (formula "12") (term "0"))
(rule "nnf_notAnd" (formula "11") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
(rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "12") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "12") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
(rule "mul_literals" (formula "12") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "11") (term "0,1,0"))
(rule "nnf_imp2or" (formula "12") (term "0,1,0"))
(rule "nnf_imp2or" (formula "18") (term "0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "11") (term "0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0"))
(rule "nnf_imp2or" (formula "18") (term "0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,0"))
(rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,0"))
(rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1,0"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
(rule "nnf_notAnd" (formula "18") (term "0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "18") (term "0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "18") (term "0,1,0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "18") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "18") (term "0,1,0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "18") (term "0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "18") (term "0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "arrayLengthIsAShort" (formula "6") (term "0"))
(builtin "One Step Simplification" (formula "6"))
(rule "true_left" (formula "6"))
(rule "arrayLengthNotNegative" (formula "6") (term "0"))
(rule "all_pull_out3" (formula "12") (term "0"))
(rule "shift_paren_or" (formula "12") (term "0,0"))
(rule "shift_paren_or" (formula "12") (term "0,0,0"))
(rule "all_pull_out3" (formula "13") (term "0"))
(rule "shift_paren_or" (formula "13") (term "0,0"))
(rule "shift_paren_or" (formula "13") (term "0,0,0"))
(rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "19") (term "1") (newnames "x"))
(rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "19") (term "1"))
(rule "variableDeclaration" (formula "19") (term "1") (newnames "x_1"))
(rule "assignment_array2" (formula "19"))
(branch "Normal Execution (a != null)"
   (builtin "One Step Simplification" (formula "19"))
   (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=arr_0"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_2"))
   (rule "assignment_array2" (formula "19"))
   (branch "Normal Execution (a != null)"
      (builtin "One Step Simplification" (formula "19"))
      (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=arr_1"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "less_than_comparison_simple" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0"))
      (rule "ifSplit" (formula "19"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "t"))
         (rule "assignment_array2" (formula "20"))
         (branch "Normal Execution (a != null)"
            (builtin "One Step Simplification" (formula "20"))
            (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "0,1,0"))
            (rule "eval_order_array_access3" (formula "20") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_3"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_4"))
            (rule "assignment_array2" (formula "20"))
            (branch "Normal Execution (a != null)"
               (builtin "One Step Simplification" (formula "20"))
               (rule "replaceKnownSelect_taclet00_2" (formula "20") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "20") (term "0,1,0"))
               (rule "assignment_to_primitive_array_component" (formula "20"))
               (branch "Normal Execution (x_arr != null)"
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "assignment_to_primitive_array_component" (formula "20"))
                  (branch "Normal Execution (a != null)"
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "tryEmpty" (formula "20") (term "1"))
                     (rule "blockEmptyLabel" (formula "20") (term "1"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "methodCallEmpty" (formula "20") (term "1"))
                     (rule "emptyModality" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "eqSymm" (formula "20") (term "1,0,0,1"))
                     (rule "pullOutSelect" (formula "20") (term "1,0,0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "21") (term "1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "20") (term "0,0,0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "21") (term "0,0"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "10"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "21") (term "1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "inEqSimp_subsumption0" (formula "20") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "20") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "nnf_notOr" (formula "20") (term "1,1,0,0,0,1"))
                     (rule "andRight" (formula "20"))
                     (branch "Case 1"
                        (rule "andRight" (formula "20"))
                        (branch "Case 1"
                           (rule "allRight" (formula "20") (inst "sk=i_0"))
                           (rule "orRight" (formula "20"))
                           (rule "orRight" (formula "20"))
                           (rule "allRight" (formula "22") (inst "sk=j_0"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "inEqSimp_leqRight" (formula "20"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_leqRight" (formula "23"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfStore" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "castDel" (formula "3") (term "1,0"))
                           (rule "eqSymm" (formula "3") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "10") (term "0,0"))
                           (rule "add_zero_left" (formula "10") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_5"))
                           (rule "simplifySelectOfStore" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "castDel" (formula "3") (term "1,0"))
                           (rule "eqSymm" (formula "3") (term "0,0"))
                           (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_6"))
                           (rule "simplifySelectOfStore" (formula "5"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "castDel" (formula "5") (term "1,0"))
                           (rule "eqSymm" (formula "5") (term "0,0"))
                           (rule "inEqSimp_contradEq3" (formula "5") (term "0,0") (ifseqformula "8"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "5") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "simplifySelectOfStore" (formula "5"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "castDel" (formula "5") (term "1,0"))
                           (rule "eqSymm" (formula "5") (term "0,0"))
                           (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_7"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_8"))
                           (rule "simplifySelectOfAnon" (formula "5"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "8"))
                           (rule "times_zero_1" (formula "10") (term "0,0"))
                           (rule "add_zero_left" (formula "10") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                           (rule "leq_literals" (formula "14") (term "0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "cut_direct" (formula "27") (term "0"))
                           (branch "CUT: anonIn_a.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "allLeft" (formula "24") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet000000000_15" (formula "24") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000000_16" (formula "24") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "11"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "24") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "j_0 = anonIn_e2 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "5") (term "0,0") (ifseqformula "7"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "4") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "5"))
                                 (rule "times_zero_1" (formula "9") (term "0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "allLeft" (formula "22") (inst "t=anonIn_e2"))
                                 (rule "replaceKnownSelect_taclet0_0" (formula "22") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "12"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                              (branch "j_0 = anonIn_e2 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "i_0 = anonIn_e2 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "23") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "false_right" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "19"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0"))
                                    (rule "add_zero_right" (formula "7") (term "0"))
                                    (rule "leq_literals" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                                 (branch "i_0 = anonIn_e2 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "allLeft" (formula "22") (inst "t=j_0"))
                                    (rule "replaceKnownSelect_taclet000000000_13" (formula "22") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000000_14" (formula "22") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = anonIn_e1 TRUE"
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_commuteGeq" (formula "22"))
                                       (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "18"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "allLeft" (formula "20") (inst "t=anonIn_e1"))
                                       (rule "replaceKnownSelect_taclet00_2" (formula "20") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "20") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "allLeft" (formula "22") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet000000000_15" (formula "22") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000000_16" (formula "22") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "commute_or" (formula "22") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "cut_direct" (formula "22") (term "1,0"))
                                       (branch "CUT: right ≤ -1 + i_0 TRUE"
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1"))
                                          (rule "mul_literals" (formula "12") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                          (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                       (branch "CUT: right ≤ -1 + i_0 FALSE"
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_leqRight" (formula "28"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "24") (inst "t=anonIn_e1"))
                                          (rule "replaceKnownSelect_taclet00_2" (formula "24") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "24") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "commute_or" (formula "24") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0"))
                                          (rule "cut_direct" (formula "24") (term "1,0"))
                                          (branch "CUT: right ≤ -1 + anonIn_e1 TRUE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "25"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "13"))
                                             (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                             (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                             (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "17"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "inEqSimp_homoInEq1" (formula "18"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0"))
                                             (rule "add_zero_right" (formula "18") (term "0"))
                                             (rule "leq_literals" (formula "18"))
                                             (rule "closeFalse" (formula "18"))
                                          )
                                          (branch "CUT: right ≤ -1 + anonIn_e1 FALSE"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_leqRight" (formula "30"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "23") (inst "t=anonIn_e2"))
                                             (rule "replaceKnownSelect_taclet0_0" (formula "23") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "23") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "cut_direct" (formula "23") (term "1,0"))
                                             (branch "CUT: left ≤ anonIn_e2 TRUE"
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "23"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "7"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0"))
                                                (rule "qeq_literals" (formula "33") (term "0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "false_right" (formula "33"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "24"))
                                                (rule "times_zero_1" (formula "13") (term "0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
                                                (rule "times_zero_1" (formula "10") (term "0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                (rule "mul_literals" (formula "10") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "allLeft" (formula "24") (inst "t=anonIn_e2"))
                                                (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                (rule "leq_literals" (formula "24") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                                                (rule "times_zero_1" (formula "17") (term "0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                                (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "22"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0"))
                                                (rule "add_zero_right" (formula "23") (term "0"))
                                                (rule "leq_literals" (formula "23"))
                                                (rule "closeFalse" (formula "23"))
                                             )
                                             (branch "CUT: left ≤ anonIn_e2 FALSE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_leqRight" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "j_0 = anonIn_e1 FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "3"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0"))
                                       (rule "add_literals" (formula "21") (term "0"))
                                       (rule "leq_literals" (formula "21"))
                                       (rule "closeFalse" (formula "21"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: anonIn_a.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "allLeft" (formula "24") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet000000000_15" (formula "24") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000000000_16" (formula "24") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "11"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "j_0 = anonIn_e2 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "5") (term "0,0") (ifseqformula "7"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "4") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "5"))
                                 (rule "times_zero_1" (formula "9") (term "0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "allLeft" (formula "22") (inst "t=anonIn_e2"))
                                 (rule "replaceKnownSelect_taclet0_0" (formula "22") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "12"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_literals" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                              (branch "j_0 = anonIn_e2 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "i_0 = anonIn_e2 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "23") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                    (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "false_right" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "19"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0"))
                                    (rule "add_literals" (formula "7") (term "0"))
                                    (rule "leq_literals" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                                 (branch "i_0 = anonIn_e2 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "allLeft" (formula "22") (inst "t=j_0"))
                                    (rule "replaceKnownSelect_taclet000000000_13" (formula "22") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000000000_14" (formula "22") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "22") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = anonIn_e1 TRUE"
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_commuteGeq" (formula "22"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "18"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "allLeft" (formula "20") (inst "t=anonIn_e1"))
                                       (rule "replaceKnownSelect_taclet00_2" (formula "20") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "20") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "allLeft" (formula "22") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet000000000_15" (formula "22") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000000000_16" (formula "22") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "commute_or" (formula "22") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "cut_direct" (formula "22") (term "1,0"))
                                       (branch "CUT: right ≤ -1 + i_0 TRUE"
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1"))
                                          (rule "mul_literals" (formula "12") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "12"))
                                          (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                          (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                       (branch "CUT: right ≤ -1 + i_0 FALSE"
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_leqRight" (formula "28"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "24") (inst "t=anonIn_e1"))
                                          (rule "replaceKnownSelect_taclet00_2" (formula "24") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "24") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "commute_or" (formula "24") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0"))
                                          (rule "cut_direct" (formula "24") (term "1,0"))
                                          (branch "CUT: right ≤ -1 + anonIn_e1 TRUE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "25"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "13"))
                                             (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                             (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                             (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                                             (rule "andLeft" (formula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "17"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0"))
                                             (rule "leq_literals" (formula "17"))
                                             (rule "closeFalse" (formula "17"))
                                          )
                                          (branch "CUT: right ≤ -1 + anonIn_e1 FALSE"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_leqRight" (formula "30"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "23") (inst "t=anonIn_e2"))
                                             (rule "replaceKnownSelect_taclet0_0" (formula "23") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "23") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "cut_direct" (formula "23") (term "1,0"))
                                             (branch "CUT: left ≤ anonIn_e2 TRUE"
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "23"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "33") (ifseqformula "7"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0"))
                                                (rule "qeq_literals" (formula "33") (term "0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "false_right" (formula "33"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "24"))
                                                (rule "times_zero_1" (formula "13") (term "0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
                                                (rule "times_zero_1" (formula "10") (term "0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                (rule "mul_literals" (formula "10") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "allLeft" (formula "24") (inst "t=anonIn_e2"))
                                                (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                (rule "leq_literals" (formula "24") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "25"))
                                                (rule "times_zero_1" (formula "17") (term "0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                                (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "22"))
                                                (rule "andLeft" (formula "23"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0"))
                                                (rule "add_literals" (formula "23") (term "0"))
                                                (rule "leq_literals" (formula "23"))
                                                (rule "closeFalse" (formula "23"))
                                             )
                                             (branch "CUT: left ≤ anonIn_e2 FALSE"
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_leqRight" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "j_0 = anonIn_e1 FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "3"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0"))
                                       (rule "leq_literals" (formula "21"))
                                       (rule "closeFalse" (formula "21"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "20") (inst "sk=i_0"))
                           (rule "orRight" (formula "20"))
                           (rule "orRight" (formula "20"))
                           (rule "allRight" (formula "22") (inst "sk=j_0"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "inEqSimp_leqRight" (formula "20"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "21"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_leqRight" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfStore" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "castDel" (formula "3") (term "1,0"))
                           (rule "eqSymm" (formula "3") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                           (rule "mul_literals" (formula "13") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                           (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_5"))
                           (rule "simplifySelectOfStore" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "castDel" (formula "3") (term "1,0"))
                           (rule "eqSymm" (formula "3") (term "0,0"))
                           (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_6"))
                           (rule "simplifySelectOfStore" (formula "5"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "castDel" (formula "5") (term "1,0"))
                           (rule "eqSymm" (formula "5") (term "0,0"))
                           (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_7"))
                           (rule "simplifySelectOfAnon" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_8"))
                           (rule "simplifySelectOfStore" (formula "5"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "castDel" (formula "5") (term "1,0"))
                           (rule "eqSymm" (formula "5") (term "0,0"))
                           (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_9"))
                           (rule "simplifySelectOfAnon" (formula "5"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "cut_direct" (formula "27") (term "0"))
                           (branch "CUT: anonIn_a.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "allLeft" (formula "25") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet100000000_15" (formula "25") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100000000_16" (formula "25") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "j_0 = anonIn_e2 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "mul_literals" (formula "8") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1"))
                                 (rule "mul_literals" (formula "16") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "4") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "7"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                 (rule "times_zero_1" (formula "8") (term "0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "20"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0"))
                                 (rule "leq_literals" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                              (branch "j_0 = anonIn_e2 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "i_0 = anonIn_e2 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "7"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "false_right" (formula "30"))
                                    (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "19"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "5") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = anonIn_e1 TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "14"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1"))
                                       (rule "mul_literals" (formula "13") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "5"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "j_0 = anonIn_e1 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "allLeft" (formula "22") (inst "t=j_0"))
                                       (rule "replaceKnownSelect_taclet100000000_12" (formula "22") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet100000000_13" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "allLeft" (formula "24") (inst "t=anonIn_e2"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "24") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "24") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "leq_literals" (formula "24") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                       (rule "true_left" (formula "24"))
                                       (rule "allLeft" (formula "24") (inst "t=anonIn_e1"))
                                       (rule "replaceKnownSelect_taclet00_2" (formula "24") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "24") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "commute_or" (formula "24") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "24") (term "0,0"))
                                       (rule "commute_or_2" (formula "24") (term "0"))
                                       (rule "cut_direct" (formula "24") (term "1,0"))
                                       (branch "CUT: right ≤ -1 + anonIn_e1 TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "24"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "6"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0"))
                                          (rule "leq_literals" (formula "18"))
                                          (rule "closeFalse" (formula "18"))
                                       )
                                       (branch "CUT: right ≤ -1 + anonIn_e1 FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_leqRight" (formula "30"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0"))
                                          (rule "leq_literals" (formula "32") (term "0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "false_right" (formula "32"))
                                          (rule "allLeft" (formula "26") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet100000000_12" (formula "26") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000000_13" (formula "26") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (term "0,0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                          (rule "leq_literals" (formula "26") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "26"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                                 (branch "i_0 = anonIn_e2 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "allLeft" (formula "23") (inst "t=j_0"))
                                    (rule "replaceKnownSelect_taclet100000000_12" (formula "23") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100000000_13" (formula "23") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = anonIn_e1 TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "23") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_commuteGeq" (formula "23"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "14"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1"))
                                       (rule "mul_literals" (formula "14") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "18"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "22"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "13"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "17"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0"))
                                       (rule "leq_literals" (formula "18"))
                                       (rule "closeFalse" (formula "18"))
                                    )
                                    (branch "j_0 = anonIn_e1 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "i_0 = anonIn_e1 TRUE"
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "22"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "23") (term "0,2,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "17"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0"))
                                          (rule "leq_literals" (formula "31") (term "0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "false_right" (formula "31"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "5"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0"))
                                          (rule "leq_literals" (formula "30") (term "0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "false_right" (formula "30"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "21"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0"))
                                          (rule "leq_literals" (formula "7"))
                                          (rule "closeFalse" (formula "7"))
                                       )
                                       (branch "i_0 = anonIn_e1 FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "21"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0"))
                                          (rule "qeq_literals" (formula "21"))
                                          (rule "closeFalse" (formula "21"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: anonIn_a.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "allLeft" (formula "25") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet100000000_15" (formula "25") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet100000000_16" (formula "25") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "j_0 = anonIn_e2 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                 (rule "mul_literals" (formula "16") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "4") (term "0,0") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "4") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "7"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "14"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                 (rule "times_zero_1" (formula "8") (term "0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "20"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0"))
                                 (rule "add_literals" (formula "21") (term "0"))
                                 (rule "leq_literals" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                              (branch "j_0 = anonIn_e2 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "i_0 = anonIn_e2 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradEq7" (formula "5") (term "0,0") (ifseqformula "19"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "5") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0"))
                                    (rule "leq_literals" (formula "29") (term "0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "false_right" (formula "29"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = anonIn_e1 TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "14"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1"))
                                       (rule "mul_literals" (formula "13") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "5"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0"))
                                       (rule "add_literals" (formula "17") (term "0"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "j_0 = anonIn_e1 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "allLeft" (formula "23") (inst "t=anonIn_e2"))
                                       (rule "replaceKnownSelect_taclet0_0" (formula "23") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "23") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0,0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                       (rule "true_left" (formula "23"))
                                       (rule "allLeft" (formula "22") (inst "t=j_0"))
                                       (rule "replaceKnownSelect_taclet100000000_12" (formula "22") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet100000000_13" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "allLeft" (formula "24") (inst "t=anonIn_e1"))
                                       (rule "replaceKnownSelect_taclet00_2" (formula "24") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "24") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "commute_or" (formula "24") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "24") (term "0,0"))
                                       (rule "commute_or_2" (formula "24") (term "0"))
                                       (rule "cut_direct" (formula "24") (term "1,0"))
                                       (branch "CUT: right ≤ -1 + anonIn_e1 TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "25"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "19"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "leq_literals" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                       (branch "CUT: right ≤ -1 + anonIn_e1 FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_leqRight" (formula "30"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0"))
                                          (rule "leq_literals" (formula "32") (term "0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "false_right" (formula "32"))
                                          (rule "allLeft" (formula "26") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet100000000_12" (formula "26") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet100000000_13" (formula "26") (term "0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                          (rule "leq_literals" (formula "26") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "26"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                                 (branch "i_0 = anonIn_e2 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "allLeft" (formula "23") (inst "t=j_0"))
                                    (rule "replaceKnownSelect_taclet100000000_12" (formula "23") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100000000_13" (formula "23") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = anonIn_e1 TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "14"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "23") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_commuteGeq" (formula "23"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1"))
                                       (rule "mul_literals" (formula "14") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                       (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "17"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0"))
                                       (rule "leq_literals" (formula "30") (term "0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "false_right" (formula "30"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "22"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "13"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "j_0 = anonIn_e1 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "i_0 = anonIn_e1 TRUE"
                                          (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "31") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "applyEq" (formula "23") (term "0,2,1") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "24") (term "0,2,1,1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "22"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "17"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0"))
                                          (rule "leq_literals" (formula "31") (term "0"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "false_right" (formula "31"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "5"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0"))
                                          (rule "leq_literals" (formula "30") (term "0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "false_right" (formula "30"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "10"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "21"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0"))
                                          (rule "leq_literals" (formula "7"))
                                          (rule "closeFalse" (formula "7"))
                                       )
                                       (branch "i_0 = anonIn_e1 FALSE"
                                          (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "21"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0"))
                                          (rule "qeq_literals" (formula "21"))
                                          (rule "closeFalse" (formula "21"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "20") (inst "sk=f_0"))
                        (rule "allRight" (formula "20") (inst "sk=o_0"))
                        (rule "orRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "pullOutSelect" (formula "23") (term "1") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "replaceKnownSelect_taclet10000000_9" (formula "1") (term "2,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "closeTrue" (formula "25"))
                     )
                  )
                  (branch "Null Reference (a = null)"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (a != null, but e1 Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                     (rule "false_right" (formula "21"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "8") (term "0,0"))
                     (rule "add_zero_left" (formula "8") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "7"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "13"))
                     (rule "andLeft" (formula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                     (rule "add_literals" (formula "12") (term "1,1,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0"))
                     (rule "add_zero_right" (formula "12") (term "0"))
                     (rule "leq_literals" (formula "12"))
                     (rule "closeFalse" (formula "12"))
                  )
               )
               (branch "Null Reference (x_arr = null)"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr != null, but x_3 Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "false_right" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "commute_or" (formula "1"))
                  (rule "cut_direct" (formula "17") (term "0"))
                  (branch "CUT: anonIn_a.<created> = TRUE TRUE"
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "cut_direct" (formula "1") (term "1"))
                     (branch "CUT: anonIn_a.length ≤ anonIn_e2 TRUE"
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "8") (term "0,0"))
                        (rule "add_zero_left" (formula "8") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                        (rule "mul_literals" (formula "10") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "7"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                        (rule "mul_literals" (formula "16") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "mul_literals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "15"))
                        (rule "andLeft" (formula "14"))
                        (rule "inEqSimp_homoInEq1" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,1,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0"))
                        (rule "add_zero_right" (formula "14") (term "0"))
                        (rule "leq_literals" (formula "14"))
                        (rule "closeFalse" (formula "14"))
                     )
                     (branch "CUT: anonIn_a.length ≤ anonIn_e2 FALSE"
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_leqRight" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                        (rule "mul_literals" (formula "11") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "11") (term "0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "closeFalse" (formula "11"))
                     )
                  )
                  (branch "CUT: anonIn_a.<created> = TRUE FALSE"
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "cut_direct" (formula "1") (term "1"))
                     (branch "CUT: anonIn_a.length ≤ anonIn_e2 TRUE"
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "8") (term "0,0"))
                        (rule "add_zero_left" (formula "8") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                        (rule "mul_literals" (formula "10") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "7"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                        (rule "mul_literals" (formula "16") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "mul_literals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "14"))
                        (rule "andLeft" (formula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                        (rule "add_literals" (formula "15") (term "1,1,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0"))
                        (rule "add_literals" (formula "15") (term "0"))
                        (rule "leq_literals" (formula "15"))
                        (rule "closeFalse" (formula "15"))
                     )
                     (branch "CUT: anonIn_a.length ≤ anonIn_e2 FALSE"
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_leqRight" (formula "20"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                        (rule "mul_literals" (formula "11") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "11"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "closeFalse" (formula "5"))
                     )
                  )
               )
            )
            (branch "Null Reference (a = null)"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (a != null, but e1 Out of Bounds!)"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "false_right" (formula "21"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
               (rule "mul_literals" (formula "9") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
               (rule "times_zero_1" (formula "8") (term "0,0"))
               (rule "add_zero_left" (formula "8") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
               (rule "leq_literals" (formula "8") (term "0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "7"))
               (rule "polySimp_rightDist" (formula "15") (term "0,0"))
               (rule "mul_literals" (formula "15") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "15"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
               (rule "polySimp_elimOne" (formula "15") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
               (rule "polySimp_rightDist" (formula "14") (term "0,0"))
               (rule "mul_literals" (formula "14") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
               (rule "polySimp_elimOne" (formula "14") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polySimp_elimOne" (formula "13") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "12"))
               (rule "andLeft" (formula "13"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0"))
               (rule "polySimp_addComm1" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "times_zero_1" (formula "13") (term "1,0"))
               (rule "add_zero_right" (formula "13") (term "0"))
               (rule "leq_literals" (formula "13"))
               (rule "closeFalse" (formula "13"))
            )
         )
         (branch "Null Reference (a = null)"
            (rule "false_right" (formula "21"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (a != null, but e2 Out of Bounds!)"
            (builtin "One Step Simplification" (formula "21"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "false_right" (formula "21"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "commute_or" (formula "1"))
            (rule "cut_direct" (formula "17") (term "0"))
            (branch "CUT: anonIn_a.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "cut_direct" (formula "1") (term "1"))
               (branch "CUT: anonIn_a.length ≤ anonIn_e2 TRUE"
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "8") (term "0,0"))
                  (rule "add_zero_left" (formula "8") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "7"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "15"))
                  (rule "andLeft" (formula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                  (rule "add_literals" (formula "14") (term "1,1,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0"))
                  (rule "add_zero_right" (formula "14") (term "0"))
                  (rule "leq_literals" (formula "14"))
                  (rule "closeFalse" (formula "14"))
               )
               (branch "CUT: anonIn_a.length ≤ anonIn_e2 FALSE"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_leqRight" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "closeFalse" (formula "5"))
               )
            )
            (branch "CUT: anonIn_a.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "17"))
               (rule "cut_direct" (formula "1") (term "1"))
               (branch "CUT: anonIn_a.length ≤ anonIn_e2 TRUE"
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "8") (term "0,0"))
                  (rule "add_zero_left" (formula "8") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "7"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "14"))
                  (rule "andLeft" (formula "15"))
                  (rule "inEqSimp_homoInEq1" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                  (rule "add_literals" (formula "15") (term "1,1,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0"))
                  (rule "add_literals" (formula "15") (term "0"))
                  (rule "leq_literals" (formula "15"))
                  (rule "closeFalse" (formula "15"))
               )
               (branch "CUT: anonIn_a.length ≤ anonIn_e2 FALSE"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_leqRight" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "mul_literals" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "polySimp_elimOne" (formula "11") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "closeFalse" (formula "5"))
               )
            )
         )
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "18"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "tryEmpty" (formula "20") (term "1"))
         (rule "blockEmptyLabel" (formula "20") (term "1"))
         (rule "blockEmpty" (formula "20") (term "1"))
         (rule "methodCallEmpty" (formula "20") (term "1"))
         (rule "emptyModality" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "0,0"))
         (rule "replaceKnownSelect_taclet00_2" (formula "20") (term "1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "20") (term "1,0"))
         (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "andRight" (formula "20"))
         (branch "Case 1"
            (rule "allRight" (formula "20") (inst "sk=i_0"))
            (rule "orRight" (formula "20"))
            (rule "orRight" (formula "20"))
            (rule "allRight" (formula "22") (inst "sk=j_0"))
            (rule "orRight" (formula "22"))
            (rule "orRight" (formula "22"))
            (rule "inEqSimp_leqRight" (formula "20"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "21"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "4") (term "0,0"))
            (rule "mul_literals" (formula "4") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
            (rule "mul_literals" (formula "5") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
            (rule "polySimp_elimOne" (formula "5") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
            (rule "times_zero_1" (formula "11") (term "0,0"))
            (rule "add_zero_left" (formula "11") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
            (rule "times_zero_1" (formula "7") (term "0,0"))
            (rule "add_zero_left" (formula "7") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "7"))
            (rule "leq_literals" (formula "11") (term "0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "cut_direct" (formula "24") (term "0"))
            (branch "CUT: anonIn_a.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "allLeft" (formula "21") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet0100_6" (formula "21") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0100_7" (formula "21") (term "1,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0,0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "21") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "allLeft" (formula "21") (inst "t=j_0"))
               (rule "replaceKnownSelect_taclet0100_4" (formula "21") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0100_5" (formula "21") (term "0,1"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
               (rule "inEqSimp_contradInEq0" (formula "21") (term "0,0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "21") (term "0,0,1"))
               (rule "leq_literals" (formula "21") (term "0,1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "21"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: anonIn_a.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "24"))
               (rule "allLeft" (formula "21") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet0100_6" (formula "21") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0100_7" (formula "21") (term "1,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0,0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "21") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "allLeft" (formula "21") (inst "t=j_0"))
               (rule "replaceKnownSelect_taclet0100_4" (formula "21") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0100_5" (formula "21") (term "0,1"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
               (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "21") (term "0,0,1"))
               (rule "leq_literals" (formula "21") (term "0,1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "21") (term "0,0,1"))
               (rule "leq_literals" (formula "21") (term "0,1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "21"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_literals" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "20") (inst "sk=i_0"))
            (rule "orRight" (formula "20"))
            (rule "orRight" (formula "20"))
            (rule "allRight" (formula "22") (inst "sk=j_0"))
            (rule "orRight" (formula "22"))
            (rule "orRight" (formula "22"))
            (rule "inEqSimp_geqRight" (formula "21"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "21"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
            (rule "polySimp_elimOne" (formula "5") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1"))
            (rule "polySimp_rightDist" (formula "11") (term "1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
            (rule "mul_literals" (formula "11") (term "0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1"))
            (rule "polySimp_rightDist" (formula "5") (term "1"))
            (rule "mul_literals" (formula "5") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "cut_direct" (formula "23") (term "0"))
            (branch "CUT: anonIn_a.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "allLeft" (formula "21") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet1100_6" (formula "21") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1100_7" (formula "21") (term "1,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "4"))
               (rule "qeq_literals" (formula "21") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "allLeft" (formula "21") (inst "t=j_0"))
               (rule "replaceKnownSelect_taclet1100_4" (formula "21") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1100_5" (formula "21") (term "0,1"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
               (rule "leq_literals" (formula "21") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "21") (term "0,0,1"))
               (rule "leq_literals" (formula "21") (term "0,1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "2"))
               (rule "andLeft" (formula "21"))
               (rule "inEqSimp_homoInEq1" (formula "21"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "times_zero_1" (formula "21") (term "1,0"))
               (rule "add_zero_right" (formula "21") (term "0"))
               (rule "leq_literals" (formula "21"))
               (rule "closeFalse" (formula "21"))
            )
            (branch "CUT: anonIn_a.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "23"))
               (rule "allLeft" (formula "21") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet1100_6" (formula "21") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1100_7" (formula "21") (term "1,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "4"))
               (rule "qeq_literals" (formula "21") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "allLeft" (formula "21") (inst "t=j_0"))
               (rule "replaceKnownSelect_taclet1100_4" (formula "21") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1100_5" (formula "21") (term "0,1"))
               (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0"))
               (rule "inEqSimp_contradInEq0" (formula "21") (term "0,0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
               (rule "leq_literals" (formula "21") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
               (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "21") (term "0,0,1"))
               (rule "leq_literals" (formula "21") (term "0,1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "1"))
               (rule "andLeft" (formula "21"))
               (rule "inEqSimp_homoInEq1" (formula "21"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
               (rule "add_literals" (formula "21") (term "1,1,0"))
               (rule "times_zero_1" (formula "21") (term "1,0"))
               (rule "add_literals" (formula "21") (term "0"))
               (rule "leq_literals" (formula "21"))
               (rule "closeFalse" (formula "21"))
            )
         )
      )
   )
   (branch "Null Reference (a = null)"
      (builtin "One Step Simplification" (formula "20"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Index Out of Bounds (a != null, but e1 Out of Bounds!)"
      (builtin "One Step Simplification" (formula "20"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
      (rule "false_right" (formula "20"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "1") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
      (rule "qeq_literals" (formula "1") (term "0,1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
      (rule "polySimp_rightDist" (formula "8") (term "0,0"))
      (rule "mul_literals" (formula "8") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "polySimp_elimOne" (formula "8") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
      (rule "times_zero_1" (formula "7") (term "0,0"))
      (rule "add_zero_left" (formula "7") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
      (rule "leq_literals" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
      (rule "polySimp_rightDist" (formula "6") (term "0,0"))
      (rule "mul_literals" (formula "6") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "6") (term "0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
      (rule "add_literals" (formula "6") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "6"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
      (rule "polySimp_elimOne" (formula "6") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "6"))
      (rule "polySimp_rightDist" (formula "14") (term "0,0"))
      (rule "mul_literals" (formula "14") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "14"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
      (rule "polySimp_elimOne" (formula "14") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
      (rule "polySimp_rightDist" (formula "13") (term "0,0"))
      (rule "mul_literals" (formula "13") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
      (rule "polySimp_elimOne" (formula "13") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "13"))
      (rule "polySimp_rightDist" (formula "12") (term "0,0"))
      (rule "mul_literals" (formula "12") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "12"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
      (rule "polySimp_elimOne" (formula "12") (term "0"))
      (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "12"))
      (rule "andLeft" (formula "11"))
      (rule "inEqSimp_homoInEq1" (formula "11"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
      (rule "add_literals" (formula "11") (term "1,1,0"))
      (rule "times_zero_1" (formula "11") (term "1,0"))
      (rule "add_zero_right" (formula "11") (term "0"))
      (rule "leq_literals" (formula "11"))
      (rule "closeFalse" (formula "11"))
   )
)
(branch "Null Reference (a = null)"
   (builtin "One Step Simplification" (formula "20"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
   (rule "closeFalse" (formula "1"))
)
(branch "Index Out of Bounds (a != null, but e2 Out of Bounds!)"
   (rule "false_right" (formula "20"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "1") (term "0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "1,1"))
   (rule "commute_or" (formula "1"))
   (rule "cut_direct" (formula "16") (term "0"))
   (branch "CUT: anonIn_a.<created> = TRUE TRUE"
      (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "cut_direct" (formula "1") (term "1"))
      (branch "CUT: anonIn_a.length ≤ anonIn_e2 TRUE"
         (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
         (rule "mul_literals" (formula "8") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
         (rule "times_zero_1" (formula "7") (term "0,0"))
         (rule "add_zero_left" (formula "7") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
         (rule "polySimp_rightDist" (formula "6") (term "0,0"))
         (rule "mul_literals" (formula "6") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
         (rule "add_literals" (formula "6") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "6"))
         (rule "polySimp_rightDist" (formula "15") (term "0,0"))
         (rule "mul_literals" (formula "15") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
         (rule "polySimp_elimOne" (formula "15") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "14"))
         (rule "andLeft" (formula "13"))
         (rule "inEqSimp_homoInEq1" (formula "13"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "1,1,0"))
         (rule "times_zero_1" (formula "13") (term "1,0"))
         (rule "add_zero_right" (formula "13") (term "0"))
         (rule "leq_literals" (formula "13"))
         (rule "closeFalse" (formula "13"))
      )
      (branch "CUT: anonIn_a.length ≤ anonIn_e2 FALSE"
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "19"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
         (rule "polySimp_rightDist" (formula "10") (term "0,0"))
         (rule "mul_literals" (formula "10") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "4"))
         (rule "qeq_literals" (formula "10") (term "0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "closeFalse" (formula "10"))
      )
   )
   (branch "CUT: anonIn_a.<created> = TRUE FALSE"
      (builtin "One Step Simplification" (formula "16"))
      (rule "cut_direct" (formula "1") (term "1"))
      (branch "CUT: anonIn_a.length ≤ anonIn_e2 TRUE"
         (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
         (rule "mul_literals" (formula "8") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
         (rule "times_zero_1" (formula "7") (term "0,0"))
         (rule "add_zero_left" (formula "7") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
         (rule "polySimp_rightDist" (formula "6") (term "0,0"))
         (rule "mul_literals" (formula "6") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
         (rule "add_literals" (formula "6") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "6"))
         (rule "polySimp_rightDist" (formula "15") (term "0,0"))
         (rule "mul_literals" (formula "15") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
         (rule "polySimp_elimOne" (formula "15") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "14"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0"))
         (rule "polySimp_elimOne" (formula "14") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "14"))
         (rule "andLeft" (formula "13"))
         (rule "inEqSimp_homoInEq1" (formula "13"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
         (rule "add_literals" (formula "13") (term "1,1,0"))
         (rule "times_zero_1" (formula "13") (term "1,0"))
         (rule "add_literals" (formula "13") (term "0"))
         (rule "leq_literals" (formula "13"))
         (rule "closeFalse" (formula "13"))
      )
      (branch "CUT: anonIn_a.length ≤ anonIn_e2 FALSE"
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "19"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
         (rule "polySimp_rightDist" (formula "10") (term "0,0"))
         (rule "mul_literals" (formula "10") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "4"))
         (rule "qeq_literals" (formula "10") (term "0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "closeFalse" (formula "10"))
      )
   )
)
)

}
