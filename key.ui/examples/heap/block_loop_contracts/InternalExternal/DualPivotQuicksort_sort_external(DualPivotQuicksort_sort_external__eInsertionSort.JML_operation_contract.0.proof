\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Mar 30 18:27:51 CEST 2018
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_EXTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=100000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Fri Mar 30 18:27:51 CEST 2018
name=DualPivotQuicksort_sort_external[DualPivotQuicksort_sort_external\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML normal_behavior operation contract.0
contract=DualPivotQuicksort_sort_external[DualPivotQuicksort_sort_external\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "74942")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "a,left,right,e1,e2,e3,e4,e5,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "eqSymm" (formula "16") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "15"))
(builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "4"))
(rule "mul_literals" (formula "4") (term "1,0,0"))
(rule "add_literals" (formula "4") (term "0,0"))
(rule "inEqSimp_ltToLeq" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "7") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "12"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "12") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
(rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "11"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "11") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "10"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "10") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "9"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "9") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "assignment" (formula "16") (term "1"))
(builtin "One Step Simplification" (formula "16"))
(rule "inEqSimp_sepPosMonomial1" (formula "4"))
(rule "mul_literals" (formula "4") (term "1"))
(rule "inEqSimp_sepNegMonomial0" (formula "7"))
(rule "polySimp_mulLiterals" (formula "7") (term "0"))
(rule "polySimp_elimOne" (formula "7") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
(rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "12"))
(rule "polySimp_mulLiterals" (formula "12") (term "0"))
(rule "polySimp_elimOne" (formula "12") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "14") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "11"))
(rule "polySimp_mulLiterals" (formula "11") (term "0"))
(rule "polySimp_elimOne" (formula "11") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1"))
(rule "polySimp_rightDist" (formula "6") (term "1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
(rule "mul_literals" (formula "6") (term "0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "10"))
(rule "polySimp_mulLiterals" (formula "10") (term "0"))
(rule "polySimp_elimOne" (formula "10") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "9"))
(rule "polySimp_mulLiterals" (formula "9") (term "0"))
(rule "polySimp_elimOne" (formula "9") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8"))
(rule "polySimp_mulLiterals" (formula "8") (term "0"))
(rule "polySimp_elimOne" (formula "8") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "elementOfArrayRange" (formula "16") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
(rule "times_zero_1" (formula "5") (term "0,0"))
(rule "add_zero_left" (formula "5") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "nnf_imp2or" (formula "14") (term "0"))
(rule "nnf_imp2or" (formula "15") (term "0"))
(rule "nnf_notAnd" (formula "14") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
(rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
(rule "mul_literals" (formula "14") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
(rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "15") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
(rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
(rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
(rule "mul_literals" (formula "15") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "14") (term "0,1,0"))
(rule "nnf_imp2or" (formula "15") (term "0,1,0"))
(rule "nnf_imp2or" (formula "17") (term "0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "17") (term "0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
(rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
(rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
(rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0"))
(rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,0"))
(rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,0"))
(rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,0"))
(rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0"))
(rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
(rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0"))
(rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0"))
(rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "17") (term "0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "17") (term "0,1,0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "17") (term "0,1,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "17") (term "0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "17") (term "0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "17") (term "0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,1,0,1,1,0,0,0,1"))
(rule "arrayLengthIsAShort" (formula "4") (term "0"))
(builtin "One Step Simplification" (formula "4"))
(rule "true_left" (formula "4"))
(rule "arrayLengthNotNegative" (formula "4") (term "0"))
(rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
(rule "leq_literals" (formula "4") (term "0"))
(builtin "One Step Simplification" (formula "4"))
(rule "true_left" (formula "4"))
(rule "all_pull_out3" (formula "14") (term "0"))
(rule "shift_paren_or" (formula "14") (term "0,0"))
(rule "shift_paren_or" (formula "14") (term "0,0,0"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_eInsertionSort,savedHeapBefore_eInsertionSort,_aBefore_eInsertionSort,_e1Before_eInsertionSort,_e2Before_eInsertionSort,_e3Before_eInsertionSort,_e4Before_eInsertionSort,_e5Before_eInsertionSort"))
(builtin "One Step Simplification" (formula "17"))
(builtin "Block Contract (External)" (formula "17") (newnames "anonOut_heap,exc#33,heap_Before_BLOCK,savedHeap_Before_BLOCK"))
(branch "Precondition"
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "3")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "2")))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0,1,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0,1,1,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0,1,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,0,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
   (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0,0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0,1,1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0,1"))
   (rule "replace_known_left" (formula "17") (term "1,0,0,0,1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0,1,0,1,1,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0,1,0,1,1,1"))
   (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,1,0,1,1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,1"))
   (rule "replace_known_left" (formula "17") (term "1,0,0,1") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1"))
   (rule "replace_known_left" (formula "17") (term "1,0,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,1,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,1,1"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,1,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,0,1,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,0,1,1"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,0,1,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,0,1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
   (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1"))
   (rule "replace_known_left" (formula "17") (term "0,0,0,1") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1"))
   (rule "replace_known_left" (formula "17") (term "1,0,1") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
   (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
   (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,1,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,1,1"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,1,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,1,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
   (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "nnf_imp2or" (formula "17") (term "0,0"))
   (rule "nnf_imp2or" (formula "17") (term "0,1"))
   (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0"))
   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0"))
   (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "17") (term "0,0,1"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1"))
   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1"))
   (rule "mul_literals" (formula "17") (term "1,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
   (rule "nnf_imp2or" (formula "17") (term "0,1,0,0"))
   (rule "nnf_imp2or" (formula "17") (term "0,1,0,1"))
   (rule "nnf_notAnd" (formula "17") (term "0,0,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0"))
   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0,0"))
   (rule "nnf_notAnd" (formula "17") (term "0,0,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0,1"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0,1"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1,0,1"))
   (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,0,1"))
   (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0,1"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0,1"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0,1"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0,1"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,1"))
   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,1"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0,1"))
   (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "15"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "allRight" (formula "17") (inst "sk=i_0"))
   (rule "orRight" (formula "17"))
   (rule "orRight" (formula "17"))
   (rule "allRight" (formula "19") (inst "sk=j_0"))
   (rule "orRight" (formula "19"))
   (rule "orRight" (formula "19"))
   (rule "inEqSimp_leqRight" (formula "17"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "inEqSimp_geqRight" (formula "18"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_geqRight" (formula "21"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "inEqSimp_geqRight" (formula "21"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_leqRight" (formula "21"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1"))
   (rule "polySimp_rightDist" (formula "3") (term "1"))
   (rule "mul_literals" (formula "3") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "polySimp_elimOne" (formula "2") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
   (rule "mul_literals" (formula "4") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1"))
   (rule "polySimp_rightDist" (formula "4") (term "1"))
   (rule "mul_literals" (formula "4") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
   (rule "times_zero_1" (formula "12") (term "0,0"))
   (rule "add_zero_left" (formula "12") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
   (rule "mul_literals" (formula "5") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "5") (term "0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
   (rule "add_literals" (formula "5") (term "0,0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
   (rule "polySimp_elimOne" (formula "5") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
   (rule "times_zero_1" (formula "7") (term "0,0"))
   (rule "add_zero_left" (formula "7") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
   (rule "mul_literals" (formula "7") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "7"))
   (rule "leq_literals" (formula "13") (term "0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "all_pull_out3" (formula "23") (term "0"))
   (rule "allLeft" (formula "22") (inst "t=i_0"))
   (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
   (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0,0") (ifseqformula "8"))
   (rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0") (ifseqformula "6"))
   (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0,0"))
   (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0,0"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0"))
   (rule "leq_literals" (formula "22") (term "0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "shift_paren_or" (formula "24") (term "0,0"))
   (rule "shift_paren_or" (formula "24") (term "0,0,0"))
   (rule "allLeft" (formula "22") (inst "t=j_0"))
   (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
   (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
   (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
   (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "3"))
   (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
   (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
   (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "22") (term "0,0,1"))
   (rule "leq_literals" (formula "22") (term "0,1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "1"))
   (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
   (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "22") (term "0,0,0"))
   (rule "leq_literals" (formula "22") (term "0,0"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "22"))
   (rule "andLeft" (formula "2"))
   (rule "inEqSimp_homoInEq1" (formula "2"))
   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
   (rule "add_literals" (formula "2") (term "1,1,0"))
   (rule "times_zero_1" (formula "2") (term "1,0"))
   (rule "add_zero_right" (formula "2") (term "0"))
   (rule "leq_literals" (formula "2"))
   (rule "closeFalse" (formula "2"))
)
(branch "Usage"
   (builtin "One Step Simplification" (formula "18"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "17"))
   (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "19"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "true_left" (formula "21"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
   (rule "pullOutSelect" (formula "16") (term "1") (inst "selectSK=arr_0"))
   (rule "simplifySelectOfAnon" (formula "16"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "16") (term "0,0"))
   (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "eqSymm" (formula "16") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "16") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "16"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_1"))
   (rule "simplifySelectOfAnon" (formula "16"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")))
   (rule "inEqSimp_commuteGeq" (formula "17"))
   (rule "elementOfUnion" (formula "16") (term "0,0"))
   (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "16"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_imp2or" (formula "17") (term "0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "17") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
   (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
   (rule "mul_literals" (formula "17") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
   (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
   (rule "all_pull_out3" (formula "15") (term "0"))
   (rule "shift_paren_or" (formula "15") (term "0,0"))
   (rule "shift_paren_or" (formula "15") (term "0,0,0"))
   (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "22") (term "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "replace_known_left" (formula "22") (term "0,0,1,0") (ifseqformula "19"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "all_pull_out3" (formula "18") (term "0"))
   (rule "shift_paren_or" (formula "18") (term "0,0"))
   (rule "shift_paren_or" (formula "18") (term "0,0,0"))
   (rule "all_pull_out3" (formula "17") (term "0"))
   (rule "shift_paren_or" (formula "17") (term "0,0"))
   (rule "shift_paren_or" (formula "17") (term "0,0,0"))
   (rule "ifSplit" (formula "22"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "22") (term "1"))
      (builtin "Block Contract (External)" (formula "22") (newnames "anonOut_heap_0,exc#27,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0"))
      (branch "Precondition"
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")) (ifInst ""  (formula "21")) (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
         (rule "wellFormedAnon" (formula "22") (term "1"))
         (rule "replaceKnownSelect_taclet1_0" (formula "22") (term "0,1,1,1,1,0"))
         (rule "replaceKnownSelect_taclet1_2" (formula "22") (term "1,1,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "22") (term "0,1,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "22") (term "1,1,1,1,1,0"))
         (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0,0,1,1,1"))
         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,0,0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,1,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,1,1"))
         (rule "replace_known_left" (formula "22") (term "1,1,1,1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,1,0,1,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0"))
         (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
         (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,1"))
         (rule "replace_known_left" (formula "22") (term "1,0,0,0,1") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1"))
         (rule "replace_known_left" (formula "22") (term "1,0,0,1") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1"))
         (rule "replace_known_left" (formula "22") (term "1,0,1") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,1,0,1,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
         (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1"))
         (rule "replace_known_left" (formula "22") (term "1,0,0,1") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,0,1,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,0,1,1"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1,1,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1,1,1"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
         (rule "replace_known_left" (formula "22") (term "0,0,1") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
         (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,1"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0"))
         (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "nnf_imp2or" (formula "22") (term "0,0"))
         (rule "nnf_imp2or" (formula "22") (term "0,1"))
         (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "22") (term "0,0,1"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
         (rule "nnf_imp2or" (formula "22") (term "0,1,0,0"))
         (rule "nnf_imp2or" (formula "22") (term "0,1,0,1"))
         (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0,0"))
         (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0,1"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,0,1"))
         (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,1,0,1"))
         (rule "add_zero_left" (formula "22") (term "0,0,0,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0,1"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0,1"))
         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0,1"))
         (rule "andRight" (formula "22"))
         (branch
            (rule "allRight" (formula "22") (inst "sk=i_0"))
            (rule "orRight" (formula "22"))
            (rule "orRight" (formula "22"))
            (rule "allRight" (formula "24") (inst "sk=j_0"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "inEqSimp_geqRight" (formula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "23"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "26"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "25"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "26"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
            (rule "polySimp_elimOne" (formula "5") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")) (ifInst ""  (formula "8")))
            (rule "inEqSimp_homoInEq0" (formula "4"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "elementOfUnion" (formula "3") (term "0,0"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
            (rule "mul_literals" (formula "6") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1"))
            (rule "polySimp_rightDist" (formula "6") (term "1"))
            (rule "mul_literals" (formula "6") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "14"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "polySimp_elimOne" (formula "7") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
            (rule "times_zero_1" (formula "14") (term "0,0"))
            (rule "add_zero_left" (formula "14") (term "0"))
            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
            (rule "simplifySelectOfAnon" (formula "4"))
            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "31")) (ifInst ""  (formula "11")))
            (rule "elementOfUnion" (formula "4") (term "0,0"))
            (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "inEqSimp_contradEq3" (formula "4") (term "0,0,0") (ifseqformula "8"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
            (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
            (rule "times_zero_1" (formula "6") (term "0,0"))
            (rule "add_zero_left" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "6"))
            (rule "leq_literals" (formula "15") (term "0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "ifthenelse_split" (formula "3") (term "0"))
            (branch "j_0 = e1 ∨ j_0 = e2 TRUE"
               (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "inEqSimp_homoInEq1" (formula "5"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
               (rule "allLeft" (formula "24") (inst "t=i_0"))
               (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "24") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "allLeft" (formula "28") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet0011_5" (formula "28") (term "1,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "28") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "ifthenelse_split" (formula "4") (term "0"))
               (branch "i_0 = e2 TRUE"
                  (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                  (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "4"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                  (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "4"))
                  (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                  (rule "inEqSimp_contradEq7" (formula "3") (term "1") (ifseqformula "8"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "3") (term "0,0,1"))
                  (rule "leq_literals" (formula "3") (term "0,1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "8"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                  (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq0" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                  (rule "mul_literals" (formula "8") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "19"))
                  (rule "andLeft" (formula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0"))
                  (rule "add_zero_right" (formula "9") (term "0"))
                  (rule "leq_literals" (formula "9"))
                  (rule "closeFalse" (formula "9"))
               )
               (branch "i_0 = e2 FALSE"
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                  (rule "applyEqReverse" (formula "28") (term "1,1,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "allLeft" (formula "23") (inst "t=j_0"))
                  (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "23") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "23") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0"))
                  (rule "leq_literals" (formula "23") (term "0,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "allLeft" (formula "28") (inst "t=j_0"))
                  (rule "replaceKnownSelect_taclet0011_4" (formula "28") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00011_6" (formula "28") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1"))
                  (rule "leq_literals" (formula "28") (term "0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,0"))
                  (rule "leq_literals" (formula "28") (term "0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "j_0 = e1 ∨ j_0 = e2 FALSE"
               (rule "orRight" (formula "31"))
               (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
               (rule "allLeft" (formula "26") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet0011_5" (formula "26") (term "1,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "6"))
               (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0"))
               (rule "leq_literals" (formula "26") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "allLeft" (formula "23") (inst "t=i_0"))
               (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0,0") (ifseqformula "6"))
               (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0"))
               (rule "leq_literals" (formula "23") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "ifthenelse_split" (formula "3") (term "0"))
               (branch "i_0 = e2 TRUE"
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                  (rule "applyEqReverse" (formula "28") (term "1,1,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                  (rule "applyEq" (formula "23") (term "0,2,1,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "3"))
                  (rule "applyEq" (formula "27") (term "0,2,1,1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "3"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "7"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                  (rule "add_literals" (formula "33") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0,0"))
                  (rule "add_zero_right" (formula "33") (term "0,0"))
                  (rule "leq_literals" (formula "33") (term "0"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "false_right" (formula "33"))
                  (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "18"))
                  (rule "andLeft" (formula "8"))
                  (rule "inEqSimp_homoInEq1" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "1,1,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0"))
                  (rule "add_zero_right" (formula "8") (term "0"))
                  (rule "leq_literals" (formula "8"))
                  (rule "closeFalse" (formula "8"))
               )
               (branch "i_0 = e2 FALSE"
                  (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "27") (term "1,1,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "allLeft" (formula "22") (inst "t=j_0"))
                  (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "22") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0"))
                  (rule "leq_literals" (formula "22") (term "0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "3"))
                  (rule "andLeft" (formula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0"))
                  (rule "add_literals" (formula "22") (term "0"))
                  (rule "leq_literals" (formula "22"))
                  (rule "closeFalse" (formula "22"))
               )
            )
         )
         (branch
            (rule "allRight" (formula "22") (inst "sk=i_0"))
            (rule "orRight" (formula "22"))
            (rule "orRight" (formula "22"))
            (rule "allRight" (formula "24") (inst "sk=j_0"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "inEqSimp_leqRight" (formula "22"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "23"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "26"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "25"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "26"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")) (ifInst ""  (formula "8")))
            (rule "inEqSimp_homoInEq0" (formula "4"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "elementOfUnion" (formula "3") (term "0,0"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "19") (term "0,0"))
            (rule "mul_literals" (formula "19") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1"))
            (rule "polySimp_rightDist" (formula "19") (term "1"))
            (rule "mul_literals" (formula "19") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1"))
            (rule "polySimp_rightDist" (formula "5") (term "1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
            (rule "mul_literals" (formula "5") (term "0,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
            (rule "simplifySelectOfAnon" (formula "4"))
            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "30")) (ifInst ""  (formula "10")))
            (rule "elementOfUnion" (formula "4") (term "0,0"))
            (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "ifthenelse_split" (formula "3") (term "0"))
            (branch "j_0 = e1 ∨ j_0 = e2 TRUE"
               (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "inEqSimp_homoInEq1" (formula "5"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1"))
               (rule "polySimp_rightDist" (formula "5") (term "1"))
               (rule "mul_literals" (formula "5") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
               (rule "allLeft" (formula "24") (inst "t=i_0"))
               (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "7"))
               (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
               (rule "leq_literals" (formula "24") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "allLeft" (formula "28") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet1011_5" (formula "28") (term "1,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "7"))
               (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
               (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "ifthenelse_split" (formula "4") (term "0"))
               (branch "i_0 = e1 ∨ i_0 = e2 TRUE"
                  (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "5"))
                  (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "allLeft" (formula "24") (inst "t=j_0"))
                  (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "24") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "24") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,0"))
                  (rule "leq_literals" (formula "24") (term "0,0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "allLeft" (formula "29") (inst "t=j_0"))
                  (rule "replaceKnownSelect_taclet1011_4" (formula "29") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet01011_6" (formula "29") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                  (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "29") (term "0,0,1"))
                  (rule "leq_literals" (formula "29") (term "0,1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "29") (term "0,0,0"))
                  (rule "leq_literals" (formula "29") (term "0,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "29"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "i_0 = e1 ∨ i_0 = e2 FALSE"
                  (rule "orRight" (formula "32"))
                  (rule "applyEqReverse" (formula "28") (term "1,1,0") (ifseqformula "4"))
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "allLeft" (formula "23") (inst "t=j_0"))
                  (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "23") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0"))
                  (rule "leq_literals" (formula "23") (term "0,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "allLeft" (formula "28") (inst "t=j_0"))
                  (rule "replaceKnownSelect_taclet1011_4" (formula "28") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet01011_6" (formula "28") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "28") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1"))
                  (rule "leq_literals" (formula "28") (term "0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "28"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch "j_0 = e1 ∨ j_0 = e2 FALSE"
               (rule "orRight" (formula "30"))
               (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
               (rule "allLeft" (formula "23") (inst "t=i_0"))
               (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0,0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "23") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0"))
               (rule "leq_literals" (formula "23") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "allLeft" (formula "27") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet1011_5" (formula "27") (term "1,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0,0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "27") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0"))
               (rule "leq_literals" (formula "27") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "ifthenelse_split" (formula "3") (term "0"))
               (branch "i_0 = e1 ∨ i_0 = e2 TRUE"
                  (rule "applyEqReverse" (formula "28") (term "1,1,0") (ifseqformula "4"))
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "allLeft" (formula "23") (inst "t=j_0"))
                  (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "23") (term "0,0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "23") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0"))
                  (rule "leq_literals" (formula "23") (term "0,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "allLeft" (formula "28") (inst "t=j_0"))
                  (rule "replaceKnownSelect_taclet1011_4" (formula "28") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet11011_6" (formula "28") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1"))
                  (rule "leq_literals" (formula "28") (term "0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1"))
                  (rule "leq_literals" (formula "28") (term "0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "28"))
                  (rule "andLeft" (formula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "leq_literals" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "i_0 = e1 ∨ i_0 = e2 FALSE"
                  (rule "orRight" (formula "31"))
                  (rule "applyEqReverse" (formula "27") (term "1,1,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "allLeft" (formula "22") (inst "t=j_0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "22") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "22") (term "0,0,1"))
                  (rule "leq_literals" (formula "22") (term "0,1"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "2"))
                  (rule "andLeft" (formula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                  (rule "add_literals" (formula "22") (term "1,1,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0"))
                  (rule "add_zero_right" (formula "22") (term "0"))
                  (rule "leq_literals" (formula "22"))
                  (rule "closeFalse" (formula "22"))
               )
            )
         )
      )
      (branch "Usage"
         (builtin "One Step Simplification" (formula "23"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "21"))
         (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
         (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=arr_2"))
         (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
         (rule "simplifySelectOfAnon" (formula "22"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
         (rule "replaceKnownSelect_taclet1_2" (formula "22") (term "2,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "22") (term "2,0"))
         (rule "inEqSimp_commuteGeq" (formula "21"))
         (rule "elementOfUnion" (formula "22") (term "0,0"))
         (rule "elementOfSingleton" (formula "22") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "eqSymm" (formula "22") (term "1,0,0"))
         (rule "inEqSimp_contradEq7" (formula "22") (term "1,0,0") (ifseqformula "10"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
         (rule "leq_literals" (formula "22") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "elementOfUnion" (formula "22") (term "0,0"))
         (rule "elementOfSingleton" (formula "22") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
         (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "22"))
         (rule "hideAuxiliaryEq" (formula "22"))
         (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_3"))
         (rule "simplifySelectOfAnon" (formula "22"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
         (rule "inEqSimp_commuteGeq" (formula "23"))
         (rule "elementOfUnion" (formula "22") (term "0,0"))
         (rule "elementOfSingleton" (formula "22") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "22"))
         (rule "hideAuxiliaryEq" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_4"))
         (rule "simplifySelectOfAnon" (formula "21"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
         (rule "replaceKnownSelect_taclet1_0" (formula "21") (term "2,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "21") (term "2,0"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "elementOfUnion" (formula "21") (term "0,0"))
         (rule "elementOfSingleton" (formula "21") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "eqSymm" (formula "21") (term "1,0,0"))
         (rule "elementOfUnion" (formula "21") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "21") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "21"))
         (rule "hideAuxiliaryEq" (formula "21"))
         (rule "nnf_imp2or" (formula "24") (term "0"))
         (rule "nnf_imp2or" (formula "23") (term "0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
         (rule "nnf_imp2or" (formula "23") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0"))
         (rule "ifUnfold" (formula "28") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_1"))
         (rule "inequality_comparison_simple" (formula "28") (term "1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "replace_known_left" (formula "28") (term "0,0,1,0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "all_pull_out3" (formula "24") (term "0"))
         (rule "shift_paren_or" (formula "24") (term "0,0"))
         (rule "shift_paren_or" (formula "24") (term "0,0,0"))
         (rule "all_pull_out3" (formula "23") (term "0"))
         (rule "shift_paren_or" (formula "23") (term "0,0"))
         (rule "shift_paren_or" (formula "23") (term "0,0,0"))
         (rule "ifSplit" (formula "28"))
         (branch "if x_1 true"
            (builtin "One Step Simplification" (formula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_1 false"
            (builtin "One Step Simplification" (formula "29"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "blockEmpty" (formula "28") (term "1"))
            (builtin "Block Contract (External)" (formula "28") (newnames "anonOut_heap_1,exc#20,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1"))
            (branch "Precondition"
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "3")) (ifInst ""  (formula "27")) (ifInst ""  (formula "27")) (ifInst ""  (formula "2")))
               (rule "wellFormedAnon" (formula "28") (term "1"))
               (rule "wellFormedAnon" (formula "28") (term "0,1"))
               (rule "replaceKnownSelect_taclet111_4" (formula "28") (term "1,0,1,1,1,1,0"))
               (rule "replaceKnownSelect_taclet111_4" (formula "28") (term "0,1,1,1,1,1,0"))
               (rule "replaceKnownSelect_taclet111_8" (formula "28") (term "0,0,1,1,1,1,0"))
               (rule "replaceKnownSelect_taclet111_6" (formula "28") (term "1,1,1,1,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "28") (term "1,0,1,1,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "28") (term "0,1,1,1,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "28") (term "0,0,1,1,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "28") (term "1,1,1,1,1,1,0"))
               (rule "replace_known_left" (formula "28") (term "1,1") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")) (ifInst ""  (formula "20")))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0,0,1,1,1"))
               (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1"))
               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,0,0,1,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,1,1,1,1"))
               (rule "replace_known_left" (formula "28") (term "0,1,1,1,1") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0,0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0,0,1,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,1,1"))
               (rule "replace_known_left" (formula "28") (term "1,1,1,1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
               (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,1,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,1,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0,0,0,1,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0,0,1,1"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0,1"))
               (rule "replace_known_left" (formula "28") (term "1,0,0,0,1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1"))
               (rule "replace_known_left" (formula "28") (term "1,0,1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,1"))
               (rule "replace_known_left" (formula "28") (term "1,0,0,1") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1"))
               (rule "replace_known_left" (formula "28") (term "0,0,0,1") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0"))
               (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1"))
               (rule "replace_known_left" (formula "28") (term "0,0,1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,1"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0,1"))
               (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0,1,1"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
               (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0"))
               (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "nnf_imp2or" (formula "28") (term "0,0"))
               (rule "nnf_imp2or" (formula "28") (term "0,1"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1"))
               (rule "nnf_imp2or" (formula "28") (term "0,1,0,0"))
               (rule "nnf_imp2or" (formula "28") (term "0,1,0,1"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0,0"))
               (rule "nnf_notAnd" (formula "28") (term "0,0,1,0,1"))
               (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1,0,1"))
               (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,1,0,1"))
               (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,1,0,1"))
               (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0,1"))
               (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0,1"))
               (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0,1"))
               (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0,1"))
               (rule "andRight" (formula "28"))
               (branch
                  (rule "allRight" (formula "28") (inst "sk=i_0"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "28"))
                  (rule "allRight" (formula "30") (inst "sk=j_0"))
                  (rule "orRight" (formula "30"))
                  (rule "orRight" (formula "30"))
                  (rule "inEqSimp_leqRight" (formula "28"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_geqRight" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "32"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "8")))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "elementOfUnion" (formula "3") (term "0,0"))
                  (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "12") (term "0,0"))
                  (rule "add_zero_left" (formula "12") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                  (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_6"))
                  (rule "simplifySelectOfAnon" (formula "4"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")) (ifInst ""  (formula "11")))
                  (rule "elementOfUnion" (formula "4") (term "0,0"))
                  (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "inEqSimp_contradEq3" (formula "4") (term "0,0,0,0") (ifseqformula "6"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0,0,0,0"))
                  (rule "qeq_literals" (formula "4") (term "0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_7"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "12")))
                  (rule "elementOfUnion" (formula "3") (term "0,0"))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_8"))
                  (rule "simplifySelectOfAnon" (formula "5"))
                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "39")) (ifInst ""  (formula "13")))
                  (rule "elementOfUnion" (formula "5") (term "0,0"))
                  (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "inEqSimp_contradEq3" (formula "5") (term "0,0,0") (ifseqformula "8"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                  (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
                  (rule "times_zero_1" (formula "11") (term "0,0"))
                  (rule "add_zero_left" (formula "11") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                  (rule "mul_literals" (formula "11") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                  (rule "leq_literals" (formula "17") (term "0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch "j_0 = e1 ∨ j_0 = e2 TRUE"
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                     (rule "mul_literals" (formula "6") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "i_0 = e2 TRUE"
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                        (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "10") (term "0") (ifseqformula "4"))
                        (rule "inEqSimp_contradEq7" (formula "3") (term "1") (ifseqformula "7"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1"))
                        (rule "leq_literals" (formula "3") (term "0,1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                        (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "19"))
                        (rule "andLeft" (formula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,1,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0"))
                        (rule "add_zero_right" (formula "6") (term "0"))
                        (rule "leq_literals" (formula "6"))
                        (rule "closeFalse" (formula "6"))
                     )
                     (branch "i_0 = e2 FALSE"
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "allLeft" (formula "24") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "24") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "allLeft" (formula "28") (inst "t=i_0"))
                        (rule "replaceKnownSelect_taclet001111_13" (formula "28") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10001111_16" (formula "28") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "28") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "allLeft" (formula "35") (inst "t=i_0"))
                        (rule "replaceKnownSelect_taclet001111_11" (formula "35") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "35") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "ifthenelse_split" (formula "4") (term "0"))
                        (branch "i_0 = e3 TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                           (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "20"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0"))
                           (rule "leq_literals" (formula "40") (term "0"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "false_right" (formula "40"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "mul_literals" (formula "8") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "17"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "6"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                           (rule "mul_literals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "20"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "add_zero_right" (formula "19") (term "0"))
                           (rule "leq_literals" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                        (branch "i_0 = e3 FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "allLeft" (formula "23") (inst "t=j_0"))
                           (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "28") (inst "t=j_0"))
                           (rule "replaceKnownSelect_taclet001111_12" (formula "28") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0001111_14" (formula "28") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "28") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "allLeft" (formula "36") (inst "t=j_0"))
                           (rule "replaceKnownSelect_taclet001111_10" (formula "36") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0001111_15" (formula "36") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "36") (term "0,0,1"))
                           (rule "leq_literals" (formula "36") (term "0,1"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0"))
                           (rule "leq_literals" (formula "36") (term "0,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "36"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
                  (branch "j_0 = e1 ∨ j_0 = e2 FALSE"
                     (rule "orRight" (formula "39"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "i_0 = e2 TRUE"
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEq" (formula "10") (term "0") (ifseqformula "4"))
                        (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                        (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                        (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "7"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                        (rule "add_literals" (formula "38") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "38") (term "1,0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0"))
                        (rule "leq_literals" (formula "38") (term "0"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "false_right" (formula "38"))
                        (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "19"))
                        (rule "andLeft" (formula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,1,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0"))
                        (rule "add_zero_right" (formula "6") (term "0"))
                        (rule "leq_literals" (formula "6"))
                        (rule "closeFalse" (formula "6"))
                     )
                     (branch "i_0 = e2 FALSE"
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "allLeft" (formula "27") (inst "t=i_0"))
                        (rule "replaceKnownSelect_taclet001111_13" (formula "27") (term "1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet11001111_15" (formula "27") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "27") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "allLeft" (formula "24") (inst "t=i_0"))
                        (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "24") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "allLeft" (formula "35") (inst "t=i_0"))
                        (rule "replaceKnownSelect_taclet001111_11" (formula "35") (term "1,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "35") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "j_0 = e3 TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "19"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0"))
                           (rule "leq_literals" (formula "41") (term "0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "false_right" (formula "41"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                           (rule "mul_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "9") (term "0,0"))
                           (rule "add_zero_left" (formula "9") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "9"))
                           (rule "leq_literals" (formula "15") (term "0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "4"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                           (rule "polySimp_elimOne" (formula "33") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "15") (term "0,0"))
                           (rule "add_zero_left" (formula "15") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "9"))
                           (rule "leq_literals" (formula "15") (term "0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "allLeft" (formula "23") (inst "t=e3"))
                           (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "23") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "37") (inst "t=e3"))
                           (rule "replaceKnownSelect_taclet111_6" (formula "37") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "37") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "37") (term "0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                           (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "37") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                           (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "37") (term "0,0,0"))
                           (rule "leq_literals" (formula "37") (term "0,0"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "37"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                        (branch "j_0 = e3 FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "i_0 = e3 TRUE"
                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                              (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "27") (term "0,2,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "23") (term "0,2,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "34") (term "0,2,1,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "3"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "6"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                              (rule "add_literals" (formula "39") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0"))
                              (rule "leq_literals" (formula "39") (term "0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "false_right" (formula "39"))
                              (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "19"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                              (rule "add_literals" (formula "39") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0"))
                              (rule "leq_literals" (formula "39") (term "0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "false_right" (formula "39"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "16"))
                              (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                              (rule "mul_literals" (formula "7") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "5"))
                              (rule "times_zero_1" (formula "9") (term "0,0"))
                              (rule "add_zero_left" (formula "9") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                              (rule "mul_literals" (formula "19") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "19"))
                              (rule "andLeft" (formula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "1,1,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0"))
                              (rule "add_zero_right" (formula "18") (term "0"))
                              (rule "leq_literals" (formula "18"))
                              (rule "closeFalse" (formula "18"))
                           )
                           (branch "i_0 = e3 FALSE"
                              (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "34") (term "1,1,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "allLeft" (formula "22") (inst "t=j_0"))
                              (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "22") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1"))
                              (rule "leq_literals" (formula "22") (term "0,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                  )
               )
               (branch
                  (rule "allRight" (formula "28") (inst "sk=i_0"))
                  (rule "orRight" (formula "28"))
                  (rule "orRight" (formula "28"))
                  (rule "allRight" (formula "30") (inst "sk=j_0"))
                  (rule "orRight" (formula "30"))
                  (rule "orRight" (formula "30"))
                  (rule "inEqSimp_geqRight" (formula "29"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "29"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_geqRight" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "8")))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "elementOfUnion" (formula "3") (term "0,0"))
                  (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "mul_literals" (formula "20") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                  (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_6"))
                  (rule "simplifySelectOfAnon" (formula "4"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "36")) (ifInst ""  (formula "10")))
                  (rule "elementOfUnion" (formula "4") (term "0,0"))
                  (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "elementOfSingleton" (formula "4") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_7"))
                  (rule "simplifySelectOfAnon" (formula "3"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")) (ifInst ""  (formula "11")))
                  (rule "elementOfUnion" (formula "3") (term "0,0"))
                  (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_8"))
                  (rule "simplifySelectOfAnon" (formula "5"))
                  (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "38")) (ifInst ""  (formula "12")))
                  (rule "elementOfUnion" (formula "5") (term "0,0"))
                  (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch "j_0 = e1 ∨ j_0 = e2 TRUE"
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1"))
                     (rule "polySimp_rightDist" (formula "6") (term "1"))
                     (rule "mul_literals" (formula "6") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                     (rule "allLeft" (formula "28") (inst "t=i_0"))
                     (rule "replaceKnownSelect_taclet101111_13" (formula "28") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "28") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "allLeft" (formula "25") (inst "t=i_0"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                     (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "allLeft" (formula "36") (inst "t=i_0"))
                     (rule "replaceKnownSelect_taclet101111_11" (formula "36") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                     (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "36") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "i_0 = e1 ∨ i_0 = e2 TRUE"
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "cut_direct" (formula "3") (term "0"))
                        (branch "CUT: j_0 = e1 TRUE"
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_contradEq3" (formula "4") (term "0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0"))
                           (rule "qeq_literals" (formula "4") (term "0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "8") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "qeq_literals" (formula "32") (term "0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "17"))
                           (rule "andLeft" (formula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                           (rule "mul_literals" (formula "7") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0"))
                           (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                           (rule "add_literals" (formula "7") (term "1,1,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0"))
                           (rule "add_zero_right" (formula "7") (term "0"))
                           (rule "leq_literals" (formula "7"))
                           (rule "closeFalse" (formula "7"))
                        )
                        (branch "CUT: j_0 = e1 FALSE"
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "4") (term "0,0,1"))
                           (rule "qeq_literals" (formula "4") (term "0,1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEq" (formula "8") (term "1") (ifseqformula "4"))
                           (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq0" (formula "7"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "16"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0"))
                           (rule "leq_literals" (formula "38") (term "0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "false_right" (formula "38"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "12"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "5"))
                           (rule "andLeft" (formula "30"))
                           (rule "inEqSimp_homoInEq1" (formula "30"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0"))
                           (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                           (rule "add_literals" (formula "30") (term "1,1,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0"))
                           (rule "add_zero_right" (formula "30") (term "0"))
                           (rule "leq_literals" (formula "30"))
                           (rule "closeFalse" (formula "30"))
                        )
                     )
                     (branch "i_0 = e1 ∨ i_0 = e2 FALSE"
                        (rule "orRight" (formula "40"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "1,0,0,0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "cut_direct" (formula "3") (term "0"))
                        (branch "CUT: j_0 = e1 TRUE"
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_contradEq3" (formula "39") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0"))
                           (rule "qeq_literals" (formula "39") (term "0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "false_right" (formula "39"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                           (rule "mul_literals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                           (rule "times_zero_1" (formula "6") (term "0,0"))
                           (rule "add_zero_left" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "8") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                           (rule "polySimp_elimOne" (formula "8") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                           (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                           (rule "mul_literals" (formula "19") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                           (rule "mul_literals" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                           (rule "andLeft" (formula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0"))
                           (rule "add_zero_right" (formula "17") (term "0"))
                           (rule "leq_literals" (formula "17"))
                           (rule "closeFalse" (formula "17"))
                        )
                        (branch "CUT: j_0 = e1 FALSE"
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_contradEq3" (formula "41") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0"))
                           (rule "qeq_literals" (formula "41") (term "0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "false_right" (formula "41"))
                           (rule "inEqSimp_contradEq7" (formula "39") (ifseqformula "17"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0"))
                           (rule "leq_literals" (formula "39") (term "0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "false_right" (formula "39"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                           (rule "times_zero_1" (formula "6") (term "0,0"))
                           (rule "add_zero_left" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "9") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                           (rule "polySimp_elimOne" (formula "9") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                           (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                           (rule "mul_literals" (formula "21") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "5"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                           (rule "polySimp_elimOne" (formula "34") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                           (rule "mul_literals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "19"))
                           (rule "andLeft" (formula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                           (rule "add_literals" (formula "20") (term "1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0"))
                           (rule "add_zero_right" (formula "20") (term "0"))
                           (rule "leq_literals" (formula "20"))
                           (rule "closeFalse" (formula "20"))
                        )
                     )
                  )
                  (branch "j_0 = e1 ∨ j_0 = e2 FALSE"
                     (rule "orRight" (formula "38"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                     (rule "allLeft" (formula "28") (inst "t=i_0"))
                     (rule "replaceKnownSelect_taclet101111_13" (formula "28") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "allLeft" (formula "25") (inst "t=i_0"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                     (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "allLeft" (formula "36") (inst "t=i_0"))
                     (rule "replaceKnownSelect_taclet101111_11" (formula "36") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                     (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "36") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "i_0 = e1 ∨ i_0 = e2 TRUE"
                        (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                        (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "j_0 = e3 TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "18"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0"))
                           (rule "leq_literals" (formula "40") (term "0"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "false_right" (formula "40"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                           (rule "mul_literals" (formula "20") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "20"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "add_zero_right" (formula "19") (term "0"))
                           (rule "leq_literals" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                        (branch "j_0 = e3 FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "allLeft" (formula "34") (inst "t=j_0"))
                           (rule "replaceKnownSelect_taclet101111_10" (formula "34") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101101111_17" (formula "34") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                           (rule "add_literals" (formula "34") (term "0,0,1"))
                           (rule "leq_literals" (formula "34") (term "0,1"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                           (rule "add_literals" (formula "34") (term "0,0,1"))
                           (rule "leq_literals" (formula "34") (term "0,1"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "1"))
                           (rule "andLeft" (formula "34"))
                           (rule "inEqSimp_homoInEq1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "1,1,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0"))
                           (rule "add_literals" (formula "34") (term "0"))
                           (rule "leq_literals" (formula "34"))
                           (rule "closeFalse" (formula "34"))
                        )
                     )
                     (branch "i_0 = e1 ∨ i_0 = e2 FALSE"
                        (rule "orRight" (formula "40"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "40")))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "j_0 = e3 TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "3"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "7"))
                           (rule "polySimp_addComm1" (formula "7") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                           (rule "polySimp_mulComm0" (formula "7") (term "1"))
                           (rule "polySimp_rightDist" (formula "7") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                           (rule "mul_literals" (formula "7") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                           (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "7"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "4"))
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "17"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0"))
                           (rule "leq_literals" (formula "41") (term "0"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "false_right" (formula "41"))
                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                           (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                           (rule "mul_literals" (formula "19") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "19"))
                           (rule "andLeft" (formula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "1,1,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0"))
                           (rule "add_literals" (formula "18") (term "0"))
                           (rule "leq_literals" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                        (branch "j_0 = e3 FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "allLeft" (formula "34") (inst "t=j_0"))
                           (rule "replaceKnownSelect_taclet101111_10" (formula "34") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet111101111_16" (formula "34") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                           (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "34") (term "0,0,1"))
                           (rule "leq_literals" (formula "34") (term "0,1"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "34") (term "0,0,1"))
                           (rule "leq_literals" (formula "34") (term "0,1"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "34"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_literals" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
            )
            (branch "Usage"
               (builtin "One Step Simplification" (formula "29"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "32"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "29"))
               (rule "inEqSimp_commuteLeq" (formula "28"))
               (rule "inEqSimp_commuteLeq" (formula "27"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
               (rule "pullOutSelect" (formula "29") (term "1") (inst "selectSK=arr_5"))
               (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
               (rule "simplifySelectOfAnon" (formula "29"))
               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet111_6" (formula "29") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "29") (term "2,0"))
               (rule "inEqSimp_commuteGeq" (formula "28"))
               (rule "elementOfUnion" (formula "29") (term "0,0"))
               (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "eqSymm" (formula "29") (term "1,0,0"))
               (rule "inEqSimp_contradEq7" (formula "29") (term "1,0,0") (ifseqformula "11"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
               (rule "leq_literals" (formula "29") (term "0,1,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "elementOfUnion" (formula "29") (term "0,0"))
               (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "29"))
               (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "29"))
               (rule "hideAuxiliaryEq" (formula "29"))
               (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_6"))
               (rule "simplifySelectOfAnon" (formula "29"))
               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
               (rule "inEqSimp_commuteGeq" (formula "30"))
               (rule "elementOfUnion" (formula "29") (term "0,0"))
               (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "29"))
               (rule "hideAuxiliaryEq" (formula "29"))
               (rule "inEqSimp_commuteLeq" (formula "29"))
               (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_7"))
               (rule "applyEq" (formula "29") (term "0") (ifseqformula "27"))
               (rule "simplifySelectOfAnon" (formula "27"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet111_4" (formula "27") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "27") (term "2,0"))
               (rule "inEqSimp_commuteGeq" (formula "28"))
               (rule "inEqSimp_commuteLeq" (formula "29"))
               (rule "elementOfUnion" (formula "27") (term "0,0"))
               (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "eqSymm" (formula "27") (term "1,0,0"))
               (rule "elementOfUnion" (formula "27") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "27") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "eqSymm" (formula "27") (term "1,0,0,0"))
               (rule "inEqSimp_contradEq7" (formula "27") (term "1,0,0,0") (ifseqformula "10"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0"))
               (rule "leq_literals" (formula "27") (term "0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "elementOfUnion" (formula "27") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "27") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "27"))
               (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "27"))
               (rule "hideAuxiliaryEq" (formula "27"))
               (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_8"))
               (rule "simplifySelectOfAnon" (formula "27"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "35")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet111_8" (formula "27") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "27") (term "2,0"))
               (rule "inEqSimp_commuteLeq" (formula "28"))
               (rule "elementOfUnion" (formula "27") (term "0,0"))
               (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "eqSymm" (formula "27") (term "1,0,0"))
               (rule "elementOfUnion" (formula "27") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "27") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "eqSymm" (formula "27") (term "1,0,0,0"))
               (rule "elementOfUnion" (formula "27") (term "0,0,0,0"))
               (rule "elementOfSingleton" (formula "27") (term "1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "eqSymm" (formula "27") (term "1,0,0,0,0"))
               (rule "elementOfSingleton" (formula "27") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "27"))
               (rule "hideAuxiliaryEq" (formula "27"))
               (rule "nnf_imp2or" (formula "30") (term "0"))
               (rule "nnf_imp2or" (formula "31") (term "0"))
               (rule "nnf_notAnd" (formula "30") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
               (rule "mul_literals" (formula "30") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "31") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
               (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
               (rule "mul_literals" (formula "31") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
               (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,1,0"))
               (rule "ifUnfold" (formula "35") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_2"))
               (rule "inequality_comparison_simple" (formula "35") (term "1"))
               (builtin "One Step Simplification" (formula "35"))
               (rule "replace_known_left" (formula "35") (term "0,0,1,0") (ifseqformula "32"))
               (builtin "One Step Simplification" (formula "35"))
               (rule "all_pull_out3" (formula "30") (term "0"))
               (rule "shift_paren_or" (formula "30") (term "0,0"))
               (rule "shift_paren_or" (formula "30") (term "0,0,0"))
               (rule "all_pull_out3" (formula "31") (term "0"))
               (rule "shift_paren_or" (formula "31") (term "0,0"))
               (rule "shift_paren_or" (formula "31") (term "0,0,0"))
               (rule "ifSplit" (formula "35"))
               (branch "if x_2 true"
                  (builtin "One Step Simplification" (formula "36"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_2 false"
                  (builtin "One Step Simplification" (formula "36"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "blockEmpty" (formula "35") (term "1"))
                  (builtin "Block Contract (External)" (formula "35") (newnames "anonOut_heap_2,exc#12,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2"))
                  (branch "Precondition"
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "3")) (ifInst ""  (formula "34")) (ifInst ""  (formula "34")) (ifInst ""  (formula "2")))
                     (rule "wellFormedAnon" (formula "35") (term "1"))
                     (rule "wellFormedAnon" (formula "35") (term "0,1"))
                     (rule "wellFormedAnon" (formula "35") (term "0,0,1"))
                     (rule "replaceKnownSelect_taclet11111_12" (formula "35") (term "1,1,1,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet11111_10" (formula "35") (term "0,1,1,1,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "35") (term "1,1,1,1,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "35") (term "0,1,1,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet11111_16" (formula "35") (term "0,0,0,1,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet11111_10" (formula "35") (term "1,1,0,1,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet11111_14" (formula "35") (term "0,1,0,1,1,1,1,0"))
                     (rule "replaceKnownSelect_taclet11111_14" (formula "35") (term "1,0,0,1,1,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "35") (term "0,0,0,1,1,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "35") (term "1,1,0,1,1,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "35") (term "0,1,0,1,1,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "35") (term "1,0,0,1,1,1,1,0"))
                     (rule "replace_known_left" (formula "35") (term "1,1") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "1")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0,0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0,0,1,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,1,0,0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,1,0,0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,1,0,0,1,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0,1,1,1"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,1,1,1,1"))
                     (rule "replace_known_left" (formula "35") (term "0,0,1,1,1,1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0,0,1,1,1"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0,0,1,1"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0,0,1,1"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0,1,1"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,1,1,1,1"))
                     (rule "replace_known_left" (formula "35") (term "0,1,1,1,1") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,1,1"))
                     (rule "replace_known_left" (formula "35") (term "1,1,1,1") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0,0,1,1"))
                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0,0,1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,0,0,0,1"))
                     (rule "replace_known_left" (formula "35") (term "1,0,0,0,0,0,1") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,0,1,0,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0,1,0,1,1,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "0,0,0,0,1,0,1,1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,1"))
                     (rule "replace_known_left" (formula "35") (term "1,0,0,1") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0"))
                     (rule "replace_known_left" (formula "35") (term "1,0,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0,1,1,1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0,1,1,1"))
                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0,1,1,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0,1,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,1,1"))
                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,0,1"))
                     (rule "replace_known_left" (formula "35") (term "1,0,0,0,1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                     (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1"))
                     (rule "replace_known_left" (formula "35") (term "0,0,0,1") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "0,1,0,1"))
                     (rule "replace_known_left" (formula "35") (term "1,0,1") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "0,0,1"))
                     (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0"))
                     (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "nnf_imp2or" (formula "35") (term "0,1"))
                     (rule "nnf_imp2or" (formula "35") (term "0,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,1"))
                     (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0,1"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0,0"))
                     (rule "nnf_imp2or" (formula "35") (term "0,1,0,1"))
                     (rule "nnf_imp2or" (formula "35") (term "0,1,0,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,1,0,1"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0,1"))
                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0,1"))
                     (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,0,1"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,1,0,1"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,1,0,1"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,1,0,1"))
                     (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,1,0,1"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,0,0"))
                     (rule "andRight" (formula "35"))
                     (branch
                        (rule "allRight" (formula "35") (inst "sk=i_0"))
                        (rule "orRight" (formula "35"))
                        (rule "orRight" (formula "35"))
                        (rule "allRight" (formula "37") (inst "sk=j_0"))
                        (rule "orRight" (formula "37"))
                        (rule "orRight" (formula "37"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "36"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "38"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_9"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "8")))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                        (rule "mul_literals" (formula "6") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "14"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "14") (term "0,0"))
                        (rule "add_zero_left" (formula "14") (term "0"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_10"))
                        (rule "simplifySelectOfAnon" (formula "4"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "44")) (ifInst ""  (formula "11")))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "inEqSimp_contradEq3" (formula "4") (term "0,0,0,0,0") (ifseqformula "8"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0,0,0,0,0,0"))
                        (rule "qeq_literals" (formula "4") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_11"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")) (ifInst ""  (formula "12")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_12"))
                        (rule "simplifySelectOfAnon" (formula "5"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")) (ifInst ""  (formula "13")))
                        (rule "elementOfUnion" (formula "5") (term "0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "inEqSimp_contradEq3" (formula "5") (term "0,0,0,0") (ifseqformula "10"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0"))
                        (rule "qeq_literals" (formula "5") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                        (rule "times_zero_1" (formula "8") (term "0,0"))
                        (rule "add_zero_left" (formula "8") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "8"))
                        (rule "leq_literals" (formula "17") (term "0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_13"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "15")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_14"))
                        (rule "simplifySelectOfAnon" (formula "6"))
                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "48")) (ifInst ""  (formula "16")))
                        (rule "elementOfUnion" (formula "6") (term "0,0"))
                        (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "inEqSimp_contradEq3" (formula "6") (term "0,0,0") (ifseqformula "13"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                        (rule "qeq_literals" (formula "6") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "j_0 = e1 ∨ j_0 = e2 TRUE"
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch "i_0 = e2 TRUE"
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                              (rule "inEqSimp_contradEq7" (formula "3") (term "1") (ifseqformula "8"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1"))
                              (rule "leq_literals" (formula "3") (term "0,1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "5"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "mul_literals" (formula "8") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "8"))
                              (rule "andLeft" (formula "19"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "1,1,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0"))
                              (rule "add_zero_right" (formula "19") (term "0"))
                              (rule "leq_literals" (formula "19"))
                              (rule "closeFalse" (formula "19"))
                           )
                           (branch "i_0 = e2 FALSE"
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "allLeft" (formula "41") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet00111111_19" (formula "41") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0,0,0,0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "41") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "allLeft" (formula "34") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet00111111_21" (formula "34") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0,0,0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "34") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "allLeft" (formula "25") (inst "t=i_0"))
                              (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "allLeft" (formula "29") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet00111111_23" (formula "29") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1000111111_27" (formula "29") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "i_0 = e3 TRUE"
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_contradEq7" (formula "48") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0"))
                                 (rule "leq_literals" (formula "48") (term "0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "false_right" (formula "48"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1"))
                                 (rule "mul_literals" (formula "10") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "9"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "19"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "i_0 = e3 FALSE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "allLeft" (formula "26") (inst "t=e1"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "commute_or" (formula "26") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "26") (term "0,0"))
                                 (rule "commute_or_2" (formula "26") (term "0"))
                                 (rule "allLeft" (formula "30") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "30") (term "1,1,0") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "53")) (ifInst ""  (formula "12")))
                                 (rule "elementOfUnion" (formula "30") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0"))
                                 (rule "allLeft" (formula "32") (inst "t=e3"))
                                 (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "32") (term "1,1,0") (inst "selectSK=arr_16"))
                                 (rule "simplifySelectOfAnon" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "55")) (ifInst ""  (formula "12")))
                                 (rule "elementOfUnion" (formula "32") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_contradEq7" (formula "32") (term "1,0,0") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "32") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "33") (term "0,0"))
                                 (rule "commute_or_2" (formula "33") (term "0"))
                                 (rule "commute_or" (formula "33") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "33") (term "0,0"))
                                 (rule "allLeft" (formula "49") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11111_10" (formula "49") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "49") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0"))
                                 (rule "commute_or" (formula "49") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "49") (term "0,0"))
                                 (rule "allLeft" (formula "35") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet1_0" (formula "35") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "35") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "commute_or" (formula "35") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "35") (term "0,0"))
                                 (rule "commute_or_2" (formula "35") (term "0"))
                                 (rule "allLeft" (formula "52") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet11111_16" (formula "52") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "52") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "52") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "commute_or" (formula "52") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0"))
                                 (rule "allLeft" (formula "43") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet111_8" (formula "43") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "43") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "commute_or" (formula "43") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "allLeft" (formula "52") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "52") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "52") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0"))
                                 (rule "commute_or" (formula "52") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0"))
                                 (rule "allLeft" (formula "34") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "34") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "34") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "34") (term "0,0"))
                                 (rule "commute_or_2" (formula "34") (term "0"))
                                 (rule "allLeft" (formula "43") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "43") (term "1,1,0") (inst "selectSK=arr_17"))
                                 (rule "simplifySelectOfAnon" (formula "43"))
                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "63")) (ifInst ""  (formula "12")))
                                 (rule "replaceKnownSelect_taclet11000111111_29" (formula "43") (term "2,0"))
                                 (rule "elementOfUnion" (formula "43") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "inEqSimp_contradEq7" (formula "43") (term "1,0,0") (ifseqformula "21"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "43") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfUnion" (formula "43") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "43") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "allLeft" (formula "56") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "56") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "56") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "25") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "26") (inst "t=e3"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "27") (inst "t=e2"))
                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "48") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet111_6" (formula "48") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "48") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "49") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "49") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "49") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "49") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "30") (inst "t=e4"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "31") (inst "t=e3"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "42") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11000111111_29" (formula "42") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "32") (inst "t=e2"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "44") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11000111111_30" (formula "44") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "45") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "45") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "45") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "70") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "70") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "70") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "70") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "70") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "70") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "71") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11111_10" (formula "71") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "71") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "72") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "72") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "72") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "72") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "72") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "58") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11000111111_31" (formula "58") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "59") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet111_6" (formula "59") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "59") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "60") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "60") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "60") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "60") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "60") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,0"))
                                 (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "70") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "54") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "55") (term "0,0,0"))
                                 (rule "commute_or" (formula "53") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                 (rule "cut_direct" (formula "3") (term "1"))
                                 (branch "CUT: j_0 = e2 TRUE"
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                    (rule "replace_known_left" (formula "70") (term "1,0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "70"))
                                    (rule "true_left" (formula "70"))
                                    (rule "replace_known_left" (formula "27") (term "1,0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "replace_known_left" (formula "39") (term "1,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "replace_known_left" (formula "53") (term "1,0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "true_left" (formula "53"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "inEqSimp_contradEq3" (formula "76") (ifseqformula "8"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                    (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "76") (term "0,0"))
                                    (rule "qeq_literals" (formula "76") (term "0"))
                                    (builtin "One Step Simplification" (formula "76"))
                                    (rule "false_right" (formula "76"))
                                    (rule "inEqSimp_contradInEq1" (formula "71") (term "0,0,0,0,0") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "71") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "71"))
                                    (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0,0") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "31") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0,0,0,0") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "57") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "5"))
                                    (rule "polySimp_mulComm0" (formula "61") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "61") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                                    (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                    (rule "polySimp_elimOne" (formula "61") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "16") (term "0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                    (rule "times_zero_1" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                    (rule "cut_direct" (formula "28") (term "1,0"))
                                    (branch "CUT: right ≤ -1 + e1 TRUE"
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "replace_known_left" (formula "40") (term "1,0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "replace_known_left" (formula "68") (term "1,0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "68"))
                                       (rule "true_left" (formula "68"))
                                       (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "true_left" (formula "53"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "28"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                       (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "37") (term "0,0,0") (ifseqformula "22"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "37") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_contradEq3" (formula "51") (term "0,0,0") (ifseqformula "22"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "51") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "51") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "40") (term "0,0") (ifseqformula "21"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEqReverse" (formula "41") (term "1,1,0,0,0") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "19"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                    (branch "CUT: right ≤ -1 + e1 FALSE"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "replace_known_right" (formula "54") (term "1,0") (ifseqformula "76"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "replace_known_right" (formula "40") (term "1,0") (ifseqformula "76"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "replace_known_right" (formula "69") (term "1,0") (ifseqformula "76"))
                                       (builtin "One Step Simplification" (formula "69"))
                                       (rule "inEqSimp_leqRight" (formula "76"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "i_0 = e4 TRUE"
                                          (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "67") (term "1,1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "62"))
                                          (rule "polySimp_addComm1" (formula "62") (term "0"))
                                          (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "25") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "50") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "77") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "66") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "62") (term "0,2,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1"))
                                          (rule "mul_literals" (formula "62") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "62") (term "1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "51") (term "1,0,0") (ifseqformula "10"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0,1,0,0"))
                                          (rule "qeq_literals" (formula "51") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "inEqSimp_contradEq7" (formula "77") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0"))
                                          (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "77") (term "0,0"))
                                          (rule "leq_literals" (formula "77") (term "0"))
                                          (builtin "One Step Simplification" (formula "77"))
                                          (rule "false_right" (formula "77"))
                                          (rule "inEqSimp_contradEq3" (formula "36") (term "0,0,0") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "36") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradEq3" (formula "51") (term "0,0") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "51") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqReverse" (formula "56") (term "1,1,0") (ifseqformula "51"))
                                          (rule "applyEqReverse" (formula "52") (term "1,1,0,0") (ifseqformula "51"))
                                          (rule "hideAuxiliaryEq" (formula "51"))
                                          (rule "inEqSimp_contradEq3" (formula "36") (term "0,0") (ifseqformula "10"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqReverse" (formula "51") (term "1,1,0,0") (ifseqformula "36"))
                                          (rule "applyEqReverse" (formula "42") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEqReverse" (formula "55") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEqReverse" (formula "37") (term "1,1,0,0,0") (ifseqformula "36"))
                                          (rule "hideAuxiliaryEq" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "69") (term "0,0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "69") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "69"))
                                          (rule "inEqSimp_contradInEq1" (formula "66") (term "1,0") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "66") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "66") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "66") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "66") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "66") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "66"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "50") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "36") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "54") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "41") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "50") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "50") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "49")))
                                          (rule "true_left" (formula "50"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "35")))
                                          (rule "true_left" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "64") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "62")))
                                          (rule "true_left" (formula "64"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0") (ifseqformula "12"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
                                          (rule "true_left" (formula "26"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "11"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "36") (term "0,0") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqReverse" (formula "41") (term "1,1,0") (ifseqformula "36"))
                                          (rule "applyEqReverse" (formula "37") (term "1,1,0,0,0") (ifseqformula "36"))
                                          (rule "hideAuxiliaryEq" (formula "36"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "21"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                       (branch "i_0 = e4 FALSE"
                                          (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "66") (term "1,1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "5"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "62") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "0"))
                                          (rule "cut_direct" (formula "36") (term "1,0"))
                                          (branch "CUT: left ≤ e4 TRUE"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "replace_known_left" (formula "51") (term "1,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "true_left" (formula "51"))
                                             (rule "replace_known_left" (formula "25") (term "1,0,0,0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "replace_known_left" (formula "65") (term "1,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "65"))
                                             (rule "true_left" (formula "65"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "35"))
                                             (rule "times_zero_1" (formula "16") (term "0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "qeq_literals" (formula "41") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "qeq_literals" (formula "54") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "qeq_literals" (formula "68") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "68"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "36"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "75") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                             (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "75") (term "0,0"))
                                             (rule "qeq_literals" (formula "75") (term "0"))
                                             (builtin "One Step Simplification" (formula "75"))
                                             (rule "false_right" (formula "75"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "11"))
                                             (rule "times_zero_1" (formula "8") (term "0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "mul_literals" (formula "8") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                             (rule "ifthenelse_split" (formula "36") (term "0"))
                                             (branch "e4 = e1 ∨ e4 = e2 TRUE"
                                                (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "37"))
                                                (rule "applyEqReverse" (formula "52") (term "2,0") (ifseqformula "37"))
                                                (rule "hideAuxiliaryEq" (formula "37"))
                                                (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqReverse" (formula "55") (term "1,1,0") (ifseqformula "51"))
                                                (rule "hideAuxiliaryEq" (formula "51"))
                                                (rule "cut_direct" (formula "39") (term "1,0"))
                                                (branch "CUT: left ≤ e3 TRUE"
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "replace_known_left" (formula "65") (term "1,0") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "65"))
                                                   (rule "true_left" (formula "65"))
                                                   (rule "replace_known_left" (formula "27") (term "1,0,0,0") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "replace_known_left" (formula "50") (term "1,0,0,0") (ifseqformula "38"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "true_left" (formula "50"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "38"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "72") (ifseqformula "13"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                                                   (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "72") (term "0,0"))
                                                   (rule "qeq_literals" (formula "72") (term "0"))
                                                   (builtin "One Step Simplification" (formula "72"))
                                                   (rule "false_right" (formula "72"))
                                                   (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "39"))
                                                   (rule "times_zero_1" (formula "19") (term "0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0,0,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "68") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "68"))
                                                   (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "44") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                                                   (rule "times_zero_1" (formula "9") (term "0,0"))
                                                   (rule "add_zero_left" (formula "9") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "ifthenelse_split" (formula "39") (term "0"))
                                                   (branch "e3 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "40"))
                                                      (rule "hideAuxiliaryEq" (formula "40"))
                                                      (rule "applyEq" (formula "32") (term "0,2,1,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "55") (term "1,1,0,0,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "57") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "62") (term "0,2,0") (ifseqformula "39"))
                                                      (rule "inEqSimp_commuteGeq" (formula "62"))
                                                      (rule "applyEq" (formula "44") (term "0,2,1,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "32") (term "1,1,1,0,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "55") (term "0,2,1,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "39"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "68") (term "1,1,0,0,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "57") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "63") (term "0,2,1") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "9") (term "0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "50") (term "0,2,0") (ifseqformula "39"))
                                                      (rule "inEqSimp_commuteGeq" (formula "50"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "40") (term "1") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "44") (term "1,1,1,0,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "68") (term "0,2,1,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,0") (ifseqformula "39"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "37") (term "0") (ifseqformula "25"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "applyEq" (formula "67") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "31") (term "1,1,1,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "43") (term "1,1,1,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "67") (term "1,1,0,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "54") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "38") (term "1") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "52") (term "1,1,0,0,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "59") (term "0,2,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "58") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "34"))
                                                      (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,1,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "27")))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "59") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "59") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "59") (term "1,1,0,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "59") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,0,0,0"))
                                                      (rule "leq_literals" (formula "59") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "58")))
                                                      (rule "true_left" (formula "59"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0"))
                                                      (rule "leq_literals" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                   (branch "e3 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "39"))
                                                      (rule "hideAuxiliaryEq" (formula "39"))
                                                      (rule "allLeft" (formula "56") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet00111111_21" (formula "56") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11000111111_28" (formula "56") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0,0,0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "56") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "34") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "allLeft" (formula "71") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet00111111_19" (formula "71") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11011000111111_32" (formula "71") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "71") (term "0,0,0,0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "71") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "71"))
                                                      (rule "allLeft" (formula "46") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet00111111_23" (formula "46") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1000111111_27" (formula "46") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0,0,0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "46") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "commute_or" (formula "71") (term "0,0,0"))
                                                      (rule "commute_or" (formula "45") (term "0,0,0"))
                                                      (rule "commute_or" (formula "33") (term "0,0,0"))
                                                      (rule "commute_or" (formula "57") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "43") (term "0,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,0"))
                                                      (rule "commute_or" (formula "55") (term "0,0,0"))
                                                      (rule "commute_or" (formula "69") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0,0"))
                                                      (rule "commute_or_2" (formula "44") (term "0,0"))
                                                      (rule "commute_or" (formula "70") (term "0,0,0"))
                                                      (rule "commute_or" (formula "56") (term "0,0,0"))
                                                      (rule "commute_or" (formula "58") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "43") (term "0"))
                                                      (rule "commute_or_2" (formula "31") (term "0"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "commute_or_2" (formula "44") (term "0"))
                                                      (rule "commute_or" (formula "34") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "71") (term "0,0"))
                                                      (rule "commute_or_2" (formula "71") (term "0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "commute_or_2" (formula "57") (term "0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "0"))
                                                      (rule "commute_or" (formula "72") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "55") (term "0,0"))
                                                      (rule "commute_or_2" (formula "69") (term "0,0"))
                                                      (rule "commute_or_2" (formula "55") (term "0"))
                                                      (rule "commute_or_2" (formula "69") (term "0"))
                                                      (rule "commute_or_2" (formula "70") (term "0,0"))
                                                      (rule "commute_or_2" (formula "56") (term "0,0"))
                                                      (rule "commute_or_2" (formula "70") (term "0"))
                                                      (rule "commute_or_2" (formula "58") (term "0,0"))
                                                      (rule "commute_or_2" (formula "56") (term "0"))
                                                      (rule "commute_or_2" (formula "58") (term "0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0"))
                                                      (rule "commute_or" (formula "46") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "72") (term "0,0"))
                                                      (rule "commute_or_2" (formula "72") (term "0"))
                                                      (rule "commute_or_2" (formula "46") (term "0,0"))
                                                      (rule "commute_or_2" (formula "46") (term "0"))
                                                      (rule "allLeft" (formula "28") (inst "t=e1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "allLeft" (formula "29") (inst "t=e3"))
                                                      (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "42"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "allLeft" (formula "30") (inst "t=e4"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "0,0") (ifseqformula "42"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "allLeft" (formula "31") (inst "t=e2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "allLeft" (formula "41") (inst "t=e1"))
                                                      (rule "replaceKnownSelect_taclet1_0" (formula "41") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "41") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "allLeft" (formula "42") (inst "t=e4"))
                                                      (rule "replaceKnownSelect_taclet11000111111_29" (formula "42") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0011011000111111_33" (formula "42") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "45"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "42") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "allLeft" (formula "43") (inst "t=e2"))
                                                      (rule "replaceKnownSelect_taclet1_2" (formula "43") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "43") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "43") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "43") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "43") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "allLeft" (formula "44") (inst "t=e3"))
                                                      (rule "replaceKnownSelect_taclet11000111111_30" (formula "44") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100011011000111111_35" (formula "44") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "44") (term "0,0") (ifseqformula "48"))
                                                      (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "44") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "44") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "44") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "44") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "29")))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "allLeft" (formula "59") (inst "t=e1"))
                                                      (rule "replaceKnownSelect_taclet111_8" (formula "59") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "59") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "59") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "59") (term "0,0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "59") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "59") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "59") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "59") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "59") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "59") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "59"))
                                                      (rule "allLeft" (formula "60") (inst "t=e4"))
                                                      (rule "replaceKnownSelect_taclet11000111111_31" (formula "60") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0011011000111111_34" (formula "60") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "60") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "60") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "60") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "60") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "60") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "60") (term "0,0") (ifseqformula "46"))
                                                      (rule "inEqSimp_homoInEq1" (formula "60") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "60") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "60") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "60") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "60") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "allLeft" (formula "61") (inst "t=e3"))
                                                      (rule "replaceKnownSelect_taclet111_6" (formula "61") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "61") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "61") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "61") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "61") (term "0,0") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq1" (formula "61") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "61") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "61") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "allLeft" (formula "62") (inst "t=e2"))
                                                      (rule "replaceKnownSelect_taclet111_4" (formula "62") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "62") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "62") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "62") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "62") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "62") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "62") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "62") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "62") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "62"))
                                                      (rule "inEqSimp_contradInEq0" (formula "62") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "62") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,0"))
                                                      (rule "add_literals" (formula "62") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "62") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "62") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "62") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "62"))
                                                      (rule "cut_direct" (formula "45") (term "0"))
                                                      (branch "CUT: e4 = e1 TRUE"
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "applyEq" (formula "35") (term "1,1,1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "83") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "80") (term "0,2,1,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "84") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "60") (term "0,2,0,1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "46") (term "1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "50") (term "0,2,1,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "77") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "42") (term "0,2,0,1") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "78") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "77") (term "0,1,1,1,0,0,1,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "8") (term "0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "80") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "25") (term "0") (ifseqformula "44"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                         (rule "applyEq" (formula "35") (term "0,2,1,1,0,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "82") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "64") (term "1,1,1,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "79") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "74") (term "0,2,0") (ifseqformula "44"))
                                                         (rule "inEqSimp_commuteGeq" (formula "74"))
                                                         (rule "applyEq" (formula "76") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "75") (term "0,1,1,1,0,0,1,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "49") (term "1,1,1,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "78") (term "1,1,1,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "30") (term "0,2,1,1") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "63") (term "0,2,1,1,0,0") (ifseqformula "43"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                         (rule "mul_literals" (formula "25") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                         (rule "inEqSimp_contradEq3" (formula "84") (ifseqformula "25"))
                                                         (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0"))
                                                         (rule "add_literals" (formula "84") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "84") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "84") (term "0,0"))
                                                         (rule "qeq_literals" (formula "84") (term "0"))
                                                         (builtin "One Step Simplification" (formula "84"))
                                                         (rule "false_right" (formula "84"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "34") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "76") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "76") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "76") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "76") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "76") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "76") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "76") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "75")))
                                                         (rule "true_left" (formula "76"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "47") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "46")))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "inEqSimp_subsumption0" (formula "43") (ifseqformula "21"))
                                                         (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "43") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "43") (term "0,0"))
                                                         (rule "qeq_literals" (formula "43") (term "0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "59") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "59") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "59") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "59") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "59") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "58")))
                                                         (rule "true_left" (formula "59"))
                                                         (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0"))
                                                         (rule "qeq_literals" (formula "12") (term "0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "21"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0"))
                                                         (rule "leq_literals" (formula "22"))
                                                         (rule "closeFalse" (formula "22"))
                                                      )
                                                      (branch "CUT: e4 = e1 FALSE"
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "applyEq" (formula "42") (term "0,2,0,1") (ifseqformula "45"))
                                                         (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "43"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "applyEq" (formula "45") (term "1") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "58") (term "0,2,0,1") (ifseqformula "44"))
                                                         (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "true_left" (formula "58"))
                                                         (rule "applyEq" (formula "48") (term "1,1,1,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "84") (term "0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "81") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "77") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "29") (term "0,2,1,1") (ifseqformula "43"))
                                                         (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "applyEq" (formula "46") (term "0,2,1,1,0,0") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "72") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "60") (term "1,1,1,0") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "78") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "77") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "8") (term "0") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "23") (term "0") (ifseqformula "41"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                         (rule "applyEq" (formula "73") (term "1,1,1,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "72") (term "0,1,1,1,0,0,1,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "75") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "69") (term "0,2,0") (ifseqformula "41"))
                                                         (rule "inEqSimp_commuteGeq" (formula "69"))
                                                         (rule "applyEq" (formula "71") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "32") (term "0,2,1,1,0,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "73") (term "0,2,1,1,0,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "59") (term "0,2,1,1,0,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "41"))
                                                         (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,1,0") (ifseqformula "40"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "77") (ifseqformula "21"))
                                                         (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0"))
                                                         (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "77") (term "0,0"))
                                                         (rule "leq_literals" (formula "77") (term "0"))
                                                         (builtin "One Step Simplification" (formula "77"))
                                                         (rule "false_right" (formula "77"))
                                                         (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0"))
                                                         (rule "leq_literals" (formula "22"))
                                                         (rule "closeFalse" (formula "22"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: left ≤ e3 FALSE"
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "replace_known_right" (formula "65") (term "1,0") (ifseqformula "74"))
                                                   (builtin "One Step Simplification" (formula "65"))
                                                   (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "74"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "replace_known_right" (formula "51") (term "1,0,0,0") (ifseqformula "74"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "inEqSimp_leqRight" (formula "74"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "40") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "40"))
                                                   (rule "applyEqReverse" (formula "41") (term "1,1,0,0") (ifseqformula "40"))
                                                   (rule "hideAuxiliaryEq" (formula "40"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "25"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "e4 = e1 ∨ e4 = e2 FALSE"
                                                (rule "orRight" (formula "75"))
                                                (rule "applyEqReverse" (formula "42") (term "1,1,0") (ifseqformula "36"))
                                                (rule "applyEqReverse" (formula "51") (term "2,0") (ifseqformula "36"))
                                                (rule "hideAuxiliaryEq" (formula "36"))
                                                (rule "replace_known_right" (formula "50") (term "0,0,0") (ifseqformula "74"))
                                                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "75")))
                                                (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "50"))
                                                (rule "hideAuxiliaryEq" (formula "50"))
                                                (rule "cut_direct" (formula "38") (term "1,0"))
                                                (branch "CUT: left ≤ e3 TRUE"
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "replace_known_left" (formula "50") (term "1,0,0,0") (ifseqformula "38"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "true_left" (formula "50"))
                                                   (rule "replace_known_left" (formula "27") (term "1,0,0,0") (ifseqformula "38"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "true_left" (formula "62"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "37"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "73") (ifseqformula "13"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0"))
                                                   (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                   (rule "add_literals" (formula "73") (term "0,0"))
                                                   (rule "qeq_literals" (formula "73") (term "0"))
                                                   (builtin "One Step Simplification" (formula "73"))
                                                   (rule "false_right" (formula "73"))
                                                   (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "38"))
                                                   (rule "times_zero_1" (formula "19") (term "0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0,0,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "67") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "67"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0,0,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "54") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                                                   (rule "times_zero_1" (formula "9") (term "0,0"))
                                                   (rule "add_zero_left" (formula "9") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "ifthenelse_split" (formula "38") (term "0"))
                                                   (branch "e3 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "39"))
                                                      (rule "hideAuxiliaryEq" (formula "39"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "54") (term "1,1,0,0,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "9") (term "0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "54") (term "0,2,1,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "49") (term "0,2,0") (ifseqformula "38"))
                                                      (rule "inEqSimp_commuteGeq" (formula "49"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "67") (term "0,2,1,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "38"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "43") (term "1,1,1,0,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "32") (term "0,2,1,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "39") (term "1") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "32") (term "1,1,1,0,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "67") (term "1,1,0,0,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "61") (term "0,2,0") (ifseqformula "38"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "62") (term "0,2,1") (ifseqformula "38"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "72") (ifseqformula "25"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                                                      (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "72") (term "0,0"))
                                                      (rule "leq_literals" (formula "72") (term "0"))
                                                      (builtin "One Step Simplification" (formula "72"))
                                                      (rule "false_right" (formula "72"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "43") (term "0,1,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "41")))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "32") (term "0,1,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "30")))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "65") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "65") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "65") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "65") (term "1,1,0,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "65") (term "0,0,0,0,0,0"))
                                                      (rule "leq_literals" (formula "65") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "63")))
                                                      (rule "true_left" (formula "65"))
                                                      (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0"))
                                                      (rule "qeq_literals" (formula "14") (term "0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "51") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "51") (term "1,1,0,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "51") (term "0,0,0,0,0,0"))
                                                      (rule "leq_literals" (formula "51") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "49")))
                                                      (rule "true_left" (formula "51"))
                                                      (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0"))
                                                      (rule "leq_literals" (formula "22"))
                                                      (rule "closeFalse" (formula "22"))
                                                   )
                                                   (branch "e3 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "38"))
                                                      (rule "hideAuxiliaryEq" (formula "38"))
                                                      (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "34") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "allLeft" (formula "56") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet00111111_21" (formula "56") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11000111111_28" (formula "56") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0,0,0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "56") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "allLeft" (formula "45") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet00111111_23" (formula "45") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1000111111_27" (formula "45") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "allLeft" (formula "71") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet00111111_19" (formula "71") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11011000111111_32" (formula "71") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "71") (term "0,0,0,0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "71") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "71"))
                                                      (rule "commute_or" (formula "70") (term "0,0,0"))
                                                      (rule "commute_or" (formula "44") (term "0,0,0"))
                                                      (rule "commute_or" (formula "33") (term "0,0,0"))
                                                      (rule "commute_or" (formula "56") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,0"))
                                                      (rule "commute_or" (formula "54") (term "0,0,0"))
                                                      (rule "commute_or" (formula "68") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "43") (term "0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0,0"))
                                                      (rule "commute_or" (formula "69") (term "0,0,0"))
                                                      (rule "commute_or" (formula "55") (term "0,0,0"))
                                                      (rule "commute_or" (formula "34") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0"))
                                                      (rule "commute_or_2" (formula "31") (term "0"))
                                                      (rule "commute_or_2" (formula "43") (term "0"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "commute_or" (formula "57") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "70") (term "0,0"))
                                                      (rule "commute_or_2" (formula "70") (term "0"))
                                                      (rule "commute_or_2" (formula "44") (term "0,0"))
                                                      (rule "commute_or_2" (formula "44") (term "0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "commute_or_2" (formula "56") (term "0,0"))
                                                      (rule "commute_or_2" (formula "56") (term "0"))
                                                      (rule "commute_or" (formula "45") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "54") (term "0,0"))
                                                      (rule "commute_or_2" (formula "68") (term "0,0"))
                                                      (rule "commute_or_2" (formula "54") (term "0"))
                                                      (rule "commute_or_2" (formula "68") (term "0"))
                                                      (rule "commute_or_2" (formula "69") (term "0,0"))
                                                      (rule "commute_or_2" (formula "55") (term "0,0"))
                                                      (rule "commute_or_2" (formula "69") (term "0"))
                                                      (rule "commute_or_2" (formula "55") (term "0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0"))
                                                      (rule "commute_or_2" (formula "57") (term "0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "0"))
                                                      (rule "commute_or" (formula "71") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0"))
                                                      (rule "commute_or_2" (formula "71") (term "0,0"))
                                                      (rule "commute_or_2" (formula "71") (term "0"))
                                                      (rule "allLeft" (formula "28") (inst "t=e1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "allLeft" (formula "29") (inst "t=e4"))
                                                      (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "40"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "allLeft" (formula "30") (inst "t=e2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "allLeft" (formula "31") (inst "t=e3"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "0,0") (ifseqformula "43"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "allLeft" (formula "41") (inst "t=e1"))
                                                      (rule "replaceKnownSelect_taclet1_0" (formula "41") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "41") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "allLeft" (formula "56") (inst "t=e1"))
                                                      (rule "replaceKnownSelect_taclet111_8" (formula "56") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "56") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "56") (term "0,0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "56") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "56") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "56") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "56") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "56") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "allLeft" (formula "42") (inst "t=e4"))
                                                      (rule "replaceKnownSelect_taclet11000111111_29" (formula "42") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1011011000111111_33" (formula "42") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "44"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "42") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "29")))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "allLeft" (formula "42") (inst "t=e2"))
                                                      (rule "replaceKnownSelect_taclet1_2" (formula "42") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "42") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "42") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "allLeft" (formula "43") (inst "t=e3"))
                                                      (rule "replaceKnownSelect_taclet11000111111_30" (formula "43") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101011011000111111_35" (formula "43") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "43") (term "0,0") (ifseqformula "46"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "43") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "31")))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "allLeft" (formula "58") (inst "t=e3"))
                                                      (rule "replaceKnownSelect_taclet111_6" (formula "58") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "58") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "58") (term "0,0") (ifseqformula "45"))
                                                      (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "58") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "58") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "58") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "58") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "allLeft" (formula "59") (inst "t=e4"))
                                                      (rule "replaceKnownSelect_taclet11000111111_31" (formula "59") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1011011000111111_34" (formula "59") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "59") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "59") (term "0,0") (ifseqformula "44"))
                                                      (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "59") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "59") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "59") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "29")))
                                                      (rule "true_left" (formula "59"))
                                                      (rule "allLeft" (formula "59") (inst "t=e2"))
                                                      (rule "replaceKnownSelect_taclet111_4" (formula "59") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "59") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "59") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "59") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "59") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "59") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "59") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "59"))
                                                      (rule "inEqSimp_contradInEq0" (formula "59") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0"))
                                                      (rule "add_literals" (formula "59") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "59") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "59") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "59") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "59"))
                                                      (rule "cut_direct" (formula "48") (term "1,0"))
                                                      (branch "CUT: right ≤ -1 + e4 TRUE"
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "replace_known_left" (formula "77") (term "1,0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "77"))
                                                         (rule "true_left" (formula "77"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "true_left" (formula "63"))
                                                         (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "47"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0"))
                                                         (rule "add_literals" (formula "27") (term "0"))
                                                         (rule "leq_literals" (formula "27"))
                                                         (rule "closeFalse" (formula "27"))
                                                      )
                                                      (branch "CUT: right ≤ -1 + e4 FALSE"
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "84"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0") (ifseqformula "84"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "77") (term "1,0") (ifseqformula "84"))
                                                         (builtin "One Step Simplification" (formula "77"))
                                                         (rule "inEqSimp_leqRight" (formula "84"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "cut_direct" (formula "50") (term "1,0"))
                                                         (branch "CUT: right ≤ -1 + e3 TRUE"
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "replace_known_left" (formula "65") (term "1,0") (ifseqformula "50"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "true_left" (formula "65"))
                                                            (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "50"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "true_left" (formula "37"))
                                                            (rule "replace_known_left" (formula "77") (term "1,0") (ifseqformula "49"))
                                                            (builtin "One Step Simplification" (formula "77"))
                                                            (rule "true_left" (formula "77"))
                                                            (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "49"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "50"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "84") (ifseqformula "2"))
                                                            (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0"))
                                                            (rule "add_literals" (formula "84") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "84") (term "1,0,0"))
                                                            (rule "add_literals" (formula "84") (term "0,0"))
                                                            (rule "leq_literals" (formula "84") (term "0"))
                                                            (builtin "One Step Simplification" (formula "84"))
                                                            (rule "false_right" (formula "84"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "51"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "28"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0"))
                                                            (rule "leq_literals" (formula "28"))
                                                            (rule "closeFalse" (formula "28"))
                                                         )
                                                         (branch "CUT: right ≤ -1 + e3 FALSE"
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_right" (formula "65") (term "1,0") (ifseqformula "85"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "replace_known_right" (formula "79") (term "1,0") (ifseqformula "85"))
                                                            (builtin "One Step Simplification" (formula "79"))
                                                            (rule "replace_known_right" (formula "37") (term "1,0") (ifseqformula "85"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "inEqSimp_leqRight" (formula "85"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "cut_direct" (formula "81") (term "1,0"))
                                                            (branch "CUT: right ≤ -1 + e2 TRUE"
                                                               (builtin "One Step Simplification" (formula "82"))
                                                               (rule "true_left" (formula "82"))
                                                               (rule "replace_known_left" (formula "39") (term "1,0") (ifseqformula "81"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "replace_known_left" (formula "66") (term "1,0") (ifseqformula "80"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "true_left" (formula "66"))
                                                               (rule "replace_known_left" (formula "51") (term "1,0") (ifseqformula "79"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "true_left" (formula "51"))
                                                               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "78"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                               (rule "mul_literals" (formula "3") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "78"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "79"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_contradEq3" (formula "87") (ifseqformula "2"))
                                                               (rule "polySimp_mulComm0" (formula "87") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0"))
                                                               (rule "add_literals" (formula "87") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "87") (term "1,0,0"))
                                                               (rule "add_literals" (formula "87") (term "0,0"))
                                                               (rule "qeq_literals" (formula "87") (term "0"))
                                                               (builtin "One Step Simplification" (formula "87"))
                                                               (rule "false_right" (formula "87"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "80"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "28"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "CUT: right ≤ -1 + e2 FALSE"
                                                               (builtin "One Step Simplification" (formula "81"))
                                                               (rule "replace_known_right" (formula "39") (term "1,0") (ifseqformula "86"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "replace_known_right" (formula "67") (term "1,0") (ifseqformula "86"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "replace_known_right" (formula "52") (term "1,0") (ifseqformula "86"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "inEqSimp_leqRight" (formula "86"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "cut_direct" (formula "41") (term "1,0"))
                                                               (branch "CUT: right ≤ -1 + i_0 TRUE"
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "true_left" (formula "42"))
                                                                  (rule "replace_known_left" (formula "69") (term "1,0") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "true_left" (formula "69"))
                                                                  (rule "replace_known_left" (formula "82") (term "1,0") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "true_left" (formula "82"))
                                                                  (rule "replace_known_left" (formula "54") (term "1,0") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "true_left" (formula "54"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "41"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "2"))
                                                                  (rule "andLeft" (formula "18"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0"))
                                                                  (rule "add_literals" (formula "18") (term "0"))
                                                                  (rule "leq_literals" (formula "18"))
                                                                  (rule "closeFalse" (formula "18"))
                                                               )
                                                               (branch "CUT: right ≤ -1 + i_0 FALSE"
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "replace_known_right" (formula "54") (term "1,0") (ifseqformula "87"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "replace_known_right" (formula "69") (term "1,0") (ifseqformula "87"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "replace_known_right" (formula "83") (term "1,0") (ifseqformula "87"))
                                                                  (builtin "One Step Simplification" (formula "83"))
                                                                  (rule "inEqSimp_leqRight" (formula "87"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "allLeft" (formula "78") (inst "t=e2"))
                                                                  (rule "replaceKnownSelect_taclet11111_14" (formula "78") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "78") (term "0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "78") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "78") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "78") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "78") (term "1") (ifseqformula "9"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "78") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "78") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "78") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "78") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "78") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "78") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "78") (term "1") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "78") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "78") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "78") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "78"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                  (rule "add_literals" (formula "7") (term "0"))
                                                                  (rule "leq_literals" (formula "7"))
                                                                  (rule "closeFalse" (formula "7"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: left ≤ e3 FALSE"
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "50") (term "1,0,0,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_leqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "39") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "39") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "applyEqReverse" (formula "40") (term "1,1,0,0") (ifseqformula "39"))
                                                   (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "39"))
                                                   (rule "hideAuxiliaryEq" (formula "39"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "25"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                          (branch "CUT: left ≤ e4 FALSE"
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "76"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "replace_known_right" (formula "51") (term "1,0") (ifseqformula "76"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_right" (formula "67") (term "1,0") (ifseqformula "76"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_leqRight" (formula "76"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "52") (term "0,0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "52") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_contradEq3" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "37") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "53") (term "0,0") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "53") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "53") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "53"))
                                             (rule "applyEqReverse" (formula "58") (term "1,1,0") (ifseqformula "53"))
                                             (rule "hideAuxiliaryEq" (formula "53"))
                                             (rule "inEqSimp_contradEq3" (formula "38") (term "0,0") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "53") (term "1,1,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "1,1,0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "57") (term "1,1,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "40") (term "0,0") (ifseqformula "24"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "40"))
                                             (rule "applyEqReverse" (formula "41") (term "1,1,0,0,0") (ifseqformula "40"))
                                             (rule "hideAuxiliaryEq" (formula "40"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "25"))
                                             (rule "andLeft" (formula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0"))
                                             (rule "leq_literals" (formula "23"))
                                             (rule "closeFalse" (formula "23"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: j_0 = e2 FALSE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "79") (term "0") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "79") (ifseqformula "19"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0"))
                                    (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                    (rule "add_literals" (formula "79") (term "0,0"))
                                    (rule "leq_literals" (formula "79") (term "0"))
                                    (builtin "One Step Simplification" (formula "79"))
                                    (rule "false_right" (formula "79"))
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                    (rule "cut_direct" (formula "26") (term "1,0"))
                                    (branch "CUT: right ≤ -1 + e1 TRUE"
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "replace_known_left" (formula "39") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "replace_known_left" (formula "68") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "68"))
                                       (rule "true_left" (formula "68"))
                                       (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "true_left" (formula "53"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "26"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "50") (term "0,0,0") (ifseqformula "19"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "50") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "inEqSimp_contradEq3" (formula "35") (term "0,0,0") (ifseqformula "19"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "35") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                       (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "38") (term "0,0") (ifseqformula "18"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "39") (term "1,1,0,0,0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "17"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0"))
                                       (rule "add_zero_right" (formula "16") (term "0"))
                                       (rule "leq_literals" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                    (branch "CUT: right ≤ -1 + e1 FALSE"
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "replace_known_right" (formula "39") (term "1,0") (ifseqformula "76"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "replace_known_right" (formula "54") (term "1,0") (ifseqformula "76"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "replace_known_right" (formula "69") (term "1,0") (ifseqformula "76"))
                                       (builtin "One Step Simplification" (formula "69"))
                                       (rule "inEqSimp_leqRight" (formula "76"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "i_0 = e4 TRUE"
                                          (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "66") (term "1,1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "77") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "78") (term "0") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "78"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "replace_known_right" (formula "50") (term "1,0,0") (ifseqformula "78"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "22") (term "0,2,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "65") (term "0,2,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "4"))
                                          (rule "applyEq" (formula "49") (term "0,2,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "33") (term "0,2,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "34") (term "0,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqReverse" (formula "50") (term "2,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "35") (term "1,1,0,0,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "41") (term "1,1,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "inEqSimp_contradEq7" (formula "76") (ifseqformula "19"))
                                          (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                          (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "76") (term "0,0"))
                                          (rule "leq_literals" (formula "76") (term "0"))
                                          (builtin "One Step Simplification" (formula "76"))
                                          (rule "false_right" (formula "76"))
                                          (rule "inEqSimp_contradEq3" (formula "49") (term "0,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "49") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "49") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "applyEqReverse" (formula "55") (term "1,1,0") (ifseqformula "49"))
                                          (rule "applyEqReverse" (formula "50") (term "1,1,0,0") (ifseqformula "49"))
                                          (rule "hideAuxiliaryEq" (formula "49"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0,0,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "54") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "54"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "34") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradInEq1" (formula "69") (term "0,0,0,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "69") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "69"))
                                          (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0,0,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "49") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0,0,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "40") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "65") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "65"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                          (rule "true_left" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "47") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "46")))
                                          (rule "true_left" (formula "47"))
                                          (rule "inEqSimp_contradInEq1" (formula "62") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "62") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "62") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "62") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "62") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "60")))
                                          (rule "true_left" (formula "62"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "8"))
                                          (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "34") (term "0,0") (ifseqformula "19"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "34") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqReverse" (formula "35") (term "1,1,0,0,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "40") (term "1,1,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "15"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                          (rule "times_zero_1" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "17"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0"))
                                          (rule "leq_literals" (formula "18"))
                                          (rule "closeFalse" (formula "18"))
                                       )
                                       (branch "i_0 = e4 FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "65") (term "1,1,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "cut_direct" (formula "34") (term "1,0"))
                                          (branch "CUT: left ≤ e4 TRUE"
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "replace_known_left" (formula "50") (term "1,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "replace_known_left" (formula "65") (term "1,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "65"))
                                             (rule "true_left" (formula "65"))
                                             (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "33"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "74") (ifseqformula "8"))
                                             (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0"))
                                             (rule "qeq_literals" (formula "74") (term "0"))
                                             (builtin "One Step Simplification" (formula "74"))
                                             (rule "false_right" (formula "74"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "34"))
                                             (rule "times_zero_1" (formula "14") (term "0,0"))
                                             (rule "add_zero_left" (formula "14") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "41") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "inEqSimp_contradInEq1" (formula "69") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "69") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "69"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "15") (term "0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                             (rule "ifthenelse_split" (formula "34") (term "0"))
                                             (branch "e4 = e1 ∨ e4 = e2 TRUE"
                                                (rule "applyEqReverse" (formula "51") (term "2,0") (ifseqformula "35"))
                                                (rule "applyEqReverse" (formula "42") (term "1,1,0") (ifseqformula "35"))
                                                (rule "hideAuxiliaryEq" (formula "35"))
                                                (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEqReverse" (formula "55") (term "1,1,0") (ifseqformula "50"))
                                                (rule "hideAuxiliaryEq" (formula "50"))
                                                (rule "cut_direct" (formula "37") (term "1,0"))
                                                (branch "CUT: left ≤ e3 TRUE"
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "true_left" (formula "63"))
                                                   (rule "replace_known_left" (formula "49") (term "1,0,0,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "true_left" (formula "49"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "36"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "72") (ifseqformula "10"))
                                                   (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                                                   (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "72") (term "0,0"))
                                                   (rule "qeq_literals" (formula "72") (term "0"))
                                                   (builtin "One Step Simplification" (formula "72"))
                                                   (rule "false_right" (formula "72"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "37"))
                                                   (rule "times_zero_1" (formula "16") (term "0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "68") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "68"))
                                                   (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                                                   (rule "times_zero_1" (formula "7") (term "0,0"))
                                                   (rule "add_zero_left" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "ifthenelse_split" (formula "37") (term "0"))
                                                   (branch "e3 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "38"))
                                                      (rule "hideAuxiliaryEq" (formula "38"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "57") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "62") (term "0,2,1") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "38") (term "1") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "49") (term "0,2,0") (ifseqformula "37"))
                                                      (rule "inEqSimp_commuteGeq" (formula "49"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "30") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "68") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "55") (term "1,1,0,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "68") (term "1,1,0,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "55") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "30") (term "1,1,1,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "37"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "43") (term "1,1,1,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "61") (term "0,2,0") (ifseqformula "37"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "57") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "35") (term "0") (ifseqformula "22"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "35") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "applyEq" (formula "29") (term "0,2,1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "29") (term "1,1,1,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "62") (term "0,2,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "54") (term "1,1,0,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "42") (term "1,1,1,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "62") (term "0,1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "54") (term "0,2,1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "66") (term "0,2,1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "42") (term "0,2,1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "66") (term "1,1,0,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "36") (term "1") (ifseqformula "35"))
                                                      (rule "replace_known_left" (formula "26") (term "1,0,0,0") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "replace_known_left" (formula "50") (term "1,0,0,0") (ifseqformula "35"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "35"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "true_left" (formula "38"))
                                                      (rule "replace_known_left" (formula "60") (term "1,0,0,0") (ifseqformula "35"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "applyEq" (formula "61") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "22") (term "0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "59") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_contradEq3" (formula "67") (ifseqformula "10"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "67") (term "0,0"))
                                                      (rule "qeq_literals" (formula "67") (term "0"))
                                                      (builtin "One Step Simplification" (formula "67"))
                                                      (rule "false_right" (formula "67"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0"))
                                                      (rule "leq_literals" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                   (branch "e3 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "37"))
                                                      (rule "hideAuxiliaryEq" (formula "37"))
                                                      (rule "commute_or_2" (formula "68") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "63") (term "0,0"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0"))
                                                      (rule "commute_or_2" (formula "50") (term "0,0"))
                                                      (rule "commute_or_2" (formula "55") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                                      (rule "allLeft" (formula "69") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet00111111_19" (formula "69") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11111000111111_32" (formula "69") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "69") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "69") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "69") (term "0,0,0,0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "69") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "69"))
                                                      (rule "cut_direct" (formula "38") (term "1,0"))
                                                      (branch "CUT: left ≤ e2 TRUE"
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "true_left" (formula "39"))
                                                         (rule "replace_known_left" (formula "63") (term "1,0,0") (ifseqformula "38"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "true_left" (formula "63"))
                                                         (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "38"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "replace_known_left" (formula "49") (term "1,0,0") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "37"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_contradEq3" (formula "72") (ifseqformula "12"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                                                         (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "72") (term "0,0"))
                                                         (rule "qeq_literals" (formula "72") (term "0"))
                                                         (builtin "One Step Simplification" (formula "72"))
                                                         (rule "false_right" (formula "72"))
                                                         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "38"))
                                                         (rule "times_zero_1" (formula "18") (term "0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0,0") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "32") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0,0") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "44") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0,0,0,0") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "67") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "12"))
                                                         (rule "times_zero_1" (formula "8") (term "0,0"))
                                                         (rule "add_zero_left" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "allLeft" (formula "45") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet00111111_23" (formula "45") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000111111_27" (formula "45") (term "1,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "allLeft" (formula "33") (inst "t=i_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "allLeft" (formula "58") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet00111111_21" (formula "58") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet11000111111_28" (formula "58") (term "1,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0,0,0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "58") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "commute_or_2" (formula "43") (term "0,0"))
                                                         (rule "commute_or_2" (formula "30") (term "0,0"))
                                                         (rule "commute_or" (formula "55") (term "0,0,0"))
                                                         (rule "commute_or" (formula "68") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "44") (term "0,0"))
                                                         (rule "commute_or_2" (formula "31") (term "0,0"))
                                                         (rule "commute_or" (formula "69") (term "0,0,0"))
                                                         (rule "commute_or" (formula "56") (term "0,0,0"))
                                                         (rule "commute_or" (formula "71") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "32") (term "0,0"))
                                                         (rule "commute_or_2" (formula "57") (term "0,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0"))
                                                         (rule "commute_or_2" (formula "70") (term "0,0"))
                                                         (rule "commute_or_2" (formula "43") (term "0"))
                                                         (rule "commute_or_2" (formula "30") (term "0"))
                                                         (rule "commute_or_2" (formula "44") (term "0"))
                                                         (rule "commute_or_2" (formula "31") (term "0"))
                                                         (rule "commute_or_2" (formula "32") (term "0"))
                                                         (rule "commute_or_2" (formula "57") (term "0"))
                                                         (rule "commute_or_2" (formula "45") (term "0"))
                                                         (rule "commute_or_2" (formula "70") (term "0"))
                                                         (rule "commute_or" (formula "46") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "55") (term "0,0"))
                                                         (rule "commute_or_2" (formula "55") (term "0"))
                                                         (rule "commute_or_2" (formula "68") (term "0,0"))
                                                         (rule "commute_or_2" (formula "68") (term "0"))
                                                         (rule "commute_or" (formula "33") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "69") (term "0,0"))
                                                         (rule "commute_or_2" (formula "56") (term "0,0"))
                                                         (rule "commute_or_2" (formula "69") (term "0"))
                                                         (rule "commute_or_2" (formula "71") (term "0,0"))
                                                         (rule "commute_or_2" (formula "56") (term "0"))
                                                         (rule "commute_or_2" (formula "71") (term "0"))
                                                         (rule "commute_or" (formula "58") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "46") (term "0,0"))
                                                         (rule "commute_or_2" (formula "46") (term "0"))
                                                         (rule "commute_or_2" (formula "33") (term "0,0"))
                                                         (rule "commute_or_2" (formula "33") (term "0"))
                                                         (rule "commute_or_2" (formula "58") (term "0,0"))
                                                         (rule "commute_or_2" (formula "58") (term "0"))
                                                         (rule "allLeft" (formula "27") (inst "t=e1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "20"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "allLeft" (formula "28") (inst "t=e3"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "41"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "allLeft" (formula "29") (inst "t=e4"))
                                                         (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "41"))
                                                         (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "allLeft" (formula "30") (inst "t=e2"))
                                                         (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "30") (term "0,0") (ifseqformula "44"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "allLeft" (formula "40") (inst "t=e1"))
                                                         (rule "replaceKnownSelect_taclet1_0" (formula "40") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "40") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "40") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "40") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "inEqSimp_contradInEq0" (formula "40") (term "0") (ifseqformula "20"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "40") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "allLeft" (formula "57") (inst "t=e1"))
                                                         (rule "replaceKnownSelect_taclet111_8" (formula "57") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "57") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "57") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "57") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "57") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "inEqSimp_contradInEq0" (formula "57") (term "0") (ifseqformula "20"))
                                                         (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "57") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "57") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                                         (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "57") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "allLeft" (formula "41") (inst "t=e2"))
                                                         (rule "replaceKnownSelect_taclet1_2" (formula "41") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "41") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0") (ifseqformula "46"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "allLeft" (formula "42") (inst "t=e3"))
                                                         (rule "replaceKnownSelect_taclet11000111111_30" (formula "42") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet100011111000111111_35" (formula "42") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "46"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "42") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "28")))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "allLeft" (formula "42") (inst "t=e4"))
                                                         (rule "replaceKnownSelect_taclet11000111111_29" (formula "42") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011111000111111_33" (formula "42") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "45"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "42") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "allLeft" (formula "60") (inst "t=e4"))
                                                         (rule "replaceKnownSelect_taclet11000111111_31" (formula "60") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011111000111111_34" (formula "60") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "60") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "60") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "60") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "60") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "60") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "60") (term "0,0") (ifseqformula "45"))
                                                         (rule "inEqSimp_homoInEq1" (formula "60") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "60") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "60") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "60") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "60") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "60"))
                                                         (rule "allLeft" (formula "61") (inst "t=e3"))
                                                         (rule "replaceKnownSelect_taclet111_6" (formula "61") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "61") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "61") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "61") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "61") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "61") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "61") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "61") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "61") (term "0,0") (ifseqformula "46"))
                                                         (rule "inEqSimp_homoInEq1" (formula "61") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "61") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "61") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "61") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "61") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "allLeft" (formula "62") (inst "t=e2"))
                                                         (rule "replaceKnownSelect_taclet111_4" (formula "62") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "62") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "62") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "62") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "62") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "62") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "62") (term "0,0") (ifseqformula "47"))
                                                         (rule "inEqSimp_homoInEq1" (formula "62") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "62") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "62") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "62") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "62") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "cut_direct" (formula "44") (term "0"))
                                                         (branch "CUT: e4 = e1 TRUE"
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "applyEq" (formula "79") (term "0,2,1,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "75") (term "0,2,0") (ifseqformula "44"))
                                                            (rule "inEqSimp_commuteGeq" (formula "75"))
                                                            (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "66") (term "1,1,1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "82") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "80") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "83") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "50") (term "1,1,1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "81") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "34") (term "0,2,1,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "66") (term "0,2,1,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "42") (term "0,2,0,1") (ifseqformula "44"))
                                                            (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "true_left" (formula "42"))
                                                            (rule "applyEq" (formula "29") (term "0,2,1,1") (ifseqformula "43"))
                                                            (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "27"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "true_left" (formula "29"))
                                                            (rule "applyEq" (formula "77") (term "1,1,1,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "81") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "43") (term "1") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "74") (term "0,1,1,1,0,0,1,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "58") (term "0,2,0,1") (ifseqformula "42"))
                                                            (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "57"))
                                                            (builtin "One Step Simplification" (formula "58"))
                                                            (rule "true_left" (formula "58"))
                                                            (rule "applyEq" (formula "75") (term "0,1,1,1,0,0,1,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "76") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "74") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "24") (term "0") (ifseqformula "42"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                            (rule "applyEq" (formula "74") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,1,0,0") (ifseqformula "42"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                            (rule "mul_literals" (formula "24") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                            (rule "inEqSimp_contradEq3" (formula "83") (ifseqformula "24"))
                                                            (rule "polySimp_mulComm0" (formula "83") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "83") (term "0,0"))
                                                            (rule "add_literals" (formula "83") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "83") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "83") (term "0,0"))
                                                            (rule "qeq_literals" (formula "83") (term "0"))
                                                            (builtin "One Step Simplification" (formula "83"))
                                                            (rule "false_right" (formula "83"))
                                                            (rule "inEqSimp_subsumption0" (formula "43") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "43") (term "0,0"))
                                                            (rule "qeq_literals" (formula "43") (term "0"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "33") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "inEqSimp_contradInEq1" (formula "74") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "74") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "74") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "74") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "74") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "74") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "74") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "73")))
                                                            (rule "true_left" (formula "74"))
                                                            (rule "inEqSimp_contradInEq1" (formula "61") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "61") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "61") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "61") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "61") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "61") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "61") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "61") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "61") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "61") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "60")))
                                                            (rule "true_left" (formula "61"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "46") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "45")))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "5"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_exactShadow3" (formula "65") (ifseqformula "66"))
                                                            (rule "polySimp_mulComm0" (formula "65") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "65") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "65"))
                                                            (rule "polySimp_mulLiterals" (formula "65") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "65") (term "0"))
                                                            (rule "inEqSimp_antiSymm" (formula "64") (ifseqformula "65"))
                                                            (rule "applyEq" (formula "66") (term "0") (ifseqformula "64"))
                                                            (rule "inEqSimp_homoInEq0" (formula "66"))
                                                            (rule "polySimp_pullOutFactor1" (formula "66") (term "0"))
                                                            (rule "add_literals" (formula "66") (term "1,0"))
                                                            (rule "times_zero_1" (formula "66") (term "0"))
                                                            (rule "qeq_literals" (formula "66"))
                                                            (rule "true_left" (formula "66"))
                                                            (rule "applyEq" (formula "72") (term "1,1,0,0") (ifseqformula "64"))
                                                            (rule "applyEq" (formula "65") (term "0") (ifseqformula "64"))
                                                            (rule "inEqSimp_homoInEq1" (formula "65"))
                                                            (rule "polySimp_pullOutFactor1" (formula "65") (term "0"))
                                                            (rule "add_literals" (formula "65") (term "1,0"))
                                                            (rule "times_zero_1" (formula "65") (term "0"))
                                                            (rule "leq_literals" (formula "65"))
                                                            (rule "true_left" (formula "65"))
                                                            (rule "applyEq" (formula "65") (term "1") (ifseqformula "64"))
                                                            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                                            (rule "andLeft" (formula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0"))
                                                            (rule "add_zero_right" (formula "20") (term "0"))
                                                            (rule "leq_literals" (formula "20"))
                                                            (rule "closeFalse" (formula "20"))
                                                         )
                                                         (branch "CUT: e4 = e1 FALSE"
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "applyEq" (formula "86") (term "0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "75") (term "0,2,0") (ifseqformula "44"))
                                                            (rule "inEqSimp_commuteGeq" (formula "75"))
                                                            (rule "applyEq" (formula "66") (term "1,1,1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "79") (term "1,1,1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "79") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "82") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "45") (term "1") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "79") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "78") (term "0,2,1,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "49") (term "1,1,1,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "80") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "59") (term "0,2,0,1") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "29") (term "0,2,1,1") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "79") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "78") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "73") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "32") (term "0,2,1,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "61") (term "0,2,1,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "22") (term "0") (ifseqformula "40"))
                                                            (rule "inEqSimp_homoInEq1" (formula "22"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                            (rule "applyEq" (formula "38") (term "0,2,0,1") (ifseqformula "40"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                            (rule "mul_literals" (formula "22") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "76") (ifseqformula "20"))
                                                            (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                                            (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "76") (term "0,0"))
                                                            (rule "leq_literals" (formula "76") (term "0"))
                                                            (builtin "One Step Simplification" (formula "76"))
                                                            (rule "false_right" (formula "76"))
                                                            (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "22"))
                                                            (rule "andLeft" (formula "21"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0"))
                                                            (rule "leq_literals" (formula "21"))
                                                            (rule "closeFalse" (formula "21"))
                                                         )
                                                      )
                                                      (branch "CUT: left ≤ e2 FALSE"
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "replace_known_right" (formula "50") (term "1,0,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "inEqSimp_leqRight" (formula "73"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: left ≤ e3 FALSE"
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0") (ifseqformula "74"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "50") (term "1,0,0,0") (ifseqformula "74"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "24") (term "1,0,0,0") (ifseqformula "74"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_leqRight" (formula "74"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "38") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "38"))
                                                   (rule "applyEqReverse" (formula "39") (term "1,1,0,0") (ifseqformula "38"))
                                                   (rule "hideAuxiliaryEq" (formula "38"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "37"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "20"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0"))
                                                   (rule "leq_literals" (formula "21"))
                                                   (rule "closeFalse" (formula "21"))
                                                )
                                             )
                                             (branch "e4 = e1 ∨ e4 = e2 FALSE"
                                                (rule "orRight" (formula "75"))
                                                (rule "applyEqReverse" (formula "41") (term "1,1,0") (ifseqformula "34"))
                                                (rule "applyEqReverse" (formula "50") (term "2,0") (ifseqformula "34"))
                                                (rule "hideAuxiliaryEq" (formula "34"))
                                                (rule "replace_known_right" (formula "49") (term "1,0,0") (ifseqformula "75"))
                                                (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "74")))
                                                (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "49"))
                                                (rule "hideAuxiliaryEq" (formula "49"))
                                                (rule "cut_direct" (formula "36") (term "1,0"))
                                                (branch "CUT: left ≤ e3 TRUE"
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "replace_known_left" (formula "63") (term "1,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "true_left" (formula "63"))
                                                   (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "replace_known_left" (formula "48") (term "1,0,0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "true_left" (formula "48"))
                                                   (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "35"))
                                                   (rule "times_zero_1" (formula "15") (term "0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0,0,0,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0,0,0,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "41") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0,0,0,0") (ifseqformula "15"))
                                                   (rule "qeq_literals" (formula "66") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "66"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "36"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "74") (ifseqformula "10"))
                                                   (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                                   (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "74") (term "0,0"))
                                                   (rule "qeq_literals" (formula "74") (term "0"))
                                                   (builtin "One Step Simplification" (formula "74"))
                                                   (rule "false_right" (formula "74"))
                                                   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                                                   (rule "times_zero_1" (formula "7") (term "0,0"))
                                                   (rule "add_zero_left" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "ifthenelse_split" (formula "36") (term "0"))
                                                   (branch "e3 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "37"))
                                                      (rule "hideAuxiliaryEq" (formula "37"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "36"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "applyEq" (formula "30") (term "0,2,1,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "42") (term "0,2,1,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "42") (term "1,1,1,0,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "60") (term "0,2,0") (ifseqformula "36"))
                                                      (rule "inEqSimp_commuteGeq" (formula "60"))
                                                      (rule "applyEq" (formula "67") (term "0,2,1,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "49") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "48") (term "0,2,0") (ifseqformula "36"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48"))
                                                      (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "54") (term "1,1,0,0,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "62") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "61") (term "0,2,1") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "54") (term "0,2,1,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "30") (term "1,1,1,0,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "62") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "67") (term "1,1,0,0,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "72") (ifseqformula "22"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                                                      (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                      (rule "add_literals" (formula "72") (term "0,0"))
                                                      (rule "leq_literals" (formula "72") (term "0"))
                                                      (builtin "One Step Simplification" (formula "72"))
                                                      (rule "false_right" (formula "72"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0"))
                                                      (rule "leq_literals" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                   (branch "e3 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "42") (term "1,1,0") (ifseqformula "36"))
                                                      (rule "hideAuxiliaryEq" (formula "36"))
                                                      (rule "commute_or_2" (formula "67") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "62") (term "0,0"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,0"))
                                                      (rule "commute_or_2" (formula "54") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                                      (rule "allLeft" (formula "55") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet00111111_21" (formula "55") (term "1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11000111111_28" (formula "55") (term "1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "cut_direct" (formula "37") (term "1,0"))
                                                      (branch "CUT: left ≤ e2 TRUE"
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "replace_known_left" (formula "49") (term "1,0,0") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "replace_known_left" (formula "26") (term "1,0,0") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "replace_known_left" (formula "61") (term "1,0,0") (ifseqformula "36"))
                                                         (builtin "One Step Simplification" (formula "61"))
                                                         (rule "true_left" (formula "61"))
                                                         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "36"))
                                                         (rule "times_zero_1" (formula "17") (term "0,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0,0,0,0") (ifseqformula "17"))
                                                         (rule "qeq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0,0") (ifseqformula "17"))
                                                         (rule "qeq_literals" (formula "31") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0,0,0,0") (ifseqformula "17"))
                                                         (rule "qeq_literals" (formula "66") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "66"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "17"))
                                                         (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "37"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_contradEq3" (formula "74") (ifseqformula "12"))
                                                         (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                                         (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "74") (term "0,0"))
                                                         (rule "qeq_literals" (formula "74") (term "0"))
                                                         (builtin "One Step Simplification" (formula "74"))
                                                         (rule "false_right" (formula "74"))
                                                         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "12"))
                                                         (rule "mul_literals" (formula "8") (term "0,0"))
                                                         (rule "add_zero_left" (formula "8") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "mul_literals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "8"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "allLeft" (formula "33") (inst "t=i_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "allLeft" (formula "45") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet00111111_23" (formula "45") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1000111111_27" (formula "45") (term "1,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "allLeft" (formula "70") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet00111111_19" (formula "70") (term "1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet11111000111111_32" (formula "70") (term "1,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "70") (term "1,0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "70") (term "0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "70") (term "0,1,1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "70") (term "0,0,0,0,0") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "70") (term "0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "70"))
                                                         (rule "commute_or_2" (formula "42") (term "0,0"))
                                                         (rule "commute_or_2" (formula "30") (term "0,0"))
                                                         (rule "commute_or" (formula "54") (term "0,0,0"))
                                                         (rule "commute_or" (formula "67") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "43") (term "0,0"))
                                                         (rule "commute_or_2" (formula "31") (term "0,0"))
                                                         (rule "commute_or" (formula "55") (term "0,0,0"))
                                                         (rule "commute_or" (formula "68") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "56") (term "0,0"))
                                                         (rule "commute_or" (formula "57") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "32") (term "0,0"))
                                                         (rule "commute_or_2" (formula "69") (term "0,0"))
                                                         (rule "commute_or_2" (formula "44") (term "0,0"))
                                                         (rule "commute_or_2" (formula "42") (term "0"))
                                                         (rule "commute_or_2" (formula "30") (term "0"))
                                                         (rule "commute_or_2" (formula "43") (term "0"))
                                                         (rule "commute_or_2" (formula "31") (term "0"))
                                                         (rule "commute_or_2" (formula "56") (term "0"))
                                                         (rule "commute_or_2" (formula "32") (term "0"))
                                                         (rule "commute_or_2" (formula "69") (term "0"))
                                                         (rule "commute_or" (formula "33") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "44") (term "0"))
                                                         (rule "commute_or_2" (formula "54") (term "0,0"))
                                                         (rule "commute_or_2" (formula "54") (term "0"))
                                                         (rule "commute_or_2" (formula "67") (term "0,0"))
                                                         (rule "commute_or_2" (formula "67") (term "0"))
                                                         (rule "commute_or" (formula "45") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "55") (term "0,0"))
                                                         (rule "commute_or_2" (formula "68") (term "0,0"))
                                                         (rule "commute_or_2" (formula "55") (term "0"))
                                                         (rule "commute_or_2" (formula "68") (term "0"))
                                                         (rule "commute_or_2" (formula "57") (term "0,0"))
                                                         (rule "commute_or_2" (formula "57") (term "0"))
                                                         (rule "commute_or" (formula "70") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "33") (term "0,0"))
                                                         (rule "commute_or_2" (formula "33") (term "0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0"))
                                                         (rule "commute_or_2" (formula "45") (term "0"))
                                                         (rule "commute_or_2" (formula "70") (term "0,0"))
                                                         (rule "commute_or_2" (formula "70") (term "0"))
                                                         (rule "allLeft" (formula "27") (inst "t=e1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "20"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "allLeft" (formula "28") (inst "t=e4"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "39"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "allLeft" (formula "29") (inst "t=e2"))
                                                         (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "42"))
                                                         (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "allLeft" (formula "30") (inst "t=e3"))
                                                         (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "30") (term "0,0") (ifseqformula "42"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "allLeft" (formula "40") (inst "t=e1"))
                                                         (rule "replaceKnownSelect_taclet1_0" (formula "40") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "40") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "40") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "40") (term "0,0") (ifseqformula "20"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "40") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "40") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "allLeft" (formula "41") (inst "t=e4"))
                                                         (rule "replaceKnownSelect_taclet11000111111_29" (formula "41") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1011111000111111_33" (formula "41") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0") (ifseqformula "43"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "28")))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "allLeft" (formula "56") (inst "t=e1"))
                                                         (rule "replaceKnownSelect_taclet111_8" (formula "56") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "56") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "56") (term "0,0") (ifseqformula "20"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "56") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "56") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "56") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "inEqSimp_contradInEq1" (formula "56") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0"))
                                                         (rule "add_literals" (formula "56") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "56") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "56") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "allLeft" (formula "41") (inst "t=e2"))
                                                         (rule "replaceKnownSelect_taclet1_2" (formula "41") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "41") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0") (ifseqformula "45"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "allLeft" (formula "42") (inst "t=e3"))
                                                         (rule "replaceKnownSelect_taclet11000111111_30" (formula "42") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet101011111000111111_35" (formula "42") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "45"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "42") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "30")))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "allLeft" (formula "58") (inst "t=e3"))
                                                         (rule "replaceKnownSelect_taclet111_6" (formula "58") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "58") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "58") (term "0,0") (ifseqformula "44"))
                                                         (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "58") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "58") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "58") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "58") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "allLeft" (formula "59") (inst "t=e4"))
                                                         (rule "replaceKnownSelect_taclet11000111111_31" (formula "59") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1011111000111111_34" (formula "59") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "59") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "59") (term "0,0") (ifseqformula "43"))
                                                         (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "59") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "59") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "59") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "59") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "28")))
                                                         (rule "true_left" (formula "59"))
                                                         (rule "allLeft" (formula "59") (inst "t=e2"))
                                                         (rule "replaceKnownSelect_taclet111_4" (formula "59") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "59") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "59") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "59") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "59") (term "0,0") (ifseqformula "45"))
                                                         (rule "inEqSimp_homoInEq1" (formula "59") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "59") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "59") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "59") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "59") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "cut_direct" (formula "48") (term "1,0"))
                                                         (branch "CUT: right ≤ -1 + e4 TRUE"
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "true_left" (formula "49"))
                                                            (rule "replace_known_left" (formula "76") (term "1,0") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "76"))
                                                            (rule "true_left" (formula "76"))
                                                            (rule "replace_known_left" (formula "63") (term "1,0") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "true_left" (formula "63"))
                                                            (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "true_left" (formula "34"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "47"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "82") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0"))
                                                            (rule "add_literals" (formula "82") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "82") (term "1,0,0"))
                                                            (rule "add_literals" (formula "82") (term "0,0"))
                                                            (rule "leq_literals" (formula "82") (term "0"))
                                                            (builtin "One Step Simplification" (formula "82"))
                                                            (rule "false_right" (formula "82"))
                                                            (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "48"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "27"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0"))
                                                            (rule "leq_literals" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                         (branch "CUT: right ≤ -1 + e4 FALSE"
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "83"))
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "replace_known_right" (formula "63") (term "1,0") (ifseqformula "83"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "replace_known_right" (formula "76") (term "1,0") (ifseqformula "83"))
                                                            (builtin "One Step Simplification" (formula "76"))
                                                            (rule "inEqSimp_leqRight" (formula "83"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "cut_direct" (formula "50") (term "1,0"))
                                                            (branch "CUT: right ≤ -1 + e3 TRUE"
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "true_left" (formula "51"))
                                                               (rule "replace_known_left" (formula "78") (term "1,0") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "78"))
                                                               (rule "true_left" (formula "78"))
                                                               (rule "replace_known_left" (formula "65") (term "1,0") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "true_left" (formula "65"))
                                                               (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "49"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "50"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "26"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0"))
                                                               (rule "add_literals" (formula "1") (term "0"))
                                                               (rule "leq_literals" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "CUT: right ≤ -1 + e3 FALSE"
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "replace_known_right" (formula "65") (term "1,0") (ifseqformula "84"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "replace_known_right" (formula "36") (term "1,0") (ifseqformula "84"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "replace_known_right" (formula "78") (term "1,0") (ifseqformula "84"))
                                                               (builtin "One Step Simplification" (formula "78"))
                                                               (rule "inEqSimp_leqRight" (formula "84"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "cut_direct" (formula "67") (term "1,0"))
                                                               (branch "CUT: right ≤ -1 + e2 TRUE"
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "true_left" (formula "68"))
                                                                  (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "67"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "replace_known_left" (formula "51") (term "1,0") (ifseqformula "66"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "true_left" (formula "51"))
                                                                  (rule "replace_known_left" (formula "78") (term "1,0") (ifseqformula "65"))
                                                                  (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "true_left" (formula "78"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "65"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "66"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_contradEq3" (formula "86") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "86") (term "0,0"))
                                                                  (rule "add_literals" (formula "86") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "86") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "86") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "86") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "false_right" (formula "86"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "67"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "67"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "1"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "27"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                  (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                                  (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "27") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "27") (term "0"))
                                                                  (rule "leq_literals" (formula "27"))
                                                                  (rule "closeFalse" (formula "27"))
                                                               )
                                                               (branch "CUT: right ≤ -1 + e2 FALSE"
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "replace_known_right" (formula "38") (term "1,0") (ifseqformula "85"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "replace_known_right" (formula "52") (term "1,0") (ifseqformula "85"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "replace_known_right" (formula "80") (term "1,0") (ifseqformula "85"))
                                                                  (builtin "One Step Simplification" (formula "80"))
                                                                  (rule "inEqSimp_leqRight" (formula "85"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                  (rule "allLeft" (formula "76") (inst "t=e1"))
                                                                  (rule "replaceKnownSelect_taclet11111_16" (formula "76") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "76") (term "0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "76") (term "1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "76") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "76") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "76") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "76") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "76") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "76") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "76") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "76") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "76") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "76") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "76") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "76") (term "1") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "76") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "76") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "76") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "76") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "76") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "76") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "76"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "76") (ifseqformula "23"))
                                                                  (rule "andLeft" (formula "76"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "76"))
                                                                  (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                                                                  (rule "mul_literals" (formula "76") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                                                                  (rule "add_literals" (formula "76") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "76") (term "0"))
                                                                  (rule "add_literals" (formula "76") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "76") (term "1,0"))
                                                                  (rule "add_literals" (formula "76") (term "0"))
                                                                  (rule "leq_literals" (formula "76"))
                                                                  (rule "closeFalse" (formula "76"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: left ≤ e2 FALSE"
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0,0") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "26") (term "1,0,0") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "replace_known_right" (formula "49") (term "1,0,0") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "inEqSimp_leqRight" (formula "72"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: left ≤ e3 FALSE"
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "replace_known_right" (formula "49") (term "1,0,0,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_right" (formula "24") (term "1,0,0,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_leqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "37") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "applyEqReverse" (formula "38") (term "1,1,0,0") (ifseqformula "37"))
                                                   (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "37"))
                                                   (rule "hideAuxiliaryEq" (formula "37"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0"))
                                                   (rule "add_zero_right" (formula "20") (term "0"))
                                                   (rule "leq_literals" (formula "20"))
                                                   (rule "closeFalse" (formula "20"))
                                                )
                                             )
                                          )
                                          (branch "CUT: left ≤ e4 FALSE"
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "replace_known_right" (formula "50") (term "1,0") (ifseqformula "76"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "66") (term "1,0") (ifseqformula "76"))
                                             (builtin "One Step Simplification" (formula "66"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "76"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_leqRight" (formula "76"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "51") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "51") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "inEqSimp_contradEq3" (formula "35") (term "0,0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "38") (term "0,0") (ifseqformula "20"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "1,1,0,0,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                             (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "18"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "inEqSimp_homoInEq1" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                             (rule "add_literals" (formula "19") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0"))
                                             (rule "add_literals" (formula "19") (term "0"))
                                             (rule "leq_literals" (formula "19"))
                                             (rule "closeFalse" (formula "19"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "j_0 = e1 ∨ j_0 = e2 FALSE"
                           (rule "orRight" (formula "48"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "4") (term "1,0,0,0,0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "47")))
                           (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                           (rule "ifthenelse_split" (formula "5") (term "0"))
                           (branch "i_0 = e2 TRUE"
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "6"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "5"))
                              (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "5"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "46") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                              (rule "add_literals" (formula "46") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "46") (term "1,0,0"))
                              (rule "add_zero_right" (formula "46") (term "0,0"))
                              (rule "leq_literals" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "false_right" (formula "46"))
                              (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "20"))
                              (rule "andLeft" (formula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,1,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0"))
                              (rule "add_zero_right" (formula "10") (term "0"))
                              (rule "leq_literals" (formula "10"))
                              (rule "closeFalse" (formula "10"))
                           )
                           (branch "i_0 = e2 FALSE"
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "allLeft" (formula "42") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet00111111_19" (formula "42") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0,0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "42") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "allLeft" (formula "35") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet00111111_21" (formula "35") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "35") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "allLeft" (formula "26") (inst "t=i_0"))
                              (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "26") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "allLeft" (formula "30") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet00111111_23" (formula "30") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1100111111_25" (formula "30") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "j_0 = e3 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "9"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1"))
                                 (rule "mul_literals" (formula "9") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "5") (term "0,0,0") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                                 (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0"))
                                 (rule "leq_literals" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "false_right" (formula "50"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
                                 (rule "times_zero_1" (formula "7") (term "0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "16") (term "0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "5"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "41") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "40") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0"))
                                 (rule "allLeft" (formula "36") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "36") (term "1,1,0") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfAnon" (formula "36"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "54")) (ifInst ""  (formula "13")))
                                 (rule "elementOfUnion" (formula "36") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_contradEq7" (formula "36") (term "1,0,0") (ifseqformula "21"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "36") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "elementOfUnion" (formula "36") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "36") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "pullOutSelect" (formula "36") (term "2,0") (inst "selectSK=arr_16"))
                                 (rule "simplifySelectOfAnon" (formula "36"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "55")) (ifInst ""  (formula "13")))
                                 (rule "elementOfUnion" (formula "36") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "36") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or" (formula "38") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "allLeft" (formula "26") (inst "t=e1"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "commute_or" (formula "26") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "26") (term "0,0"))
                                 (rule "commute_or_2" (formula "26") (term "0"))
                                 (rule "allLeft" (formula "30") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet01100111111_30" (formula "30") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "30") (term "0,0"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "allLeft" (formula "31") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "31") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "31") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0"))
                                 (rule "allLeft" (formula "42") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "42") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "42") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0,0"))
                                 (rule "commute_or_2" (formula "42") (term "0"))
                                 (rule "allLeft" (formula "33") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet1_0" (formula "33") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "33") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "allLeft" (formula "55") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet11111_16" (formula "55") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "55") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "54") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "54") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "54") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "55") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "55") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "55") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "45") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet111_8" (formula "45") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "45") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "allLeft" (formula "25") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "26") (inst "t=e2"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "29") (inst "t=e4"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "30") (inst "t=e3"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "allLeft" (formula "31") (inst "t=e2"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "64") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "64") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "64") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "64") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "64") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "51") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet01100111111_29" (formula "51") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "52") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet111_6" (formula "52") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "52") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "52") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "allLeft" (formula "53") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "53") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "53") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "68") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11111_10" (formula "68") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "68") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "68") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "68") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "68"))
                                 (rule "allLeft" (formula "69") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "69") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "69") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "69") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "39") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet01100111111_30" (formula "39") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "40") (inst "t=e3"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "40") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "pullOutSelect" (formula "40") (term "1,1,0") (inst "selectSK=arr_17"))
                                 (rule "simplifySelectOfAnon" (formula "40"))
                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "78")) (ifInst ""  (formula "13")))
                                 (rule "elementOfUnion" (formula "40") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "40") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "elementOfSingleton" (formula "40") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "77")))
                                 (rule "inEqSimp_contradEq7" (formula "40") (term "0,0") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "40") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "applyEqReverse" (formula "41") (term "1,1,0") (ifseqformula "40"))
                                 (rule "hideAuxiliaryEq" (formula "40"))
                                 (rule "allLeft" (formula "41") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "41") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "41") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,0"))
                                 (rule "commute_or" (formula "35") (term "0,0,0,0"))
                                 (rule "commute_or" (formula "36") (term "0,0,0,0"))
                                 (rule "commute_or" (formula "38") (term "0,0,0"))
                                 (rule "commute_or" (formula "51") (term "0,0,0,0"))
                                 (rule "commute_or" (formula "69") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "66") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "67") (term "0,0,0"))
                                 (rule "commute_or" (formula "53") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,0"))
                                 (rule "commute_or" (formula "30") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "70") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "i_0 = e4 TRUE"
                                    (rule "applyEqReverse" (formula "66") (term "1,1,0") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "61") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "60"))
                                    (rule "polySimp_addComm1" (formula "60") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "62"))
                                    (rule "polySimp_addComm1" (formula "62") (term "0"))
                                    (rule "applyEq" (formula "65") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "60") (term "0,2,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "34") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "47") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "62") (term "0,2,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "4"))
                                    (rule "replace_known_right" (formula "48") (term "1,0,0") (ifseqformula "76"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "replace_known_right" (formula "49") (term "1,0,0") (ifseqformula "76"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1"))
                                    (rule "mul_literals" (formula "60") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1"))
                                    (rule "polySimp_rightDist" (formula "62") (term "1"))
                                    (rule "mul_literals" (formula "62") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "62") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_contradEq3" (formula "48") (term "0,0") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "35") (term "1,1,0,0") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "49") (term "2,0") (ifseqformula "48"))
                                    (rule "hideAuxiliaryEq" (formula "48"))
                                    (rule "inEqSimp_contradEq3" (formula "48") (term "0,0") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "applyEqReverse" (formula "49") (term "1,1,0,0,0") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "53") (term "1,1,0") (ifseqformula "48"))
                                    (rule "hideAuxiliaryEq" (formula "48"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "48") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "52") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "9"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0"))
                                    (rule "add_zero_right" (formula "21") (term "0"))
                                    (rule "leq_literals" (formula "21"))
                                    (rule "closeFalse" (formula "21"))
                                 )
                                 (branch "i_0 = e4 FALSE"
                                    (rule "applyEqReverse" (formula "65") (term "1,1,0") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "60") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "61"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "60") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "60"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "4"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "62") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0"))
                                    (rule "commute_or_2" (formula "53") (term "0,0,0"))
                                    (rule "commute_or" (formula "54") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0,0,0"))
                                    (rule "commute_or" (formula "70") (term "0,0,0"))
                                    (rule "cut_direct" (formula "49") (term "1,0"))
                                    (branch "CUT: left ≤ e4 TRUE"
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "replace_known_left" (formula "63") (term "1,0,0,0") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "true_left" (formula "63"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "47"))
                                       (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "73") (ifseqformula "10"))
                                       (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0"))
                                       (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                       (rule "add_literals" (formula "73") (term "0,0"))
                                       (rule "qeq_literals" (formula "73") (term "0"))
                                       (builtin "One Step Simplification" (formula "73"))
                                       (rule "false_right" (formula "73"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "48"))
                                       (rule "times_zero_1" (formula "16") (term "0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0,0,0,0") (ifseqformula "16"))
                                       (rule "qeq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "16"))
                                       (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0,0,0,0") (ifseqformula "16"))
                                       (rule "qeq_literals" (formula "68") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "68"))
                                       (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0,0") (ifseqformula "16"))
                                       (rule "qeq_literals" (formula "38") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "commute_or_2" (formula "70") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "47") (term "0"))
                                       (branch "e4 = e1 ∨ e4 = e2 TRUE"
                                          (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "48"))
                                          (rule "applyEqReverse" (formula "49") (term "2,0") (ifseqformula "48"))
                                          (rule "hideAuxiliaryEq" (formula "48"))
                                          (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "applyEqReverse" (formula "53") (term "1,1,0") (ifseqformula "48"))
                                          (rule "hideAuxiliaryEq" (formula "48"))
                                          (rule "cut_direct" (formula "28") (term "1,0"))
                                          (branch "CUT: right ≤ -1 + e1 TRUE"
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "replace_known_left" (formula "66") (term "1,0,0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "66"))
                                             (rule "true_left" (formula "66"))
                                             (rule "replace_known_left" (formula "51") (term "1,0,0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "true_left" (formula "51"))
                                             (rule "replace_known_left" (formula "37") (term "1,0,0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "28"))
                                             (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "48") (term "0") (ifseqformula "23"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "48") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "62") (term "0,2,0") (ifseqformula "48"))
                                             (rule "inEqSimp_commuteGeq" (formula "62"))
                                             (rule "applyEq" (formula "39") (term "1,1,0,0,0,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "66") (term "1,1,1,0,0,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,1,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "65") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "48"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "66") (term "0,2,1,1,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "52") (term "1,1,1,0,0,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,1,0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "48"))
                                             (rule "applyEq" (formula "49") (term "1") (ifseqformula "48"))
                                             (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "replace_known_left" (formula "63") (term "1,0,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "replace_known_left" (formula "28") (term "1,0,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "replace_known_left" (formula "48") (term "1,0") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "applyEq" (formula "61") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "46"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "30") (term "1,1,1,0,0,0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "37") (term "0,2,1,1,0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "49") (term "0,2,1,1,0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,1,0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "65") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "30") (term "0,2,1,1,0") (ifseqformula "46"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1"))
                                             (rule "mul_literals" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                             (rule "inEqSimp_contradEq3" (formula "68") (ifseqformula "11"))
                                             (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                                             (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "68") (term "0,0"))
                                             (rule "qeq_literals" (formula "68") (term "0"))
                                             (builtin "One Step Simplification" (formula "68"))
                                             (rule "false_right" (formula "68"))
                                             (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "22"))
                                             (rule "andLeft" (formula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0"))
                                             (rule "add_zero_right" (formula "21") (term "0"))
                                             (rule "leq_literals" (formula "21"))
                                             (rule "closeFalse" (formula "21"))
                                          )
                                          (branch "CUT: right ≤ -1 + e1 FALSE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "replace_known_right" (formula "66") (term "1,0,0,0") (ifseqformula "73"))
                                             (builtin "One Step Simplification" (formula "66"))
                                             (rule "replace_known_right" (formula "51") (term "1,0,0,0") (ifseqformula "73"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_right" (formula "37") (term "1,0,0,0") (ifseqformula "73"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_leqRight" (formula "73"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "71") (inst "t=i_0"))
                                             (rule "replaceKnownSelect_taclet00111111_19" (formula "71") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101100111111_33" (formula "71") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "71") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "71") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "71"))
                                             (rule "allLeft" (formula "56") (inst "t=i_0"))
                                             (rule "replaceKnownSelect_taclet00111111_21" (formula "56") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet01100111111_28" (formula "56") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "56") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "commute_or" (formula "40") (term "0,0,0"))
                                             (rule "allLeft" (formula "33") (inst "t=i_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "allLeft" (formula "43") (inst "t=i_0"))
                                             (rule "replaceKnownSelect_taclet00111111_23" (formula "43") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1100111111_25" (formula "43") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "cut_direct" (formula "37") (term "1,0"))
                                             (branch "CUT: left ≤ e2 TRUE"
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "replace_known_left" (formula "27") (term "1,0,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "replace_known_left" (formula "51") (term "1,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "true_left" (formula "51"))
                                                (rule "replace_known_left" (formula "66") (term "1,0,0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "66"))
                                                (rule "true_left" (formula "66"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "36"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "76") (ifseqformula "13"))
                                                (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                                (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "76") (term "0,0"))
                                                (rule "qeq_literals" (formula "76") (term "0"))
                                                (builtin "One Step Simplification" (formula "76"))
                                                (rule "false_right" (formula "76"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "37"))
                                                (rule "times_zero_1" (formula "19") (term "0,0"))
                                                (rule "add_zero_left" (formula "19") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_contradInEq1" (formula "72") (term "0,0,0,0,0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "72") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "72"))
                                                (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0,0,0,0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "57") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "57"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                                                (rule "times_zero_1" (formula "9") (term "0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "commute_or_2" (formula "32") (term "0,0"))
                                                (rule "commute_or_2" (formula "56") (term "0,0"))
                                                (rule "commute_or_2" (formula "71") (term "0,0"))
                                                (rule "commute_or_2" (formula "55") (term "0,0"))
                                                (rule "commute_or_2" (formula "31") (term "0,0"))
                                                (rule "commute_or_2" (formula "70") (term "0,0"))
                                                (rule "commute_or" (formula "41") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0,0"))
                                                (rule "commute_or" (formula "73") (term "0,0,0"))
                                                (rule "commute_or" (formula "58") (term "0,0,0"))
                                                (rule "commute_or" (formula "34") (term "0,0,0"))
                                                (rule "commute_or" (formula "44") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "32") (term "0"))
                                                (rule "commute_or_2" (formula "56") (term "0"))
                                                (rule "commute_or_2" (formula "71") (term "0"))
                                                (rule "commute_or_2" (formula "55") (term "0"))
                                                (rule "commute_or_2" (formula "33") (term "0,0"))
                                                (rule "commute_or_2" (formula "31") (term "0"))
                                                (rule "commute_or_2" (formula "70") (term "0"))
                                                (rule "commute_or_2" (formula "72") (term "0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "commute_or_2" (formula "57") (term "0,0"))
                                                (rule "commute_or_2" (formula "33") (term "0"))
                                                (rule "commute_or_2" (formula "72") (term "0"))
                                                (rule "commute_or_2" (formula "57") (term "0"))
                                                (rule "commute_or" (formula "43") (term "0,0,0"))
                                                (rule "allLeft" (formula "28") (inst "t=e3"))
                                                (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "28") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                (rule "leq_literals" (formula "28") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "allLeft" (formula "38") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet01100111111_31" (formula "38") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01100111111_32" (formula "38") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "commute_or_2" (formula "42") (term "0,0"))
                                                (rule "commute_or_2" (formula "74") (term "0,0"))
                                                (rule "commute_or_2" (formula "59") (term "0,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0"))
                                                (rule "allLeft" (formula "51") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet111_6" (formula "51") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "51") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "51") (term "0,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "51") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "51") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
                                                (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,0"))
                                                (rule "leq_literals" (formula "51") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "commute_or_2" (formula "45") (term "0,0"))
                                                (rule "commute_or_2" (formula "44") (term "0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "commute_or_2" (formula "75") (term "0"))
                                                (rule "commute_or_2" (formula "60") (term "0"))
                                                (rule "commute_or_2" (formula "35") (term "0"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "cut_direct" (formula "53") (term "1"))
                                                (branch "CUT: e4 = e2 TRUE"
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "true_left" (formula "54"))
                                                   (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "75") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "42") (term "1,1,1,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "76") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "74") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "71") (term "0,1,1,1,0,0,1,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "72") (term "0,2,1,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "42") (term "0,2,1,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "53") (term "1") (ifseqformula "52"))
                                                   (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "52"))
                                                   (rule "applyEq" (formula "66") (term "0,2,0") (ifseqformula "52"))
                                                   (rule "inEqSimp_commuteGeq" (formula "66"))
                                                   (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "52"))
                                                   (rule "applyEq" (formula "70") (term "1,1,1,0") (ifseqformula "52"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "52"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "applyEq" (formula "32") (term "0,2,1,1,0,0") (ifseqformula "52"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "51"))
                                                   (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "50"))
                                                   (rule "applyEq" (formula "53") (term "0,2,1,1,0,0") (ifseqformula "50"))
                                                   (rule "applyEq" (formula "70") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "50"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "50"))
                                                   (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,1,0") (ifseqformula "49"))
                                                   (rule "applyEq" (formula "64") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "49"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "22"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0"))
                                                   (rule "leq_literals" (formula "23"))
                                                   (rule "closeFalse" (formula "23"))
                                                )
                                                (branch "CUT: e4 = e2 FALSE"
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "70") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "71") (term "0,1,1,1,0,0,1,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "72") (term "1,1,1,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "42") (term "1,1,1,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "25") (term "0") (ifseqformula "53"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                   (rule "applyEq" (formula "57") (term "0,2,1,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "76") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "74") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,1,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "68") (term "0,2,0") (ifseqformula "53"))
                                                   (rule "inEqSimp_commuteGeq" (formula "68"))
                                                   (rule "applyEq" (formula "32") (term "0,2,1,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "75") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "72") (term "0,2,1,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "72") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "54") (term "1") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "79") (term "0") (ifseqformula "53"))
                                                   (rule "eqSymm" (formula "79"))
                                                   (rule "applyEq" (formula "76") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "53"))
                                                   (rule "applyEq" (formula "42") (term "0,2,1,1,0,0") (ifseqformula "53"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "mul_literals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "80") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "80") (term "0,0"))
                                                   (rule "add_literals" (formula "80") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "80") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "80") (term "0,0"))
                                                   (rule "qeq_literals" (formula "80") (term "0"))
                                                   (builtin "One Step Simplification" (formula "80"))
                                                   (rule "false_right" (formula "80"))
                                                   (rule "inEqSimp_contradEq7" (formula "79") (ifseqformula "23"))
                                                   (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0"))
                                                   (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "79") (term "0,0"))
                                                   (rule "leq_literals" (formula "79") (term "0"))
                                                   (builtin "One Step Simplification" (formula "79"))
                                                   (rule "false_right" (formula "79"))
                                                   (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "13") (term "0,0"))
                                                   (rule "qeq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "55") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "55") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "55") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "55") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "54")))
                                                   (rule "true_left" (formula "55"))
                                                   (rule "inEqSimp_contradInEq1" (formula "69") (term "1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "69") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "69") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "69") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "69") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "69") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "69") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "68")))
                                                   (rule "true_left" (formula "69"))
                                                   (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "40") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "40") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "40") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "39")))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "inEqSimp_subsumption0" (formula "50") (ifseqformula "19"))
                                                   (rule "inEqSimp_homoInEq0" (formula "50") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "50") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                                                   (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0"))
                                                   (rule "qeq_literals" (formula "50") (term "0"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "true_left" (formula "50"))
                                                   (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "62"))
                                                   (rule "polySimp_mulComm0" (formula "61") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "61") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "61"))
                                                   (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "61") (term "0"))
                                                   (rule "inEqSimp_antiSymm" (formula "59") (ifseqformula "61"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "59"))
                                                   (rule "inEqSimp_homoInEq1" (formula "60"))
                                                   (rule "polySimp_pullOutFactor1" (formula "60") (term "0"))
                                                   (rule "add_literals" (formula "60") (term "1,0"))
                                                   (rule "times_zero_1" (formula "60") (term "0"))
                                                   (rule "leq_literals" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "applyEq" (formula "62") (term "1") (ifseqformula "59"))
                                                   (rule "applyEq" (formula "68") (term "1,1,0,0") (ifseqformula "59"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "59"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "59"))
                                                   (rule "inEqSimp_homoInEq0" (formula "60"))
                                                   (rule "polySimp_pullOutFactor1" (formula "60") (term "0"))
                                                   (rule "add_literals" (formula "60") (term "1,0"))
                                                   (rule "times_zero_1" (formula "60") (term "0"))
                                                   (rule "qeq_literals" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "21"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0"))
                                                   (rule "leq_literals" (formula "22"))
                                                   (rule "closeFalse" (formula "22"))
                                                )
                                             )
                                             (branch "CUT: left ≤ e2 FALSE"
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "replace_known_right" (formula "52") (term "1,0") (ifseqformula "78"))
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "replace_known_right" (formula "68") (term "1,0,0,0") (ifseqformula "78"))
                                                (builtin "One Step Simplification" (formula "68"))
                                                (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "78"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_leqRight" (formula "78"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "23"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "e4 = e1 ∨ e4 = e2 FALSE"
                                          (rule "orRight" (formula "74"))
                                          (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "47"))
                                          (rule "applyEqReverse" (formula "48") (term "2,0") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "73"))
                                          (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "74")))
                                          (rule "applyEqReverse" (formula "52") (term "1,1,0") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "cut_direct" (formula "28") (term "1,0"))
                                          (branch "CUT: right ≤ -1 + e1 TRUE"
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "replace_known_left" (formula "50") (term "1,0,0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "replace_known_left" (formula "37") (term "1,0,0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "replace_known_left" (formula "63") (term "1,0,0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "28"))
                                             (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "71") (ifseqformula "23"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                             (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "71") (term "0,0"))
                                             (rule "qeq_literals" (formula "71") (term "0"))
                                             (builtin "One Step Simplification" (formula "71"))
                                             (rule "false_right" (formula "71"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                             (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "74") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                             (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                             (rule "add_literals" (formula "74") (term "0,0"))
                                             (rule "qeq_literals" (formula "74") (term "0"))
                                             (builtin "One Step Simplification" (formula "74"))
                                             (rule "false_right" (formula "74"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "24"))
                                             (rule "mul_literals" (formula "7") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "20"))
                                             (rule "andLeft" (formula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0"))
                                             (rule "add_zero_right" (formula "21") (term "0"))
                                             (rule "leq_literals" (formula "21"))
                                             (rule "closeFalse" (formula "21"))
                                          )
                                          (branch "CUT: right ≤ -1 + e1 FALSE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "replace_known_right" (formula "65") (term "1,0,0,0") (ifseqformula "72"))
                                             (builtin "One Step Simplification" (formula "65"))
                                             (rule "replace_known_right" (formula "50") (term "1,0,0,0") (ifseqformula "72"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "37") (term "1,0,0,0") (ifseqformula "72"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_leqRight" (formula "72"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "70") (inst "t=i_0"))
                                             (rule "replaceKnownSelect_taclet00111111_19" (formula "70") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101100111111_33" (formula "70") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "70") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "70") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "70") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "70") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "70") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "70"))
                                             (rule "allLeft" (formula "55") (inst "t=i_0"))
                                             (rule "replaceKnownSelect_taclet00111111_21" (formula "55") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet01100111111_28" (formula "55") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "commute_or" (formula "40") (term "0,0,0"))
                                             (rule "allLeft" (formula "33") (inst "t=i_0"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "allLeft" (formula "43") (inst "t=i_0"))
                                             (rule "replaceKnownSelect_taclet00111111_23" (formula "43") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1100111111_25" (formula "43") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "cut_direct" (formula "37") (term "1,0"))
                                             (branch "CUT: left ≤ e2 TRUE"
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "replace_known_left" (formula "51") (term "1,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "true_left" (formula "51"))
                                                (rule "replace_known_left" (formula "66") (term "1,0,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "66"))
                                                (rule "true_left" (formula "66"))
                                                (rule "replace_known_left" (formula "27") (term "1,0,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "36"))
                                                (rule "times_zero_1" (formula "18") (term "0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "70") (term "0,0,0,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "70") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "70"))
                                                (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "32") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "37"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "78") (ifseqformula "13"))
                                                (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0"))
                                                (rule "add_literals" (formula "78") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "78") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "78") (term "0,0"))
                                                (rule "qeq_literals" (formula "78") (term "0"))
                                                (builtin "One Step Simplification" (formula "78"))
                                                (rule "false_right" (formula "78"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                                                (rule "times_zero_1" (formula "9") (term "0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "20") (term "0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "commute_or_2" (formula "32") (term "0,0"))
                                                (rule "commute_or_2" (formula "55") (term "0,0"))
                                                (rule "commute_or_2" (formula "70") (term "0,0"))
                                                (rule "commute_or_2" (formula "54") (term "0,0"))
                                                (rule "commute_or_2" (formula "31") (term "0,0"))
                                                (rule "commute_or_2" (formula "69") (term "0,0"))
                                                (rule "commute_or" (formula "41") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0,0"))
                                                (rule "commute_or" (formula "72") (term "0,0,0"))
                                                (rule "commute_or" (formula "57") (term "0,0,0"))
                                                (rule "commute_or" (formula "34") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "71") (term "0,0"))
                                                (rule "commute_or" (formula "44") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "56") (term "0,0"))
                                                (rule "commute_or_2" (formula "33") (term "0,0"))
                                                (rule "commute_or_2" (formula "32") (term "0"))
                                                (rule "commute_or_2" (formula "55") (term "0"))
                                                (rule "commute_or_2" (formula "70") (term "0"))
                                                (rule "commute_or_2" (formula "54") (term "0"))
                                                (rule "commute_or_2" (formula "31") (term "0"))
                                                (rule "commute_or_2" (formula "69") (term "0"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "commute_or_2" (formula "71") (term "0"))
                                                (rule "commute_or_2" (formula "56") (term "0"))
                                                (rule "commute_or_2" (formula "33") (term "0"))
                                                (rule "commute_or" (formula "43") (term "0,0,0"))
                                                (rule "allLeft" (formula "28") (inst "t=e3"))
                                                (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0"))
                                                (rule "leq_literals" (formula "28") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "allLeft" (formula "38") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet01100111111_31" (formula "38") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet01100111111_32" (formula "38") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "commute_or_2" (formula "42") (term "0,0"))
                                                (rule "commute_or_2" (formula "73") (term "0,0"))
                                                (rule "allLeft" (formula "51") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet111_6" (formula "51") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "51") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "51") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "51") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "inEqSimp_contradInEq0" (formula "51") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
                                                (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,0"))
                                                (rule "leq_literals" (formula "51") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "commute_or_2" (formula "59") (term "0,0"))
                                                (rule "commute_or_2" (formula "35") (term "0,0"))
                                                (rule "commute_or_2" (formula "45") (term "0,0"))
                                                (rule "commute_or_2" (formula "44") (term "0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0"))
                                                (rule "commute_or_2" (formula "74") (term "0"))
                                                (rule "commute_or_2" (formula "59") (term "0"))
                                                (rule "commute_or_2" (formula "35") (term "0"))
                                                (rule "commute_or_2" (formula "45") (term "0"))
                                                (rule "commute_or_2" (formula "44") (term "0"))
                                                (rule "allLeft" (formula "29") (inst "t=e1"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "allLeft" (formula "30") (inst "t=e4"))
                                                (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "30") (term "0,0") (ifseqformula "55"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "allLeft" (formula "31") (inst "t=e2"))
                                                (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "31") (term "0,0") (ifseqformula "42"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "31") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "allLeft" (formula "41") (inst "t=e1"))
                                                (rule "replaceKnownSelect_taclet1_0" (formula "41") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "41") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0") (ifseqformula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "allLeft" (formula "42") (inst "t=e4"))
                                                (rule "replaceKnownSelect_taclet01100111111_30" (formula "42") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet10101100111111_34" (formula "42") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "58"))
                                                (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "42") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "30")))
                                                (rule "true_left" (formula "42"))
                                                (rule "allLeft" (formula "42") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet1_2" (formula "42") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "42") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "44"))
                                                (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "42") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "allLeft" (formula "57") (inst "t=e1"))
                                                (rule "replaceKnownSelect_taclet111_8" (formula "57") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "57") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "57") (term "0,0") (ifseqformula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "57") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "57") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "57") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "57") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "57"))
                                                (rule "allLeft" (formula "58") (inst "t=e4"))
                                                (rule "replaceKnownSelect_taclet01100111111_29" (formula "58") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet10101100111111_35" (formula "58") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                                                (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "58") (term "0,0") (ifseqformula "60"))
                                                (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "58") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "58") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "58") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "30")))
                                                (rule "true_left" (formula "58"))
                                                (rule "allLeft" (formula "58") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet111_4" (formula "58") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "58") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                                                (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "58") (term "0,0") (ifseqformula "44"))
                                                (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "58") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "58") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "58") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "58") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "cut_direct" (formula "36") (term "1,0"))
                                                (branch "CUT: right ≤ -1 + e3 TRUE"
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "replace_known_left" (formula "79") (term "1,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "79"))
                                                   (rule "true_left" (formula "79"))
                                                   (rule "replace_known_left" (formula "64") (term "1,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "true_left" (formula "64"))
                                                   (rule "replace_known_left" (formula "48") (term "1,0") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "true_left" (formula "48"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "36"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "85") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "85") (term "0,0"))
                                                   (rule "add_literals" (formula "85") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "85") (term "1,0,0"))
                                                   (rule "add_literals" (formula "85") (term "0,0"))
                                                   (rule "leq_literals" (formula "85") (term "0"))
                                                   (builtin "One Step Simplification" (formula "85"))
                                                   (rule "false_right" (formula "85"))
                                                   (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "37"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "28"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "26"))
                                                   (rule "andLeft" (formula "27"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0"))
                                                   (rule "add_zero_right" (formula "27") (term "0"))
                                                   (rule "leq_literals" (formula "27"))
                                                   (rule "closeFalse" (formula "27"))
                                                )
                                                (branch "CUT: right ≤ -1 + e3 FALSE"
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "replace_known_right" (formula "79") (term "1,0") (ifseqformula "85"))
                                                   (builtin "One Step Simplification" (formula "79"))
                                                   (rule "replace_known_right" (formula "48") (term "1,0") (ifseqformula "85"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0") (ifseqformula "85"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "inEqSimp_leqRight" (formula "85"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "cut_direct" (formula "64") (term "1,0"))
                                                   (branch "CUT: right ≤ -1 + e4 TRUE"
                                                      (builtin "One Step Simplification" (formula "65"))
                                                      (rule "true_left" (formula "65"))
                                                      (rule "replace_known_left" (formula "48") (term "1,0") (ifseqformula "64"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "true_left" (formula "48"))
                                                      (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "63"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "replace_known_left" (formula "77") (term "1,0") (ifseqformula "62"))
                                                      (builtin "One Step Simplification" (formula "77"))
                                                      (rule "true_left" (formula "77"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "62"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "84") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "84") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0"))
                                                      (rule "add_literals" (formula "84") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "84") (term "1,0,0"))
                                                      (rule "add_literals" (formula "84") (term "0,0"))
                                                      (rule "leq_literals" (formula "84") (term "0"))
                                                      (builtin "One Step Simplification" (formula "84"))
                                                      (rule "false_right" (formula "84"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "63"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "63"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "29"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0"))
                                                      (rule "leq_literals" (formula "28"))
                                                      (rule "closeFalse" (formula "28"))
                                                   )
                                                   (branch "CUT: right ≤ -1 + e4 FALSE"
                                                      (builtin "One Step Simplification" (formula "64"))
                                                      (rule "replace_known_right" (formula "36") (term "1,0") (ifseqformula "86"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "replace_known_right" (formula "79") (term "1,0") (ifseqformula "86"))
                                                      (builtin "One Step Simplification" (formula "79"))
                                                      (rule "replace_known_right" (formula "48") (term "1,0") (ifseqformula "86"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_leqRight" (formula "86"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "cut_direct" (formula "82") (term "1,0"))
                                                      (branch "CUT: right ≤ -1 + e2 TRUE"
                                                         (builtin "One Step Simplification" (formula "83"))
                                                         (rule "true_left" (formula "83"))
                                                         (rule "replace_known_left" (formula "67") (term "1,0") (ifseqformula "82"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "true_left" (formula "67"))
                                                         (rule "replace_known_left" (formula "51") (term "1,0") (ifseqformula "81"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "true_left" (formula "51"))
                                                         (rule "replace_known_left" (formula "39") (term "1,0") (ifseqformula "80"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "true_left" (formula "39"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "79"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "79"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "27"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0"))
                                                         (rule "add_literals" (formula "27") (term "0"))
                                                         (rule "leq_literals" (formula "27"))
                                                         (rule "closeFalse" (formula "27"))
                                                      )
                                                      (branch "CUT: right ≤ -1 + e2 FALSE"
                                                         (builtin "One Step Simplification" (formula "82"))
                                                         (rule "replace_known_right" (formula "67") (term "1,0") (ifseqformula "87"))
                                                         (builtin "One Step Simplification" (formula "67"))
                                                         (rule "replace_known_right" (formula "51") (term "1,0") (ifseqformula "87"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_right" (formula "39") (term "1,0") (ifseqformula "87"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_leqRight" (formula "87"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "allLeft" (formula "78") (inst "t=e3"))
                                                         (rule "replaceKnownSelect_taclet11111_10" (formula "78") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "78") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "78") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "78") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "78") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "78") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "78") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "78") (term "1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "78") (term "1") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "78") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "78") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "78") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "78") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "78") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1"))
                                                         (rule "add_literals" (formula "78") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "78") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "78") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "78"))
                                                         (rule "inEqSimp_contradInEq1" (formula "78") (term "1") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "78") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0,1"))
                                                         (rule "add_literals" (formula "78") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "78") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "78") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "78") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "78"))
                                                         (rule "inEqSimp_contradInEq0" (formula "78") (ifseqformula "6"))
                                                         (rule "andLeft" (formula "78"))
                                                         (rule "inEqSimp_homoInEq1" (formula "78"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "78") (term "0"))
                                                         (rule "add_literals" (formula "78") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "78") (term "1,0"))
                                                         (rule "add_literals" (formula "78") (term "0"))
                                                         (rule "leq_literals" (formula "78"))
                                                         (rule "closeFalse" (formula "78"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: left ≤ e2 FALSE"
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "replace_known_right" (formula "27") (term "1,0,0,0") (ifseqformula "77"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "replace_known_right" (formula "51") (term "1,0") (ifseqformula "77"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_right" (formula "67") (term "1,0,0,0") (ifseqformula "77"))
                                                (builtin "One Step Simplification" (formula "67"))
                                                (rule "inEqSimp_leqRight" (formula "77"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "23"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: left ≤ e4 FALSE"
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "replace_known_right" (formula "24") (term "1,0,0,0") (ifseqformula "75"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "75"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "replace_known_right" (formula "65") (term "1,0,0,0") (ifseqformula "75"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "inEqSimp_leqRight" (formula "75"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0"))
                                       (rule "add_literals" (formula "22") (term "0"))
                                       (rule "leq_literals" (formula "22"))
                                       (rule "closeFalse" (formula "22"))
                                    )
                                 )
                              )
                              (branch "j_0 = e3 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "i_0 = e3 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "49") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0"))
                                    (rule "leq_literals" (formula "49") (term "0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "false_right" (formula "49"))
                                    (rule "inEqSimp_contradEq7" (formula "48") (ifseqformula "8"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                    (rule "add_literals" (formula "48") (term "0,0"))
                                    (rule "leq_literals" (formula "48") (term "0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "false_right" (formula "48"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "17"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "9"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "19"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0"))
                                    (rule "add_zero_right" (formula "20") (term "0"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "closeFalse" (formula "20"))
                                 )
                                 (branch "i_0 = e3 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "allLeft" (formula "29") (inst "t=e4"))
                                    (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "29") (term "1,1,0") (inst "selectSK=arr_15"))
                                    (rule "simplifySelectOfAnon" (formula "29"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "55")) (ifInst ""  (formula "12")))
                                    (rule "elementOfUnion" (formula "29") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0"))
                                    (rule "commute_or" (formula "30") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0,0"))
                                    (rule "allLeft" (formula "31") (inst "t=e3"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "31") (term "1,1,0") (inst "selectSK=arr_16"))
                                    (rule "simplifySelectOfAnon" (formula "31"))
                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "57")) (ifInst ""  (formula "12")))
                                    (rule "elementOfUnion" (formula "31") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "31") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradEq7" (formula "31") (term "1,0,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "31") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "commute_or_2" (formula "32") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "32") (term "0,0"))
                                    (rule "commute_or_2" (formula "32") (term "0"))
                                    (rule "commute_or" (formula "32") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "32") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "32") (term "0,0"))
                                    (rule "allLeft" (formula "33") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet1_2" (formula "33") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "33") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "33") (term "0,0"))
                                    (rule "commute_or_2" (formula "33") (term "0"))
                                    (rule "commute_or" (formula "33") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "33") (term "0,0"))
                                    (rule "allLeft" (formula "49") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet11111_10" (formula "49") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "49") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "49") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0"))
                                    (rule "commute_or" (formula "49") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "49") (term "0,0"))
                                    (rule "allLeft" (formula "51") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet11111_16" (formula "51") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "51") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "51") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "commute_or" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0"))
                                    (rule "allLeft" (formula "50") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet11111_12" (formula "50") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "50") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "50") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "50") (term "0,0"))
                                    (rule "commute_or_2" (formula "50") (term "0"))
                                    (rule "commute_or" (formula "50") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "50") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "50") (term "0,0"))
                                    (rule "allLeft" (formula "51") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet11111_14" (formula "51") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "51") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0"))
                                    (rule "commute_or" (formula "51") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0"))
                                    (rule "allLeft" (formula "42") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet111_8" (formula "42") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "42") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "allLeft" (formula "41") (inst "t=e4"))
                                    (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "41") (term "1,1,0") (inst "selectSK=arr_17"))
                                    (rule "simplifySelectOfAnon" (formula "41"))
                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "65")) (ifInst ""  (formula "12")))
                                    (rule "replaceKnownSelect_taclet111100111111_28" (formula "41") (term "2,0"))
                                    (rule "elementOfUnion" (formula "41") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "41") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_contradEq7" (formula "41") (term "1,0,0") (ifseqformula "21"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "41") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "elementOfUnion" (formula "41") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "41") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "elementOfSingleton" (formula "41") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "allLeft" (formula "43") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet111_6" (formula "43") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "43") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0,0"))
                                    (rule "commute_or_2" (formula "43") (term "0"))
                                    (rule "allLeft" (formula "44") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet111_4" (formula "44") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "44") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "35") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet1_0" (formula "35") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "35") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "allLeft" (formula "25") (inst "t=e4"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "26") (inst "t=e3"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "27") (inst "t=e2"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "29") (inst "t=e1"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "allLeft" (formula "30") (inst "t=e4"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "65") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet11111_12" (formula "65") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "65") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "65") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "65") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "65") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "53") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet111100111111_30" (formula "53") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "67") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet11111_10" (formula "67") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "67") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "67") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "67") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "41") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet111100111111_28" (formula "41") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "69") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet11111_14" (formula "69") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "69") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "69") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "69") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "42") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet111100111111_29" (formula "42") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "56") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet111_6" (formula "56") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "56") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "57") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet111_4" (formula "57") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "57") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "57") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "43") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet1_2" (formula "43") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "43") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "31") (inst "t=e3"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "32") (inst "t=e2"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0,0,0"))
                                    (rule "commute_or" (formula "53") (term "0,0,0,0"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                    (rule "commute_or" (formula "54") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                    (rule "commute_or" (formula "29") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                    (rule "allLeft" (formula "67") (inst "t=j_0"))
                                    (rule "replaceKnownSelect_taclet00111111_18" (formula "67") (term "0,1"))
                                    (rule "inEqSimp_commuteGeq" (formula "67") (term "1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "67") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "67") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1,0,0"))
                                    (rule "mul_literals" (formula "67") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "67") (term "0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "67") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "67") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "67") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "67") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_contradInEq1" (formula "67") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "67") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,0"))
                                    (rule "add_literals" (formula "67") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "67") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "67") (term "0,0,0"))
                                    (rule "leq_literals" (formula "67") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "67"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_literals" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                           )
                        )
                     )
                     (branch
                        (rule "allRight" (formula "35") (inst "sk=i_0"))
                        (rule "orRight" (formula "35"))
                        (rule "orRight" (formula "35"))
                        (rule "allRight" (formula "37") (inst "sk=j_0"))
                        (rule "orRight" (formula "37"))
                        (rule "orRight" (formula "37"))
                        (rule "inEqSimp_leqRight" (formula "35"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_geqRight" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "39"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_9"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "8")))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                        (rule "mul_literals" (formula "19") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1"))
                        (rule "mul_literals" (formula "19") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_10"))
                        (rule "simplifySelectOfAnon" (formula "4"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "43")) (ifInst ""  (formula "10")))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "elementOfUnion" (formula "4") (term "0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "4") (term "0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_11"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")) (ifInst ""  (formula "11")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_12"))
                        (rule "simplifySelectOfAnon" (formula "5"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "45")) (ifInst ""  (formula "12")))
                        (rule "elementOfUnion" (formula "5") (term "0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "5") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_13"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "13")))
                        (rule "elementOfUnion" (formula "3") (term "0,0"))
                        (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_14"))
                        (rule "simplifySelectOfAnon" (formula "6"))
                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "47")) (ifInst ""  (formula "14")))
                        (rule "elementOfUnion" (formula "6") (term "0,0"))
                        (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "j_0 = e1 ∨ j_0 = e2 TRUE"
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch "i_0 = e1 ∨ i_0 = e2 TRUE"
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "allLeft" (formula "40") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_19" (formula "40") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010111111_29" (formula "40") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "40") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "40") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "allLeft" (formula "27") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_23" (formula "27") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010111111_27" (formula "27") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "27") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "27") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "allLeft" (formula "24") (inst "t=i_0"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "24") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "allLeft" (formula "35") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_21" (formula "35") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0010111111_28" (formula "35") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0,0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "8"))
                              (rule "qeq_literals" (formula "35") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "allLeft" (formula "29") (inst "t=e1"))
                              (rule "replaceKnownSelect_taclet1_0" (formula "29") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "29") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "commute_or" (formula "29") (term "0,0,0"))
                              (rule "commute_or_2" (formula "29") (term "0,0"))
                              (rule "commute_or_2" (formula "29") (term "0"))
                              (rule "allLeft" (formula "45") (inst "t=e1"))
                              (rule "replaceKnownSelect_taclet11111_16" (formula "45") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "45") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "commute_or" (formula "45") (term "0,0,0"))
                              (rule "commute_or_2" (formula "45") (term "0,0"))
                              (rule "commute_or_2" (formula "45") (term "0"))
                              (rule "allLeft" (formula "23") (inst "t=e4"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                              (rule "commute_or_2" (formula "23") (term "0,0,0"))
                              (rule "commute_or_2" (formula "23") (term "0,0"))
                              (rule "commute_or_2" (formula "23") (term "0"))
                              (rule "commute_or" (formula "23") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "23") (term "0,0,0"))
                              (rule "commute_or_2" (formula "23") (term "0,0"))
                              (rule "allLeft" (formula "24") (inst "t=e3"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                              (rule "commute_or_2" (formula "24") (term "0,0,0"))
                              (rule "commute_or_2" (formula "24") (term "0,0"))
                              (rule "commute_or_2" (formula "24") (term "0"))
                              (rule "commute_or" (formula "24") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "24") (term "0,0,0"))
                              (rule "commute_or_2" (formula "24") (term "0,0"))
                              (rule "allLeft" (formula "27") (inst "t=e1"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0,0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "27") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "commute_or" (formula "27") (term "0,0,0"))
                              (rule "commute_or_2" (formula "27") (term "0,0"))
                              (rule "commute_or_2" (formula "27") (term "0"))
                              (rule "allLeft" (formula "30") (inst "t=e4"))
                              (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                              (rule "pullOutSelect" (formula "30") (term "1,1,0") (inst "selectSK=arr_15"))
                              (rule "simplifySelectOfAnon" (formula "30"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "54")) (ifInst ""  (formula "10")))
                              (rule "elementOfUnion" (formula "30") (term "0,0"))
                              (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or_2" (formula "31") (term "0,0,0"))
                              (rule "commute_or_2" (formula "31") (term "0,0"))
                              (rule "commute_or_2" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "31") (term "0,0,0"))
                              (rule "commute_or_2" (formula "31") (term "0,0"))
                              (rule "allLeft" (formula "48") (inst "t=e3"))
                              (rule "replaceKnownSelect_taclet11111_10" (formula "48") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "48") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0,0,0,0"))
                              (rule "commute_or_2" (formula "48") (term "0,0,0"))
                              (rule "commute_or_2" (formula "48") (term "0,0"))
                              (rule "commute_or_2" (formula "48") (term "0"))
                              (rule "commute_or" (formula "48") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "48") (term "0,0,0"))
                              (rule "commute_or_2" (formula "48") (term "0,0"))
                              (rule "allLeft" (formula "25") (inst "t=e2"))
                              (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                              (rule "commute_or_2" (formula "25") (term "0,0,0"))
                              (rule "commute_or_2" (formula "25") (term "0,0"))
                              (rule "commute_or_2" (formula "25") (term "0"))
                              (rule "commute_or" (formula "25") (term "0,0,0,0"))
                              (rule "commute_or_2" (formula "25") (term "0,0,0"))
                              (rule "commute_or_2" (formula "25") (term "0,0"))
                              (rule "allLeft" (formula "43") (inst "t=e1"))
                              (rule "replaceKnownSelect_taclet111_8" (formula "43") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "43") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "43"))
                              (rule "commute_or" (formula "43") (term "0,0,0"))
                              (rule "commute_or_2" (formula "43") (term "0,0"))
                              (rule "commute_or_2" (formula "43") (term "0"))
                              (rule "allLeft" (formula "33") (inst "t=e3"))
                              (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0,0"))
                              (rule "pullOutSelect" (formula "33") (term "1,1,0") (inst "selectSK=arr_16"))
                              (rule "simplifySelectOfAnon" (formula "33"))
                              (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "59")) (ifInst ""  (formula "10")))
                              (rule "elementOfUnion" (formula "33") (term "0,0"))
                              (rule "elementOfSingleton" (formula "33") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradEq7" (formula "33") (term "1,0,0") (ifseqformula "18"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1,0,0"))
                              (rule "leq_literals" (formula "33") (term "0,1,0,0"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "commute_or_2" (formula "34") (term "0,0,0"))
                              (rule "commute_or_2" (formula "34") (term "0,0"))
                              (rule "commute_or_2" (formula "34") (term "0"))
                              (rule "allLeft" (formula "35") (inst "t=e2"))
                              (rule "replaceKnownSelect_taclet1_2" (formula "35") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "35") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                              (rule "allLeft" (formula "54") (inst "t=e4"))
                              (rule "replaceKnownSelect_taclet11111_12" (formula "54") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "54") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0,0,0"))
                              (rule "allLeft" (formula "55") (inst "t=e2"))
                              (rule "replaceKnownSelect_taclet11111_14" (formula "55") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "55") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0,0,0,0"))
                              (rule "allLeft" (formula "44") (inst "t=e4"))
                              (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0,0,0,0"))
                              (rule "pullOutSelect" (formula "44") (term "1,1,0") (inst "selectSK=arr_17"))
                              (rule "simplifySelectOfAnon" (formula "44"))
                              (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "64")) (ifInst ""  (formula "10")))
                              (rule "replaceKnownSelect_taclet0010111111_30" (formula "44") (term "2,0"))
                              (rule "elementOfUnion" (formula "44") (term "0,0"))
                              (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "inEqSimp_contradEq7" (formula "44") (term "1,0,0") (ifseqformula "19"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                              (rule "leq_literals" (formula "44") (term "0,1,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "elementOfUnion" (formula "44") (term "0,0"))
                              (rule "elementOfSingleton" (formula "44") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "allLeft" (formula "46") (inst "t=e3"))
                              (rule "replaceKnownSelect_taclet111_6" (formula "46") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "46") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0,0,0,0"))
                              (rule "allLeft" (formula "47") (inst "t=e2"))
                              (rule "replaceKnownSelect_taclet111_4" (formula "47") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "47") (term "1,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0,0"))
                              (rule "allLeft" (formula "29") (inst "t=e4"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "30") (inst "t=e3"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "31") (inst "t=e2"))
                              (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "54") (inst "t=e4"))
                              (rule "replaceKnownSelect_taclet0010111111_32" (formula "54") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "42") (inst "t=e4"))
                              (rule "replaceKnownSelect_taclet0010111111_30" (formula "42") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "68") (inst "t=e4"))
                              (rule "replaceKnownSelect_taclet11111_12" (formula "68") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "68") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "68") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "69") (inst "t=e3"))
                              (rule "replaceKnownSelect_taclet11111_10" (formula "69") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "69") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "69") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "69") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "56") (inst "t=e3"))
                              (rule "replaceKnownSelect_taclet111_6" (formula "56") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "56") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "71") (inst "t=e2"))
                              (rule "replaceKnownSelect_taclet11111_14" (formula "71") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "71") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "43") (inst "t=e3"))
                              (rule "replaceKnownSelect_taclet0010111111_31" (formula "43") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "44") (inst "t=e2"))
                              (rule "replaceKnownSelect_taclet1_2" (formula "44") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "44") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                              (rule "allLeft" (formula "59") (inst "t=e2"))
                              (rule "replaceKnownSelect_taclet111_4" (formula "59") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "59") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                              (rule "commute_or_2" (formula "38") (term "0,0,0"))
                              (rule "cut_direct" (formula "3") (term "0"))
                              (branch "CUT: j_0 = e1 TRUE"
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "replace_known_left" (formula "71") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "71"))
                                 (rule "true_left" (formula "71"))
                                 (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "true_left" (formula "41"))
                                 (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "replace_known_left" (formula "54") (term "1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "true_left" (formula "54"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "mul_literals" (formula "21") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "4") (term "0") (ifseqformula "6"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "53") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "39") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "27") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "67") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "6"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "inEqSimp_homoInEq1" (formula "17"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0"))
                                 (rule "leq_literals" (formula "17"))
                                 (rule "closeFalse" (formula "17"))
                              )
                              (branch "CUT: j_0 = e1 FALSE"
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "replace_known_left" (formula "44") (term "1,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "replace_known_left" (formula "31") (term "1,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "replace_known_left" (formula "72") (term "1,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "72"))
                                 (rule "true_left" (formula "72"))
                                 (rule "replace_known_left" (formula "57") (term "1,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "true_left" (formula "57"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "74") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "6"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                 (rule "qeq_literals" (formula "4") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "53") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "27") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "67") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "39") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "73") (ifseqformula "16"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0"))
                                 (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "73") (term "0,0"))
                                 (rule "leq_literals" (formula "73") (term "0"))
                                 (builtin "One Step Simplification" (formula "73"))
                                 (rule "false_right" (formula "73"))
                                 (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "67") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "67") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "67") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "67") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "67") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "67") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "67") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "67") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "67") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "66")))
                                 (rule "true_left" (formula "67"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "58"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "leq_literals" (formula "5"))
                                 (rule "closeFalse" (formula "5"))
                              )
                           )
                           (branch "i_0 = e1 ∨ i_0 = e2 FALSE"
                              (rule "orRight" (formula "45"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_right" (formula "5") (term "1,0,0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")))
                              (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "45")))
                              (rule "allLeft" (formula "34") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_21" (formula "34") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "34") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "allLeft" (formula "42") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_19" (formula "42") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "42") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "42") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "allLeft" (formula "25") (inst "t=i_0"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "allLeft" (formula "29") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_23" (formula "29") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1010111111_27" (formula "29") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "i_0 = e3 TRUE"
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_contradEq7" (formula "48") (ifseqformula "18"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0"))
                                 (rule "leq_literals" (formula "48") (term "0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "false_right" (formula "48"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "allLeft" (formula "36") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet111_8" (formula "36") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "36") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "36") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "allLeft" (formula "43") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "43") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "43") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or" (formula "43") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "allLeft" (formula "29") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet1_0" (formula "29") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "29") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "commute_or" (formula "29") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0"))
                                 (rule "allLeft" (formula "45") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "45") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "45") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0"))
                                 (rule "commute_or" (formula "45") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "45") (term "0,0"))
                                 (rule "allLeft" (formula "35") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "35") (term "1,1,0") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfAnon" (formula "35"))
                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "54")) (ifInst ""  (formula "10")))
                                 (rule "elementOfUnion" (formula "35") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_contradEq7" (formula "35") (term "1,0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "elementOfUnion" (formula "35") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "pullOutSelect" (formula "35") (term "2,0") (inst "selectSK=arr_16"))
                                 (rule "simplifySelectOfAnon" (formula "35"))
                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "55")) (ifInst ""  (formula "10")))
                                 (rule "elementOfUnion" (formula "35") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "allLeft" (formula "25") (inst "t=e1"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "commute_or" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "allLeft" (formula "28") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet01010111111_31" (formula "28") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "40") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet111_6" (formula "40") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "40") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "40") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "allLeft" (formula "41") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "41") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "41") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "55") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet11111_16" (formula "55") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "55") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "allLeft" (formula "23") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "54") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11111_10" (formula "54") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "54") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "54") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "allLeft" (formula "30") (inst "t=e3"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "1,1,0") (inst "selectSK=arr_17"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "64")) (ifInst ""  (formula "10")))
                                 (rule "elementOfUnion" (formula "30") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "63")))
                                 (rule "inEqSimp_contradEq7" (formula "30") (term "0,0") (ifseqformula "18"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "30") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "31") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "31") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "31") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "24") (inst "t=e3"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "allLeft" (formula "25") (inst "t=e2"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "62") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "62") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "62") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "62") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "62") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "63") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11111_10" (formula "63") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "63") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "63") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "63") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "63") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "63") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "63") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "63") (term "0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "63") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "63") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "63") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "63"))
                                 (rule "inEqSimp_contradInEq1" (formula "63") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "63") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "60")))
                                 (rule "true_left" (formula "63"))
                                 (rule "allLeft" (formula "50") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet01010111111_30" (formula "50") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "50") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "51") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet111_6" (formula "51") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "51") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "51") (term "0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "51") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "51") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "48")))
                                 (rule "true_left" (formula "51"))
                                 (rule "allLeft" (formula "51") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "51") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "51") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "65") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "65") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "65") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "65") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "65") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "65") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "29") (inst "t=e4"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "38") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet01010111111_31" (formula "38") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "30") (inst "t=e3"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "30") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "27")))
                                 (rule "true_left" (formula "30"))
                                 (rule "allLeft" (formula "30") (inst "t=e2"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "40") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet01010111111_32" (formula "40") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01010111111_33" (formula "40") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0,0,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "40") (term "0,1,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0,0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "40") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "37")))
                                 (rule "true_left" (formula "40"))
                                 (rule "allLeft" (formula "40") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "40") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "40") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                 (rule "commute_or" (formula "48") (term "0,0,0,0"))
                                 (rule "cut_direct" (formula "3") (term "0"))
                                 (branch "CUT: j_0 = e1 TRUE"
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                    (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "true_left" (formula "53"))
                                    (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "replace_known_left" (formula "64") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "true_left" (formula "64"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_contradEq3" (formula "69") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0"))
                                    (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "69") (term "0,0"))
                                    (rule "qeq_literals" (formula "69") (term "0"))
                                    (builtin "One Step Simplification" (formula "69"))
                                    (rule "false_right" (formula "69"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0"))
                                    (rule "leq_literals" (formula "17"))
                                    (rule "closeFalse" (formula "17"))
                                 )
                                 (branch "CUT: j_0 = e1 FALSE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "73") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                    (rule "replace_known_left" (formula "40") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "replace_known_left" (formula "54") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "true_left" (formula "54"))
                                    (rule "replace_known_left" (formula "67") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "67"))
                                    (rule "true_left" (formula "67"))
                                    (rule "replace_known_left" (formula "30") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "69") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0"))
                                    (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "69") (term "0,0"))
                                    (rule "leq_literals" (formula "69") (term "0"))
                                    (builtin "One Step Simplification" (formula "69"))
                                    (rule "false_right" (formula "69"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "6"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0"))
                                    (rule "leq_literals" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                              )
                              (branch "i_0 = e3 FALSE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "allLeft" (formula "34") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "34") (term "1,1,0") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfAnon" (formula "34"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                                 (rule "elementOfUnion" (formula "34") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_contradEq7" (formula "34") (term "1,0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "34") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "elementOfUnion" (formula "34") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=arr_16"))
                                 (rule "simplifySelectOfAnon" (formula "34"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "53")) (ifInst ""  (formula "10")))
                                 (rule "elementOfUnion" (formula "34") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "commute_or" (formula "36") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "allLeft" (formula "25") (inst "t=e1"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "commute_or" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "allLeft" (formula "28") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11010111111_30" (formula "28") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0"))
                                 (rule "commute_or" (formula "28") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "28") (term "0,0"))
                                 (rule "allLeft" (formula "47") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11111_10" (formula "47") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "47") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0"))
                                 (rule "commute_or" (formula "47") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0,0"))
                                 (rule "allLeft" (formula "39") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet111_6" (formula "39") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "39") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or" (formula "39") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0"))
                                 (rule "allLeft" (formula "40") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "40") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "40") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0"))
                                 (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "40") (term "0,0"))
                                 (rule "allLeft" (formula "43") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet111_8" (formula "43") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "43") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "commute_or" (formula "43") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0,0"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "allLeft" (formula "29") (inst "t=e3"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "29") (term "1,1,0") (inst "selectSK=arr_17"))
                                 (rule "simplifySelectOfAnon" (formula "29"))
                                 (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "61")) (ifInst ""  (formula "10")))
                                 (rule "elementOfUnion" (formula "29") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradEq7" (formula "29") (term "1,0,0") (ifseqformula "18"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "29") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "30") (term "0,0"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "allLeft" (formula "31") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "31") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "31") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "34") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet1_0" (formula "34") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "34") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "34") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "allLeft" (formula "55") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "55") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "55") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "56") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "56") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "56") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "allLeft" (formula "59") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet11111_16" (formula "59") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "59") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "59") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "59") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "59"))
                                 (rule "allLeft" (formula "23") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "24") (inst "t=e3"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "25") (inst "t=e2"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "29") (inst "t=e4"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "64") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "64") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "64") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "64") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "64") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "30") (inst "t=e3"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "66") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11111_10" (formula "66") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "66") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "66") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "40") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11010111111_30" (formula "40") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "68") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "68") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "68") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "68") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "31") (inst "t=e2"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "42") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11010111111_31" (formula "42") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "43") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "43") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "43") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "57") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11010111111_29" (formula "57") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "57") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "58") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet111_6" (formula "58") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "58") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "59") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "59") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "59") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "37") (term "0,0"))
                                 (rule "cut_direct" (formula "3") (term "0"))
                                 (branch "CUT: j_0 = e1 TRUE"
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                    (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "true_left" (formula "56"))
                                    (rule "replace_known_left" (formula "70") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "70"))
                                    (rule "true_left" (formula "70"))
                                    (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_contradEq3" (formula "75") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                    (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                    (rule "add_literals" (formula "75") (term "0,0"))
                                    (rule "qeq_literals" (formula "75") (term "0"))
                                    (builtin "One Step Simplification" (formula "75"))
                                    (rule "false_right" (formula "75"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "48") (term "0,0,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "48") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradEq3" (formula "49") (term "0,0,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "49") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                    (rule "times_zero_1" (formula "8") (term "0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "36") (term "0,0") (ifseqformula "19"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "applyEqReverse" (formula "42") (term "1,1,0") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "37") (term "1,1,0,0") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "17"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0"))
                                    (rule "leq_literals" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch "CUT: j_0 = e1 FALSE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                    (rule "replace_known_left" (formula "59") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "59"))
                                    (rule "true_left" (formula "59"))
                                    (rule "replace_known_left" (formula "31") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "replace_known_left" (formula "42") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "replace_known_left" (formula "71") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "71"))
                                    (rule "true_left" (formula "71"))
                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "74") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1"))
                                    (rule "mul_literals" (formula "6") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "74") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                    (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "74") (term "0,0"))
                                    (rule "leq_literals" (formula "74") (term "0"))
                                    (builtin "One Step Simplification" (formula "74"))
                                    (rule "false_right" (formula "74"))
                                    (rule "inEqSimp_contradEq3" (formula "76") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                    (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                    (rule "add_literals" (formula "76") (term "0,0"))
                                    (rule "qeq_literals" (formula "76") (term "0"))
                                    (builtin "One Step Simplification" (formula "76"))
                                    (rule "false_right" (formula "76"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                    (rule "times_zero_1" (formula "8") (term "0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "mul_literals" (formula "8") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "52") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "66") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "66"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "49") (term "1,0,0") (ifseqformula "21"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "49") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_contradEq3" (formula "50") (term "1,0,0") (ifseqformula "21"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "50") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "5"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "62") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "62"))
                                    (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                    (rule "polySimp_elimOne" (formula "62") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "19"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0"))
                                    (rule "add_zero_right" (formula "20") (term "0"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "closeFalse" (formula "20"))
                                 )
                              )
                           )
                        )
                        (branch "j_0 = e1 ∨ j_0 = e2 FALSE"
                           (rule "orRight" (formula "47"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_right" (formula "4") (term "1,0,0,0,0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "46")))
                           (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")))
                           (rule "ifthenelse_split" (formula "5") (term "0"))
                           (branch "i_0 = e1 ∨ i_0 = e2 TRUE"
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "inEqSimp_homoInEq0" (formula "6"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "allLeft" (formula "25") (inst "t=i_0"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "allLeft" (formula "29") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_23" (formula "29") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0110111111_25" (formula "29") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "allLeft" (formula "36") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_21" (formula "36") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0110111111_26" (formula "36") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "36") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "36") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "allLeft" (formula "44") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_19" (formula "44") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0110111111_27" (formula "44") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0,0") (ifseqformula "9"))
                              (rule "qeq_literals" (formula "44") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "44") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "44") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "j_0 = e3 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1"))
                                 (rule "mul_literals" (formula "6") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "mul_literals" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_contradEq7" (formula "48") (ifseqformula "18"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                 (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0"))
                                 (rule "leq_literals" (formula "48") (term "0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "false_right" (formula "48"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "20"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "leq_literals" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                              (branch "j_0 = e3 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "allLeft" (formula "36") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet111_8" (formula "36") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "36") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "36") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "commute_or" (formula "36") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0,0"))
                                 (rule "commute_or_2" (formula "36") (term "0"))
                                 (rule "allLeft" (formula "25") (inst "t=e1"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "commute_or" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "allLeft" (formula "44") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11111_10" (formula "44") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "44") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0"))
                                 (rule "commute_or" (formula "44") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "44") (term "0,0"))
                                 (rule "allLeft" (formula "28") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "28") (term "1,1,0") (inst "selectSK=arr_15"))
                                 (rule "simplifySelectOfAnon" (formula "28"))
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "55")) (ifInst ""  (formula "10")))
                                 (rule "elementOfUnion" (formula "28") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0"))
                                 (rule "commute_or" (formula "29") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0"))
                                 (rule "allLeft" (formula "37") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "37") (term "1,1,0") (inst "selectSK=arr_16"))
                                 (rule "simplifySelectOfAnon" (formula "37"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "57")) (ifInst ""  (formula "10")))
                                 (rule "replaceKnownSelect_taclet10110111111_29" (formula "37") (term "2,0"))
                                 (rule "elementOfUnion" (formula "37") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "37") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "inEqSimp_contradEq7" (formula "37") (term "1,0,0") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "37") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "elementOfUnion" (formula "37") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "37") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "commute_or" (formula "38") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0"))
                                 (rule "allLeft" (formula "30") (inst "t=e3"))
                                 (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                 (rule "pullOutSelect" (formula "30") (term "1,1,0") (inst "selectSK=arr_17"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "59")) (ifInst ""  (formula "10")))
                                 (rule "elementOfUnion" (formula "30") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradEq7" (formula "30") (term "1,0,0") (ifseqformula "18"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                 (rule "leq_literals" (formula "30") (term "0,1,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0"))
                                 (rule "allLeft" (formula "51") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "51") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "51") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "51") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "51") (term "0,0"))
                                 (rule "commute_or_2" (formula "51") (term "0"))
                                 (rule "allLeft" (formula "52") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "52") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "52") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0"))
                                 (rule "allLeft" (formula "32") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "32") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "32") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "42") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet111_6" (formula "42") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "42") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "43") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "43") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "43") (term "1,1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "58") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet11111_16" (formula "58") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "58") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "58") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "allLeft" (formula "23") (inst "t=e4"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "24") (inst "t=e3"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "25") (inst "t=e2"))
                                 (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                 (rule "allLeft" (formula "38") (inst "t=e1"))
                                 (rule "replaceKnownSelect_taclet1_0" (formula "38") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "38") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0,0") (ifseqformula "13"))
                                 (rule "qeq_literals" (formula "38") (term "0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "allLeft" (formula "29") (inst "t=e4"))
                                 (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "30") (inst "t=e3"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "53") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet10110111111_30" (formula "53") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "31") (inst "t=e2"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "42") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet10110111111_29" (formula "42") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "68") (inst "t=e4"))
                                 (rule "replaceKnownSelect_taclet11111_12" (formula "68") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "68") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "68") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "69") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet11111_10" (formula "69") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "69") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "69") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "69") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "43") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet10110111111_31" (formula "43") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "44") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet1_2" (formula "44") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "44") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "58") (inst "t=e3"))
                                 (rule "replaceKnownSelect_taclet111_6" (formula "58") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "58") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "59") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet111_4" (formula "59") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "59") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                                 (rule "allLeft" (formula "74") (inst "t=e2"))
                                 (rule "replaceKnownSelect_taclet11111_14" (formula "74") (term "1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "74") (term "1,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "74") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "74") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,0"))
                                 (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                 (rule "commute_or" (formula "37") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "52") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "53") (term "0,0,0"))
                                 (rule "commute_or" (formula "67") (term "0,0,0,0"))
                                 (rule "commute_or" (formula "68") (term "0,0,0,0"))
                                 (rule "cut_direct" (formula "4") (term "0"))
                                 (branch "CUT: i_0 = e1 TRUE"
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "55") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "27") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "70") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_contradEq7" (formula "79") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0"))
                                    (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                    (rule "add_literals" (formula "79") (term "0,0"))
                                    (rule "leq_literals" (formula "79") (term "0"))
                                    (builtin "One Step Simplification" (formula "79"))
                                    (rule "false_right" (formula "79"))
                                    (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "41") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "40")))
                                    (rule "true_left" (formula "41"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "55") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "55") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "54")))
                                    (rule "true_left" (formula "55"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "28") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                    (rule "true_left" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "68") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "68") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "68") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "68") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "68") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "68") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "68") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "68") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "68") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "67")))
                                    (rule "true_left" (formula "68"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "commute_or_2" (formula "22") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "53") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = e4 TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "replace_known_left" (formula "67") (term "1,0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "67"))
                                       (rule "true_left" (formula "67"))
                                       (rule "replace_known_left" (formula "53") (term "1,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "true_left" (formula "53"))
                                       (rule "replace_known_left" (formula "27") (term "1,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "replace_known_left" (formula "38") (term "1,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "applyEq" (formula "70") (term "0") (ifseqformula "3"))
                                       (rule "replace_known_right" (formula "31") (term "1,0,0") (ifseqformula "70"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "replace_known_right" (formula "45") (term "1,0,0") (ifseqformula "70"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "applyEq" (formula "69") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1"))
                                       (rule "mul_literals" (formula "20") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "69") (ifseqformula "18"))
                                       (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0"))
                                       (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "69") (term "0,0"))
                                       (rule "leq_literals" (formula "69") (term "0"))
                                       (builtin "One Step Simplification" (formula "69"))
                                       (rule "false_right" (formula "69"))
                                       (rule "inEqSimp_contradEq7" (formula "31") (term "0,0") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "31") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "applyEqReverse" (formula "45") (term "2,0") (ifseqformula "31"))
                                       (rule "applyEqReverse" (formula "32") (term "1,1,0,0,0") (ifseqformula "31"))
                                       (rule "hideAuxiliaryEq" (formula "31"))
                                       (rule "inEqSimp_contradEq7" (formula "44") (term "0,0") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "44") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "44") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "applyEqReverse" (formula "45") (term "1,1,0,0,0") (ifseqformula "44"))
                                       (rule "hideAuxiliaryEq" (formula "44"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "20"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0"))
                                       (rule "leq_literals" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                    (branch "j_0 = e4 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "commute_or_2" (formula "66") (term "0,0,0"))
                                       (rule "cut_direct" (formula "61") (term "1,0"))
                                       (branch "CUT: left ≤ e3 TRUE"
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "true_left" (formula "62"))
                                          (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "61"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "replace_known_left" (formula "46") (term "1,0,0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "true_left" (formula "46"))
                                          (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "58"))
                                          (rule "times_zero_1" (formula "12") (term "0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0,0") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "38") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0,0,0,0") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "51") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0,0") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "27") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "inEqSimp_contradInEq1" (formula "65") (term "0,0,0,0,0") (ifseqformula "12"))
                                          (rule "qeq_literals" (formula "65") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "65"))
                                          (rule "cut_direct" (formula "32") (term "1,0"))
                                          (branch "CUT: left ≤ e4 TRUE"
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "replace_known_left" (formula "45") (term "1,0") (ifseqformula "31"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "replace_known_left" (formula "58") (term "1,0") (ifseqformula "31"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "true_left" (formula "58"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "31"))
                                             (rule "mul_literals" (formula "13") (term "0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0,0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "37") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_contradInEq1" (formula "49") (term "0,0,0,0,0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "49") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "inEqSimp_contradInEq1" (formula "62") (term "0,0,0,0,0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "62") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                             (rule "allLeft" (formula "47") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet10111111_20" (formula "47") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10110111111_28" (formula "47") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "24") (inst "t=j_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "62") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet10111111_18" (formula "62") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1010110111111_32" (formula "62") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "62") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "36") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet10111111_22" (formula "36") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet110111111_24" (formula "36") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0,0"))
                                             (rule "ifthenelse_split" (formula "32") (term "0"))
                                             (branch "e4 = e1 ∨ e4 = e2 TRUE"
                                                (rule "applyEqReverse" (formula "48") (term "2,0") (ifseqformula "33"))
                                                (rule "applyEqReverse" (formula "40") (term "1,1,0") (ifseqformula "33"))
                                                (rule "hideAuxiliaryEq" (formula "33"))
                                                (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEqReverse" (formula "52") (term "1,1,0") (ifseqformula "47"))
                                                (rule "hideAuxiliaryEq" (formula "47"))
                                                (rule "commute_or_2" (formula "35") (term "0,0"))
                                                (rule "commute_or_2" (formula "47") (term "0,0"))
                                                (rule "commute_or_2" (formula "53") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "67") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "61") (term "0,0,0"))
                                                (rule "cut_direct" (formula "61") (term "1,0"))
                                                (branch "CUT: left ≤ e2 TRUE"
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "true_left" (formula "62"))
                                                   (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "61"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "replace_known_left" (formula "34") (term "1,0,0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "replace_known_left" (formula "45") (term "1,0,0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "true_left" (formula "45"))
                                                   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "58"))
                                                   (rule "times_zero_1" (formula "14") (term "0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_contradInEq1" (formula "65") (term "0,0,0,0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "65") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "65"))
                                                   (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0,0,0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "40") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0,0,0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "51") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "ifthenelse_split" (formula "34") (term "0"))
                                                   (branch "e3 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "40") (term "1,1,0") (ifseqformula "35"))
                                                      (rule "hideAuxiliaryEq" (formula "35"))
                                                      (rule "applyEq" (formula "62") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "61") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "34"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "applyEq" (formula "61") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "48") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "47") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "50") (term "1,1,0,0,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "56") (term "0,2,0") (ifseqformula "34"))
                                                      (rule "inEqSimp_commuteGeq" (formula "56"))
                                                      (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "64") (term "1,1,0,0,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "58") (term "1") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "57") (term "0,2,1") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "39") (term "0,2,1,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "61") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "62") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "46") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "61") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "28") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "64") (term "0,2,1,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "50") (term "0,2,1,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "39") (term "1,1,0,0,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "45") (term "0,2,0") (ifseqformula "34"))
                                                      (rule "inEqSimp_commuteGeq" (formula "45"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "49") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "47") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "70") (term "1") (ifseqformula "34"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                      (rule "mul_literals" (formula "19") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "70") (ifseqformula "5"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0"))
                                                      (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                      (rule "add_literals" (formula "70") (term "0,0"))
                                                      (rule "leq_literals" (formula "70") (term "0"))
                                                      (builtin "One Step Simplification" (formula "70"))
                                                      (rule "false_right" (formula "70"))
                                                      (rule "inEqSimp_contradEq7" (formula "32") (term "0") (ifseqformula "20"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "32") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "26") (term "0,2,1,1,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "32") (term "1") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "58") (term "0,1,1,1,0,0,1,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "47") (term "0,2,1,1,0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "31"))
                                                      (rule "applyEq" (formula "25") (term "1,1,1,0,0,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "34") (term "0,2,1,1,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "58") (term "0,1,1,1,0,0,1,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "59") (term "0,2,1,1,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "53") (term "0,2,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "45") (term "1,1,1,0,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "34") (term "1,1,1,0,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "59") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "56") (term "1,1,1,0,0,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,0,1,0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "61") (term "1") (ifseqformula "29"))
                                                      (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0"))
                                                      (rule "leq_literals" (formula "44") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "43")))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,0"))
                                                      (rule "leq_literals" (formula "34") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "17"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0"))
                                                      (rule "leq_literals" (formula "18"))
                                                      (rule "closeFalse" (formula "18"))
                                                   )
                                                   (branch "e3 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "34"))
                                                      (rule "hideAuxiliaryEq" (formula "34"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,0"))
                                                      (rule "commute_or" (formula "49") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0,0"))
                                                      (rule "commute_or" (formula "63") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0"))
                                                      (rule "commute_or_2" (formula "62") (term "0,0"))
                                                      (rule "commute_or_2" (formula "27") (term "0,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "59") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "commute_or_2" (formula "37") (term "0"))
                                                      (rule "commute_or_2" (formula "48") (term "0"))
                                                      (rule "commute_or_2" (formula "62") (term "0"))
                                                      (rule "commute_or_2" (formula "27") (term "0"))
                                                      (rule "commute_or_2" (formula "29") (term "0,0"))
                                                      (rule "commute_or_2" (formula "64") (term "0,0"))
                                                      (rule "commute_or_2" (formula "39") (term "0,0"))
                                                      (rule "commute_or_2" (formula "50") (term "0,0"))
                                                      (rule "commute_or_2" (formula "29") (term "0"))
                                                      (rule "commute_or_2" (formula "64") (term "0"))
                                                      (rule "commute_or_2" (formula "39") (term "0"))
                                                      (rule "commute_or_2" (formula "50") (term "0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,0"))
                                                      (rule "commute_or_2" (formula "63") (term "0,0"))
                                                      (rule "commute_or_2" (formula "38") (term "0"))
                                                      (rule "commute_or_2" (formula "49") (term "0"))
                                                      (rule "commute_or_2" (formula "63") (term "0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0"))
                                                      (rule "commute_or_2" (formula "59") (term "0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0"))
                                                      (rule "commute_or_2" (formula "24") (term "0"))
                                                      (rule "commute_or_2" (formula "59") (term "0"))
                                                      (rule "commute_or_2" (formula "34") (term "0"))
                                                      (rule "commute_or" (formula "45") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "45") (term "0,0"))
                                                      (rule "commute_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0"))
                                                      (rule "commute_or" (formula "59") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "59") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "59") (term "0,0"))
                                                      (rule "commute_or" (formula "34") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "cut_direct" (formula "28") (term "1,0"))
                                                      (branch "CUT: right ≤ -1 + e3 TRUE"
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "replace_known_left" (formula "49") (term "1,0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "true_left" (formula "49"))
                                                         (rule "replace_known_left" (formula "62") (term "1,0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "true_left" (formula "62"))
                                                         (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "28"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                         (rule "mul_literals" (formula "6") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "66") (ifseqformula "6"))
                                                         (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0"))
                                                         (rule "add_literals" (formula "66") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "66") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "66") (term "0,0"))
                                                         (rule "leq_literals" (formula "66") (term "0"))
                                                         (builtin "One Step Simplification" (formula "66"))
                                                         (rule "false_right" (formula "66"))
                                                         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "29"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "24"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "21"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0"))
                                                         (rule "add_literals" (formula "22") (term "0"))
                                                         (rule "leq_literals" (formula "22"))
                                                         (rule "closeFalse" (formula "22"))
                                                      )
                                                      (branch "CUT: right ≤ -1 + e3 FALSE"
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "replace_known_right" (formula "38") (term "1,0") (ifseqformula "68"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "replace_known_right" (formula "63") (term "1,0") (ifseqformula "68"))
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "49") (term "1,0") (ifseqformula "68"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "inEqSimp_leqRight" (formula "68"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "72") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                                                         (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "72") (term "0,0"))
                                                         (rule "leq_literals" (formula "72") (term "0"))
                                                         (builtin "One Step Simplification" (formula "72"))
                                                         (rule "false_right" (formula "72"))
                                                         (rule "cut_direct" (formula "39") (term "1,0"))
                                                         (branch "CUT: right ≤ -1 + e4 TRUE"
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "replace_known_left" (formula "64") (term "1,0") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "true_left" (formula "64"))
                                                            (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "39"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "true_left" (formula "29"))
                                                            (rule "replace_known_left" (formula "49") (term "1,0") (ifseqformula "38"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "true_left" (formula "49"))
                                                            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "38"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "25"))
                                                            (rule "andLeft" (formula "23"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0"))
                                                            (rule "add_literals" (formula "23") (term "0"))
                                                            (rule "leq_literals" (formula "23"))
                                                            (rule "closeFalse" (formula "23"))
                                                         )
                                                         (branch "CUT: right ≤ -1 + e4 FALSE"
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "replace_known_right" (formula "50") (term "1,0") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_right" (formula "64") (term "1,0") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "inEqSimp_leqRight" (formula "70"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "73") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0"))
                                                            (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                            (rule "add_literals" (formula "73") (term "0,0"))
                                                            (rule "leq_literals" (formula "73") (term "0"))
                                                            (builtin "One Step Simplification" (formula "73"))
                                                            (rule "false_right" (formula "73"))
                                                            (rule "cut_direct" (formula "33") (term "1,0"))
                                                            (branch "CUT: right ≤ -1 + e2 TRUE"
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (rule "true_left" (formula "34"))
                                                               (rule "replace_known_left" (formula "68") (term "1,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "true_left" (formula "68"))
                                                               (rule "replace_known_left" (formula "43") (term "1,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "true_left" (formula "43"))
                                                               (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "true_left" (formula "53"))
                                                               (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "33"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "34"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "24"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0"))
                                                               (rule "leq_literals" (formula "4"))
                                                               (rule "closeFalse" (formula "4"))
                                                            )
                                                            (branch "CUT: right ≤ -1 + e2 FALSE"
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "replace_known_right" (formula "54") (term "1,0") (ifseqformula "72"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "replace_known_right" (formula "43") (term "1,0") (ifseqformula "72"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "replace_known_right" (formula "68") (term "1,0") (ifseqformula "72"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "inEqSimp_leqRight" (formula "72"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "75") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                                               (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "75") (term "0,0"))
                                                               (rule "leq_literals" (formula "75") (term "0"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "false_right" (formula "75"))
                                                               (rule "allLeft" (formula "42") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet10111111_22" (formula "42") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110111111_24" (formula "42") (term "0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "42") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "42") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "42") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "cut_direct" (formula "52") (term "1,0"))
                                                               (branch "CUT: left ≤ j_0 TRUE"
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "true_left" (formula "53"))
                                                                  (rule "replace_known_left" (formula "40") (term "1,0") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "true_left" (formula "40"))
                                                                  (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "replace_known_left" (formula "64") (term "1,0") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "true_left" (formula "64"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "50"))
                                                                  (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "21") (term "0"))
                                                                  (rule "allLeft" (formula "32") (inst "t=j_0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "32") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "allLeft" (formula "54") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet10111111_20" (formula "54") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet10110111111_28" (formula "54") (term "0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "54") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "54") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "54") (term "0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "54") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "54") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "54") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "allLeft" (formula "68") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet10111111_18" (formula "68") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1010110111111_32" (formula "68") (term "0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "68") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "68") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "68") (term "1") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "68") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "68") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "68") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "68") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "68") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "68") (term "1") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "68") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "68") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "68") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "68") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "68") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "68") (ifseqformula "7"))
                                                                  (rule "andLeft" (formula "68"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "68"))
                                                                  (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                                                                  (rule "mul_literals" (formula "68") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "68") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "68") (term "0"))
                                                                  (rule "add_literals" (formula "68") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "68") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "68") (term "0"))
                                                                  (rule "leq_literals" (formula "68"))
                                                                  (rule "closeFalse" (formula "68"))
                                                               )
                                                               (branch "CUT: left ≤ j_0 FALSE"
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "replace_known_right" (formula "40") (term "1,0") (ifseqformula "75"))
                                                                  (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "75"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "replace_known_right" (formula "66") (term "1,0") (ifseqformula "75"))
                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "inEqSimp_leqRight" (formula "75"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "23"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                                                                  (rule "andLeft" (formula "13"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "13") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "13") (term "0"))
                                                                  (rule "leq_literals" (formula "13"))
                                                                  (rule "closeFalse" (formula "13"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: left ≤ e2 FALSE"
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "71"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "replace_known_right" (formula "35") (term "1,0,0") (ifseqformula "71"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "replace_known_right" (formula "47") (term "1,0,0") (ifseqformula "71"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "inEqSimp_leqRight" (formula "71"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "34"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "34") (term "1") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "34") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "29") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "70") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "61") (term "0,2,0") (ifseqformula "34"))
                                                   (rule "inEqSimp_commuteGeq" (formula "61"))
                                                   (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "35") (term "1") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "41") (term "0,2,1,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "53") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                   (rule "applyEq" (formula "67") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "41") (term "1,1,1,0,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "29") (term "0,2,1,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "67") (term "0,2,1,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "53") (term "0,2,1,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,1,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "65") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "34"))
                                                   (rule "applyEq" (formula "73") (term "1") (ifseqformula "34"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "73") (ifseqformula "7"))
                                                   (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0"))
                                                   (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                   (rule "add_literals" (formula "73") (term "0,0"))
                                                   (rule "leq_literals" (formula "73") (term "0"))
                                                   (builtin "One Step Simplification" (formula "73"))
                                                   (rule "false_right" (formula "73"))
                                                   (rule "inEqSimp_contradEq3" (formula "36") (term "0,0") (ifseqformula "21"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "applyEqReverse" (formula "42") (term "1,1,0") (ifseqformula "36"))
                                                   (rule "hideAuxiliaryEq" (formula "36"))
                                                   (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0"))
                                                   (rule "leq_literals" (formula "19"))
                                                   (rule "closeFalse" (formula "19"))
                                                )
                                             )
                                             (branch "e4 = e1 ∨ e4 = e2 FALSE"
                                                (rule "orRight" (formula "72"))
                                                (rule "applyEqReverse" (formula "47") (term "2,0") (ifseqformula "32"))
                                                (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "32"))
                                                (rule "hideAuxiliaryEq" (formula "32"))
                                                (rule "replace_known_right" (formula "46") (term "0,0,0") (ifseqformula "71"))
                                                (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "72")))
                                                (rule "applyEqReverse" (formula "51") (term "1,1,0") (ifseqformula "46"))
                                                (rule "hideAuxiliaryEq" (formula "46"))
                                                (rule "commute_or_2" (formula "34") (term "0,0"))
                                                (rule "commute_or_2" (formula "46") (term "0,0"))
                                                (rule "commute_or_2" (formula "52") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "66") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "60") (term "0,0,0"))
                                                (rule "cut_direct" (formula "60") (term "1,0"))
                                                (branch "CUT: left ≤ e2 TRUE"
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "true_left" (formula "61"))
                                                   (rule "replace_known_left" (formula "34") (term "1,0,0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "replace_known_left" (formula "45") (term "1,0,0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "true_left" (formula "45"))
                                                   (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "57"))
                                                   (rule "times_zero_1" (formula "14") (term "0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0,0,0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "64") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0,0,0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "50") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,0,0,0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "39") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "ifthenelse_split" (formula "33") (term "0"))
                                                   (branch "e3 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "34"))
                                                      (rule "hideAuxiliaryEq" (formula "34"))
                                                      (rule "applyEq" (formula "59") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "62") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "59") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "61") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "28") (term "1,1,1,0,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "62") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "49") (term "0,2,1,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "56") (term "0,2,1") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "33"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "applyEq" (formula "46") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "44") (term "0,2,0") (ifseqformula "33"))
                                                      (rule "inEqSimp_commuteGeq" (formula "44"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "49") (term "1,1,0,0,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "46") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "61") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "57") (term "1") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "49") (term "0,1,1,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "45") (term "0,1,1,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "47") (term "0,1,1,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "55") (term "0,2,0") (ifseqformula "33"))
                                                      (rule "inEqSimp_commuteGeq" (formula "55"))
                                                      (rule "applyEq" (formula "63") (term "1,1,0,0,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "38") (term "1,1,0,0,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "63") (term "0,2,1,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "38") (term "0,2,1,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "48") (term "0,1,1,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "71") (term "1") (ifseqformula "33"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                      (rule "mul_literals" (formula "19") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "68") (ifseqformula "20"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                                                      (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "68") (term "0,0"))
                                                      (rule "leq_literals" (formula "68") (term "0"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "false_right" (formula "68"))
                                                      (rule "inEqSimp_contradEq7" (formula "70") (ifseqformula "5"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0"))
                                                      (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "70") (term "0,0"))
                                                      (rule "leq_literals" (formula "70") (term "0"))
                                                      (builtin "One Step Simplification" (formula "70"))
                                                      (rule "false_right" (formula "70"))
                                                      (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "19"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0"))
                                                      (rule "add_literals" (formula "18") (term "0"))
                                                      (rule "leq_literals" (formula "18"))
                                                      (rule "closeFalse" (formula "18"))
                                                   )
                                                   (branch "e3 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "33"))
                                                      (rule "hideAuxiliaryEq" (formula "33"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0"))
                                                      (rule "commute_or" (formula "37") (term "0,0,0"))
                                                      (rule "commute_or" (formula "48") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0,0"))
                                                      (rule "commute_or" (formula "62") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "47") (term "0,0"))
                                                      (rule "commute_or_2" (formula "61") (term "0,0"))
                                                      (rule "commute_or_2" (formula "27") (term "0,0"))
                                                      (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "58") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "commute_or_2" (formula "36") (term "0"))
                                                      (rule "commute_or_2" (formula "47") (term "0"))
                                                      (rule "commute_or_2" (formula "61") (term "0"))
                                                      (rule "commute_or_2" (formula "27") (term "0"))
                                                      (rule "commute_or_2" (formula "29") (term "0,0"))
                                                      (rule "commute_or_2" (formula "63") (term "0,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0"))
                                                      (rule "commute_or_2" (formula "29") (term "0"))
                                                      (rule "commute_or_2" (formula "63") (term "0"))
                                                      (rule "commute_or_2" (formula "49") (term "0"))
                                                      (rule "commute_or_2" (formula "38") (term "0"))
                                                      (rule "commute_or_2" (formula "37") (term "0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0"))
                                                      (rule "commute_or_2" (formula "62") (term "0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0"))
                                                      (rule "commute_or_2" (formula "48") (term "0"))
                                                      (rule "commute_or_2" (formula "62") (term "0"))
                                                      (rule "commute_or_2" (formula "44") (term "0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0"))
                                                      (rule "commute_or_2" (formula "58") (term "0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or_2" (formula "44") (term "0"))
                                                      (rule "commute_or_2" (formula "24") (term "0"))
                                                      (rule "commute_or_2" (formula "58") (term "0"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "commute_or" (formula "44") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "44") (term "0,0"))
                                                      (rule "commute_or" (formula "24") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "24") (term "0,0"))
                                                      (rule "commute_or" (formula "58") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "58") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "58") (term "0,0"))
                                                      (rule "commute_or" (formula "33") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "cut_direct" (formula "28") (term "1,0"))
                                                      (branch "CUT: right ≤ -1 + e3 TRUE"
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "replace_known_left" (formula "48") (term "1,0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "replace_known_left" (formula "60") (term "1,0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "60"))
                                                         (rule "true_left" (formula "60"))
                                                         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "28"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                         (rule "mul_literals" (formula "6") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "65") (ifseqformula "6"))
                                                         (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0"))
                                                         (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "65") (term "0,0"))
                                                         (rule "leq_literals" (formula "65") (term "0"))
                                                         (builtin "One Step Simplification" (formula "65"))
                                                         (rule "false_right" (formula "65"))
                                                         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "29"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "24"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "22"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0"))
                                                         (rule "add_literals" (formula "21") (term "0"))
                                                         (rule "leq_literals" (formula "21"))
                                                         (rule "closeFalse" (formula "21"))
                                                      )
                                                      (branch "CUT: right ≤ -1 + e3 FALSE"
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "replace_known_right" (formula "62") (term "1,0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "48") (term "1,0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_right" (formula "37") (term "1,0") (ifseqformula "67"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_leqRight" (formula "67"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "73") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0"))
                                                         (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "73") (term "0,0"))
                                                         (rule "leq_literals" (formula "73") (term "0"))
                                                         (builtin "One Step Simplification" (formula "73"))
                                                         (rule "false_right" (formula "73"))
                                                         (rule "cut_direct" (formula "38") (term "1,0"))
                                                         (branch "CUT: right ≤ -1 + e4 TRUE"
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "true_left" (formula "39"))
                                                            (rule "replace_known_left" (formula "29") (term "1,0") (ifseqformula "38"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "true_left" (formula "29"))
                                                            (rule "replace_known_left" (formula "62") (term "1,0") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "62"))
                                                            (rule "true_left" (formula "62"))
                                                            (rule "replace_known_left" (formula "48") (term "1,0") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "true_left" (formula "48"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "37"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "37"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "68") (ifseqformula "8"))
                                                            (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                                                            (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "68") (term "0,0"))
                                                            (rule "leq_literals" (formula "68") (term "0"))
                                                            (builtin "One Step Simplification" (formula "68"))
                                                            (rule "false_right" (formula "68"))
                                                            (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "38"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "24"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0"))
                                                            (rule "leq_literals" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                         (branch "CUT: right ≤ -1 + e4 FALSE"
                                                            (builtin "One Step Simplification" (formula "38"))
                                                            (rule "replace_known_right" (formula "29") (term "1,0") (ifseqformula "69"))
                                                            (builtin "One Step Simplification" (formula "29"))
                                                            (rule "replace_known_right" (formula "49") (term "1,0") (ifseqformula "69"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_right" (formula "63") (term "1,0") (ifseqformula "69"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "inEqSimp_leqRight" (formula "69"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "74") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                                            (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "74") (term "0,0"))
                                                            (rule "leq_literals" (formula "74") (term "0"))
                                                            (builtin "One Step Simplification" (formula "74"))
                                                            (rule "false_right" (formula "74"))
                                                            (rule "cut_direct" (formula "33") (term "1,0"))
                                                            (branch "CUT: right ≤ -1 + e2 TRUE"
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (rule "true_left" (formula "34"))
                                                               (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "true_left" (formula "53"))
                                                               (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "replace_known_left" (formula "65") (term "1,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "65"))
                                                               (rule "true_left" (formula "65"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "33"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "24"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0"))
                                                               (rule "leq_literals" (formula "4"))
                                                               (rule "closeFalse" (formula "4"))
                                                            )
                                                            (branch "CUT: right ≤ -1 + e2 FALSE"
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "replace_known_right" (formula "67") (term "1,0") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "replace_known_right" (formula "42") (term "1,0") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "replace_known_right" (formula "53") (term "1,0") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "inEqSimp_leqRight" (formula "71"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "76") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                                               (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "76") (term "0,0"))
                                                               (rule "leq_literals" (formula "76") (term "0"))
                                                               (builtin "One Step Simplification" (formula "76"))
                                                               (rule "false_right" (formula "76"))
                                                               (rule "allLeft" (formula "41") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet10111111_22" (formula "41") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110111111_24" (formula "41") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "41") (term "0,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "41") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "allLeft" (formula "53") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet10111111_20" (formula "53") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet10110111111_28" (formula "53") (term "0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "53") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "53") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "53") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "53") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "inEqSimp_contradInEq0" (formula "53") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                                               (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "53") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "cut_direct" (formula "51") (term "1,0"))
                                                               (branch "CUT: left ≤ j_0 TRUE"
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "true_left" (formula "52"))
                                                                  (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "replace_known_left" (formula "64") (term "1,0") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "true_left" (formula "64"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "49"))
                                                                  (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "21") (term "0"))
                                                                  (rule "allLeft" (formula "32") (inst "t=j_0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "32") (term "0,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "32") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "32") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "32") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "allLeft" (formula "67") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet10111111_18" (formula "67") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1010110111111_32" (formula "67") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "67") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "67") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "67") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "67") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "67") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "67") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "67") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "67") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "67") (term "1") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "67") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "67") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "67") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "67") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "67") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "67"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "67"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                  (rule "add_literals" (formula "7") (term "0"))
                                                                  (rule "leq_literals" (formula "7"))
                                                                  (rule "closeFalse" (formula "7"))
                                                               )
                                                               (branch "CUT: left ≤ j_0 FALSE"
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "75"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "replace_known_right" (formula "39") (term "1,0") (ifseqformula "75"))
                                                                  (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "replace_known_right" (formula "66") (term "1,0") (ifseqformula "75"))
                                                                  (builtin "One Step Simplification" (formula "66"))
                                                                  (rule "inEqSimp_leqRight" (formula "75"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "23"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                  (rule "add_literals" (formula "1") (term "0"))
                                                                  (rule "leq_literals" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: left ≤ e2 FALSE"
                                                   (builtin "One Step Simplification" (formula "60"))
                                                   (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "70"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "replace_known_right" (formula "46") (term "1,0,0") (ifseqformula "70"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_right" (formula "23") (term "1,0,0,0") (ifseqformula "70"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_leqRight" (formula "70"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch "CUT: left ≤ e4 FALSE"
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "70"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "replace_known_right" (formula "60") (term "1,0") (ifseqformula "70"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "replace_known_right" (formula "46") (term "1,0") (ifseqformula "70"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_leqRight" (formula "70"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "60"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "CUT: left ≤ e3 FALSE"
                                          (builtin "One Step Simplification" (formula "61"))
                                          (rule "replace_known_right" (formula "22") (term "1,0,0,0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "replace_known_right" (formula "34") (term "1,0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "replace_known_right" (formula "48") (term "1,0,0,0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "inEqSimp_leqRight" (formula "72"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "14"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "35") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "35") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "35"))
                                          (rule "applyEqReverse" (formula "41") (term "1,1,0") (ifseqformula "35"))
                                          (rule "hideAuxiliaryEq" (formula "35"))
                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0"))
                                          (rule "add_literals" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                    )
                                 )
                                 (branch "CUT: i_0 = e1 FALSE"
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "27") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "55") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "70") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "78") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradEq7" (formula "81") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0"))
                                    (rule "add_literals" (formula "81") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "81") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "81") (term "0,0"))
                                    (rule "leq_literals" (formula "81") (term "0"))
                                    (builtin "One Step Simplification" (formula "81"))
                                    (rule "false_right" (formula "81"))
                                    (rule "inEqSimp_contradEq7" (formula "78") (ifseqformula "17"))
                                    (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,0"))
                                    (rule "add_literals" (formula "78") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "78") (term "1,0,0"))
                                    (rule "add_literals" (formula "78") (term "0,0"))
                                    (rule "leq_literals" (formula "78") (term "0"))
                                    (builtin "One Step Simplification" (formula "78"))
                                    (rule "false_right" (formula "78"))
                                    (rule "inEqSimp_contradInEq1" (formula "68") (term "1,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "68") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "68"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "inEqSimp_contradInEq1" (formula "74") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "74") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "74") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "74") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "74") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "74") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "74") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "74") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "74") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "74") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "74") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "74"))
                                    (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "59") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "59") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "59"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "31") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "38") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "44") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "40")))
                                    (rule "true_left" (formula "44"))
                                    (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "58") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "54")))
                                    (rule "true_left" (formula "58"))
                                    (rule "inEqSimp_contradInEq1" (formula "72") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "72") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "68")))
                                    (rule "true_left" (formula "72"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "31") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "27")))
                                    (rule "true_left" (formula "31"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "commute_or" (formula "68") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "55") (term "0,0,0"))
                                    (rule "cut_direct" (formula "54") (term "1,0"))
                                    (branch "CUT: right ≤ -1 + e1 TRUE"
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "true_left" (formula "55"))
                                       (rule "replace_known_left" (formula "28") (term "1,0") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "replace_known_left" (formula "39") (term "1,0,0,0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "replace_known_left" (formula "66") (term "1,0,0,0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "66"))
                                       (rule "true_left" (formula "66"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "52"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "18"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                    (branch "CUT: right ≤ -1 + e1 FALSE"
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "replace_known_right" (formula "68") (term "1,0,0,0") (ifseqformula "74"))
                                       (builtin "One Step Simplification" (formula "68"))
                                       (rule "replace_known_right" (formula "40") (term "1,0,0,0") (ifseqformula "74"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "74"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_leqRight" (formula "74"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "77") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0"))
                                       (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "77") (term "0,0"))
                                       (rule "leq_literals" (formula "77") (term "0"))
                                       (builtin "One Step Simplification" (formula "77"))
                                       (rule "false_right" (formula "77"))
                                       (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "j_0 = e4 TRUE"
                                          (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "applyEq" (formula "76") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "5"))
                                          (rule "replace_known_left" (formula "71") (term "1,0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "71"))
                                          (rule "true_left" (formula "71"))
                                          (rule "replace_known_left" (formula "57") (term "1,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "true_left" (formula "57"))
                                          (rule "replace_known_left" (formula "43") (term "1,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "replace_known_left" (formula "31") (term "1,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1"))
                                          (rule "mul_literals" (formula "7") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "48") (term "1,0,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "48") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "inEqSimp_contradEq7" (formula "72") (ifseqformula "21"))
                                          (rule "polySimp_mulComm0" (formula "72") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0"))
                                          (rule "add_literals" (formula "72") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "72") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "72") (term "0,0"))
                                          (rule "leq_literals" (formula "72") (term "0"))
                                          (builtin "One Step Simplification" (formula "72"))
                                          (rule "false_right" (formula "72"))
                                          (rule "inEqSimp_contradEq7" (formula "34") (term "1,0,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "34") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradEq7" (formula "48") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "48") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "applyEqReverse" (formula "49") (term "1,1,0,0,0") (ifseqformula "48"))
                                          (rule "hideAuxiliaryEq" (formula "48"))
                                          (rule "inEqSimp_contradEq7" (formula "34") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "34") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqReverse" (formula "48") (term "1,1,0,0,0") (ifseqformula "34"))
                                          (rule "applyEqReverse" (formula "35") (term "1,1,0,0,0") (ifseqformula "34"))
                                          (rule "hideAuxiliaryEq" (formula "34"))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "23"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_zero_right" (formula "22") (term "0"))
                                          (rule "leq_literals" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                       (branch "j_0 = e4 FALSE"
                                          (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "commute_or_2" (formula "70") (term "0,0,0"))
                                          (rule "cut_direct" (formula "64") (term "1,0"))
                                          (branch "CUT: left ≤ e3 TRUE"
                                             (builtin "One Step Simplification" (formula "65"))
                                             (rule "true_left" (formula "65"))
                                             (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "64"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "replace_known_left" (formula "50") (term "1,0,0,0") (ifseqformula "63"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "replace_known_left" (formula "25") (term "1,0,0,0") (ifseqformula "62"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "61"))
                                             (rule "times_zero_1" (formula "15") (term "0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "69") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "69") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "69"))
                                             (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "31") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "cut_direct" (formula "35") (term "1,0"))
                                             (branch "CUT: left ≤ e4 TRUE"
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "true_left" (formula "36"))
                                                (rule "replace_known_left" (formula "49") (term "1,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "replace_known_left" (formula "25") (term "1,0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "replace_known_left" (formula "61") (term "1,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "true_left" (formula "61"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "34"))
                                                (rule "times_zero_1" (formula "16") (term "0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "53"))
                                                (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "41") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "inEqSimp_contradInEq1" (formula "66") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "66") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "66"))
                                                (rule "allLeft" (formula "50") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet10111111_20" (formula "50") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet10110111111_28" (formula "50") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "38") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet10111111_22" (formula "38") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet110111111_24" (formula "38") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "27") (inst "t=j_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "66") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet10111111_18" (formula "66") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet11110110111111_32" (formula "66") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "66") (term "1,0,0,0,0"))
                                                (rule "ifthenelse_split" (formula "35") (term "0"))
                                                (branch "e4 = e1 ∨ e4 = e2 TRUE"
                                                   (rule "applyEqReverse" (formula "51") (term "2,0") (ifseqformula "36"))
                                                   (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "36"))
                                                   (rule "hideAuxiliaryEq" (formula "36"))
                                                   (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqReverse" (formula "56") (term "1,1,0") (ifseqformula "50"))
                                                   (rule "hideAuxiliaryEq" (formula "50"))
                                                   (rule "ifthenelse_split" (formula "37") (term "0"))
                                                   (branch "e3 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "38"))
                                                      (rule "hideAuxiliaryEq" (formula "38"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "49") (term "0,2,0") (ifseqformula "37"))
                                                      (rule "inEqSimp_commuteGeq" (formula "49"))
                                                      (rule "applyEq" (formula "56") (term "1,1,0,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "32") (term "1,1,1,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "57") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "70") (term "1,1,0,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "61") (term "0,2,0") (ifseqformula "37"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "44") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "62") (term "0,2,1") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "37"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "56") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "15") (term "0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "70") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "44") (term "1,1,0,0,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "57") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "63") (term "1") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "32") (term "0,2,1,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "37"))
                                                      (rule "applyEq" (formula "75") (term "1") (ifseqformula "37"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "35") (term "0") (ifseqformula "22"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "35") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "applyEq" (formula "69") (term "0,2,1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "55") (term "0,2,1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "31") (term "0,2,1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "55") (term "1,1,1,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "34"))
                                                      (rule "applyEq" (formula "35") (term "1") (ifseqformula "34"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "35"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "replace_known_left" (formula "48") (term "1,0,0,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "true_left" (formula "48"))
                                                      (rule "replace_known_left" (formula "36") (term "1,0,0,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "replace_known_left" (formula "60") (term "1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "true_left" (formula "60"))
                                                      (rule "applyEq" (formula "29") (term "1,1,1,0,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "40") (term "1,1,1,0,0,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "33"))
                                                      (rule "applyEq" (formula "39") (term "0,2,1,1,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "59") (term "0,1,1,1,0,0,1,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "63") (term "1,1,1,0,0,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "60") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "57") (term "0,2,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "62") (term "0,1,1,1,0,0,1,0") (ifseqformula "32"))
                                                      (rule "applyEq" (formula "67") (term "1") (ifseqformula "32"))
                                                      (rule "inEqSimp_contradEq7" (formula "68") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                                                      (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "68") (term "0,0"))
                                                      (rule "leq_literals" (formula "68") (term "0"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "false_right" (formula "68"))
                                                      (rule "inEqSimp_contradEq7" (formula "67") (ifseqformula "7"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                                      (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "67") (term "0,0"))
                                                      (rule "leq_literals" (formula "67") (term "0"))
                                                      (builtin "One Step Simplification" (formula "67"))
                                                      (rule "false_right" (formula "67"))
                                                      (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "20"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0"))
                                                      (rule "leq_literals" (formula "19"))
                                                      (rule "closeFalse" (formula "19"))
                                                   )
                                                   (branch "e3 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "37"))
                                                      (rule "hideAuxiliaryEq" (formula "37"))
                                                      (rule "commute_or_2" (formula "49") (term "0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0,0"))
                                                      (rule "commute_or" (formula "26") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0,0"))
                                                      (rule "commute_or" (formula "69") (term "0,0,0"))
                                                      (rule "commute_or" (formula "43") (term "0,0,0"))
                                                      (rule "commute_or" (formula "55") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,0"))
                                                      (rule "commute_or_2" (formula "54") (term "0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0"))
                                                      (rule "commute_or_2" (formula "68") (term "0,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0"))
                                                      (rule "commute_or_2" (formula "37") (term "0"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "commute_or_2" (formula "31") (term "0"))
                                                      (rule "commute_or_2" (formula "54") (term "0"))
                                                      (rule "commute_or_2" (formula "42") (term "0"))
                                                      (rule "commute_or_2" (formula "68") (term "0"))
                                                      (rule "cut_direct" (formula "63") (term "1,0"))
                                                      (branch "CUT: left ≤ e2 TRUE"
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "true_left" (formula "64"))
                                                         (rule "replace_known_left" (formula "26") (term "1,0,0,0") (ifseqformula "63"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "replace_known_left" (formula "48") (term "1,0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "60"))
                                                         (rule "times_zero_1" (formula "17") (term "0,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0"))
                                                         (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "66") (term "0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "41") (term "0,0"))
                                                         (rule "commute_or_2" (formula "52") (term "0,0"))
                                                         (rule "commute_or_2" (formula "61") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "66") (term "0"))
                                                         (rule "commute_or_2" (formula "41") (term "0"))
                                                         (rule "commute_or_2" (formula "52") (term "0"))
                                                         (rule "commute_or_2" (formula "47") (term "0,0"))
                                                         (rule "commute_or_2" (formula "47") (term "0"))
                                                         (rule "commute_or_2" (formula "36") (term "0,0"))
                                                         (rule "commute_or_2" (formula "36") (term "0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0"))
                                                         (rule "commute_or_2" (formula "61") (term "0,0"))
                                                         (rule "commute_or_2" (formula "61") (term "0"))
                                                         (rule "commute_or" (formula "47") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "47") (term "0,0"))
                                                         (rule "commute_or" (formula "36") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "36") (term "0,0"))
                                                         (rule "commute_or" (formula "26") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0"))
                                                         (rule "commute_or" (formula "61") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "61") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "61") (term "0,0"))
                                                         (rule "cut_direct" (formula "31") (term "1,0"))
                                                         (branch "CUT: right ≤ -1 + e3 TRUE"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "true_left" (formula "41"))
                                                            (rule "replace_known_left" (formula "51") (term "1,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "true_left" (formula "51"))
                                                            (rule "replace_known_left" (formula "64") (term "1,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "64"))
                                                            (rule "true_left" (formula "64"))
                                                            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "31"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "31"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "32"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "69") (ifseqformula "2"))
                                                            (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0"))
                                                            (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                            (rule "add_literals" (formula "69") (term "0,0"))
                                                            (rule "leq_literals" (formula "69") (term "0"))
                                                            (builtin "One Step Simplification" (formula "69"))
                                                            (rule "false_right" (formula "69"))
                                                            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "24"))
                                                            (rule "andLeft" (formula "23"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0"))
                                                            (rule "leq_literals" (formula "23"))
                                                            (rule "closeFalse" (formula "23"))
                                                         )
                                                         (branch "CUT: right ≤ -1 + e3 FALSE"
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "replace_known_right" (formula "41") (term "1,0") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "replace_known_right" (formula "66") (term "1,0") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "replace_known_right" (formula "52") (term "1,0") (ifseqformula "70"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "inEqSimp_leqRight" (formula "70"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "74") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                                            (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                            (rule "add_literals" (formula "74") (term "0,0"))
                                                            (rule "leq_literals" (formula "74") (term "0"))
                                                            (builtin "One Step Simplification" (formula "74"))
                                                            (rule "false_right" (formula "74"))
                                                            (rule "cut_direct" (formula "32") (term "1,0"))
                                                            (branch "CUT: right ≤ -1 + e4 TRUE"
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "replace_known_left" (formula "67") (term "1,0") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "true_left" (formula "67"))
                                                               (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "true_left" (formula "52"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "32"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "37") (term "0") (ifseqformula "4"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                               (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "37") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "applyEq" (formula "59") (term "0,2,0") (ifseqformula "37"))
                                                               (rule "inEqSimp_commuteGeq" (formula "59"))
                                                               (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "19") (term "0") (ifseqformula "37"))
                                                               (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "62") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "61") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "62") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "66") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "37") (term "1") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "24") (term "0") (ifseqformula "36"))
                                                               (rule "inEqSimp_homoInEq1" (formula "24"))
                                                               (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "68") (term "1") (ifseqformula "35"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                               (rule "mul_literals" (formula "23") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "68") (ifseqformula "9"))
                                                               (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                                                               (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "68") (term "0,0"))
                                                               (rule "leq_literals" (formula "68") (term "0"))
                                                               (builtin "One Step Simplification" (formula "68"))
                                                               (rule "false_right" (formula "68"))
                                                               (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "31"))
                                                               (rule "andLeft" (formula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0"))
                                                               (rule "add_zero_right" (formula "10") (term "0"))
                                                               (rule "leq_literals" (formula "10"))
                                                               (rule "closeFalse" (formula "10"))
                                                            )
                                                            (branch "CUT: right ≤ -1 + e4 FALSE"
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "replace_known_right" (formula "53") (term "1,0") (ifseqformula "72"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "replace_known_right" (formula "67") (term "1,0") (ifseqformula "72"))
                                                               (builtin "One Step Simplification" (formula "67"))
                                                               (rule "replace_known_right" (formula "42") (term "1,0") (ifseqformula "72"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_leqRight" (formula "72"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "75") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                                               (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "75") (term "0,0"))
                                                               (rule "leq_literals" (formula "75") (term "0"))
                                                               (builtin "One Step Simplification" (formula "75"))
                                                               (rule "false_right" (formula "75"))
                                                               (rule "allLeft" (formula "32") (inst "t=j_0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "32") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "54") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet10111111_20" (formula "54") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet10110111111_28" (formula "54") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "54") (term "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "54") (term "0,0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0,0"))
                                                               (rule "mul_literals" (formula "54") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "54") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "54") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "54") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "54") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                                               (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "54") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "54"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "50") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                               (rule "allLeft" (formula "70") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet10111111_18" (formula "70") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet11110110111111_32" (formula "70") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "70") (term "1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "70") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "70") (term "1,0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "70") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "70") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "70") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "70") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "70") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_contradInEq0" (formula "70") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "70") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "70") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,0"))
                                                               (rule "add_literals" (formula "70") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "70") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "70") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "70") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "inEqSimp_contradInEq1" (formula "70") (ifseqformula "10"))
                                                               (rule "andLeft" (formula "70"))
                                                               (rule "inEqSimp_homoInEq1" (formula "70"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "70") (term "0"))
                                                               (rule "add_literals" (formula "70") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "70") (term "1,0"))
                                                               (rule "add_zero_right" (formula "70") (term "0"))
                                                               (rule "leq_literals" (formula "70"))
                                                               (rule "closeFalse" (formula "70"))
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: left ≤ e2 FALSE"
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "replace_known_right" (formula "26") (term "1,0,0,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "replace_known_right" (formula "49") (term "1,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_right" (formula "37") (term "1,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "inEqSimp_leqRight" (formula "73"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "37"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "37") (term "1") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                         (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "37") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "37") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "applyEq" (formula "63") (term "0,2,0") (ifseqformula "37"))
                                                         (rule "inEqSimp_commuteGeq" (formula "63"))
                                                         (rule "applyEq" (formula "44") (term "1,1,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "44") (term "0,2,1,1,0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "33") (term "0,2,1,1,0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "38") (term "1") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "24") (term "0") (ifseqformula "37"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "37"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "applyEq" (formula "56") (term "0,2,1,1,0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "72") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "56") (term "1,1,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "71") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "72") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "67") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "70") (term "0,2,1,1,0,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "70") (term "1,1,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "76") (term "1") (ifseqformula "37"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                         (rule "mul_literals" (formula "24") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_contradEq3" (formula "75") (ifseqformula "24"))
                                                         (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                                         (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                         (rule "add_literals" (formula "75") (term "0,0"))
                                                         (rule "qeq_literals" (formula "75") (term "0"))
                                                         (builtin "One Step Simplification" (formula "75"))
                                                         (rule "false_right" (formula "75"))
                                                         (rule "inEqSimp_contradEq7" (formula "75") (ifseqformula "3"))
                                                         (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                                         (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "75") (term "0,0"))
                                                         (rule "leq_literals" (formula "75") (term "0"))
                                                         (builtin "One Step Simplification" (formula "75"))
                                                         (rule "false_right" (formula "75"))
                                                         (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0"))
                                                         (rule "leq_literals" (formula "22"))
                                                         (rule "closeFalse" (formula "22"))
                                                      )
                                                   )
                                                )
                                                (branch "e4 = e1 ∨ e4 = e2 FALSE"
                                                   (rule "orRight" (formula "75"))
                                                   (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "35"))
                                                   (rule "applyEqReverse" (formula "50") (term "2,0") (ifseqformula "35"))
                                                   (rule "hideAuxiliaryEq" (formula "35"))
                                                   (rule "replace_known_right" (formula "49") (term "1,0,0") (ifseqformula "75"))
                                                   (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "74")))
                                                   (rule "applyEqReverse" (formula "55") (term "1,1,0") (ifseqformula "49"))
                                                   (rule "hideAuxiliaryEq" (formula "49"))
                                                   (rule "ifthenelse_split" (formula "36") (term "0"))
                                                   (branch "e3 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "37"))
                                                      (rule "hideAuxiliaryEq" (formula "37"))
                                                      (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "55") (term "0,2,1,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "60") (term "0,2,0") (ifseqformula "36"))
                                                      (rule "inEqSimp_commuteGeq" (formula "60"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "36"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "applyEq" (formula "43") (term "1,1,0,0,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "62") (term "1") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "15") (term "0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "49") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "32") (term "0,2,1,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "48") (term "0,2,0") (ifseqformula "36"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48"))
                                                      (rule "applyEq" (formula "52") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "63") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "64") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "69") (term "1,1,0,0,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "61") (term "0,2,1") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "69") (term "0,2,1,1,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "55") (term "1,1,0,0,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "32") (term "1,1,1,0,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "76") (term "1") (ifseqformula "36"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "73") (ifseqformula "22"))
                                                      (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0"))
                                                      (rule "add_literals" (formula "73") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "73") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "73") (term "0,0"))
                                                      (rule "leq_literals" (formula "73") (term "0"))
                                                      (builtin "One Step Simplification" (formula "73"))
                                                      (rule "false_right" (formula "73"))
                                                      (rule "inEqSimp_contradEq7" (formula "75") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                                      (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                      (rule "add_literals" (formula "75") (term "0,0"))
                                                      (rule "leq_literals" (formula "75") (term "0"))
                                                      (builtin "One Step Simplification" (formula "75"))
                                                      (rule "false_right" (formula "75"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0"))
                                                      (rule "leq_literals" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                   (branch "e3 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "36"))
                                                      (rule "hideAuxiliaryEq" (formula "36"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0,0"))
                                                      (rule "commute_or" (formula "26") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0,0"))
                                                      (rule "commute_or" (formula "68") (term "0,0,0"))
                                                      (rule "commute_or" (formula "42") (term "0,0,0"))
                                                      (rule "commute_or" (formula "54") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,0"))
                                                      (rule "commute_or_2" (formula "53") (term "0,0"))
                                                      (rule "commute_or_2" (formula "41") (term "0,0"))
                                                      (rule "commute_or_2" (formula "67") (term "0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0"))
                                                      (rule "commute_or_2" (formula "36") (term "0"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "commute_or_2" (formula "31") (term "0"))
                                                      (rule "commute_or_2" (formula "53") (term "0"))
                                                      (rule "commute_or_2" (formula "41") (term "0"))
                                                      (rule "commute_or_2" (formula "67") (term "0"))
                                                      (rule "cut_direct" (formula "62") (term "1,0"))
                                                      (branch "CUT: left ≤ e2 TRUE"
                                                         (builtin "One Step Simplification" (formula "63"))
                                                         (rule "true_left" (formula "63"))
                                                         (rule "replace_known_left" (formula "26") (term "1,0,0,0") (ifseqformula "62"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "replace_known_left" (formula "47") (term "1,0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "replace_known_left" (formula "35") (term "1,0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "59"))
                                                         (rule "times_zero_1" (formula "17") (term "0,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0"))
                                                         (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "35") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "65") (term "0,0"))
                                                         (rule "commute_or_2" (formula "40") (term "0,0"))
                                                         (rule "commute_or_2" (formula "51") (term "0,0"))
                                                         (rule "commute_or_2" (formula "60") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "65") (term "0"))
                                                         (rule "commute_or_2" (formula "40") (term "0"))
                                                         (rule "commute_or_2" (formula "51") (term "0"))
                                                         (rule "commute_or_2" (formula "46") (term "0,0"))
                                                         (rule "commute_or_2" (formula "46") (term "0"))
                                                         (rule "commute_or_2" (formula "35") (term "0,0"))
                                                         (rule "commute_or_2" (formula "35") (term "0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0"))
                                                         (rule "commute_or_2" (formula "60") (term "0,0"))
                                                         (rule "commute_or_2" (formula "60") (term "0"))
                                                         (rule "commute_or" (formula "46") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "46") (term "0,0"))
                                                         (rule "commute_or" (formula "35") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "35") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "35") (term "0,0"))
                                                         (rule "commute_or" (formula "26") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0"))
                                                         (rule "commute_or" (formula "60") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "60") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "60") (term "0,0"))
                                                         (rule "cut_direct" (formula "31") (term "1,0"))
                                                         (branch "CUT: right ≤ -1 + e3 TRUE"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "replace_known_left" (formula "40") (term "1,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "replace_known_left" (formula "50") (term "1,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "true_left" (formula "50"))
                                                            (rule "replace_known_left" (formula "63") (term "1,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "63"))
                                                            (rule "true_left" (formula "63"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "31"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "67") (ifseqformula "2"))
                                                            (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                                            (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "67") (term "0,0"))
                                                            (rule "leq_literals" (formula "67") (term "0"))
                                                            (builtin "One Step Simplification" (formula "67"))
                                                            (rule "false_right" (formula "67"))
                                                            (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "32"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "33"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                            (rule "mul_literals" (formula "9") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "23"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                         (branch "CUT: right ≤ -1 + e3 FALSE"
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "replace_known_right" (formula "51") (term "1,0") (ifseqformula "69"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_right" (formula "65") (term "1,0") (ifseqformula "69"))
                                                            (builtin "One Step Simplification" (formula "65"))
                                                            (rule "replace_known_right" (formula "40") (term "1,0") (ifseqformula "69"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "inEqSimp_leqRight" (formula "69"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "75") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                                            (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "75") (term "0,0"))
                                                            (rule "leq_literals" (formula "75") (term "0"))
                                                            (builtin "One Step Simplification" (formula "75"))
                                                            (rule "false_right" (formula "75"))
                                                            (rule "cut_direct" (formula "32") (term "1,0"))
                                                            (branch "CUT: right ≤ -1 + e4 TRUE"
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "replace_known_left" (formula "66") (term "1,0") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "true_left" (formula "66"))
                                                               (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "true_left" (formula "41"))
                                                               (rule "replace_known_left" (formula "51") (term "1,0") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "true_left" (formula "51"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "32"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "70") (ifseqformula "4"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0"))
                                                               (rule "add_literals" (formula "70") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "70") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "70") (term "0,0"))
                                                               (rule "leq_literals" (formula "70") (term "0"))
                                                               (builtin "One Step Simplification" (formula "70"))
                                                               (rule "false_right" (formula "70"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "33"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "33"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                               (rule "mul_literals" (formula "11") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "71") (ifseqformula "11"))
                                                               (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                                               (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                                               (rule "add_literals" (formula "71") (term "0,0"))
                                                               (rule "leq_literals" (formula "71") (term "0"))
                                                               (builtin "One Step Simplification" (formula "71"))
                                                               (rule "false_right" (formula "71"))
                                                               (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "34"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                               (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                               (rule "add_literals" (formula "29") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                               (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                               (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "29"))
                                                               (rule "andLeft" (formula "27"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0"))
                                                               (rule "add_zero_right" (formula "27") (term "0"))
                                                               (rule "leq_literals" (formula "27"))
                                                               (rule "closeFalse" (formula "27"))
                                                            )
                                                            (branch "CUT: right ≤ -1 + e4 FALSE"
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "replace_known_right" (formula "41") (term "1,0") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "replace_known_right" (formula "52") (term "1,0") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_right" (formula "66") (term "1,0") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "66"))
                                                               (rule "inEqSimp_leqRight" (formula "71"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "76") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                                               (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "76") (term "0,0"))
                                                               (rule "leq_literals" (formula "76") (term "0"))
                                                               (builtin "One Step Simplification" (formula "76"))
                                                               (rule "false_right" (formula "76"))
                                                               (rule "allLeft" (formula "32") (inst "t=j_0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "32") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                                               (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "32") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allLeft" (formula "53") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet10111111_20" (formula "53") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet10110111111_28" (formula "53") (term "0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "53") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "53") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "53") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "53") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "53") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "inEqSimp_contradInEq0" (formula "53") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                                               (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "53") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "53"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "49") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                               (rule "allLeft" (formula "69") (inst "t=j_0"))
                                                               (rule "replaceKnownSelect_taclet10111111_18" (formula "69") (term "0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet11110110111111_32" (formula "69") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "69") (term "1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "69") (term "1") (ifseqformula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "69") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,1"))
                                                               (rule "add_literals" (formula "69") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "69") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "69") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "69") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "inEqSimp_contradInEq0" (formula "69") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "69") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "69") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "69") (term "0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "69") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,0"))
                                                               (rule "add_literals" (formula "69") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "69") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "69") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "69") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "69"))
                                                               (rule "inEqSimp_contradInEq1" (formula "69") (ifseqformula "8"))
                                                               (rule "andLeft" (formula "69"))
                                                               (rule "inEqSimp_homoInEq1" (formula "69"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "69") (term "0"))
                                                               (rule "add_literals" (formula "69") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "69") (term "1,0"))
                                                               (rule "add_literals" (formula "69") (term "0"))
                                                               (rule "leq_literals" (formula "69"))
                                                               (rule "closeFalse" (formula "69"))
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: left ≤ e2 FALSE"
                                                         (builtin "One Step Simplification" (formula "62"))
                                                         (rule "replace_known_right" (formula "26") (term "1,0,0,0") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "replace_known_right" (formula "36") (term "1,0") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "replace_known_right" (formula "48") (term "1,0") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_leqRight" (formula "72"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "19"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0"))
                                                         (rule "add_literals" (formula "22") (term "0"))
                                                         (rule "leq_literals" (formula "22"))
                                                         (rule "closeFalse" (formula "22"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: left ≤ e4 FALSE"
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "73"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "replace_known_right" (formula "49") (term "1,0") (ifseqformula "73"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_right" (formula "63") (term "1,0") (ifseqformula "73"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "inEqSimp_leqRight" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "63"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "23"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "CUT: left ≤ e3 FALSE"
                                             (builtin "One Step Simplification" (formula "64"))
                                             (rule "replace_known_right" (formula "51") (term "1,0,0,0") (ifseqformula "75"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_right" (formula "37") (term "1,0") (ifseqformula "75"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "replace_known_right" (formula "25") (term "1,0,0,0") (ifseqformula "75"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_leqRight" (formula "75"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "38") (term "0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "38"))
                                             (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                             (rule "add_literals" (formula "20") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "20") (term "1,0"))
                                             (rule "add_zero_right" (formula "20") (term "0"))
                                             (rule "leq_literals" (formula "20"))
                                             (rule "closeFalse" (formula "20"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "i_0 = e1 ∨ i_0 = e2 FALSE"
                              (rule "orRight" (formula "46"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_right" (formula "6") (term "1,0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "45")))
                              (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "46")))
                              (rule "allLeft" (formula "26") (inst "t=i_0"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "26") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "allLeft" (formula "36") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_21" (formula "36") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "36") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "allLeft" (formula "44") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_19" (formula "44") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0,0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "44") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "44") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "44") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "44"))
                              (rule "allLeft" (formula "30") (inst "t=i_0"))
                              (rule "replaceKnownSelect_taclet10111111_23" (formula "30") (term "1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1110111111_25" (formula "30") (term "1,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "j_0 = e3 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1"))
                                 (rule "mul_literals" (formula "22") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "7"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "18"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                                 (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0"))
                                 (rule "leq_literals" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "false_right" (formula "50"))
                                 (rule "inEqSimp_contradEq3" (formula "4") (term "0,0,0") (ifseqformula "6"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                 (rule "times_zero_1" (formula "8") (term "0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_literals" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "j_0 = e3 FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "i_0 = e3 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "48") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_contradEq7" (formula "49") (ifseqformula "18"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0"))
                                    (rule "leq_literals" (formula "49") (term "0"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "false_right" (formula "49"))
                                    (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "6"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0"))
                                    (rule "leq_literals" (formula "47") (term "0"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "false_right" (formula "47"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "allLeft" (formula "29") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet1_0" (formula "29") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "29") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "commute_or" (formula "29") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0"))
                                    (rule "allLeft" (formula "45") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet11111_16" (formula "45") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "45") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "commute_or" (formula "45") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "45") (term "0,0"))
                                    (rule "commute_or_2" (formula "45") (term "0"))
                                    (rule "allLeft" (formula "23") (inst "t=e4"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0"))
                                    (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0"))
                                    (rule "allLeft" (formula "26") (inst "t=e1"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "commute_or" (formula "26") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "allLeft" (formula "45") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet11111_10" (formula "45") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "45") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "commute_or" (formula "45") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "45") (term "0,0"))
                                    (rule "commute_or_2" (formula "45") (term "0"))
                                    (rule "allLeft" (formula "24") (inst "t=e3"))
                                    (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "commute_or" (formula "24") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0"))
                                    (rule "allLeft" (formula "25") (inst "t=e2"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0"))
                                    (rule "allLeft" (formula "31") (inst "t=e4"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "31") (term "1,1,0") (inst "selectSK=arr_15"))
                                    (rule "simplifySelectOfAnon" (formula "31"))
                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "59")) (ifInst ""  (formula "10")))
                                    (rule "elementOfUnion" (formula "31") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "elementOfSingleton" (formula "31") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allLeft" (formula "33") (inst "t=e3"))
                                    (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "1,1,0") (inst "selectSK=arr_16"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "61")) (ifInst ""  (formula "10")))
                                    (rule "elementOfUnion" (formula "33") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "58")))
                                    (rule "elementOfSingleton" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradEq7" (formula "33") (term "0,0") (ifseqformula "18"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "33") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEqReverse" (formula "34") (term "1,1,0") (ifseqformula "33"))
                                    (rule "hideAuxiliaryEq" (formula "33"))
                                    (rule "allLeft" (formula "34") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet1_2" (formula "34") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "34") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "45") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet111_8" (formula "45") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "45") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "allLeft" (formula "53") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet11111_12" (formula "53") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "53") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "43") (inst "t=e4"))
                                    (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "43") (term "1,1,0") (inst "selectSK=arr_17"))
                                    (rule "simplifySelectOfAnon" (formula "43"))
                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "65")) (ifInst ""  (formula "10")))
                                    (rule "replaceKnownSelect_taclet011110111111_29" (formula "43") (term "2,0"))
                                    (rule "elementOfUnion" (formula "43") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_contradEq7" (formula "43") (term "1,0,0") (ifseqformula "19"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "43") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "elementOfUnion" (formula "43") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "43") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "allLeft" (formula "45") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet111_6" (formula "45") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "45") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "allLeft" (formula "46") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet111_4" (formula "46") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "46") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "58") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet11111_14" (formula "58") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "58") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "38") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet011110111111_29" (formula "38") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "63") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet11111_12" (formula "63") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "63") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "63") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "63") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "63") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "63") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "63") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "63") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "64") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet11111_10" (formula "64") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "64") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "64") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "64") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "64") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "64") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "64") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "64") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "64") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "61")))
                                    (rule "true_left" (formula "64"))
                                    (rule "allLeft" (formula "39") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet011110111111_30" (formula "39") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011110111111_31" (formula "39") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "39") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "36")))
                                    (rule "true_left" (formula "39"))
                                    (rule "allLeft" (formula "29") (inst "t=e4"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "40") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet1_2" (formula "40") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "40") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "66") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet11111_14" (formula "66") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "66") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "66") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "30") (inst "t=e3"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "30") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "27")))
                                    (rule "true_left" (formula "30"))
                                    (rule "allLeft" (formula "30") (inst "t=e2"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "54") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet011110111111_32" (formula "54") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "55") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet111_6" (formula "55") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "55") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "55") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "55") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "55") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "52")))
                                    (rule "true_left" (formula "55"))
                                    (rule "allLeft" (formula "55") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet111_4" (formula "55") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "55") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                    (rule "commute_or" (formula "35") (term "0,0,0"))
                                    (rule "commute_or" (formula "25") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                    (rule "commute_or" (formula "53") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "48") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = e4 TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "75") (term "0") (ifseqformula "3"))
                                       (rule "replace_known_right" (formula "47") (term "1,0,0") (ifseqformula "75"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "75"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "replace_known_left" (formula "68") (term "1,0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "68"))
                                       (rule "true_left" (formula "68"))
                                       (rule "replace_known_left" (formula "29") (term "1,0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "replace_known_left" (formula "39") (term "1,0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "replace_known_left" (formula "52") (term "1,0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "69") (term "0") (ifseqformula "3"))
                                       (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "69"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "44"))
                                       (rule "hideAuxiliaryEq" (formula "44"))
                                       (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "68"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "applyEqReverse" (formula "32") (term "1,1,0") (ifseqformula "31"))
                                       (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "31"))
                                       (rule "hideAuxiliaryEq" (formula "31"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1"))
                                       (rule "mul_literals" (formula "20") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "55") (ifseqformula "5"))
                                       (rule "andLeft" (formula "55"))
                                       (rule "inEqSimp_homoInEq1" (formula "55"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                       (rule "mul_literals" (formula "55") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                       (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                                       (rule "add_literals" (formula "55") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "55") (term "1,0"))
                                       (rule "add_literals" (formula "55") (term "0"))
                                       (rule "leq_literals" (formula "55"))
                                       (rule "closeFalse" (formula "55"))
                                    )
                                    (branch "j_0 = e4 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "commute_or" (formula "48") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "49") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "63") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "67") (term "0,0,0"))
                                       (rule "cut_direct" (formula "38") (term "1,0"))
                                       (branch "CUT: right ≤ -1 + e1 TRUE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "replace_known_left" (formula "66") (term "1,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "66"))
                                          (rule "true_left" (formula "66"))
                                          (rule "replace_known_left" (formula "52") (term "1,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "37"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "71") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0"))
                                          (rule "add_literals" (formula "71") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "71") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "71") (term "0,0"))
                                          (rule "qeq_literals" (formula "71") (term "0"))
                                          (builtin "One Step Simplification" (formula "71"))
                                          (rule "false_right" (formula "71"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "38"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                          (rule "times_zero_1" (formula "8") (term "0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0"))
                                          (rule "add_literals" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                       (branch "CUT: right ≤ -1 + e1 FALSE"
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_right" (formula "52") (term "1,0,0,0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "replace_known_right" (formula "66") (term "1,0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "66"))
                                          (rule "inEqSimp_leqRight" (formula "72"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "76") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0"))
                                          (rule "add_literals" (formula "76") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "76") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "76") (term "0,0"))
                                          (rule "leq_literals" (formula "76") (term "0"))
                                          (builtin "One Step Simplification" (formula "76"))
                                          (rule "false_right" (formula "76"))
                                          (rule "allLeft" (formula "52") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet10111111_20" (formula "52") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11110111111_26" (formula "52") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "38") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet10111111_22" (formula "38") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110111111_24" (formula "38") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "27") (inst "t=j_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "69") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet10111111_18" (formula "69") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1011110111111_33" (formula "69") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "69") (term "1,0,0,0,0"))
                                          (rule "cut_direct" (formula "24") (term "1,0"))
                                          (branch "CUT: left ≤ e4 TRUE"
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "replace_known_left" (formula "36") (term "1,0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "replace_known_left" (formula "66") (term "1,0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "66"))
                                             (rule "true_left" (formula "66"))
                                             (rule "replace_known_left" (formula "50") (term "1,0,0,0") (ifseqformula "24"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "24"))
                                             (rule "times_zero_1" (formula "15") (term "0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "32") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "57") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_contradInEq1" (formula "71") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "71") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "71"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "cut_direct" (formula "65") (term "1,0"))
                                             (branch "CUT: left ≤ e3 TRUE"
                                                (builtin "One Step Simplification" (formula "66"))
                                                (rule "true_left" (formula "66"))
                                                (rule "replace_known_left" (formula "51") (term "1,0,0,0") (ifseqformula "65"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "true_left" (formula "51"))
                                                (rule "replace_known_left" (formula "37") (term "1,0,0,0") (ifseqformula "64"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "true_left" (formula "37"))
                                                (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "63"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "62"))
                                                (rule "times_zero_1" (formula "16") (term "0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0"))
                                                (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                                (rule "cut_direct" (formula "26") (term "1,0"))
                                                (branch "CUT: left ≤ e2 TRUE"
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "replace_known_left" (formula "36") (term "1,0,0,0") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "replace_known_left" (formula "48") (term "1,0,0,0") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "true_left" (formula "48"))
                                                   (rule "replace_known_left" (formula "61") (term "1,0,0,0") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "true_left" (formula "61"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "26"))
                                                   (rule "times_zero_1" (formula "16") (term "0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "67") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "67"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "54") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "ifthenelse_split" (formula "36") (term "0"))
                                                   (branch "e4 = e1 ∨ e4 = e2 TRUE"
                                                      (rule "applyEqReverse" (formula "42") (term "1,1,0") (ifseqformula "37"))
                                                      (rule "applyEqReverse" (formula "49") (term "2,0") (ifseqformula "37"))
                                                      (rule "hideAuxiliaryEq" (formula "37"))
                                                      (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEqReverse" (formula "53") (term "1,1,0") (ifseqformula "48"))
                                                      (rule "hideAuxiliaryEq" (formula "48"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "61") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "65") (term "0,0"))
                                                      (rule "commute_or_2" (formula "41") (term "0,0"))
                                                      (rule "commute_or" (formula "32") (term "0,0,0"))
                                                      (rule "commute_or" (formula "52") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "65") (term "0"))
                                                      (rule "commute_or_2" (formula "41") (term "0"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0"))
                                                      (rule "commute_or_2" (formula "37") (term "0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "commute_or" (formula "66") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "61") (term "0,0"))
                                                      (rule "commute_or_2" (formula "61") (term "0"))
                                                      (rule "commute_or" (formula "33") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "commute_or_2" (formula "52") (term "0,0"))
                                                      (rule "commute_or_2" (formula "52") (term "0"))
                                                      (rule "commute_or" (formula "53") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "66") (term "0,0"))
                                                      (rule "commute_or_2" (formula "66") (term "0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "commute_or_2" (formula "53") (term "0,0"))
                                                      (rule "commute_or_2" (formula "53") (term "0"))
                                                      (rule "commute_or" (formula "48") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "48") (term "0,0"))
                                                      (rule "commute_or" (formula "37") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0,0"))
                                                      (rule "commute_or" (formula "28") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0"))
                                                      (rule "commute_or" (formula "61") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "61") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "61") (term "0,0"))
                                                      (rule "allLeft" (formula "63") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet10111111_18" (formula "63") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1011110111111_33" (formula "63") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "63") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "63") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "63") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "63") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "63") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "63") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "inEqSimp_contradInEq1" (formula "63") (term "1") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "63") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,1"))
                                                      (rule "add_literals" (formula "63") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "63") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "63") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "63") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "inEqSimp_contradInEq0" (formula "63") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "63"))
                                                      (rule "inEqSimp_homoInEq1" (formula "63"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "63") (term "0"))
                                                      (rule "add_literals" (formula "63") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "63") (term "1,0"))
                                                      (rule "add_literals" (formula "63") (term "0"))
                                                      (rule "leq_literals" (formula "63"))
                                                      (rule "closeFalse" (formula "63"))
                                                   )
                                                   (branch "e4 = e1 ∨ e4 = e2 FALSE"
                                                      (rule "orRight" (formula "71"))
                                                      (rule "applyEqReverse" (formula "41") (term "1,1,0") (ifseqformula "36"))
                                                      (rule "applyEqReverse" (formula "48") (term "2,0") (ifseqformula "36"))
                                                      (rule "hideAuxiliaryEq" (formula "36"))
                                                      (rule "replace_known_right" (formula "47") (term "1,0,0") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "70")))
                                                      (rule "applyEqReverse" (formula "52") (term "1,1,0") (ifseqformula "47"))
                                                      (rule "hideAuxiliaryEq" (formula "47"))
                                                      (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "60") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "64") (term "0,0"))
                                                      (rule "commute_or_2" (formula "40") (term "0,0"))
                                                      (rule "commute_or" (formula "32") (term "0,0,0"))
                                                      (rule "commute_or" (formula "51") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "64") (term "0"))
                                                      (rule "commute_or_2" (formula "40") (term "0"))
                                                      (rule "commute_or_2" (formula "41") (term "0,0"))
                                                      (rule "commute_or_2" (formula "41") (term "0"))
                                                      (rule "commute_or_2" (formula "47") (term "0,0"))
                                                      (rule "commute_or_2" (formula "47") (term "0"))
                                                      (rule "commute_or_2" (formula "36") (term "0,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0"))
                                                      (rule "commute_or" (formula "65") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "commute_or_2" (formula "60") (term "0,0"))
                                                      (rule "commute_or_2" (formula "60") (term "0"))
                                                      (rule "commute_or" (formula "33") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0,0"))
                                                      (rule "commute_or_2" (formula "32") (term "0"))
                                                      (rule "commute_or_2" (formula "51") (term "0,0"))
                                                      (rule "commute_or_2" (formula "51") (term "0"))
                                                      (rule "commute_or" (formula "52") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "65") (term "0,0"))
                                                      (rule "commute_or_2" (formula "65") (term "0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "commute_or_2" (formula "52") (term "0,0"))
                                                      (rule "commute_or_2" (formula "52") (term "0"))
                                                      (rule "commute_or" (formula "47") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "47") (term "0,0"))
                                                      (rule "commute_or" (formula "36") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "36") (term "0,0"))
                                                      (rule "commute_or" (formula "28") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "28") (term "0,0"))
                                                      (rule "commute_or" (formula "60") (term "0,0,0,0"))
                                                      (rule "commute_or_2" (formula "60") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "60") (term "0,0"))
                                                      (rule "allLeft" (formula "30") (inst "t=j_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "allLeft" (formula "63") (inst "t=j_0"))
                                                      (rule "replaceKnownSelect_taclet10111111_18" (formula "63") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1011110111111_33" (formula "63") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "63") (term "0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "63") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "63") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "63") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "63") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "63") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "63") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "63") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "63") (term "1,0,0,0,0"))
                                                      (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "63") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "inEqSimp_contradInEq1" (formula "63") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "63") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,0"))
                                                      (rule "add_literals" (formula "63") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "63") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "63") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "63") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "63"))
                                                      (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "63"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0"))
                                                      (rule "add_literals" (formula "6") (term "0"))
                                                      (rule "leq_literals" (formula "6"))
                                                      (rule "closeFalse" (formula "6"))
                                                   )
                                                )
                                                (branch "CUT: left ≤ e2 FALSE"
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "replace_known_right" (formula "49") (term "1,0,0,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_right" (formula "36") (term "1,0,0,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "replace_known_right" (formula "63") (term "1,0,0,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "inEqSimp_leqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "26"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "50") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "50") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "50") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "inEqSimp_contradEq7" (formula "37") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "leq_literals" (formula "37") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "22"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "CUT: left ≤ e3 FALSE"
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "76"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "replace_known_right" (formula "37") (term "1,0,0,0") (ifseqformula "76"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "replace_known_right" (formula "51") (term "1,0,0,0") (ifseqformula "76"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "inEqSimp_leqRight" (formula "76"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "79") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0"))
                                                (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                                (rule "add_literals" (formula "79") (term "0,0"))
                                                (rule "qeq_literals" (formula "79") (term "0"))
                                                (builtin "One Step Simplification" (formula "79"))
                                                (rule "false_right" (formula "79"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "27"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "11") (term "0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "17") (term "0"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "21"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0"))
                                                (rule "add_zero_right" (formula "22") (term "0"))
                                                (rule "leq_literals" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                          )
                                          (branch "CUT: left ≤ e4 FALSE"
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "67") (term "1,0,0,0") (ifseqformula "78"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "replace_known_right" (formula "36") (term "1,0,0,0") (ifseqformula "78"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "replace_known_right" (formula "51") (term "1,0,0,0") (ifseqformula "78"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "inEqSimp_leqRight" (formula "78"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "37") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_contradEq3" (formula "52") (term "0,0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "52") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "82") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0"))
                                             (rule "add_literals" (formula "82") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "82") (term "1,0,0"))
                                             (rule "add_literals" (formula "82") (term "0,0"))
                                             (rule "qeq_literals" (formula "82") (term "0"))
                                             (builtin "One Step Simplification" (formula "82"))
                                             (rule "false_right" (formula "82"))
                                             (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "22"))
                                             (rule "times_zero_1" (formula "11") (term "0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "20"))
                                             (rule "andLeft" (formula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0"))
                                             (rule "add_zero_right" (formula "21") (term "0"))
                                             (rule "leq_literals" (formula "21"))
                                             (rule "closeFalse" (formula "21"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "i_0 = e3 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "allLeft" (formula "44") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet11111_16" (formula "44") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "44") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "44") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "commute_or" (formula "44") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "allLeft" (formula "34") (inst "t=e4"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "34") (term "1,1,0") (inst "selectSK=arr_15"))
                                    (rule "simplifySelectOfAnon" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                                    (rule "elementOfUnion" (formula "34") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_contradEq7" (formula "34") (term "1,0,0") (ifseqformula "19"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "34") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "elementOfUnion" (formula "34") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=arr_16"))
                                    (rule "simplifySelectOfAnon" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")) (ifInst ""  (formula "10")))
                                    (rule "elementOfUnion" (formula "34") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or" (formula "36") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0"))
                                    (rule "allLeft" (formula "37") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet111_6" (formula "37") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "37") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0"))
                                    (rule "commute_or" (formula "37") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0"))
                                    (rule "allLeft" (formula "38") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet111_4" (formula "38") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "38") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "commute_or" (formula "38") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0,0"))
                                    (rule "allLeft" (formula "23") (inst "t=e4"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0"))
                                    (rule "commute_or" (formula "23") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0"))
                                    (rule "allLeft" (formula "24") (inst "t=e3"))
                                    (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0"))
                                    (rule "commute_or" (formula "24") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0"))
                                    (rule "allLeft" (formula "25") (inst "t=e2"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0"))
                                    (rule "commute_or" (formula "25") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "25") (term "0,0"))
                                    (rule "allLeft" (formula "44") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet111_8" (formula "44") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "44") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "44") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "commute_or" (formula "44") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0,0"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "allLeft" (formula "51") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet11111_12" (formula "51") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "51") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0,0"))
                                    (rule "commute_or_2" (formula "51") (term "0"))
                                    (rule "allLeft" (formula "52") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet11111_14" (formula "52") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "52") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0,0"))
                                    (rule "commute_or_2" (formula "52") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "52") (term "0,0"))
                                    (rule "commute_or_2" (formula "52") (term "0"))
                                    (rule "allLeft" (formula "28") (inst "t=e1"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "allLeft" (formula "54") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet11111_10" (formula "54") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "54") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "31") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet111110111111_29" (formula "31") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "32") (inst "t=e3"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                                    (rule "pullOutSelect" (formula "32") (term "1,1,0") (inst "selectSK=arr_17"))
                                    (rule "simplifySelectOfAnon" (formula "32"))
                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "70")) (ifInst ""  (formula "10")))
                                    (rule "elementOfUnion" (formula "32") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradEq7" (formula "32") (term "1,0,0") (ifseqformula "18"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "32") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "allLeft" (formula "34") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet1_2" (formula "34") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "34") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                                    (rule "allLeft" (formula "37") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet1_0" (formula "37") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "37") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "allLeft" (formula "29") (inst "t=e4"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "30") (inst "t=e3"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "53") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet111110111111_28" (formula "53") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "66") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet11111_12" (formula "66") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "66") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "66") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "54") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet111_6" (formula "54") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "54") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "40") (inst "t=e4"))
                                    (rule "replaceKnownSelect_taclet111110111111_29" (formula "40") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "41") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet111110111111_30" (formula "41") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "42") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet1_2" (formula "42") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "42") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "71") (inst "t=e3"))
                                    (rule "replaceKnownSelect_taclet11111_10" (formula "71") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "71") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "31") (inst "t=e2"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "73") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet11111_14" (formula "73") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "73") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "73") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "73") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0,0"))
                                    (rule "allLeft" (formula "59") (inst "t=e2"))
                                    (rule "replaceKnownSelect_taclet111_4" (formula "59") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "59") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                                    (rule "commute_or" (formula "28") (term "0,0,0"))
                                    (rule "commute_or" (formula "66") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "68") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                    (rule "commute_or" (formula "67") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                    (rule "commute_or" (formula "40") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "29") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                    (rule "allLeft" (formula "27") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "cut_direct" (formula "72") (term "1,0"))
                                    (branch "CUT: right ≤ -1 + e1 TRUE"
                                       (builtin "One Step Simplification" (formula "73"))
                                       (rule "true_left" (formula "73"))
                                       (rule "replace_known_left" (formula "41") (term "1,0,0,0") (ifseqformula "72"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "replace_known_left" (formula "29") (term "1,0,0,0") (ifseqformula "71"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "true_left" (formula "29"))
                                       (rule "replace_known_left" (formula "55") (term "1,0") (ifseqformula "70"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "true_left" (formula "55"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "69"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "79") (ifseqformula "7"))
                                       (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0"))
                                       (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "79") (term "0,0"))
                                       (rule "qeq_literals" (formula "79") (term "0"))
                                       (builtin "One Step Simplification" (formula "79"))
                                       (rule "false_right" (formula "79"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "70"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "7"))
                                       (rule "times_zero_1" (formula "9") (term "0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "23"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "52") (term "0,0,0") (ifseqformula "21"))
                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "52") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "52") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "inEqSimp_contradEq3" (formula "51") (term "0,0,0") (ifseqformula "21"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "51") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "51") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_contradEq3" (formula "39") (term "0,0") (ifseqformula "20"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "39"))
                                       (rule "applyEqReverse" (formula "40") (term "1,1,0") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "19"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0"))
                                       (rule "add_literals" (formula "18") (term "0"))
                                       (rule "leq_literals" (formula "18"))
                                       (rule "closeFalse" (formula "18"))
                                    )
                                    (branch "CUT: right ≤ -1 + e1 FALSE"
                                       (builtin "One Step Simplification" (formula "72"))
                                       (rule "replace_known_right" (formula "41") (term "1,0,0,0") (ifseqformula "79"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "replace_known_right" (formula "57") (term "1,0") (ifseqformula "79"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "replace_known_right" (formula "29") (term "1,0,0,0") (ifseqformula "79"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_leqRight" (formula "79"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "85") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "85") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "85") (term "0,0"))
                                       (rule "add_literals" (formula "85") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "85") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "85") (term "0,0"))
                                       (rule "leq_literals" (formula "85") (term "0"))
                                       (builtin "One Step Simplification" (formula "85"))
                                       (rule "false_right" (formula "85"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "j_0 = e4 TRUE"
                                          (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "5"))
                                          (rule "replace_known_left" (formula "75") (term "1,0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "75"))
                                          (rule "true_left" (formula "75"))
                                          (rule "replace_known_left" (formula "44") (term "1,0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "replace_known_left" (formula "59") (term "1,0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "true_left" (formula "59"))
                                          (rule "replace_known_left" (formula "32") (term "1,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "applyEq" (formula "81") (term "0") (ifseqformula "5"))
                                          (rule "replace_known_right" (formula "50") (term "1,0,0") (ifseqformula "81"))
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "replace_known_right" (formula "51") (term "1,0,0") (ifseqformula "81"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "5"))
                                          (rule "inEqSimp_commuteGeq" (formula "29"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "78") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "51") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "51") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "51") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqReverse" (formula "52") (term "1,1,0,0,0") (ifseqformula "51"))
                                          (rule "hideAuxiliaryEq" (formula "51"))
                                          (rule "inEqSimp_contradEq3" (formula "6") (term "0,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "69") (term "1,1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "inEqSimp_contradEq7" (formula "49") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "49") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "49") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "applyEqReverse" (formula "50") (term "1,1,0,0,0") (ifseqformula "49"))
                                          (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "49"))
                                          (rule "hideAuxiliaryEq" (formula "49"))
                                          (rule "inEqSimp_contradEq7" (formula "75") (ifseqformula "20"))
                                          (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                          (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "75") (term "0,0"))
                                          (rule "leq_literals" (formula "75") (term "0"))
                                          (builtin "One Step Simplification" (formula "75"))
                                          (rule "false_right" (formula "75"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "21"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_zero_right" (formula "22") (term "0"))
                                          (rule "leq_literals" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                       (branch "j_0 = e4 FALSE"
                                          (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "28") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "commute_or_2" (formula "60") (term "0,0,0"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "i_0 = e4 TRUE"
                                             (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "6"))
                                             (rule "applyEqReverse" (formula "74") (term "1,1,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "inEqSimp_homoInEq0" (formula "6"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "28"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "8") (term "1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "85") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "85"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "replace_known_right" (formula "53") (term "1,0,0") (ifseqformula "85"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "30") (term "0,2,1,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "29") (term "0,2,1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "84") (term "0") (ifseqformula "5"))
                                             (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "84"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "52"))
                                             (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "52"))
                                             (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "52"))
                                             (rule "hideAuxiliaryEq" (formula "52"))
                                             (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "83"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "53") (term "1,1,0,0,0") (ifseqformula "52"))
                                             (rule "applyEqReverse" (formula "59") (term "1,1,0") (ifseqformula "52"))
                                             (rule "hideAuxiliaryEq" (formula "52"))
                                             (rule "applyEq" (formula "80") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "42") (term "0,2,1,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "56") (term "0,2,1,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "71") (term "0,2,1,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "28") (term "0,2,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "28") (term "0,2,0,1,0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                             (rule "mul_literals" (formula "28") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "79") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0"))
                                             (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "79") (term "0,0"))
                                             (rule "leq_literals" (formula "79") (term "0"))
                                             (builtin "One Step Simplification" (formula "79"))
                                             (rule "false_right" (formula "79"))
                                             (rule "inEqSimp_contradEq7" (formula "79") (ifseqformula "20"))
                                             (rule "polySimp_mulComm0" (formula "79") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0"))
                                             (rule "add_literals" (formula "79") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "79") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "79") (term "0,0"))
                                             (rule "leq_literals" (formula "79") (term "0"))
                                             (builtin "One Step Simplification" (formula "79"))
                                             (rule "false_right" (formula "79"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "32") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "52") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0,0,0,0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "58") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "24") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "37") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_contradInEq1" (formula "67") (term "1,0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "67") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_contradInEq1" (formula "73") (term "1,0,0,0,0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "73") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "73") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "73") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "73") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "73") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "73") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "73") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "73") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "73") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "73") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "73"))
                                             (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0"))
                                             (rule "leq_literals" (formula "32") (term "0,1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "30")))
                                             (rule "true_left" (formula "32"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "43") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "41")))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0,0,0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "56") (term "0,0,0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "56") (term "1,1,0,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0,1,0,0,0"))
                                             (rule "leq_literals" (formula "56") (term "0,1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "54")))
                                             (rule "true_left" (formula "56"))
                                             (rule "inEqSimp_contradInEq1" (formula "70") (term "0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "70") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "68")))
                                             (rule "true_left" (formula "70"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                             (rule "commute_or_2" (formula "56") (term "0,0,0"))
                                             (rule "cut_direct" (formula "51") (term "1,0"))
                                             (branch "CUT: left ≤ e3 TRUE"
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "true_left" (formula "52"))
                                                (rule "replace_known_left" (formula "38") (term "1,0,0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "replace_known_left" (formula "65") (term "1,0,0,0") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "true_left" (formula "65"))
                                                (rule "replace_known_left" (formula "25") (term "1,0") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "49"))
                                                (rule "times_zero_1" (formula "15") (term "0,0"))
                                                (rule "add_zero_left" (formula "15") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_contradInEq1" (formula "68") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "qeq_literals" (formula "68") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "68"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "qeq_literals" (formula "32") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "cut_direct" (formula "51") (term "1,0"))
                                                (branch "CUT: left ≤ e2 TRUE"
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "true_left" (formula "52"))
                                                   (rule "replace_known_left" (formula "38") (term "1,0,0,0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "replace_known_left" (formula "62") (term "1,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "true_left" (formula "62"))
                                                   (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "49"))
                                                   (rule "times_zero_1" (formula "16") (term "0,0"))
                                                   (rule "add_zero_left" (formula "16") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "67") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "67") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "67"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "allLeft" (formula "38") (inst "t=j_0"))
                                                   (rule "replaceKnownSelect_taclet10111111_22" (formula "38") (term "1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet110111111_24" (formula "38") (term "1,1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0,0"))
                                                   (rule "allLeft" (formula "64") (inst "t=j_0"))
                                                   (rule "replaceKnownSelect_taclet10111111_18" (formula "64") (term "1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet11111110111111_31" (formula "64") (term "1,1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "64") (term "1,0,0,0,0"))
                                                   (rule "allLeft" (formula "52") (inst "t=j_0"))
                                                   (rule "replaceKnownSelect_taclet10111111_20" (formula "52") (term "1,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet11110111111_26" (formula "52") (term "1,1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0,0"))
                                                   (rule "allLeft" (formula "27") (inst "t=j_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                                                   (rule "ifthenelse_split" (formula "38") (term "0"))
                                                   (branch "e3 = e1 TRUE"
                                                      (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "39"))
                                                      (rule "hideAuxiliaryEq" (formula "39"))
                                                      (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "50") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "33") (term "1,1,1,0,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "54") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "49") (term "0,2,0") (ifseqformula "38"))
                                                      (rule "inEqSimp_commuteGeq" (formula "49"))
                                                      (rule "applyEq" (formula "72") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "72") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "71") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "51") (term "1") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "38"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                      (rule "applyEq" (formula "58") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "57") (term "1,1,1,0,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "15") (term "0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "70") (term "1,1,0,0,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "69") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "72") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "64") (term "0,2,1") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "68") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "65") (term "0,1,1,1,0,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "33") (term "0,2,1,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "63") (term "0,2,0") (ifseqformula "38"))
                                                      (rule "inEqSimp_commuteGeq" (formula "63"))
                                                      (rule "applyEq" (formula "57") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,0,1,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "59") (term "0,1,1,1,0,1,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "72") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "67") (term "0,1,1,0,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "57") (term "0,2,1,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "70") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "59") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "70") (term "0,2,1,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "43") (term "1,1,0,0,0,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "66") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "56") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,0") (ifseqformula "38"))
                                                      (rule "applyEq" (formula "75") (term "1") (ifseqformula "38"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                      (rule "mul_literals" (formula "21") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                      (rule "inEqSimp_contradEq7" (formula "75") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                                      (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "75") (term "0,0"))
                                                      (rule "leq_literals" (formula "75") (term "0"))
                                                      (builtin "One Step Simplification" (formula "75"))
                                                      (rule "false_right" (formula "75"))
                                                      (rule "inEqSimp_contradEq7" (formula "75") (ifseqformula "22"))
                                                      (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0"))
                                                      (rule "add_literals" (formula "75") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "75") (term "1,0,0"))
                                                      (rule "add_literals" (formula "75") (term "0,0"))
                                                      (rule "leq_literals" (formula "75") (term "0"))
                                                      (builtin "One Step Simplification" (formula "75"))
                                                      (rule "false_right" (formula "75"))
                                                      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                                      (rule "andLeft" (formula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0"))
                                                      (rule "leq_literals" (formula "20"))
                                                      (rule "closeFalse" (formula "20"))
                                                   )
                                                   (branch "e3 = e1 FALSE"
                                                      (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "38"))
                                                      (rule "hideAuxiliaryEq" (formula "38"))
                                                      (rule "commute_or_2" (formula "37") (term "0,0"))
                                                      (rule "commute_or_2" (formula "56") (term "0,0"))
                                                      (rule "commute_or_2" (formula "33") (term "0,0"))
                                                      (rule "commute_or" (formula "42") (term "0,0,0"))
                                                      (rule "commute_or" (formula "69") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "37") (term "0"))
                                                      (rule "commute_or_2" (formula "56") (term "0"))
                                                      (rule "commute_or_2" (formula "33") (term "0"))
                                                      (rule "commute_or" (formula "70") (term "0,0,0"))
                                                      (rule "commute_or" (formula "43") (term "0,0,0"))
                                                      (rule "commute_or" (formula "57") (term "0,0,0"))
                                                      (rule "commute_or" (formula "34") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0,0"))
                                                      (rule "commute_or_2" (formula "42") (term "0"))
                                                      (rule "commute_or_2" (formula "69") (term "0,0"))
                                                      (rule "commute_or_2" (formula "69") (term "0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "70") (term "0,0"))
                                                      (rule "commute_or_2" (formula "70") (term "0"))
                                                      (rule "commute_or_2" (formula "43") (term "0,0"))
                                                      (rule "commute_or_2" (formula "43") (term "0"))
                                                      (rule "commute_or_2" (formula "65") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "0,0"))
                                                      (rule "commute_or_2" (formula "57") (term "0"))
                                                      (rule "commute_or_2" (formula "34") (term "0,0"))
                                                      (rule "commute_or_2" (formula "34") (term "0"))
                                                      (rule "commute_or_2" (formula "52") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "38") (term "0,0"))
                                                      (rule "commute_or_2" (formula "38") (term "0"))
                                                      (rule "commute_or_2" (formula "65") (term "0,0"))
                                                      (rule "commute_or_2" (formula "65") (term "0"))
                                                      (rule "commute_or_2" (formula "52") (term "0,0"))
                                                      (rule "commute_or_2" (formula "52") (term "0"))
                                                      (rule "commute_or_2" (formula "27") (term "0,0"))
                                                      (rule "commute_or_2" (formula "27") (term "0"))
                                                      (rule "cut_direct" (formula "49") (term "1,0"))
                                                      (branch "CUT: left ≤ e4 TRUE"
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "replace_known_left" (formula "64") (term "1,0") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "true_left" (formula "64"))
                                                         (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "47"))
                                                         (rule "times_zero_1" (formula "17") (term "0,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0"))
                                                         (rule "commute_or" (formula "36") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "62") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "36") (term "0,0"))
                                                         (rule "commute_or_2" (formula "62") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "62") (term "0,0"))
                                                         (rule "commute_or" (formula "50") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "26") (term "0,0,0,0"))
                                                         (rule "commute_or_2" (formula "50") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "50") (term "0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0"))
                                                         (rule "cut_direct" (formula "54") (term "1,0"))
                                                         (branch "CUT: right ≤ -1 + e3 TRUE"
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "true_left" (formula "55"))
                                                            (rule "replace_known_left" (formula "66") (term "1,0") (ifseqformula "54"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "true_left" (formula "66"))
                                                            (rule "replace_known_left" (formula "32") (term "1,0") (ifseqformula "54"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "replace_known_left" (formula "39") (term "1,0") (ifseqformula "53"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "true_left" (formula "39"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "52"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "69") (ifseqformula "2"))
                                                            (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0"))
                                                            (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "69") (term "0,0"))
                                                            (rule "leq_literals" (formula "69") (term "0"))
                                                            (builtin "One Step Simplification" (formula "69"))
                                                            (rule "false_right" (formula "69"))
                                                            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "53"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "9"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                         (branch "CUT: right ≤ -1 + e3 FALSE"
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "32") (term "1,0") (ifseqformula "71"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "replace_known_right" (formula "40") (term "1,0") (ifseqformula "71"))
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "replace_known_right" (formula "66") (term "1,0") (ifseqformula "71"))
                                                            (builtin "One Step Simplification" (formula "66"))
                                                            (rule "inEqSimp_leqRight" (formula "71"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_contradEq7" (formula "74") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "74") (term "0,0"))
                                                            (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "74") (term "0,0"))
                                                            (rule "leq_literals" (formula "74") (term "0"))
                                                            (builtin "One Step Simplification" (formula "74"))
                                                            (rule "false_right" (formula "74"))
                                                            (rule "allLeft" (formula "33") (inst "t=j_0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "33") (term "0,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "33") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                                            (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "33") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "allLeft" (formula "42") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet10111111_22" (formula "42") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet110111111_24" (formula "42") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "42") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "42") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "42") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "allLeft" (formula "69") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet10111111_18" (formula "69") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11111110111111_31" (formula "69") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "69") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "69") (term "0,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "69") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "69") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "69") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "69") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "69") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "69") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "69"))
                                                            (rule "inEqSimp_contradInEq1" (formula "69") (term "0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "69") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,0"))
                                                            (rule "add_literals" (formula "69") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "69") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "69") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "69") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "69"))
                                                            (rule "allLeft" (formula "57") (inst "t=j_0"))
                                                            (rule "replaceKnownSelect_taclet10111111_20" (formula "57") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11110111111_26" (formula "57") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "57") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "57") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "57") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "inEqSimp_contradInEq0" (formula "57") (term "0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "57") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                                            (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "57") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "cut_direct" (formula "73") (term "1,0"))
                                                            (branch "CUT: right ≤ -1 + e2 TRUE"
                                                               (builtin "One Step Simplification" (formula "74"))
                                                               (rule "true_left" (formula "74"))
                                                               (rule "replace_known_left" (formula "45") (term "1,0") (ifseqformula "73"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "true_left" (formula "45"))
                                                               (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "72"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "true_left" (formula "36"))
                                                               (rule "replace_known_left" (formula "58") (term "1,0") (ifseqformula "71"))
                                                               (builtin "One Step Simplification" (formula "58"))
                                                               (rule "true_left" (formula "58"))
                                                               (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "70"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "10") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                               (rule "inEqSimp_contradEq3" (formula "77") (ifseqformula "10"))
                                                               (rule "polySimp_mulComm0" (formula "77") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "77") (term "0,0"))
                                                               (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "77") (term "0,0"))
                                                               (rule "qeq_literals" (formula "77") (term "0"))
                                                               (builtin "One Step Simplification" (formula "77"))
                                                               (rule "false_right" (formula "77"))
                                                               (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "71"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                               (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                               (rule "add_literals" (formula "28") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "72"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "72"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "25"))
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,0"))
                                                               (rule "add_literals" (formula "2") (term "0"))
                                                               (rule "leq_literals" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch "CUT: right ≤ -1 + e2 FALSE"
                                                               (builtin "One Step Simplification" (formula "73"))
                                                               (rule "replace_known_right" (formula "45") (term "1,0") (ifseqformula "77"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "replace_known_right" (formula "60") (term "1,0") (ifseqformula "77"))
                                                               (builtin "One Step Simplification" (formula "60"))
                                                               (rule "replace_known_right" (formula "36") (term "1,0") (ifseqformula "77"))
                                                               (builtin "One Step Simplification" (formula "36"))
                                                               (rule "inEqSimp_leqRight" (formula "77"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_contradEq7" (formula "82") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "82") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0"))
                                                               (rule "add_literals" (formula "82") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "82") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "82") (term "0,0"))
                                                               (rule "leq_literals" (formula "82") (term "0"))
                                                               (builtin "One Step Simplification" (formula "82"))
                                                               (rule "false_right" (formula "82"))
                                                               (rule "cut_direct" (formula "41") (term "1,0"))
                                                               (branch "CUT: left ≤ j_0 TRUE"
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "true_left" (formula "42"))
                                                                  (rule "replace_known_left" (formula "69") (term "1,0") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "true_left" (formula "69"))
                                                                  (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "replace_known_left" (formula "55") (term "1,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "true_left" (formula "55"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "40"))
                                                                  (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "21") (term "0"))
                                                                  (rule "allLeft" (formula "43") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet10111111_22" (formula "43") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet110111111_24" (formula "43") (term "0,1"))
                                                                  (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "true_left" (formula "43"))
                                                                  (rule "allLeft" (formula "57") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet10111111_20" (formula "57") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet11110111111_26" (formula "57") (term "0,1"))
                                                                  (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (rule "true_left" (formula "57"))
                                                                  (rule "allLeft" (formula "69") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet10111111_18" (formula "69") (term "0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet11111110111111_31" (formula "69") (term "0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "69") (term "1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "69") (term "0,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "69") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "69") (term "1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "69") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "69") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "69") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "69") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "69") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "69") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "69") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "69") (term "1") (ifseqformula "10"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "69") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "69") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "69") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "69") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "69") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "69") (ifseqformula "8"))
                                                                  (rule "andLeft" (formula "69"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "69"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "69") (term "0"))
                                                                  (rule "add_literals" (formula "69") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "69") (term "1,0"))
                                                                  (rule "add_literals" (formula "69") (term "0"))
                                                                  (rule "leq_literals" (formula "69"))
                                                                  (rule "closeFalse" (formula "69"))
                                                               )
                                                               (branch "CUT: left ≤ j_0 FALSE"
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "replace_known_right" (formula "56") (term "1,0") (ifseqformula "79"))
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "79"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "replace_known_right" (formula "69") (term "1,0") (ifseqformula "79"))
                                                                  (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "inEqSimp_leqRight" (formula "79"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "55"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                  (rule "add_literals" (formula "1") (term "0"))
                                                                  (rule "leq_literals" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: left ≤ e4 FALSE"
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_right" (formula "37") (term "1,0") (ifseqformula "74"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "74"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "replace_known_right" (formula "64") (term "1,0") (ifseqformula "74"))
                                                         (builtin "One Step Simplification" (formula "64"))
                                                         (rule "inEqSimp_leqRight" (formula "74"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "51"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0"))
                                                         (rule "add_literals" (formula "24") (term "0"))
                                                         (rule "leq_literals" (formula "24"))
                                                         (rule "closeFalse" (formula "24"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: left ≤ e2 FALSE"
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "64") (term "1,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "replace_known_right" (formula "38") (term "1,0,0,0") (ifseqformula "73"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_leqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "18"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0"))
                                                   (rule "leq_literals" (formula "21"))
                                                   (rule "closeFalse" (formula "21"))
                                                )
                                             )
                                             (branch "CUT: left ≤ e3 FALSE"
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_right" (formula "25") (term "1,0") (ifseqformula "75"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "replace_known_right" (formula "38") (term "1,0,0,0") (ifseqformula "75"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "replace_known_right" (formula "66") (term "1,0,0,0") (ifseqformula "75"))
                                                (builtin "One Step Simplification" (formula "66"))
                                                (rule "inEqSimp_leqRight" (formula "75"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "17"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "39") (term "0,0") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "39") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "applyEqReverse" (formula "40") (term "1,1,0") (ifseqformula "39"))
                                                (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "39"))
                                                (rule "hideAuxiliaryEq" (formula "39"))
                                                (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "20"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0"))
                                                (rule "add_zero_right" (formula "21") (term "0"))
                                                (rule "leq_literals" (formula "21"))
                                                (rule "closeFalse" (formula "21"))
                                             )
                                          )
                                          (branch "i_0 = e4 FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "73") (term "1,1,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "27"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0"))
                                             (rule "qeq_literals" (formula "27"))
                                             (rule "closeFalse" (formula "27"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Usage"
                     (builtin "One Step Simplification" (formula "36"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "36"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "42"))
                     (rule "true_left" (formula "42"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "37"))
                     (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "36"))
                     (rule "inEqSimp_commuteLeq" (formula "34"))
                     (rule "inEqSimp_commuteLeq" (formula "35"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_9"))
                     (rule "simplifySelectOfAnon" (formula "37"))
                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "43")) (ifInst ""  (formula "2")))
                     (rule "inEqSimp_commuteGeq" (formula "38"))
                     (rule "elementOfUnion" (formula "37") (term "0,0"))
                     (rule "elementOfSingleton" (formula "37") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "37"))
                     (rule "hideAuxiliaryEq" (formula "37"))
                     (rule "pullOutSelect" (formula "36") (term "1") (inst "selectSK=arr_10"))
                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                     (rule "simplifySelectOfAnon" (formula "36"))
                     (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "43")) (ifInst ""  (formula "2")))
                     (rule "replaceKnownSelect_taclet11111_10" (formula "36") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "36") (term "2,0"))
                     (rule "inEqSimp_commuteGeq" (formula "35"))
                     (rule "elementOfUnion" (formula "36") (term "0,0"))
                     (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "eqSymm" (formula "36") (term "1,0,0"))
                     (rule "elementOfUnion" (formula "36") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "36") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "eqSymm" (formula "36") (term "1,0,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "36") (term "1,0,0,0") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0"))
                     (rule "leq_literals" (formula "36") (term "0,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "elementOfUnion" (formula "36") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "36") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "36"))
                     (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
                     (rule "hideAuxiliaryEq" (formula "36"))
                     (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_11"))
                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "36"))
                     (rule "simplifySelectOfAnon" (formula "36"))
                     (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "43")) (ifInst ""  (formula "2")))
                     (rule "replaceKnownSelect_taclet11111_12" (formula "36") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "36") (term "2,0"))
                     (rule "inEqSimp_commuteGeq" (formula "37"))
                     (rule "inEqSimp_commuteLeq" (formula "38"))
                     (rule "elementOfUnion" (formula "36") (term "0,0"))
                     (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "eqSymm" (formula "36") (term "1,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "36") (term "1,0,0") (ifseqformula "12"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                     (rule "leq_literals" (formula "36") (term "0,1,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "elementOfUnion" (formula "36") (term "0,0"))
                     (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "36"))
                     (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "36"))
                     (rule "hideAuxiliaryEq" (formula "36"))
                     (rule "inEqSimp_commuteLeq" (formula "36"))
                     (rule "pullOutSelect" (formula "34") (term "1") (inst "selectSK=arr_12"))
                     (rule "simplifySelectOfAnon" (formula "34"))
                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "43")) (ifInst ""  (formula "2")))
                     (rule "replaceKnownSelect_taclet11111_16" (formula "34") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "34") (term "2,0"))
                     (rule "elementOfUnion" (formula "34") (term "0,0"))
                     (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "eqSymm" (formula "34") (term "1,0,0"))
                     (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "eqSymm" (formula "34") (term "1,0,0,0"))
                     (rule "elementOfUnion" (formula "34") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "eqSymm" (formula "34") (term "1,0,0,0,0"))
                     (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_13"))
                     (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                     (rule "simplifySelectOfAnon" (formula "35"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "44")) (ifInst ""  (formula "2")))
                     (rule "replaceKnownSelect_taclet11111_14" (formula "35") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "35") (term "2,0"))
                     (rule "inEqSimp_commuteLeq" (formula "37"))
                     (rule "elementOfUnion" (formula "34") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "34") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "34"))
                     (rule "hideAuxiliaryEq" (formula "34"))
                     (rule "inEqSimp_commuteGeq" (formula "35"))
                     (rule "elementOfUnion" (formula "34") (term "0,0"))
                     (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "eqSymm" (formula "34") (term "1,0,0"))
                     (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "eqSymm" (formula "34") (term "1,0,0,0"))
                     (rule "elementOfUnion" (formula "34") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "eqSymm" (formula "34") (term "1,0,0,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "34") (term "1,0,0,0,0") (ifseqformula "10"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0,0"))
                     (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0,0"))
                     (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "elementOfUnion" (formula "34") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "34"))
                     (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "34"))
                     (rule "hideAuxiliaryEq" (formula "34"))
                     (rule "inEqSimp_commuteLeq" (formula "34"))
                     (rule "nnf_imp2or" (formula "39") (term "0"))
                     (rule "nnf_imp2or" (formula "38") (term "0"))
                     (rule "nnf_notAnd" (formula "39") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                     (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0"))
                     (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,1,0"))
                     (rule "ifUnfold" (formula "43") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_3"))
                     (rule "inequality_comparison_simple" (formula "43") (term "1"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "replace_known_left" (formula "43") (term "0,0,1,0") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "43"))
                     (rule "all_pull_out3" (formula "39") (term "0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0"))
                     (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                     (rule "all_pull_out3" (formula "38") (term "0"))
                     (rule "shift_paren_or" (formula "38") (term "0,0"))
                     (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                     (rule "ifSplit" (formula "43"))
                     (branch "if x_3 true"
                        (builtin "One Step Simplification" (formula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_3 false"
                        (builtin "One Step Simplification" (formula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "methodCallEmpty" (formula "43") (term "1"))
                        (rule "tryEmpty" (formula "43") (term "1"))
                        (rule "emptyModality" (formula "43") (term "1"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "replaceKnownSelect_taclet1111111_18" (formula "43") (term "0,1,0,0"))
                        (rule "replaceKnownSelect_taclet1111111_22" (formula "43") (term "1,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "43") (term "0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "43") (term "1,1,0,0"))
                        (rule "replaceKnownSelect_taclet1111111_22" (formula "43") (term "0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet1111111_20" (formula "43") (term "1,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "43") (term "0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "43") (term "1,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet1111111_20" (formula "43") (term "0,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet1111111_24" (formula "43") (term "1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet1111111_25" (formula "43") (term "1,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet1111111_25" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "43") (term "0,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1111111_26" (formula "43") (term "1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "43") (term "1,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "eqSymm" (formula "43") (term "1,0,0,1"))
                        (rule "replace_known_left" (formula "43") (term "1,0,0,0,0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "34")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                        (rule "andRight" (formula "43"))
                        (branch
                           (rule "andRight" (formula "43"))
                           (branch
                              (rule "allRight" (formula "43") (inst "sk=i_0"))
                              (rule "orRight" (formula "43"))
                              (rule "orRight" (formula "43"))
                              (rule "allRight" (formula "45") (inst "sk=j_0"))
                              (rule "orRight" (formula "45"))
                              (rule "orRight" (formula "45"))
                              (rule "inEqSimp_leqRight" (formula "43"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "44"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_geqRight" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "47"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_14"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "8")))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "12") (term "0,0"))
                              (rule "add_zero_left" (formula "12") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_15"))
                              (rule "simplifySelectOfAnon" (formula "4"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")) (ifInst ""  (formula "11")))
                              (rule "elementOfUnion" (formula "4") (term "0,0"))
                              (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfUnion" (formula "4") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfSingleton" (formula "4") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "inEqSimp_contradEq3" (formula "4") (term "0,0,0,0,0,0") (ifseqformula "6"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0,0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "4") (term "0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_16"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "12")))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_17"))
                              (rule "simplifySelectOfAnon" (formula "5"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "54")) (ifInst ""  (formula "13")))
                              (rule "elementOfUnion" (formula "5") (term "0,0"))
                              (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "elementOfUnion" (formula "5") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "elementOfSingleton" (formula "5") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_contradEq3" (formula "5") (term "0,0,0,0,0") (ifseqformula "8"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "5") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
                              (rule "times_zero_1" (formula "11") (term "0,0"))
                              (rule "add_zero_left" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                              (rule "leq_literals" (formula "17") (term "0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_18"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "15")))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_19"))
                              (rule "simplifySelectOfAnon" (formula "6"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "56")) (ifInst ""  (formula "16")))
                              (rule "elementOfUnion" (formula "6") (term "0,0"))
                              (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "elementOfSingleton" (formula "6") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_contradEq3" (formula "6") (term "0,0,0,0") (ifseqformula "10"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0"))
                              (rule "qeq_literals" (formula "6") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_20"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "17")))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_21"))
                              (rule "simplifySelectOfAnon" (formula "7"))
                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "58")) (ifInst ""  (formula "18")))
                              (rule "elementOfUnion" (formula "7") (term "0,0"))
                              (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "elementOfSingleton" (formula "7") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "inEqSimp_contradEq3" (formula "7") (term "0,0,0") (ifseqformula "12"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                              (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "j_0 = e1 ∨ j_0 = e2 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "mul_literals" (formula "8") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "i_0 = e2 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_contradEq7" (formula "3") (term "1") (ifseqformula "7"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                    (rule "leq_literals" (formula "3") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "7"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "19"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0"))
                                    (rule "add_zero_right" (formula "19") (term "0"))
                                    (rule "leq_literals" (formula "19"))
                                    (rule "closeFalse" (formula "19"))
                                 )
                                 (branch "i_0 = e2 FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "allLeft" (formula "50") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet0011111111_29" (formula "50") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0,0,0,0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "50") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "50") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "50") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "allLeft" (formula "35") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet0011111111_33" (formula "35") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "35") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "allLeft" (formula "26") (inst "t=i_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "26") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "allLeft" (formula "44") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet0011111111_31" (formula "44") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "44") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "44") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "allLeft" (formula "30") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet0011111111_35" (formula "30") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100011111111_40" (formula "30") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "30") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "i_0 = e3 TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                       (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "52") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "20"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                       (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0"))
                                       (rule "leq_literals" (formula "57") (term "0"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "false_right" (formula "57"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "6"))
                                       (rule "times_zero_1" (formula "10") (term "0,0"))
                                       (rule "add_zero_left" (formula "10") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "6"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "19"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                    (branch "i_0 = e3 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "cut_direct" (formula "3") (term "0"))
                                       (branch "CUT: j_0 = e1 TRUE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                          (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "i_0 = e4 TRUE"
                                             (rule "applyEqReverse" (formula "42") (term "1,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "50") (term "1,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "applyEq" (formula "21") (term "0,2,1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "25") (term "0,2,1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "55") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "32") (term "0,2,1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "40") (term "0,2,1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "49") (term "0,2,1,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "54") (ifseqformula "18"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0"))
                                             (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0"))
                                             (rule "leq_literals" (formula "54") (term "0"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "false_right" (formula "54"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "5"))
                                             (rule "times_zero_1" (formula "8") (term "0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "mul_literals" (formula "8") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "14"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "5"))
                                             (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                                             (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "17"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "16"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0"))
                                             (rule "add_zero_right" (formula "16") (term "0"))
                                             (rule "leq_literals" (formula "16"))
                                             (rule "closeFalse" (formula "16"))
                                          )
                                          (branch "i_0 = e4 FALSE"
                                             (rule "applyEqReverse" (formula "41") (term "1,1,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "allLeft" (formula "25") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet1_0" (formula "25") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "25") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "25") (term "0,0") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "25") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                             (rule "leq_literals" (formula "25") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "21") (inst "t=e1"))
                                             (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "21") (term "0,0") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "21") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "leq_literals" (formula "21") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "allLeft" (formula "51") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet1111111_24" (formula "51") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_26" (formula "51") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "51") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "51") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "51") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "51") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "inEqSimp_contradInEq0" (formula "51") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "51") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1"))
                                             (rule "add_literals" (formula "51") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "51") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "51") (term "0,0,1"))
                                             (rule "leq_literals" (formula "51") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "inEqSimp_contradInEq0" (formula "51") (ifseqformula "14"))
                                             (rule "andLeft" (formula "51"))
                                             (rule "inEqSimp_homoInEq1" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                             (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                             (rule "add_literals" (formula "51") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "51") (term "0"))
                                             (rule "add_literals" (formula "51") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "51") (term "1,0"))
                                             (rule "add_literals" (formula "51") (term "0"))
                                             (rule "leq_literals" (formula "51"))
                                             (rule "closeFalse" (formula "51"))
                                          )
                                       )
                                       (branch "CUT: j_0 = e1 FALSE"
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "60") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                          (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                          (rule "add_literals" (formula "60") (term "0,0"))
                                          (rule "qeq_literals" (formula "60") (term "0"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "false_right" (formula "60"))
                                          (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "20"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0"))
                                          (rule "leq_literals" (formula "58") (term "0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "false_right" (formula "58"))
                                          (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
                                          (rule "times_zero_1" (formula "11") (term "0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "17") (term "0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "49") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "i_0 = e4 TRUE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "48"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "11") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "53") (term "0,2,1,1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "48") (term "0,2,1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1"))
                                             (rule "mul_literals" (formula "48") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "21"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                             (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0"))
                                             (rule "leq_literals" (formula "58") (term "0"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "false_right" (formula "58"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                                             (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "7"))
                                             (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "20"))
                                             (rule "andLeft" (formula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0"))
                                             (rule "add_zero_right" (formula "22") (term "0"))
                                             (rule "leq_literals" (formula "22"))
                                             (rule "closeFalse" (formula "22"))
                                          )
                                          (branch "i_0 = e4 FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "allLeft" (formula "35") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet111_4" (formula "35") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "35") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                             (rule "leq_literals" (formula "35") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "allLeft" (formula "54") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1111111_25" (formula "54") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "54") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "54") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
                                             (rule "mul_literals" (formula "54") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "54") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "54") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "inEqSimp_contradInEq0" (formula "54") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "54") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "54") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "54") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                                             (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "54") (term "0,0,1"))
                                             (rule "leq_literals" (formula "54") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "54"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "j_0 = e1 ∨ j_0 = e2 FALSE"
                                 (rule "orRight" (formula "58"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "58")))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                 (rule "replace_known_right" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "58")))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch "i_0 = e2 TRUE"
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "9") (term "0,0,0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "6"))
                                    (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "9"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0"))
                                    (rule "leq_literals" (formula "55") (term "0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "false_right" (formula "55"))
                                    (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "8"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0"))
                                    (rule "add_zero_right" (formula "21") (term "0"))
                                    (rule "leq_literals" (formula "21"))
                                    (rule "closeFalse" (formula "21"))
                                 )
                                 (branch "i_0 = e2 FALSE"
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "allLeft" (formula "52") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet0011111111_29" (formula "52") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0,0,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "52") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "52") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "52") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0,0,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "52") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "allLeft" (formula "44") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet0011111111_31" (formula "44") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0,0,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "44") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "44") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "allLeft" (formula "28") (inst "t=i_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "allLeft" (formula "38") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet0011111111_33" (formula "38") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "38") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "allLeft" (formula "32") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet0011111111_35" (formula "32") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet110011111111_37" (formula "32") (term "1,1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,0,0") (ifseqformula "14"))
                                    (rule "qeq_literals" (formula "32") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = e3 TRUE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "9"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "60") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1"))
                                       (rule "mul_literals" (formula "7") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                       (rule "inEqSimp_contradEq3" (formula "6") (term "0,0,0,0") (ifseqformula "9"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradEq3" (formula "5") (term "0,0,0") (ifseqformula "9"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradEq7" (formula "61") (ifseqformula "22"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0"))
                                       (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                       (rule "add_literals" (formula "61") (term "0,0"))
                                       (rule "leq_literals" (formula "61") (term "0"))
                                       (builtin "One Step Simplification" (formula "61"))
                                       (rule "false_right" (formula "61"))
                                       (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "9"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "17") (term "0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
                                       (rule "times_zero_1" (formula "11") (term "0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "50") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "polySimp_elimOne" (formula "50") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "49") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "0"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "i_0 = e4 TRUE"
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "45") (term "1,1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "55") (term "1,1,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "50"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "48"))
                                          (rule "polySimp_addComm1" (formula "48") (term "0"))
                                          (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "50") (term "0,2,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "48") (term "0,2,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                          (rule "applyEq" (formula "54") (term "0,2,1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1"))
                                          (rule "mul_literals" (formula "50") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1"))
                                          (rule "mul_literals" (formula "48") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "7"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "inEqSimp_homoInEq1" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0"))
                                          (rule "leq_literals" (formula "21"))
                                          (rule "closeFalse" (formula "21"))
                                       )
                                       (branch "i_0 = e4 FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "allLeft" (formula "35") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet111_6" (formula "35") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "35") (term "0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "35") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "inEqSimp_contradInEq0" (formula "35") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0"))
                                          (rule "leq_literals" (formula "35") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "allLeft" (formula "28") (inst "t=e3"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_22"))
                                          (rule "simplifySelectOfAnon" (formula "28"))
                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "65")) (ifInst ""  (formula "13")))
                                          (rule "inEqSimp_commuteGeq" (formula "29"))
                                          (rule "elementOfUnion" (formula "28") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "64")))
                                          (rule "inEqSimp_contradEq7" (formula "28") (term "0,0") (ifseqformula "20"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "28") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "allLeft" (formula "56") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet1111111_20" (formula "56") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "56") (term "0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                                          (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "56") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "56") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "56") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "inEqSimp_contradInEq0" (formula "56") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0"))
                                          (rule "add_literals" (formula "56") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "56") (term "0,0,0"))
                                          (rule "leq_literals" (formula "56") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "56"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0"))
                                          (rule "add_literals" (formula "5") (term "0"))
                                          (rule "leq_literals" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                    )
                                    (branch "j_0 = e3 FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "60"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "60"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "i_0 = e3 TRUE"
                                          (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "46") (term "1,1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "25") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "36") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "53") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "44") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "29") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "5"))
                                          (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "21"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0"))
                                          (rule "leq_literals" (formula "58") (term "0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "false_right" (formula "58"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "mul_literals" (formula "9") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "18"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "7"))
                                          (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0"))
                                          (rule "leq_literals" (formula "20"))
                                          (rule "closeFalse" (formula "20"))
                                       )
                                       (branch "i_0 = e3 FALSE"
                                          (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "j_0 = e4 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "62") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                             (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "8"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_contradEq3" (formula "4") (term "0,0,0") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "21"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                             (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0"))
                                             (rule "leq_literals" (formula "58") (term "0"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "false_right" (formula "58"))
                                             (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "16") (term "0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "5"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "50") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "10") (term "0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "10"))
                                             (rule "leq_literals" (formula "16") (term "0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "49") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "48") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "0"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "i_0 = e5 TRUE"
                                                (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                (rule "applyEqReverse" (formula "56") (term "1,1,0") (ifseqformula "5"))
                                                (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "5"))
                                                (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "52"))
                                                (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "50"))
                                                (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "48"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                (rule "applyEq" (formula "50") (term "0,2,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "55") (term "0,2,1,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "48") (term "0,2,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "52") (term "0,2,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                (rule "mul_literals" (formula "50") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                (rule "mul_literals" (formula "48") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                                (rule "polySimp_rightDist" (formula "52") (term "1"))
                                                (rule "mul_literals" (formula "52") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "54") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0"))
                                                (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "54") (term "0,0"))
                                                (rule "qeq_literals" (formula "54") (term "0"))
                                                (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "7"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0"))
                                                (rule "add_zero_right" (formula "22") (term "0"))
                                                (rule "leq_literals" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                             (branch "i_0 = e5 FALSE"
                                                (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "55") (term "1,1,0") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "51"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "50") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "48") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "4"))
                                                (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                (rule "allLeft" (formula "23") (inst "t=e4"))
                                                (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "23") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "23") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                (rule "leq_literals" (formula "23") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "allLeft" (formula "28") (inst "t=e4"))
                                                (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "28") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                (rule "leq_literals" (formula "28") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_22"))
                                                (rule "simplifySelectOfAnon" (formula "28"))
                                                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "67")) (ifInst ""  (formula "12")))
                                                (rule "inEqSimp_commuteGeq" (formula "29"))
                                                (rule "elementOfUnion" (formula "28") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "65")))
                                                (rule "elementOfSingleton" (formula "28") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "66")))
                                                (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "28"))
                                                (rule "hideAuxiliaryEq" (formula "28"))
                                                (rule "allLeft" (formula "43") (inst "t=e4"))
                                                (rule "replaceKnownSelect_taclet11111_12" (formula "43") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "43") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "43") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "43") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                                (rule "leq_literals" (formula "43") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "allLeft" (formula "35") (inst "t=e4"))
                                                (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "35") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "35") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                (rule "leq_literals" (formula "35") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_23"))
                                                (rule "simplifySelectOfAnon" (formula "35"))
                                                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "68")) (ifInst ""  (formula "12")))
                                                (rule "replaceKnownSelect_taclet1011110011111111_44" (formula "35") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1011110011111111_45" (formula "35") (term "2,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "36"))
                                                (rule "elementOfUnion" (formula "35") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "inEqSimp_contradEq7" (formula "35") (term "1,0,0") (ifseqformula "20"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "35") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "elementOfUnion" (formula "35") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "35") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "67")))
                                                (rule "elementOfSingleton" (formula "35") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "66")))
                                                (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "35"))
                                                (rule "hideAuxiliaryEq" (formula "35"))
                                                (rule "allLeft" (formula "57") (inst "t=e5"))
                                                (rule "replaceKnownSelect_taclet1111111_18" (formula "57") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "57") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "0,0"))
                                                (rule "commute_or_2" (formula "57") (term "0"))
                                                (rule "commute_or" (formula "57") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "57") (term "0,0"))
                                                (rule "allLeft" (formula "59") (inst "t=e5"))
                                                (rule "replaceKnownSelect_taclet1111111_18" (formula "59") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "59") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0,0,0,0") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "59") (term "0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "59") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "commute_or" (formula "59") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "59") (term "0,0"))
                                                (rule "commute_or_2" (formula "59") (term "0"))
                                                (rule "allLeft" (formula "29") (inst "t=e5"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                                                (rule "pullOutSelect" (formula "29") (term "1,1,0") (inst "selectSK=arr_24"))
                                                (rule "simplifySelectOfAnon" (formula "29"))
                                                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "70")) (ifInst ""  (formula "12")))
                                                (rule "elementOfUnion" (formula "29") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "allLeft" (formula "31") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet1_2" (formula "31") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "31") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "32") (inst "t=e3"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                                                (rule "pullOutSelect" (formula "32") (term "1,1,0") (inst "selectSK=arr_25"))
                                                (rule "simplifySelectOfAnon" (formula "32"))
                                                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "73")) (ifInst ""  (formula "12")))
                                                (rule "elementOfUnion" (formula "32") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradEq7" (formula "32") (term "1,0,0") (ifseqformula "19"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "32") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "allLeft" (formula "35") (inst "t=e5"))
                                                (rule "replaceKnownSelect_taclet1011110011111111_48" (formula "35") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0,0") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "allLeft" (formula "25") (inst "t=e5"))
                                                (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "26") (inst "t=e3"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "44") (inst "t=e5"))
                                                (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0,0,0,0"))
                                                (rule "pullOutSelect" (formula "44") (term "1,1,0") (inst "selectSK=arr_26"))
                                                (rule "simplifySelectOfAnon" (formula "44"))
                                                (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "78")) (ifInst ""  (formula "12")))
                                                (rule "replaceKnownSelect_taclet1011110011111111_48" (formula "44") (term "2,0"))
                                                (rule "elementOfUnion" (formula "44") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                                (rule "elementOfSingleton" (formula "44") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "elementOfSingleton" (formula "44") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "allLeft" (formula "46") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet111_6" (formula "46") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "46") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "56") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet11111_14" (formula "56") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "56") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "38") (inst "t=e1"))
                                                (rule "replaceKnownSelect_taclet1_0" (formula "38") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "38") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "38") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "allLeft" (formula "39") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet0011111111_35" (formula "39") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet110011111111_37" (formula "39") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,0,0,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "39") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "allLeft" (formula "72") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet1111111_25" (formula "72") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "72") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "72") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "50") (inst "t=e5"))
                                                (rule "replaceKnownSelect_taclet1011110011111111_50" (formula "50") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "50") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0,0,0,0") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "50") (term "0,1,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "allLeft" (formula "27") (inst "t=e2"))
                                                (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "77") (inst "t=e1"))
                                                (rule "replaceKnownSelect_taclet1111111_24" (formula "77") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111111_26" (formula "77") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "77") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "77") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "77") (term "0,0,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "77") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "77"))
                                                (rule "allLeft" (formula "50") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet111_4" (formula "50") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "50") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "53") (inst "t=e1"))
                                                (rule "replaceKnownSelect_taclet111_8" (formula "53") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "53") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "53"))
                                                (rule "allLeft" (formula "54") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet0011111111_33" (formula "54") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet11110011111111_39" (formula "54") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "54") (term "0,0,0,0,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "54") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "54"))
                                                (rule "allLeft" (formula "29") (inst "t=e5"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "allLeft" (formula "30") (inst "t=e1"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "allLeft" (formula "31") (inst "t=i_0"))
                                                (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "31") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "allLeft" (formula "81") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet1111111_20" (formula "81") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "81") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "81") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "85") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet0011111111_29" (formula "85") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1011110011111111_43" (formula "85") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "85") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "85") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "85") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "85") (term "0,0,0,0,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "85") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "85"))
                                                (rule "allLeft" (formula "67") (inst "t=e5"))
                                                (rule "inEqSimp_commuteGeq" (formula "67") (term "1,0,0,0,0"))
                                                (rule "pullOutSelect" (formula "67") (term "1,1,0") (inst "selectSK=arr_27"))
                                                (rule "simplifySelectOfAnon" (formula "67"))
                                                (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "96")) (ifInst ""  (formula "12")))
                                                (rule "replaceKnownSelect_taclet1011110011111111_50" (formula "67") (term "2,0"))
                                                (rule "elementOfUnion" (formula "67") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "67") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "67"))
                                                (rule "inEqSimp_contradEq7" (formula "67") (term "1,0,0") (ifseqformula "21"))
                                                (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "67") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "67") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "67") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "67"))
                                                (rule "elementOfUnion" (formula "67") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "67") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "67"))
                                                (rule "elementOfUnion" (formula "67") (term "0,0,0"))
                                                (rule "elementOfSingleton" (formula "67") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "67"))
                                                (rule "elementOfSingleton" (formula "67") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "67"))
                                                (rule "allLeft" (formula "69") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet11111_10" (formula "69") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "69") (term "1,1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "69") (term "1,0,0,0,0"))
                                                (rule "allLeft" (formula "71") (inst "t=e5"))
                                                (rule "replaceKnownSelect_taclet1011110011111111_51" (formula "71") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0,0,0,0") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "71") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "71") (term "1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "71") (term "1,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "71") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "71") (term "0,0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "71") (term "0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "71") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "71") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "71") (term "0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "71") (term "0,1,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "71"))
                                                (rule "allLeft" (formula "72") (inst "t=e1"))
                                                (rule "replaceKnownSelect_taclet11111_16" (formula "72") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "72") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "72") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "72") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "72") (term "0,0,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "72") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "72"))
                                                (rule "allLeft" (formula "73") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet0011111111_31" (formula "73") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet011110011111111_42" (formula "73") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "73") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "73") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "73") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "73") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "73") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "73") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "73") (term "0,0,0,0,0") (ifseqformula "10"))
                                                (rule "qeq_literals" (formula "73") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "73"))
                                                (rule "allLeft" (formula "58") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet111_6" (formula "58") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "58") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                                (rule "allLeft" (formula "32") (inst "t=e3"))
                                                (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,0"))
                                                (rule "allLeft" (formula "33") (inst "t=e4"))
                                                (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "allLeft" (formula "34") (inst "t=e2"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                                (rule "allLeft" (formula "96") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet1111111_20" (formula "96") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "96") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "96") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "96") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "96") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "96") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "96") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "96") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "96") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "96") (term "1,1,1,0,0,0,0"))
                                                (rule "allLeft" (formula "62") (inst "t=e4"))
                                                (rule "replaceKnownSelect_taclet1011110011111111_46" (formula "62") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1011110011111111_47" (formula "62") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "62") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "62") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "62") (term "0,0,0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "62") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "allLeft" (formula "79") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet11111_10" (formula "79") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "79") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "79") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "79") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "79") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "79") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0,0,0"))
                                                (rule "allLeft" (formula "47") (inst "t=e3"))
                                                (rule "replaceKnownSelect_taclet1011110011111111_49" (formula "47") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,0"))
                                                (rule "allLeft" (formula "48") (inst "t=e4"))
                                                (rule "replaceKnownSelect_taclet1011110011111111_44" (formula "48") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1011110011111111_45" (formula "48") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0,0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "48") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "allLeft" (formula "82") (inst "t=e4"))
                                                (rule "replaceKnownSelect_taclet11111_12" (formula "82") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "82") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "82") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "82") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "82") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "82") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "82") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "82") (term "0,0,0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "82") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "82"))
                                                (rule "allLeft" (formula "49") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet1_2" (formula "49") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "49") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "49") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0,0"))
                                                (rule "allLeft" (formula "103") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet1111111_25" (formula "103") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "103") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "103") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "103") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "103") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "103") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "103") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "103") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "103") (term "1,1,1,0,0,0,0"))
                                                (rule "allLeft" (formula "66") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet111_4" (formula "66") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "66") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "66") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,0"))
                                                (rule "allLeft" (formula "105") (inst "t=e4"))
                                                (rule "replaceKnownSelect_taclet1111111_22" (formula "105") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "105") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "105") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "105") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "105") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "105") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "105") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "105") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "105") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "105") (term "0,0,0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "105") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "105"))
                                                (rule "allLeft" (formula "85") (inst "t=e2"))
                                                (rule "replaceKnownSelect_taclet11111_14" (formula "85") (term "1,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "85") (term "1,1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "85") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "85") (term "0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "85") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "39") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                                (rule "allLeft" (formula "96") (inst "t=e4"))
                                                (rule "replaceKnownSelect_taclet1111111_22" (formula "96") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "96") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "96") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "96") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "96") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "96") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "96") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "96") (term "1,0,0"))
                                                (rule "mul_literals" (formula "96") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "96") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq0" (formula "96") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "96") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "96") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "96") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "96") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "96") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "96") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "96"))
                                                (rule "inEqSimp_contradInEq0" (formula "96") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "96") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "96") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "96") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "96") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "96") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "96") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "96") (term "0,0,1"))
                                                (rule "add_literals" (formula "96") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "96") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "96") (term "0,0,1"))
                                                (rule "leq_literals" (formula "96") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "96"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "96"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_literals" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "j_0 = e4 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "allLeft" (formula "53") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet0011111111_28" (formula "53") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "53") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "53") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "inEqSimp_contradInEq0" (formula "53") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                             (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0,0"))
                                             (rule "leq_literals" (formula "53") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "inEqSimp_contradInEq1" (formula "53") (ifseqformula "6"))
                                             (rule "andLeft" (formula "53"))
                                             (rule "inEqSimp_homoInEq1" (formula "53"))
                                             (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                             (rule "add_literals" (formula "53") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0"))
                                             (rule "add_zero_right" (formula "53") (term "0"))
                                             (rule "leq_literals" (formula "53"))
                                             (rule "closeFalse" (formula "53"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "allRight" (formula "43") (inst "sk=i_0"))
                              (rule "orRight" (formula "43"))
                              (rule "orRight" (formula "43"))
                              (rule "allRight" (formula "45") (inst "sk=j_0"))
                              (rule "orRight" (formula "45"))
                              (rule "orRight" (formula "45"))
                              (rule "inEqSimp_leqRight" (formula "43"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "44"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_leqRight" (formula "46"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_14"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "8")))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                              (rule "mul_literals" (formula "19") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                              (rule "mul_literals" (formula "19") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                              (rule "inEqSimp_contradEq7" (formula "3") (term "1,0,0") (ifseqformula "19"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                              (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_15"))
                              (rule "simplifySelectOfAnon" (formula "4"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "51")) (ifInst ""  (formula "10")))
                              (rule "elementOfUnion" (formula "4") (term "0,0"))
                              (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfUnion" (formula "4") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfUnion" (formula "4") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfUnion" (formula "4") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "4") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_16"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "11")))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_17"))
                              (rule "simplifySelectOfAnon" (formula "5"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "53")) (ifInst ""  (formula "12")))
                              (rule "elementOfUnion" (formula "5") (term "0,0"))
                              (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "elementOfUnion" (formula "5") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "elementOfUnion" (formula "5") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "5") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_18"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "13")))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_19"))
                              (rule "simplifySelectOfAnon" (formula "6"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "55")) (ifInst ""  (formula "14")))
                              (rule "elementOfUnion" (formula "6") (term "0,0"))
                              (rule "elementOfSingleton" (formula "6") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "elementOfUnion" (formula "6") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "elementOfSingleton" (formula "6") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_20"))
                              (rule "simplifySelectOfAnon" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "15")))
                              (rule "elementOfUnion" (formula "3") (term "0,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_21"))
                              (rule "simplifySelectOfAnon" (formula "7"))
                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "57")) (ifInst ""  (formula "16")))
                              (rule "elementOfUnion" (formula "7") (term "0,0"))
                              (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "elementOfSingleton" (formula "7") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "j_0 = e1 ∨ j_0 = e2 TRUE"
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "mul_literals" (formula "8") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "i_0 = e1 ∨ i_0 = e2 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "allLeft" (formula "48") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_29" (formula "48") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001011111111_41" (formula "48") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "48") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "48") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "48") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "allLeft" (formula "27") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_35" (formula "27") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001011111111_40" (formula "27") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "27") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "27") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "allLeft" (formula "41") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_31" (formula "41") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001011111111_43" (formula "41") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "41") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "allLeft" (formula "34") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_33" (formula "34") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001011111111_42" (formula "34") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "34") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "allLeft" (formula "24") (inst "t=i_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "24") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "cut_direct" (formula "3") (term "0"))
                                    (branch "CUT: j_0 = e1 TRUE"
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1"))
                                       (rule "mul_literals" (formula "21") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_contradEq3" (formula "4") (term "0") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "52") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "6"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0"))
                                       (rule "leq_literals" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "CUT: j_0 = e1 FALSE"
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1"))
                                       (rule "mul_literals" (formula "21") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_contradEq3" (formula "4") (term "1") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                       (rule "qeq_literals" (formula "4") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "52") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "16"))
                                       (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                                       (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "55") (term "0,0"))
                                       (rule "leq_literals" (formula "55") (term "0"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "false_right" (formula "55"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "46"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                                 (branch "i_0 = e1 ∨ i_0 = e2 FALSE"
                                    (rule "orRight" (formula "54"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "54")))
                                    (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "54")))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")))
                                    (rule "allLeft" (formula "42") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_31" (formula "42") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "42") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "42") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "allLeft" (formula "51") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_29" (formula "51") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "51") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "51") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "51") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "51") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "51") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "allLeft" (formula "35") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_33" (formula "35") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "35") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "allLeft" (formula "29") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_35" (formula "29") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101011111111_40" (formula "29") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "29") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "allLeft" (formula "26") (inst "t=i_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "i_0 = e3 TRUE"
                                       (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                       (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "43") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "52") (term "0,2,1,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "18"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                       (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0"))
                                       (rule "leq_literals" (formula "57") (term "0"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "false_right" (formula "57"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1"))
                                       (rule "mul_literals" (formula "7") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                       (rule "cut_direct" (formula "3") (term "1"))
                                       (branch "CUT: j_0 = e2 TRUE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "21"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1"))
                                          (rule "mul_literals" (formula "21") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "6"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "18"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                          (rule "add_literals" (formula "18") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0"))
                                          (rule "leq_literals" (formula "18"))
                                          (rule "closeFalse" (formula "18"))
                                       )
                                       (branch "CUT: j_0 = e2 FALSE"
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "21"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1"))
                                          (rule "mul_literals" (formula "21") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                          (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "17"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                          (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0"))
                                          (rule "leq_literals" (formula "56") (term "0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "false_right" (formula "56"))
                                          (rule "inEqSimp_contradEq3" (formula "56") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                          (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "56") (term "0,0"))
                                          (rule "qeq_literals" (formula "56") (term "0"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "false_right" (formula "56"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "6"))
                                          (rule "times_zero_1" (formula "8") (term "0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "6"))
                                          (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                    )
                                    (branch "i_0 = e3 FALSE"
                                       (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "cut_direct" (formula "3") (term "0"))
                                       (branch "CUT: j_0 = e1 TRUE"
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                          (rule "mul_literals" (formula "7") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "58") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0"))
                                          (rule "qeq_literals" (formula "58") (term "0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "false_right" (formula "58"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                          (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "18"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0"))
                                          (rule "leq_literals" (formula "19"))
                                          (rule "closeFalse" (formula "19"))
                                       )
                                       (branch "CUT: j_0 = e1 FALSE"
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                          (rule "mul_literals" (formula "7") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                          (rule "inEqSimp_contradEq3" (formula "60") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                          (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "60") (term "0,0"))
                                          (rule "qeq_literals" (formula "60") (term "0"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "false_right" (formula "60"))
                                          (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "18"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                          (rule "add_literals" (formula "57") (term "0,0"))
                                          (rule "leq_literals" (formula "57") (term "0"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "false_right" (formula "57"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "49") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "2"))
                                          (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0"))
                                          (rule "leq_literals" (formula "20"))
                                          (rule "closeFalse" (formula "20"))
                                       )
                                    )
                                 )
                              )
                              (branch "j_0 = e1 ∨ j_0 = e2 FALSE"
                                 (rule "orRight" (formula "57"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0,0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "56")))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0,0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")))
                                 (rule "ifthenelse_split" (formula "6") (term "0"))
                                 (branch "i_0 = e1 ∨ i_0 = e2 TRUE"
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "allLeft" (formula "26") (inst "t=i_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "26") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "allLeft" (formula "30") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_35" (formula "30") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011011111111_37" (formula "30") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "30") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "allLeft" (formula "37") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_33" (formula "37") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011011111111_39" (formula "37") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "allLeft" (formula "53") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_29" (formula "53") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011011111111_40" (formula "53") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "1,0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "53") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "53") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "53") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "53") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "53") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "53") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "inEqSimp_contradInEq1" (formula "53") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "53") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "53"))
                                    (rule "allLeft" (formula "45") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_31" (formula "45") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011011111111_38" (formula "45") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0,0,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "45") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "45") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = e3 TRUE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1"))
                                       (rule "mul_literals" (formula "21") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                       (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "18"))
                                       (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                       (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "57") (term "0,0"))
                                       (rule "leq_literals" (formula "57") (term "0"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "false_right" (formula "57"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "20"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0"))
                                       (rule "leq_literals" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                    (branch "j_0 = e3 FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "cut_direct" (formula "5") (term "1"))
                                       (branch "CUT: i_0 = e2 TRUE"
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEq" (formula "29") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "53") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "36") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "44") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "25") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "8") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "j_0 = e4 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "21"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1"))
                                             (rule "mul_literals" (formula "21") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "19"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                                             (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "56") (term "0,0"))
                                             (rule "leq_literals" (formula "56") (term "0"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "false_right" (formula "56"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "20"))
                                             (rule "andLeft" (formula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0"))
                                             (rule "add_zero_right" (formula "21") (term "0"))
                                             (rule "leq_literals" (formula "21"))
                                             (rule "closeFalse" (formula "21"))
                                          )
                                          (branch "j_0 = e4 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "allLeft" (formula "43") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet11111_14" (formula "43") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "43") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "43") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                                             (rule "true_left" (formula "43"))
                                             (rule "allLeft" (formula "24") (inst "t=e2"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "24") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
                                             (rule "true_left" (formula "24"))
                                             (rule "allLeft" (formula "35") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet111_4" (formula "35") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "35") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,0"))
                                             (rule "leq_literals" (formula "35") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "34")))
                                             (rule "true_left" (formula "35"))
                                             (rule "allLeft" (formula "42") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_30" (formula "42") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101011011111111_42" (formula "42") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "42") (term "0,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "42") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                             (rule "leq_literals" (formula "42") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "42"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "38") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0"))
                                             (rule "allLeft" (formula "27") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_34" (formula "27") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11011111111_36" (formula "27") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "27") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq0" (formula "27") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "27"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "allLeft" (formula "36") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_32" (formula "36") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1011011111111_41" (formula "36") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "36") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_contradInEq0" (formula "36") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0"))
                                             (rule "leq_literals" (formula "36") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "36"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "33") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0"))
                                             (rule "allLeft" (formula "57") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_28" (formula "57") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101011011111111_43" (formula "57") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "57") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "57") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "57") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_contradInEq0" (formula "57") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "57") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "57") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                             (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "57") (term "0,0,0"))
                                             (rule "leq_literals" (formula "57") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (ifseqformula "4"))
                                             (rule "andLeft" (formula "57"))
                                             (rule "inEqSimp_homoInEq1" (formula "57"))
                                             (rule "polySimp_pullOutFactor1b" (formula "57") (term "0"))
                                             (rule "add_literals" (formula "57") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "57") (term "1,0"))
                                             (rule "add_literals" (formula "57") (term "0"))
                                             (rule "leq_literals" (formula "57"))
                                             (rule "closeFalse" (formula "57"))
                                          )
                                       )
                                       (branch "CUT: i_0 = e2 FALSE"
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "53") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "36") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "29") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "8") (term "1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "25") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "5"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "applyEq" (formula "44") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "18"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0"))
                                          (rule "leq_literals" (formula "57") (term "0"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "false_right" (formula "57"))
                                          (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                          (rule "add_literals" (formula "58") (term "0,0"))
                                          (rule "leq_literals" (formula "58") (term "0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "false_right" (formula "58"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "j_0 = e4 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "55") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                             (rule "mul_literals" (formula "20") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "18"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                                             (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "55") (term "0,0"))
                                             (rule "leq_literals" (formula "55") (term "0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "false_right" (formula "55"))
                                             (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "20"))
                                             (rule "andLeft" (formula "19"))
                                             (rule "inEqSimp_homoInEq1" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                             (rule "add_literals" (formula "19") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0"))
                                             (rule "add_zero_right" (formula "19") (term "0"))
                                             (rule "leq_literals" (formula "19"))
                                             (rule "closeFalse" (formula "19"))
                                          )
                                          (branch "j_0 = e4 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "allLeft" (formula "23") (inst "t=e5"))
                                             (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "commute_or" (formula "23") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0"))
                                             (rule "commute_or_2" (formula "23") (term "0"))
                                             (rule "allLeft" (formula "43") (inst "t=e5"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0,0,0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "pullOutSelect" (formula "43") (term "1,1,0") (inst "selectSK=arr_22"))
                                             (rule "simplifySelectOfAnon" (formula "43"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "60")) (ifInst ""  (formula "8")))
                                             (rule "elementOfUnion" (formula "43") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (term "1,0,0") (ifseqformula "18"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "43") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfUnion" (formula "43") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "pullOutSelect" (formula "43") (term "2,0") (inst "selectSK=arr_23"))
                                             (rule "simplifySelectOfAnon" (formula "43"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "61")) (ifInst ""  (formula "8")))
                                             (rule "elementOfUnion" (formula "43") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "pullOutSelect" (formula "43") (term "2,0") (inst "selectSK=arr_24"))
                                             (rule "simplifySelectOfAnon" (formula "43"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "62")) (ifInst ""  (formula "8")))
                                             (rule "elementOfUnion" (formula "43") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfSingleton" (formula "43") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "commute_or" (formula "46") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0"))
                                             (rule "allLeft" (formula "24") (inst "t=e1"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0,0,0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "24") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")))
                                             (rule "true_left" (formula "24"))
                                             (rule "allLeft" (formula "56") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet1111111_18" (formula "56") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "56") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0,0,0,0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "56") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "56") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "56") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "56") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "56") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "commute_or" (formula "56") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "56") (term "0,0"))
                                             (rule "commute_or_2" (formula "56") (term "0"))
                                             (rule "allLeft" (formula "57") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet1111111_24" (formula "57") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_26" (formula "57") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "57") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0,0,0,0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "57") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "57") (term "0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "57") (term "1,1,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,0,0,0,0"))
                                             (rule "leq_literals" (formula "57") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "55")))
                                             (rule "true_left" (formula "57"))
                                             (rule "allLeft" (formula "28") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet111011011111111_46" (formula "28") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "allLeft" (formula "29") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet1_0" (formula "29") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "29") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "29") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "27")))
                                             (rule "true_left" (formula "29"))
                                             (rule "allLeft" (formula "48") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet11111_16" (formula "48") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "48") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0,0,0,0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "48") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "48") (term "0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "48") (term "0,0,0,0,0,0"))
                                             (rule "leq_literals" (formula "48") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "43")))
                                             (rule "true_left" (formula "48"))
                                             (rule "allLeft" (formula "36") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet111011011111111_45" (formula "36") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0,0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "allLeft" (formula "37") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet111_8" (formula "37") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "37") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0,0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "37") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0"))
                                             (rule "leq_literals" (formula "37") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "35")))
                                             (rule "true_left" (formula "37"))
                                             (rule "allLeft" (formula "37") (inst "t=e4"))
                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "37") (term "1,1,0") (inst "selectSK=arr_25"))
                                             (rule "simplifySelectOfAnon" (formula "37"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "67")) (ifInst ""  (formula "8")))
                                             (rule "elementOfUnion" (formula "37") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "37") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_contradEq7" (formula "37") (term "1,0,0") (ifseqformula "17"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "37") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "elementOfUnion" (formula "37") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "37") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "pullOutSelect" (formula "37") (term "2,0") (inst "selectSK=arr_26"))
                                             (rule "simplifySelectOfAnon" (formula "37"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "68")) (ifInst ""  (formula "8")))
                                             (rule "elementOfUnion" (formula "37") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "37") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "allLeft" (formula "29") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet111011011111111_48" (formula "29") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "30") (inst "t=e3"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "30") (term "1,1,0") (inst "selectSK=arr_27"))
                                             (rule "simplifySelectOfAnon" (formula "30"))
                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "71")) (ifInst ""  (formula "8")))
                                             (rule "elementOfUnion" (formula "30") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradEq7" (formula "30") (term "1,0,0") (ifseqformula "16"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "allLeft" (formula "65") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1111111_25" (formula "65") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "65") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "65") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "65") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "65") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "66") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet1111111_20" (formula "66") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "66") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "66") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "55") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet11111_12" (formula "55") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "55") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "56") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet11111_10" (formula "56") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "56") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "57") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet11111_14" (formula "57") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "57") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "57") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "32") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1_2" (formula "32") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "32") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "24") (inst "t=e3"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "72") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet1111111_22" (formula "72") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "72") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "72") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "72") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "72") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "45") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet111_6" (formula "45") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "45") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "46") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet111_4" (formula "46") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "46") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "25") (inst "t=e4"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "26") (inst "t=e2"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "55") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet111011011111111_44" (formula "55") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "56") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet11111_10" (formula "56") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "56") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "29") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_34" (formula "29") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11011111111_36" (formula "29") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "21") (inst "t=e5"))
                                             (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "31") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet111011011111111_48" (formula "31") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "32") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1_2" (formula "32") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "32") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "22") (inst "t=e3"))
                                             (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "46") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_32" (formula "46") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1011011111111_41" (formula "46") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "47") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet111011011111111_47" (formula "47") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "48") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet111_4" (formula "48") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "48") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "81") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_28" (formula "81") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111011011111111_43" (formula "81") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "81") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "49") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet111011011111111_45" (formula "49") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "49") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "50") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet111_6" (formula "50") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "50") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "84") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet1111111_18" (formula "84") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "84") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "84") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "67") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_30" (formula "67") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111011011111111_42" (formula "67") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "67") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "86") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet1111111_20" (formula "86") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "86") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "86") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "34") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet111011011111111_46" (formula "34") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "35") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet111011011111111_49" (formula "35") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "70") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet11111_12" (formula "70") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "70") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "70") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "71") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet11111_14" (formula "71") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "71") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "71") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "23") (inst "t=j_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "24") (inst "t=e4"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "25") (inst "t=e2"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "94") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet1111111_22" (formula "94") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "94") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "94") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "95") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1111111_25" (formula "95") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "95") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "95") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "76") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_30" (formula "76") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111011011111111_42" (formula "76") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "76") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "76") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "76") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "76") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "76") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "76"))
                                             (rule "inEqSimp_contradInEq0" (formula "76") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "76") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "76") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,0"))
                                             (rule "add_literals" (formula "76") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "76") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "76") (term "0,0,0"))
                                             (rule "leq_literals" (formula "76") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "76"))
                                             (rule "allLeft" (formula "27") (inst "t=j_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "allLeft" (formula "41") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_34" (formula "41") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11011111111_36" (formula "41") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "41") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq0" (formula "41") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0"))
                                             (rule "leq_literals" (formula "41") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "allLeft" (formula "100") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_28" (formula "100") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111011011111111_43" (formula "100") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "100") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "100") (term "1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "100") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "100") (term "0,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "100") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "100") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "100") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "100") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "100") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "100") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "100") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "100") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "100") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "100") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "100") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "100"))
                                             (rule "inEqSimp_contradInEq1" (formula "100") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "100") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "100") (term "0,0,1"))
                                             (rule "add_literals" (formula "100") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "100") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "100") (term "0,0,1"))
                                             (rule "leq_literals" (formula "100") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "100"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "100"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "i_0 = e1 ∨ i_0 = e2 FALSE"
                                    (rule "orRight" (formula "56"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "56")))
                                    (rule "replace_known_right" (formula "8") (term "0,0,0,0,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "56")))
                                    (rule "replace_known_right" (formula "6") (term "1,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "55")))
                                    (rule "allLeft" (formula "37") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_33" (formula "37") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0,0,0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "allLeft" (formula "31") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_35" (formula "31") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111011111111_37" (formula "31") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "31") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0,0,0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "31") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allLeft" (formula "28") (inst "t=i_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "28") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "allLeft" (formula "55") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_29" (formula "55") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0,0,0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "55") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "55") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "allLeft" (formula "47") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet1011111111_31" (formula "47") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0,0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0,1,0,0,0,0"))
                                    (rule "leq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0,0,0") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "47") (term "0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "j_0 = e3 TRUE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "applyEq" (formula "60") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "23"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "7") (term "0,2,1,0") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1"))
                                       (rule "mul_literals" (formula "23") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1"))
                                       (rule "mul_literals" (formula "8") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1"))
                                       (rule "mul_literals" (formula "7") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                       (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "8"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "19"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                       (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "60") (term "0,0"))
                                       (rule "leq_literals" (formula "60") (term "0"))
                                       (builtin "One Step Simplification" (formula "60"))
                                       (rule "false_right" (formula "60"))
                                       (rule "inEqSimp_contradEq3" (formula "4") (term "0,0,0") (ifseqformula "7"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradEq3" (formula "5") (term "0,0,0,0") (ifseqformula "7"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_literals" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                    (branch "j_0 = e3 FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "59"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "59"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "i_0 = e3 TRUE"
                                          (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "46") (term "1,1,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "44") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "25") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "8") (term "1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "29") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "53") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "36") (term "0,2,1,1,0") (ifseqformula "5"))
                                          (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "19"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "inEqSimp_contradEq7" (formula "57") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0"))
                                          (rule "add_literals" (formula "57") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "57") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "57") (term "0,0"))
                                          (rule "leq_literals" (formula "57") (term "0"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "false_right" (formula "57"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1"))
                                          (rule "mul_literals" (formula "8") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "j_0 = e4 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1"))
                                             (rule "mul_literals" (formula "20") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "48"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_literals" (formula "5") (term "0"))
                                             (rule "leq_literals" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                          (branch "j_0 = e4 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "allLeft" (formula "43") (inst "t=e5"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0,0,0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "pullOutSelect" (formula "43") (term "1,1,0") (inst "selectSK=arr_22"))
                                             (rule "simplifySelectOfAnon" (formula "43"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "61")) (ifInst ""  (formula "9")))
                                             (rule "elementOfUnion" (formula "43") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (term "1,0,0") (ifseqformula "19"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "43") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfUnion" (formula "43") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfSingleton" (formula "43") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "pullOutSelect" (formula "43") (term "2,0") (inst "selectSK=arr_23"))
                                             (rule "simplifySelectOfAnon" (formula "43"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "62")) (ifInst ""  (formula "9")))
                                             (rule "elementOfUnion" (formula "43") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfUnion" (formula "43") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "pullOutSelect" (formula "43") (term "2,0") (inst "selectSK=arr_24"))
                                             (rule "simplifySelectOfAnon" (formula "43"))
                                             (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "63")) (ifInst ""  (formula "9")))
                                             (rule "elementOfUnion" (formula "43") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "43") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "elementOfSingleton" (formula "43") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "commute_or" (formula "46") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0"))
                                             (rule "allLeft" (formula "47") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet11111_16" (formula "47") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "47") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0,0,0,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "47") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "commute_or" (formula "47") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "allLeft" (formula "28") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101111011111111_46" (formula "28") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "commute_or" (formula "28") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "28") (term "0,0"))
                                             (rule "commute_or_2" (formula "28") (term "0"))
                                             (rule "allLeft" (formula "36") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101111011111111_45" (formula "36") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0,0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "commute_or" (formula "36") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0"))
                                             (rule "allLeft" (formula "59") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet1111111_18" (formula "59") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "59") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0,0,0,0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "59") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "59"))
                                             (rule "commute_or" (formula "59") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "59") (term "0,0"))
                                             (rule "commute_or_2" (formula "59") (term "0"))
                                             (rule "allLeft" (formula "60") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet1111111_24" (formula "60") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_26" (formula "60") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "60") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "60") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "60") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "60") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "60") (term "0,0,0,0,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "60") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "commute_or" (formula "60") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "60") (term "0,0"))
                                             (rule "commute_or_2" (formula "60") (term "0"))
                                             (rule "allLeft" (formula "29") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet1_0" (formula "29") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "29") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "allLeft" (formula "38") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet111_8" (formula "38") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "38") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "38") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "allLeft" (formula "24") (inst "t=e5"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "25") (inst "t=e1"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "25") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "32") (inst "t=e4"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "32") (term "1,1,0") (inst "selectSK=arr_25"))
                                             (rule "simplifySelectOfAnon" (formula "32"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "74")) (ifInst ""  (formula "9")))
                                             (rule "elementOfUnion" (formula "32") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "allLeft" (formula "34") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1_2" (formula "34") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "34") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "57") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet11111_12" (formula "57") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "57") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "57") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "57") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "58") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet11111_14" (formula "58") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "58") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "59") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet11111_10" (formula "59") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "59") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "59") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "59") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "59"))
                                             (rule "inEqSimp_contradInEq1" (formula "59") (term "0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "59") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "51")))
                                             (rule "true_left" (formula "59"))
                                             (rule "allLeft" (formula "44") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet111_6" (formula "44") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "44") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "44") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "41")))
                                             (rule "true_left" (formula "44"))
                                             (rule "allLeft" (formula "26") (inst "t=e4"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "27") (inst "t=e3"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "27") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "23")))
                                             (rule "true_left" (formula "27"))
                                             (rule "allLeft" (formula "27") (inst "t=e2"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "37") (inst "t=e3"))
                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "37") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "pullOutSelect" (formula "37") (term "1,1,0") (inst "selectSK=arr_26"))
                                             (rule "simplifySelectOfAnon" (formula "37"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "81")) (ifInst ""  (formula "9")))
                                             (rule "elementOfUnion" (formula "37") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "78")))
                                             (rule "elementOfSingleton" (formula "37") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_contradEq7" (formula "37") (term "0,0") (ifseqformula "17"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "37") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "allLeft" (formula "46") (inst "t=e4"))
                                             (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "46") (term "1,1,0") (inst "selectSK=arr_27"))
                                             (rule "simplifySelectOfAnon" (formula "46"))
                                             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "81")) (ifInst ""  (formula "9")))
                                             (rule "replaceKnownSelect_taclet101111011111111_47" (formula "46") (term "2,0"))
                                             (rule "elementOfUnion" (formula "46") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_contradEq7" (formula "46") (term "1,0,0") (ifseqformula "18"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "46") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "46") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "elementOfUnion" (formula "46") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "46") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "elementOfSingleton" (formula "46") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "allLeft" (formula "48") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet111_4" (formula "48") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "48") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "75") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1111111_25" (formula "75") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "75") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "75") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "75") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "75") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "75") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "75") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "75") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "75") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "75") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "76") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet1111111_20" (formula "76") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "76") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "76") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "76") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0,0,0,0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "76") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "76") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "76") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "76") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "76") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "76"))
                                             (rule "inEqSimp_contradInEq1" (formula "76") (term "0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "76") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "72")))
                                             (rule "true_left" (formula "76"))
                                             (rule "allLeft" (formula "76") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet1111111_22" (formula "76") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "76") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "76") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "76") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "76") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "76") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "22") (inst "t=j_0"))
                                             (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "23") (inst "t=e4"))
                                             (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "24") (inst "t=e5"))
                                             (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "25") (inst "t=e2"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "75") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet1111111_18" (formula "75") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "75") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "75") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "76") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet1111111_20" (formula "76") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "76") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "76") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "76") (term "0,0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "76") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "76"))
                                             (rule "allLeft" (formula "34") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_34" (formula "34") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11011111111_36" (formula "34") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "26") (inst "t=e3"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "allLeft" (formula "36") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101111011111111_46" (formula "36") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "37") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet101111011111111_48" (formula "37") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101111011111111_49" (formula "37") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "37") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "allLeft" (formula "63") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101111011111111_44" (formula "63") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "63") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "64") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet11111_10" (formula "64") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "64") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "64") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "64") (term "0,0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "64") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "64"))
                                             (rule "allLeft" (formula "83") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_28" (formula "83") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101111011111111_43" (formula "83") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "83") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "84") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet1111111_22" (formula "84") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "84") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "84") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "85") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1111111_25" (formula "85") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "85") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "85") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "50") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101111011111111_45" (formula "50") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "51") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet111_6" (formula "51") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "51") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0,0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "51") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "allLeft" (formula "67") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_30" (formula "67") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101111011111111_42" (formula "67") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "67") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "68") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet11111_12" (formula "68") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "68") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "69") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet11111_14" (formula "69") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "69") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "69") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "52") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_32" (formula "52") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111011111111_38" (formula "52") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "53") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet101111011111111_50" (formula "53") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "54") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet111_4" (formula "54") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "54") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "38") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet101111011111111_47" (formula "38") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "39") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1_2" (formula "39") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "39") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0,0"))
                                             (rule "commute_or" (formula "43") (term "0,0,0"))
                                             (rule "allLeft" (formula "97") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_28" (formula "97") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101111011111111_43" (formula "97") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "97") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "97") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "97") (term "0,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "97") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "97") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "97") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "97") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "97") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "97") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "97") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "97") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "97"))
                                             (rule "inEqSimp_contradInEq1" (formula "97") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "97") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "97") (term "0,0,1"))
                                             (rule "add_literals" (formula "97") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "97") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "97") (term "0,0,1"))
                                             (rule "leq_literals" (formula "97") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "97"))
                                             (rule "inEqSimp_contradInEq1" (formula "97") (ifseqformula "1"))
                                             (rule "andLeft" (formula "97"))
                                             (rule "inEqSimp_homoInEq1" (formula "97"))
                                             (rule "polySimp_pullOutFactor1b" (formula "97") (term "0"))
                                             (rule "add_literals" (formula "97") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "97") (term "1,0"))
                                             (rule "add_zero_right" (formula "97") (term "0"))
                                             (rule "leq_literals" (formula "97"))
                                             (rule "closeFalse" (formula "97"))
                                          )
                                       )
                                       (branch "i_0 = e3 FALSE"
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "38") (term "1,1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "j_0 = e4 TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "applyEq" (formula "6") (term "0,2,1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "58") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "62") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                             (rule "mul_literals" (formula "22") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1"))
                                             (rule "mul_literals" (formula "7") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "20"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                             (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0"))
                                             (rule "leq_literals" (formula "58") (term "0"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "false_right" (formula "58"))
                                             (rule "inEqSimp_contradEq3" (formula "4") (term "0,0") (ifseqformula "7"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_contradEq3" (formula "4") (term "0,0,0") (ifseqformula "6"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "21"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                             (rule "add_literals" (formula "20") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "20") (term "1,0"))
                                             (rule "add_literals" (formula "20") (term "0"))
                                             (rule "leq_literals" (formula "20"))
                                             (rule "closeFalse" (formula "20"))
                                          )
                                          (branch "j_0 = e4 FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "allLeft" (formula "52") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet1011111111_28" (formula "52") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111111011111111_41" (formula "52") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "52") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "52") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                             (rule "leq_literals" (formula "52") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_contradInEq0" (formula "52") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "52") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                             (rule "leq_literals" (formula "52") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "52"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch
                           (rule "allRight" (formula "43") (inst "sk=f_0"))
                           (rule "allRight" (formula "43") (inst "sk=o_0"))
                           (rule "orRight" (formula "43"))
                           (rule "orRight" (formula "43"))
                           (rule "eqSymm" (formula "43") (term "0,0,0,1"))
                           (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "46"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                           (rule "commute_and" (formula "4") (term "1,0,0,0,0"))
                           (rule "commute_and" (formula "1") (term "0,0,0,0"))
                           (rule "commute_and" (formula "1") (term "1,0,0,0"))
                           (rule "commute_and" (formula "3") (term "1,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                           (rule "commute_or" (formula "1") (term "0,0,0,0"))
                           (rule "commute_and" (formula "4") (term "1,0,0,0,0,0"))
                           (rule "commute_and" (formula "2") (term "1,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                           (rule "commute_and" (formula "1") (term "1,0,0,0"))
                           (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                           (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                           (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0"))
                           (rule "commute_and" (formula "3") (term "1,0,0,0,0,0"))
                           (rule "commute_and" (formula "4") (term "1,0,0,0,0,0,0"))
                           (rule "commute_and" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "commute_and" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "commute_and" (formula "3") (term "0,0,0,0,0,0,0"))
                           (rule "commute_and" (formula "3") (term "1,0,0,0,0,0,0"))
                           (rule "commute_and" (formula "4") (term "0,0,0,0,0,0,0,0"))
                           (rule "commute_and" (formula "4") (term "1,0,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                           (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "commute_or" (formula "2") (term "0,1,0,0,0,0,0"))
                           (rule "commute_and" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "4") (term "0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "4") (term "0,0,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "commute_or" (formula "3") (term "0,1,0,0,0,0,0,0"))
                           (rule "commute_and" (formula "3") (term "1,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "3") (term "1,0,0,0,0,0,0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "shift_paren_and" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0"))
                           (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "commute_or" (formula "2") (term "0,0,0,1,0,0,0,0"))
                           (rule "commute_and" (formula "2") (term "0,0,1,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "4") (term "1,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "commute_or" (formula "4") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "1,0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                           (rule "commute_and" (formula "4") (term "1,0,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "4") (term "0,0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "4") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "4") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "commute_and_2" (formula "4") (term "0,0,0,0,0,0,0"))
                           (rule "shift_paren_and" (formula "3") (term "0,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "commute_or_2" (formula "3") (term "1,0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0,0,0"))
                           (rule "commute_or_2" (formula "3") (term "1,0,0,0,0,0,0,0"))
                           (rule "shift_paren_and" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "commute_or" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "commute_and" (formula "3") (term "0,0,1,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "3") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "cut_direct" (formula "48") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "false_right" (formula "49"))
                              (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "4") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "5") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEq" (formula "4") (term "0,1,1,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "1,1,0,0,1,0,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "4") (term "1,1,0,0,1,0,0,0,0,0,0") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqRigid" (formula "49") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,1,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,1,0,1,0,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,1,0,1,0,0,0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqRigid" (formula "47") (term "0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "47") (term "0"))
                              (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "false_right" (formula "47"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "1,1,0,0,0"))
                              (rule "replace_known_right" (formula "4") (term "1,1,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEq" (formula "2") (term "0,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,1,0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,1,0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "1,1,1,0,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "4") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEq" (formula "3") (term "0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,1,0,0,0,0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqRigid" (formula "3") (term "0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "0,0,0,1,0,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,1,0,0,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,1,0,0,0,0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "4") (term "1,1,0,0,0,0"))
                              (rule "replace_known_right" (formula "4") (term "1,1,0,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEq" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "1,0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,1,0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "1,1,0,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,1,0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "2") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "0,0,1,0,0,0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEq" (formula "2") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,1,0,0,0,0") (ifseqformula "44"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "notRight" (formula "49"))
                              (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                              (rule "replace_known_right" (formula "5") (term "0,0,1,0,0") (ifseqformula "49"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "49")))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = a ∧ (f_0 = arr(e1) ∨ f_0 = arr(e2)) ∧ (f_0 = arr(e1) ∨ o_0 = a) ∧ (f_0 = arr(e2) ∨ o_0 = a) TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "7") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "2")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "50")))
                                 (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "replace_known_left" (formula "7") (term "1,1,0,0,0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "49")))
                                 (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "eqSymm" (formula "52"))
                                 (rule "replace_known_left" (formula "6") (term "1,1,0,1,0,0,0,0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")) (ifInst ""  (formula "5")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "48")))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "nnf_ex2all" (formula "46"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                 (rule "cut_direct" (formula "3") (term "1"))
                                 (branch "CUT: f_0 = arr(e2) TRUE"
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "47") (term "2,1") (ifseqformula "3"))
                                    (rule "narrowSelectArrayType" (formula "47") (term "1") (ifseqformula "4") (ifseqformula "46"))
                                    (rule "applyEq" (formula "47") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "44") (ifseqformula "46"))
                                    (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                    (rule "allLeft" (formula "42") (inst "t=e1"))
                                    (rule "replaceKnownSelect_taclet1111111_24" (formula "42") (term "1,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1111111_26" (formula "42") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "8"))
                                    (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "commute_or" (formula "42") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0,0"))
                                    (rule "commute_or_2" (formula "42") (term "0"))
                                    (rule "cut_direct" (formula "42") (term "1,0"))
                                    (branch "CUT: right ≤ -1 + e1 TRUE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "42"))
                                       (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "13"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0"))
                                       (rule "add_zero_right" (formula "12") (term "0"))
                                       (rule "leq_literals" (formula "12"))
                                       (rule "closeFalse" (formula "12"))
                                    )
                                    (branch "CUT: right ≤ -1 + e1 FALSE"
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "inEqSimp_leqRight" (formula "46"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "allLeft" (formula "44") (inst "t=e5"))
                                       (rule "replaceKnownSelect_taclet1111111_18" (formula "44") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "44") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0,0,0,0") (ifseqformula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "commute_or" (formula "44") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "44") (term "0,0"))
                                       (rule "commute_or_2" (formula "44") (term "0"))
                                       (rule "cut_direct" (formula "44") (term "1,0"))
                                       (branch "CUT: e5 ≤ -1 TRUE"
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "44"))
                                          (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "add_literals" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0"))
                                          (rule "add_literals" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "add_literals" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "closeFalse" (formula "9"))
                                       )
                                       (branch "CUT: e5 ≤ -1 FALSE"
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_leqRight" (formula "48"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "allLeft" (formula "46") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet1111111_22" (formula "46") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "46") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0"))
                                          (rule "commute_or" (formula "46") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0"))
                                          (rule "allLeft" (formula "47") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet1111111_20" (formula "47") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "47") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0"))
                                          (rule "commute_or" (formula "47") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,0"))
                                          (rule "allLeft" (formula "48") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet1111111_25" (formula "48") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "48") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "48") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "48") (term "0,0"))
                                          (rule "commute_or_2" (formula "48") (term "0"))
                                          (rule "commute_or" (formula "48") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "48") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "48") (term "0,0"))
                                          (rule "allLeft" (formula "28") (inst "t=e5"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "pullOutSelect" (formula "28") (term "1,1,0") (inst "selectSK=arr_14"))
                                          (rule "simplifySelectOfAnon" (formula "28"))
                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
                                          (rule "elementOfUnion" (formula "28") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "elementOfUnion" (formula "28") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "28") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "elementOfSingleton" (formula "28") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "pullOutSelect" (formula "28") (term "2,0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "28"))
                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                          (rule "elementOfUnion" (formula "28") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "28") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "commute_or" (formula "30") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "30") (term "0,0"))
                                          (rule "commute_or_2" (formula "30") (term "0"))
                                          (rule "allLeft" (formula "22") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet11001111111111_37" (formula "22") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "commute_or" (formula "22") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "22") (term "0,0"))
                                          (rule "commute_or_2" (formula "22") (term "0"))
                                          (rule "allLeft" (formula "32") (inst "t=e4"))
                                          (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "32") (term "1,1,0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "32"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "58")) (ifInst ""  (formula "7")))
                                          (rule "elementOfUnion" (formula "32") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradEq7" (formula "32") (term "1,0,0") (ifseqformula "16"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "32") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "elementOfUnion" (formula "32") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "pullOutSelect" (formula "32") (term "2,0") (inst "selectSK=arr_17"))
                                          (rule "simplifySelectOfAnon" (formula "32"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "59")) (ifInst ""  (formula "7")))
                                          (rule "elementOfUnion" (formula "32") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "34") (term "0,0"))
                                          (rule "commute_or_2" (formula "34") (term "0"))
                                          (rule "commute_or" (formula "34") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "34") (term "0,0"))
                                          (rule "allLeft" (formula "43") (inst "t=e1"))
                                          (rule "replaceKnownSelect_taclet11111_16" (formula "43") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "43") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "43") (term "1,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,0,0,0,0"))
                                          (rule "leq_literals" (formula "43") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "allLeft" (formula "44") (inst "t=e5"))
                                          (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "44") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "pullOutSelect" (formula "44") (term "1,1,0") (inst "selectSK=arr_18"))
                                          (rule "simplifySelectOfAnon" (formula "44"))
                                          (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "62")) (ifInst ""  (formula "7")))
                                          (rule "replaceKnownSelect_taclet11001111111111_36" (formula "44") (term "2,0"))
                                          (rule "elementOfUnion" (formula "44") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_contradEq7" (formula "44") (term "1,0,0") (ifseqformula "17"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "44") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "elementOfUnion" (formula "44") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "44") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "elementOfUnion" (formula "44") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "44") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "elementOfSingleton" (formula "44") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "allLeft" (formula "53") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet1111111_22" (formula "53") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "53") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "54") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet1111111_25" (formula "54") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "54") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "35") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet111_6" (formula "35") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "35") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "36") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet111_4" (formula "36") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "36") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "20") (inst "t=e1"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "20") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "58") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet1111111_18" (formula "58") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "58") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "58") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "allLeft" (formula "19") (inst "t=e5"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "19") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "allLeft" (formula "20") (inst "t=e4"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "61") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet1111111_20" (formula "61") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "61") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "61") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "47") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet11001111111111_40" (formula "47") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "47") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "allLeft" (formula "21") (inst "t=e3"))
                                          (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "22") (inst "t=e2"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "28") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet11001111111111_39" (formula "28") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "29") (inst "t=e3"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "29") (term "1,1,0") (inst "selectSK=arr_19"))
                                          (rule "simplifySelectOfAnon" (formula "29"))
                                          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "77")) (ifInst ""  (formula "7")))
                                          (rule "elementOfUnion" (formula "29") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradEq7" (formula "29") (term "1,0,0") (ifseqformula "15"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "allLeft" (formula "53") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet11111_12" (formula "53") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "53") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "54") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet11111_10" (formula "54") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "54") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "25") (inst "t=e5"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "47") (inst "t=e1"))
                                          (rule "replaceKnownSelect_taclet111_8" (formula "47") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "47") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0,0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "47") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "allLeft" (formula "33") (inst "t=e1"))
                                          (rule "replaceKnownSelect_taclet1_0" (formula "33") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "33") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0,0") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,0,0,0,0"))
                                          (rule "leq_literals" (formula "33") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "allLeft" (formula "49") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet11001111111111_36" (formula "49") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "49") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "49") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "inEqSimp_contradInEq1" (formula "49") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "49") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "allLeft" (formula "34") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet11001111111111_37" (formula "34") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0,0,0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "34") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "34") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "allLeft" (formula "60") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet11111_14" (formula "60") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "60") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "60") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "32") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet1_2" (formula "32") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "32") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "52") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet11001111111111_38" (formula "52") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "52") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "53") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet111_6" (formula "53") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "53") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "54") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet111_4" (formula "54") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "54") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "36") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet11001111111111_39" (formula "36") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "70") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet11111_12" (formula "70") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "70") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "70") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "70") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "70") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "71") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet11111_10" (formula "71") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "71") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "26") (inst "t=e4"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "27") (inst "t=e3"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "74") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet11111_14" (formula "74") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "74") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "74") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "74") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "74") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "74") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "74") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "74") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "74") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "39") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet11001111111111_41" (formula "39") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "40") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet1_2" (formula "40") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "40") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "28") (inst "t=e2"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "85") (term "0,0,0"))
                                          (rule "cut_direct" (formula "92") (term "1,0"))
                                          (branch "CUT: right ≤ -1 + e4 TRUE"
                                             (builtin "One Step Simplification" (formula "93"))
                                             (rule "true_left" (formula "93"))
                                             (rule "replace_known_left" (formula "58") (term "1,0,0,0,0") (ifseqformula "92"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "true_left" (formula "58"))
                                             (rule "replace_known_left" (formula "39") (term "1,0,0,0,0") (ifseqformula "91"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "replace_known_left" (formula "73") (term "1,0,0,0,0") (ifseqformula "90"))
                                             (builtin "One Step Simplification" (formula "73"))
                                             (rule "true_left" (formula "73"))
                                             (rule "replace_known_left" (formula "26") (term "1,0,0,0,0") (ifseqformula "89"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "88"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "49") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                             (rule "leq_literals" (formula "49") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "inEqSimp_contradEq7" (formula "50") (term "0,0,0") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                             (rule "leq_literals" (formula "50") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "89"))
                                             (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "19"))
                                             (rule "andLeft" (formula "18"))
                                             (rule "inEqSimp_homoInEq1" (formula "18"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0"))
                                             (rule "add_zero_right" (formula "18") (term "0"))
                                             (rule "leq_literals" (formula "18"))
                                             (rule "closeFalse" (formula "18"))
                                          )
                                          (branch "CUT: right ≤ -1 + e4 FALSE"
                                             (builtin "One Step Simplification" (formula "92"))
                                             (rule "replace_known_right" (formula "75") (term "1,0,0,0,0") (ifseqformula "98"))
                                             (builtin "One Step Simplification" (formula "75"))
                                             (rule "replace_known_right" (formula "26") (term "1,0,0,0,0") (ifseqformula "98"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "replace_known_right" (formula "39") (term "1,0,0,0,0") (ifseqformula "98"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "replace_known_right" (formula "58") (term "1,0,0,0,0") (ifseqformula "98"))
                                             (builtin "One Step Simplification" (formula "58"))
                                             (rule "inEqSimp_leqRight" (formula "98"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "commute_or_2" (formula "87") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "54") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "55") (term "0,0,0"))
                                             (rule "cut_direct" (formula "94") (term "1,0"))
                                             (branch "CUT: right ≤ -1 + e3 TRUE"
                                                (builtin "One Step Simplification" (formula "95"))
                                                (rule "true_left" (formula "95"))
                                                (rule "replace_known_left" (formula "77") (term "1,0,0,0,0") (ifseqformula "94"))
                                                (builtin "One Step Simplification" (formula "77"))
                                                (rule "true_left" (formula "77"))
                                                (rule "replace_known_left" (formula "60") (term "1,0,0,0,0") (ifseqformula "93"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "true_left" (formula "60"))
                                                (rule "replace_known_left" (formula "28") (term "1,0,0,0,0") (ifseqformula "92"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "replace_known_left" (formula "40") (term "1,0,0,0,0") (ifseqformula "91"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "90"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "34") (term "0,0") (ifseqformula "3"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "34"))
                                                (rule "hideAuxiliaryEq" (formula "34"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "90"))
                                                (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "inEqSimp_contradEq3" (formula "72") (term "1,0,0") (ifseqformula "20"))
                                                (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "72") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "72") (term "0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "72") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "72"))
                                                (rule "inEqSimp_contradEq3" (formula "48") (term "1,0,0") (ifseqformula "20"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "48") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "91"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "1"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "inEqSimp_homoInEq1" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0"))
                                                (rule "add_zero_right" (formula "19") (term "0"))
                                                (rule "leq_literals" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                             (branch "CUT: right ≤ -1 + e3 FALSE"
                                                (builtin "One Step Simplification" (formula "94"))
                                                (rule "replace_known_right" (formula "28") (term "1,0,0,0,0") (ifseqformula "99"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "replace_known_right" (formula "41") (term "1,0,0,0,0") (ifseqformula "99"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "replace_known_right" (formula "60") (term "1,0,0,0,0") (ifseqformula "99"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "replace_known_right" (formula "77") (term "1,0,0,0,0") (ifseqformula "99"))
                                                (builtin "One Step Simplification" (formula "77"))
                                                (rule "inEqSimp_leqRight" (formula "99"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "cut_direct" (formula "5") (term "0"))
                                                (branch "CUT: left ≥ 1 + e2 TRUE"
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "inEqSimp_contradInEq1" (formula "88") (term "1,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "88") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "88") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "88") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "88") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "88") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "88") (term "0,1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "88"))
                                                   (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "72") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "72") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "72") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "72"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "56") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "56") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "56") (term "0,1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "37") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "5"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0"))
                                                   (rule "leq_literals" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                                (branch "CUT: left ≥ 1 + e2 FALSE"
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "30") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "replace_known_left" (formula "42") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "replace_known_left" (formula "60") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "60"))
                                                   (rule "true_left" (formula "60"))
                                                   (rule "replace_known_left" (formula "93") (term "1,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "93"))
                                                   (rule "true_left" (formula "93"))
                                                   (rule "replace_known_left" (formula "76") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "inEqSimp_geqRight" (formula "95"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "replace_known_left" (formula "85") (term "1,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "85"))
                                                   (rule "true_left" (formula "85"))
                                                   (rule "replace_known_left" (formula "55") (term "1,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "true_left" (formula "55"))
                                                   (rule "replace_known_left" (formula "69") (term "1,0,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "69"))
                                                   (rule "true_left" (formula "69"))
                                                   (rule "replace_known_left" (formula "37") (term "1,0,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "replace_known_left" (formula "25") (term "1,0,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "19"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: f_0 = arr(e2) FALSE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "48") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "44") (ifseqformula "47"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "false_right" (formula "46"))
                                    (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "eqSymm" (formula "45"))
                                    (rule "applyEq" (formula "47") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "4") (ifseqformula "46"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "inEqSimp_contradEq7" (formula "45") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "45") (term "0,0"))
                                    (rule "leq_literals" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "commute_or" (formula "1") (term "0,0"))
                                    (rule "commute_or_2" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                    (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "13"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0"))
                                    (rule "add_zero_right" (formula "12") (term "0"))
                                    (rule "leq_literals" (formula "12"))
                                    (rule "closeFalse" (formula "12"))
                                 )
                              )
                              (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = a ∧ (f_0 = arr(e1) ∨ f_0 = arr(e2)) ∧ (f_0 = arr(e1) ∨ o_0 = a) ∧ (f_0 = arr(e2) ∨ o_0 = a) FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "cut_direct" (formula "46") (term "1,0,0,0"))
                                 (branch "CUT: o_0 = a TRUE"
                                    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "3") (term "1,1,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "4") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "5") (term "1,1,0,0,0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "51") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                                    (rule "nnf_ex2all" (formula "48"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "5") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ (f_0 = arr(e1) ∨ f_0 = arr(e2) ∨ f_0 = arr(e3)) TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "eqSymm" (formula "49"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "46")))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEq" (formula "49") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "49") (term "1") (ifseqformula "4") (ifseqformula "48"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "applyEq" (formula "49") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectArrayType" (formula "49") (term "0") (ifseqformula "44") (ifseqformula "48"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "45"))
                                       (rule "false_right" (formula "45"))
                                       (rule "inEqSimp_contradEq7" (formula "46") (ifseqformula "13"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                                       (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0"))
                                       (rule "leq_literals" (formula "46") (term "0"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "false_right" (formula "46"))
                                       (rule "commute_or" (formula "1") (term "0,0"))
                                       (rule "commute_or_2" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                       (rule "allLeft" (formula "42") (inst "t=e1"))
                                       (rule "replaceKnownSelect_taclet1111111_24" (formula "42") (term "1,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1111111_26" (formula "42") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "commute_or" (formula "42") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0"))
                                       (rule "cut_direct" (formula "42") (term "1,0"))
                                       (branch "CUT: right ≤ -1 + e1 TRUE"
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "42"))
                                          (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0"))
                                          (rule "inEqSimp_contradEq3" (formula "49") (ifseqformula "14"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "49") (term "0,0"))
                                          (rule "qeq_literals" (formula "49") (term "0"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "false_right" (formula "49"))
                                          (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "12"))
                                          (rule "andLeft" (formula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "13"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0"))
                                          (rule "add_zero_right" (formula "13") (term "0"))
                                          (rule "leq_literals" (formula "13"))
                                          (rule "closeFalse" (formula "13"))
                                       )
                                       (branch "CUT: right ≤ -1 + e1 FALSE"
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "inEqSimp_leqRight" (formula "46"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "allLeft" (formula "44") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet1111111_18" (formula "44") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "44") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0,0,0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "commute_or" (formula "44") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0,0"))
                                          (rule "commute_or_2" (formula "44") (term "0"))
                                          (rule "allLeft" (formula "45") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet1111111_22" (formula "45") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "45") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "commute_or" (formula "45") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0,0"))
                                          (rule "allLeft" (formula "46") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet1111111_20" (formula "46") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "46") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0"))
                                          (rule "commute_or" (formula "46") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "46") (term "0,0"))
                                          (rule "allLeft" (formula "47") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet1111111_25" (formula "47") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "47") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0"))
                                          (rule "commute_or" (formula "47") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "47") (term "0,0"))
                                          (rule "allLeft" (formula "42") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet1111111_18" (formula "42") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "42") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0,0"))
                                          (rule "allLeft" (formula "43") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet1111111_20" (formula "43") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "43") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0,0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "commute_or" (formula "43") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "43") (term "0,0"))
                                          (rule "allLeft" (formula "34") (inst "t=e5"))
                                          (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "34") (term "1,1,0") (inst "selectSK=arr_14"))
                                          (rule "simplifySelectOfAnon" (formula "34"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")) (ifInst ""  (formula "6")))
                                          (rule "elementOfUnion" (formula "34") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradEq7" (formula "34") (term "1,0,0") (ifseqformula "16"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "34") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "elementOfUnion" (formula "34") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "elementOfSingleton" (formula "34") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "34"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")) (ifInst ""  (formula "6")))
                                          (rule "elementOfUnion" (formula "34") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                                          (rule "elementOfSingleton" (formula "34") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "34"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")) (ifInst ""  (formula "6")))
                                          (rule "elementOfUnion" (formula "34") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0"))
                                          (rule "commute_or" (formula "37") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "37") (term "0,0"))
                                          (rule "allLeft" (formula "22") (inst "t=e1"))
                                          (rule "replaceKnownSelect_taclet1_0" (formula "22") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "22") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0"))
                                          (rule "leq_literals" (formula "22") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "23") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet10011111111111_38" (formula "23") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "commute_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0"))
                                          (rule "allLeft" (formula "30") (inst "t=e1"))
                                          (rule "replaceKnownSelect_taclet111_8" (formula "30") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "30") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "30") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "allLeft" (formula "29") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet10011111111111_37" (formula "29") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "30") (inst "t=e4"))
                                          (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "30") (term "1,1,0") (inst "selectSK=arr_17"))
                                          (rule "simplifySelectOfAnon" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "64")) (ifInst ""  (formula "6")))
                                          (rule "elementOfUnion" (formula "30") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradEq7" (formula "30") (term "1,0,0") (ifseqformula "15"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfUnion" (formula "30") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "pullOutSelect" (formula "30") (term "2,0") (inst "selectSK=arr_18"))
                                          (rule "simplifySelectOfAnon" (formula "30"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "65")) (ifInst ""  (formula "6")))
                                          (rule "elementOfUnion" (formula "30") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "allLeft" (formula "55") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet1111111_22" (formula "55") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "55") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "56") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet1111111_25" (formula "56") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "56") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "33") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet111_6" (formula "33") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "33") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "36") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet10011111111111_37" (formula "36") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "allLeft" (formula "34") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet111_4" (formula "34") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "34") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "21") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet10011111111111_38" (formula "21") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "22") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet10011111111111_40" (formula "22") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "23") (inst "t=e3"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0,0"))
                                          (rule "pullOutSelect" (formula "23") (term "1,1,0") (inst "selectSK=arr_19"))
                                          (rule "simplifySelectOfAnon" (formula "23"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "74")) (ifInst ""  (formula "6")))
                                          (rule "elementOfUnion" (formula "23") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "73")))
                                          (rule "elementOfSingleton" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradEq7" (formula "23") (term "0,0") (ifseqformula "14"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "23"))
                                          (rule "hideAuxiliaryEq" (formula "23"))
                                          (rule "allLeft" (formula "24") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet1_2" (formula "24") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "24") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "18") (inst "t=e5"))
                                          (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "19") (inst "t=e4"))
                                          (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "21") (inst "t=e1"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0,0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "21") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "allLeft" (formula "22") (inst "t=e5"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "20") (inst "t=e3"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "58") (inst "t=e1"))
                                          (rule "replaceKnownSelect_taclet11111_16" (formula "58") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "58") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0,0,0,0") (ifseqformula "9"))
                                          (rule "qeq_literals" (formula "58") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "inEqSimp_contradInEq1" (formula "58") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "58") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "58") (term "1,1,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "58") (term "1,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "58") (term "0,0,0,0,0,0"))
                                          (rule "leq_literals" (formula "58") (term "0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "allLeft" (formula "59") (inst "t=e5"))
                                          (rule "replaceKnownSelect_taclet10011111111111_36" (formula "59") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "59") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0,0,0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "59") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "59") (term "0,1,0,0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "59") (term "0,0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "59") (term "0,0,0,0,1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0,1,0,0,0,0"))
                                          (rule "add_literals" (formula "59") (term "1,1,0,0,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0,1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0,1,0,0,0,0"))
                                          (rule "leq_literals" (formula "59") (term "0,1,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "allLeft" (formula "21") (inst "t=e2"))
                                          (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "58") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet11111_12" (formula "58") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "58") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "59") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet11111_10" (formula "59") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "59") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "59") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "60") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet11111_14" (formula "60") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "60") (term "1,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "60") (term "1,0,0,0,0"))
                                          (rule "allLeft" (formula "34") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet10011111111111_40" (formula "34") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "35") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet10011111111111_41" (formula "35") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10011111111111_42" (formula "35") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "66") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet11111_12" (formula "66") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "66") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "66") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "67") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet11111_10" (formula "67") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "67") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "67") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "67") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "67") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "67") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "68") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet11111_14" (formula "68") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "68") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "68") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "68") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "68") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "68") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "68") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "68") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "25") (inst "t=e4"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "26") (inst "t=e3"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "27") (inst "t=e2"))
                                          (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "53") (inst "t=e4"))
                                          (rule "replaceKnownSelect_taclet10011111111111_39" (formula "53") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "54") (inst "t=e3"))
                                          (rule "replaceKnownSelect_taclet111_6" (formula "54") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "54") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "39") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet1_2" (formula "39") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "39") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0"))
                                          (rule "allLeft" (formula "56") (inst "t=e2"))
                                          (rule "replaceKnownSelect_taclet111_4" (formula "56") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "56") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0"))
                                          (rule "cut_direct" (formula "89") (term "1,0"))
                                          (branch "CUT: e5 ≤ -1 TRUE"
                                             (builtin "One Step Simplification" (formula "90"))
                                             (rule "true_left" (formula "90"))
                                             (rule "replace_known_left" (formula "45") (term "0,0,0,0,0") (ifseqformula "89"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "true_left" (formula "45"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,0,0,0") (ifseqformula "88"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "replace_known_left" (formula "18") (term "0,0,0,0,0") (ifseqformula "87"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "86"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "replace_known_left" (formula "68") (term "0,0,0,0") (ifseqformula "85"))
                                             (builtin "One Step Simplification" (formula "68"))
                                             (rule "true_left" (formula "68"))
                                             (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "84"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "replace_known_left" (formula "77") (term "1,0,0") (ifseqformula "83"))
                                             (builtin "One Step Simplification" (formula "77"))
                                             (rule "true_left" (formula "77"))
                                             (rule "replace_known_left" (formula "48") (term "0,0,0,0") (ifseqformula "82"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "replace_known_left" (formula "60") (term "1,0,0") (ifseqformula "81"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "80"))
                                             (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "34") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "34") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "inEqSimp_subsumption0" (formula "29") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_subsumption0" (formula "24") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "inEqSimp_subsumption0" (formula "74") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "74") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "74"))
                                             (rule "true_left" (formula "74"))
                                             (rule "inEqSimp_subsumption0" (formula "78") (term "1,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "78") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "78"))
                                             (rule "true_left" (formula "78"))
                                             (rule "inEqSimp_subsumption0" (formula "46") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "46") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "inEqSimp_subsumption0" (formula "62") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "62") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "true_left" (formula "62"))
                                             (rule "inEqSimp_subsumption0" (formula "41") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "41") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "inEqSimp_subsumption0" (formula "19") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "19") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "inEqSimp_subsumption0" (formula "55") (term "0,0,0,0,0") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                             (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0"))
                                             (rule "add_literals" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "69") (term "1,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "69") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "69"))
                                             (rule "true_left" (formula "69"))
                                             (rule "inEqSimp_subsumption0" (formula "24") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "inEqSimp_subsumption0" (formula "44") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "44") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "inEqSimp_subsumption0" (formula "20") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "20") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "inEqSimp_subsumption0" (formula "39") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "39") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "inEqSimp_subsumption0" (formula "26") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_subsumption0" (formula "68") (term "1,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "68") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "68"))
                                             (rule "true_left" (formula "68"))
                                             (rule "inEqSimp_subsumption0" (formula "55") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "55") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "inEqSimp_subsumption0" (formula "51") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "51") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "true_left" (formula "51"))
                                             (rule "inEqSimp_subsumption0" (formula "29") (term "0,0,0,0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "29") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "24") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "inEqSimp_subsumption0" (formula "53") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "inEqSimp_subsumption0" (formula "60") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "60") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "true_left" (formula "60"))
                                             (rule "inEqSimp_subsumption0" (formula "50") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "50") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "inEqSimp_subsumption0" (formula "26") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "26") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_subsumption0" (formula "21") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "21") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "inEqSimp_subsumption0" (formula "38") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "38") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "inEqSimp_subsumption0" (formula "27") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "27") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_subsumption0" (formula "34") (term "0,0,0,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "34") (term "0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "inEqSimp_subsumption0" (formula "57") (term "1,0,0") (ifseqformula "14"))
                                             (rule "leq_literals" (formula "57") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "true_left" (formula "57"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "9") (term "0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "closeFalse" (formula "9"))
                                          )
                                          (branch "CUT: e5 ≤ -1 FALSE"
                                             (builtin "One Step Simplification" (formula "89"))
                                             (rule "replace_known_right" (formula "45") (term "0,0,0,0,0") (ifseqformula "96"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "replace_known_right" (formula "36") (term "1,0") (ifseqformula "96"))
                                             (builtin "One Step Simplification" (formula "36"))
                                             (rule "replace_known_right" (formula "83") (term "1,0,0") (ifseqformula "96"))
                                             (builtin "One Step Simplification" (formula "83"))
                                             (rule "replace_known_right" (formula "30") (term "0,0,0,0,0") (ifseqformula "96"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "96"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "replace_known_right" (formula "72") (term "0,0,0,0") (ifseqformula "96"))
                                             (builtin "One Step Simplification" (formula "72"))
                                             (rule "replace_known_right" (formula "53") (term "0,0,0,0") (ifseqformula "96"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "replace_known_right" (formula "18") (term "0,0,0,0,0") (ifseqformula "96"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_right" (formula "66") (term "1,0,0") (ifseqformula "96"))
                                             (builtin "One Step Simplification" (formula "66"))
                                             (rule "inEqSimp_leqRight" (formula "96"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "cut_direct" (formula "91") (term "1,0"))
                                             (branch "CUT: right ≤ -1 + e4 TRUE"
                                                (builtin "One Step Simplification" (formula "92"))
                                                (rule "true_left" (formula "92"))
                                                (rule "replace_known_left" (formula "55") (term "1,0,0,0,0") (ifseqformula "91"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "true_left" (formula "55"))
                                                (rule "replace_known_left" (formula "73") (term "1,0,0,0,0") (ifseqformula "90"))
                                                (builtin "One Step Simplification" (formula "73"))
                                                (rule "true_left" (formula "73"))
                                                (rule "replace_known_left" (formula "26") (term "1,0,0,0,0") (ifseqformula "89"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "replace_known_left" (formula "37") (term "1,0,0,0,0") (ifseqformula "88"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "true_left" (formula "37"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "87"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "inEqSimp_contradEq7" (formula "47") (term "0,0,0") (ifseqformula "2"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
                                                (rule "leq_literals" (formula "47") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "inEqSimp_contradEq7" (formula "46") (term "0,0,0") (ifseqformula "2"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0,0,0"))
                                                (rule "leq_literals" (formula "46") (term "0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "88"))
                                                (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "18"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "inEqSimp_homoInEq1" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0"))
                                                (rule "add_zero_right" (formula "19") (term "0"))
                                                (rule "leq_literals" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                             (branch "CUT: right ≤ -1 + e4 FALSE"
                                                (builtin "One Step Simplification" (formula "91"))
                                                (rule "replace_known_right" (formula "26") (term "1,0,0,0,0") (ifseqformula "97"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "replace_known_right" (formula "74") (term "1,0,0,0,0") (ifseqformula "97"))
                                                (builtin "One Step Simplification" (formula "74"))
                                                (rule "replace_known_right" (formula "38") (term "1,0,0,0,0") (ifseqformula "97"))
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "replace_known_right" (formula "55") (term "1,0,0,0,0") (ifseqformula "97"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "inEqSimp_leqRight" (formula "97"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "commute_or_2" (formula "50") (term "0,0,0"))
                                                (rule "cut_direct" (formula "93") (term "1,0"))
                                                (branch "CUT: right ≤ -1 + e3 TRUE"
                                                   (builtin "One Step Simplification" (formula "94"))
                                                   (rule "true_left" (formula "94"))
                                                   (rule "replace_known_left" (formula "76") (term "1,0,0,0,0") (ifseqformula "93"))
                                                   (builtin "One Step Simplification" (formula "76"))
                                                   (rule "true_left" (formula "76"))
                                                   (rule "replace_known_left" (formula "40") (term "1,0,0,0,0") (ifseqformula "92"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "replace_known_left" (formula "28") (term "1,0,0,0,0") (ifseqformula "91"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "replace_known_left" (formula "55") (term "1,0,0,0,0") (ifseqformula "90"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "true_left" (formula "55"))
                                                   (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "89"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "88"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "63") (term "1,0,0") (ifseqformula "18"))
                                                   (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "63") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "63") (term "0,0,1,0,0"))
                                                   (rule "qeq_literals" (formula "63") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "63"))
                                                   (rule "inEqSimp_contradEq3" (formula "64") (term "1,0,0") (ifseqformula "18"))
                                                   (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "64") (term "1,1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "64") (term "0,0,1,0,0"))
                                                   (rule "qeq_literals" (formula "64") (term "0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "64"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "89"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "CUT: right ≤ -1 + e3 FALSE"
                                                   (builtin "One Step Simplification" (formula "93"))
                                                   (rule "replace_known_right" (formula "76") (term "1,0,0,0,0") (ifseqformula "98"))
                                                   (builtin "One Step Simplification" (formula "76"))
                                                   (rule "replace_known_right" (formula "28") (term "1,0,0,0,0") (ifseqformula "98"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "replace_known_right" (formula "57") (term "1,0,0,0,0") (ifseqformula "98"))
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (rule "replace_known_right" (formula "40") (term "1,0,0,0,0") (ifseqformula "98"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "98"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "inEqSimp_leqRight" (formula "98"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "87") (term "1,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "87") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "87") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "87") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "87") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "87") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "87"))
                                                   (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "52") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "52") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "52") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "35") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "71") (term "1,0,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "71") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "71") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "71") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "71") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "71") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "71"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "100") (ifseqformula "5"))
                                                   (rule "polySimp_mulComm0" (formula "100") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "100") (term "0,0"))
                                                   (rule "add_literals" (formula "100") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "100") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "100") (term "0,0"))
                                                   (rule "qeq_literals" (formula "100") (term "0"))
                                                   (builtin "One Step Simplification" (formula "100"))
                                                   (rule "false_right" (formula "100"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "18"))
                                                   (rule "andLeft" (formula "17"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0"))
                                                   (rule "leq_literals" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ (f_0 = arr(e1) ∨ f_0 = arr(e2) ∨ f_0 = arr(e3)) FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ ( f_0 = arr(e1) ∨ f_0 = arr(e2) ∨ f_0 = arr(e3) ∨ f_0 = arr(e4)) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "46")))
                                          (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "49"))
                                          (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "orRight" (formula "46"))
                                          (rule "orRight" (formula "46"))
                                          (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                                          (rule "false_right" (formula "49"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "46"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "false_right" (formula "45"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "applyEq" (formula "49") (term "2,1") (ifseqformula "3"))
                                          (rule "narrowSelectArrayType" (formula "49") (term "1") (ifseqformula "4") (ifseqformula "48"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "applyEq" (formula "49") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectArrayType" (formula "49") (term "0") (ifseqformula "44") (ifseqformula "48"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "14"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0"))
                                          (rule "leq_literals" (formula "47") (term "0"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "false_right" (formula "47"))
                                          (rule "commute_or" (formula "1") (term "0,0"))
                                          (rule "commute_or_2" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                          (rule "allLeft" (formula "42") (inst "t=e1"))
                                          (rule "replaceKnownSelect_taclet1111111_24" (formula "42") (term "1,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111111_26" (formula "42") (term "1,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0,0,0,0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "commute_or" (formula "42") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0"))
                                          (rule "cut_direct" (formula "42") (term "1,0"))
                                          (branch "CUT: right ≤ -1 + e1 TRUE"
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "42"))
                                             (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                             (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "48") (ifseqformula "15"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0"))
                                             (rule "qeq_literals" (formula "48") (term "0"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "12"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "closeFalse" (formula "13"))
                                          )
                                          (branch "CUT: right ≤ -1 + e1 FALSE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_leqRight" (formula "46"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "allLeft" (formula "44") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet1111111_18" (formula "44") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "44") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0,0,0,0") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "44") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "44") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "commute_or" (formula "44") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "44") (term "0,0"))
                                             (rule "commute_or_2" (formula "44") (term "0"))
                                             (rule "allLeft" (formula "45") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet1111111_22" (formula "45") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "45") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,0"))
                                             (rule "commute_or_2" (formula "45") (term "0"))
                                             (rule "commute_or" (formula "45") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,0"))
                                             (rule "allLeft" (formula "46") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet1111111_20" (formula "46") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "46") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0"))
                                             (rule "commute_or" (formula "46") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "46") (term "0,0"))
                                             (rule "allLeft" (formula "47") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1111111_25" (formula "47") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "47") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "commute_or" (formula "47") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "47") (term "0,0"))
                                             (rule "allLeft" (formula "18") (inst "t=e5"))
                                             (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,0"))
                                             (rule "commute_or_2" (formula "18") (term "0"))
                                             (rule "commute_or" (formula "18") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,0"))
                                             (rule "allLeft" (formula "19") (inst "t=e4"))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0"))
                                             (rule "commute_or" (formula "19") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0"))
                                             (rule "allLeft" (formula "20") (inst "t=e3"))
                                             (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0"))
                                             (rule "commute_or" (formula "20") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "20") (term "0,0"))
                                             (rule "allLeft" (formula "38") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet11111_16" (formula "38") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_17" (formula "38") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "38") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "38") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "allLeft" (formula "39") (inst "t=e5"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0,0") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "pullOutSelect" (formula "39") (term "1,1,0") (inst "selectSK=arr_14"))
                                             (rule "simplifySelectOfAnon" (formula "39"))
                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "59")) (ifInst ""  (formula "6")))
                                             (rule "elementOfUnion" (formula "39") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_contradEq7" (formula "39") (term "1,0,0") (ifseqformula "16"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "39") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "elementOfUnion" (formula "39") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "elementOfUnion" (formula "39") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "39") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "elementOfSingleton" (formula "39") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "pullOutSelect" (formula "39") (term "2,0") (inst "selectSK=arr_15"))
                                             (rule "simplifySelectOfAnon" (formula "39"))
                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
                                             (rule "elementOfUnion" (formula "39") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "elementOfUnion" (formula "39") (term "0,0,0"))
                                             (rule "elementOfSingleton" (formula "39") (term "1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "elementOfSingleton" (formula "39") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "pullOutSelect" (formula "39") (term "2,0") (inst "selectSK=arr_16"))
                                             (rule "simplifySelectOfAnon" (formula "39"))
                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "61")) (ifInst ""  (formula "6")))
                                             (rule "elementOfUnion" (formula "39") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "39") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "elementOfSingleton" (formula "39") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "commute_or" (formula "42") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0,0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "allLeft" (formula "25") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet1_0" (formula "25") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "25") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "25") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "31") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101011111111111_37" (formula "31") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "32") (inst "t=e4"))
                                             (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "32") (term "1,1,0") (inst "selectSK=arr_17"))
                                             (rule "simplifySelectOfAnon" (formula "32"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "65")) (ifInst ""  (formula "6")))
                                             (rule "elementOfUnion" (formula "32") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_contradEq7" (formula "32") (term "1,0,0") (ifseqformula "15"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "32") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "elementOfUnion" (formula "32") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "63")))
                                             (rule "elementOfSingleton" (formula "32") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "64")))
                                             (rule "simplifySelectOfAnon" (formula "32"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "65")) (ifInst ""  (formula "6")))
                                             (rule "elementOfUnion" (formula "32") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "32") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "64")))
                                             (rule "elementOfSingleton" (formula "32") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "63")))
                                             (rule "applyEqReverse" (formula "33") (term "1,1,0") (ifseqformula "32"))
                                             (rule "hideAuxiliaryEq" (formula "32"))
                                             (rule "allLeft" (formula "21") (inst "t=e2"))
                                             (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "27") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101011111111111_38" (formula "27") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0,0,0,0") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "allLeft" (formula "35") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet111_6" (formula "35") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "35") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "25") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101011111111111_38" (formula "25") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "26") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet101011111111111_40" (formula "26") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101011111111111_41" (formula "26") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "23") (inst "t=e1"))
                                             (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "23") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "allLeft" (formula "24") (inst "t=e5"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0,0,0") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "40") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet111_4" (formula "40") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "40") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "29") (inst "t=e3"))
                                             (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
                                             (rule "pullOutSelect" (formula "29") (term "1,1,0") (inst "selectSK=arr_18"))
                                             (rule "simplifySelectOfAnon" (formula "29"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "74")) (ifInst ""  (formula "6")))
                                             (rule "elementOfUnion" (formula "29") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "elementOfSingleton" (formula "29") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "29") (term "1,0,0") (ifseqformula "14"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "allLeft" (formula "31") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1_2" (formula "31") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "31") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "64") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet1111111_22" (formula "64") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_23" (formula "64") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "64") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "65") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1111111_25" (formula "65") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_27" (formula "65") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "65") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "45") (inst "t=e1"))
                                             (rule "replaceKnownSelect_taclet111_8" (formula "45") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_9" (formula "45") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0,0,0,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "45") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "45") (term "0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "allLeft" (formula "46") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101011111111111_37" (formula "46") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0,0") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "46") (term "0,1,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "allLeft" (formula "68") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet1111111_18" (formula "68") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_19" (formula "68") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "68") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "69") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet1111111_20" (formula "69") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111_21" (formula "69") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "69") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "53") (inst "t=e5"))
                                             (rule "replaceKnownSelect_taclet101011111111111_36" (formula "53") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "54") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet11111_12" (formula "54") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "54") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "55") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet11111_10" (formula "55") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "55") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "56") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet11111_14" (formula "56") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "56") (term "1,1,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "56") (term "1,0,0,0,0"))
                                             (rule "allLeft" (formula "25") (inst "t=e4"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "26") (inst "t=e3"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "65") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet11111_12" (formula "65") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_13" (formula "65") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "65") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "65") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "65") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "66") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet11111_10" (formula "66") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_11" (formula "66") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "66") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "66") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "66") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "37") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet101011111111111_40" (formula "37") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101011111111111_41" (formula "37") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "27") (inst "t=e2"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "39") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet101011111111111_42" (formula "39") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "40") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet1_2" (formula "40") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "40") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "71") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet11111_14" (formula "71") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet11111_15" (formula "71") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "71") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "71") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "71") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "71") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "71") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "71") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "71") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "53") (inst "t=e4"))
                                             (rule "replaceKnownSelect_taclet101011111111111_39" (formula "53") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101011111111111_41" (formula "53") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "53") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "54") (inst "t=e3"))
                                             (rule "replaceKnownSelect_taclet111_6" (formula "54") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_7" (formula "54") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "54") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0,0"))
                                             (rule "allLeft" (formula "55") (inst "t=e2"))
                                             (rule "replaceKnownSelect_taclet111_4" (formula "55") (term "1,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet111_5" (formula "55") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "55") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,1,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,1,0,0,0,0"))
                                             (rule "cut_direct" (formula "88") (term "1,0"))
                                             (branch "CUT: e5 ≤ -1 TRUE"
                                                (builtin "One Step Simplification" (formula "89"))
                                                (rule "true_left" (formula "89"))
                                                (rule "replace_known_left" (formula "18") (term "1,0,0") (ifseqformula "88"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "87"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "replace_known_left" (formula "44") (term "0,0,0,0,0") (ifseqformula "86"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "true_left" (formula "44"))
                                                (rule "replace_known_left" (formula "28") (term "0,0,0,0,0") (ifseqformula "85"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "replace_known_left" (formula "58") (term "0,0,0,0,0") (ifseqformula "84"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "true_left" (formula "58"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "83"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "replace_known_left" (formula "65") (term "1,0") (ifseqformula "82"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "true_left" (formula "65"))
                                                (rule "replace_known_left" (formula "47") (term "0,0,0,0") (ifseqformula "81"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "replace_known_left" (formula "76") (term "0,0,0,0,0") (ifseqformula "80"))
                                                (builtin "One Step Simplification" (formula "76"))
                                                (rule "true_left" (formula "76"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "79"))
                                                (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "24") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "inEqSimp_subsumption0" (formula "80") (term "1,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "80") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "80"))
                                                (rule "true_left" (formula "80"))
                                                (rule "inEqSimp_subsumption0" (formula "34") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "34") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "inEqSimp_subsumption0" (formula "41") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "41") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_subsumption0" (formula "53") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "53"))
                                                (rule "true_left" (formula "53"))
                                                (rule "inEqSimp_subsumption0" (formula "70") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "70") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "70"))
                                                (rule "true_left" (formula "70"))
                                                (rule "inEqSimp_subsumption0" (formula "19") (term "1,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "19") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "inEqSimp_subsumption0" (formula "43") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "43"))
                                                (rule "true_left" (formula "43"))
                                                (rule "inEqSimp_subsumption0" (formula "58") (term "0,0,0,0,0") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "58") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "true_left" (formula "58"))
                                                (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                (rule "add_literals" (formula "15") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "40") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "40") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "inEqSimp_subsumption0" (formula "68") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "68") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "inEqSimp_subsumption0" (formula "58") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "58") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "true_left" (formula "58"))
                                                (rule "inEqSimp_subsumption0" (formula "33") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "33") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "true_left" (formula "33"))
                                                (rule "inEqSimp_subsumption0" (formula "20") (term "1,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "20") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "inEqSimp_subsumption0" (formula "23") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "inEqSimp_subsumption0" (formula "48") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "48") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "true_left" (formula "48"))
                                                (rule "inEqSimp_subsumption0" (formula "40") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "40") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "inEqSimp_subsumption0" (formula "65") (term "1,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "65") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "true_left" (formula "65"))
                                                (rule "inEqSimp_subsumption0" (formula "27") (term "0,0,0,0,0") (ifseqformula "15"))
                                                (rule "leq_literals" (formula "27") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                                (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "40") (term "0,0,0,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "40") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (term "0,0,0,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_subsumption0" (formula "24") (term "0,0,0,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "24") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "inEqSimp_subsumption0" (formula "35") (term "0,0,0,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "35") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "inEqSimp_subsumption0" (formula "49") (term "0,0,0,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "49") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "inEqSimp_subsumption0" (formula "21") (term "0,0,0,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "21") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "inEqSimp_subsumption0" (formula "59") (term "1,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "59") (term "0,1,0,0"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "true_left" (formula "59"))
                                                (rule "inEqSimp_subsumption0" (formula "42") (term "0,0,0,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "inEqSimp_subsumption0" (formula "54") (term "0,0,0,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "54") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "inEqSimp_subsumption0" (formula "28") (term "0,0,0,0,0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "28") (term "0,0,0,0,0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "add_literals" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "13"))
                                                (rule "qeq_literals" (formula "9") (term "0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                             (branch "CUT: e5 ≤ -1 FALSE"
                                                (builtin "One Step Simplification" (formula "88"))
                                                (rule "replace_known_right" (formula "46") (term "0,0,0,0,0") (ifseqformula "95"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "replace_known_right" (formula "71") (term "1,0") (ifseqformula "95"))
                                                (builtin "One Step Simplification" (formula "71"))
                                                (rule "replace_known_right" (formula "62") (term "0,0,0,0,0") (ifseqformula "95"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "replace_known_right" (formula "84") (term "0,0,0,0,0") (ifseqformula "95"))
                                                (builtin "One Step Simplification" (formula "84"))
                                                (rule "replace_known_right" (formula "30") (term "0,0,0,0,0") (ifseqformula "95"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "95"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "95"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "replace_known_right" (formula "37") (term "0,0,0,0") (ifseqformula "95"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "replace_known_right" (formula "52") (term "0,0,0,0") (ifseqformula "95"))
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "inEqSimp_leqRight" (formula "95"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "commute_or_2" (formula "48") (term "0,0,0"))
                                                (rule "cut_direct" (formula "90") (term "1,0"))
                                                (branch "CUT: right ≤ -1 + e4 TRUE"
                                                   (builtin "One Step Simplification" (formula "91"))
                                                   (rule "true_left" (formula "91"))
                                                   (rule "replace_known_left" (formula "39") (term "1,0,0,0,0") (ifseqformula "90"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "replace_known_left" (formula "26") (term "1,0,0,0,0") (ifseqformula "89"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "replace_known_left" (formula "52") (term "1,0,0,0,0") (ifseqformula "88"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "true_left" (formula "52"))
                                                   (rule "replace_known_left" (formula "70") (term "1,0,0,0,0") (ifseqformula "87"))
                                                   (builtin "One Step Simplification" (formula "70"))
                                                   (rule "true_left" (formula "70"))
                                                   (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "86"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "85"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "92") (ifseqformula "2"))
                                                   (rule "polySimp_mulComm0" (formula "92") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "92") (term "0,0"))
                                                   (rule "add_literals" (formula "92") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "92") (term "1,0,0"))
                                                   (rule "add_literals" (formula "92") (term "0,0"))
                                                   (rule "leq_literals" (formula "92") (term "0"))
                                                   (builtin "One Step Simplification" (formula "92"))
                                                   (rule "false_right" (formula "92"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "86"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "17"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0"))
                                                   (rule "leq_literals" (formula "18"))
                                                   (rule "closeFalse" (formula "18"))
                                                )
                                                (branch "CUT: right ≤ -1 + e4 FALSE"
                                                   (builtin "One Step Simplification" (formula "90"))
                                                   (rule "replace_known_right" (formula "73") (term "1,0,0,0,0") (ifseqformula "96"))
                                                   (builtin "One Step Simplification" (formula "73"))
                                                   (rule "replace_known_right" (formula "26") (term "1,0,0,0,0") (ifseqformula "96"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "replace_known_right" (formula "54") (term "1,0,0,0,0") (ifseqformula "96"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_right" (formula "39") (term "1,0,0,0,0") (ifseqformula "96"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "96"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_leqRight" (formula "96"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "33") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "49") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "49") (term "0,1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "inEqSimp_contradInEq1" (formula "84") (term "1,0,0,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "84") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "84") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "84") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "84") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "84") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "84"))
                                                   (rule "inEqSimp_contradInEq1" (formula "65") (term "1,0,0,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "65") (term "1,1,0,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "65") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "65") (term "0,0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "65") (term "0,1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "65"))
                                                   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "13"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "98") (ifseqformula "4"))
                                                   (rule "polySimp_mulComm0" (formula "98") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "98") (term "0,0"))
                                                   (rule "add_literals" (formula "98") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "98") (term "1,0,0"))
                                                   (rule "add_literals" (formula "98") (term "0,0"))
                                                   (rule "qeq_literals" (formula "98") (term "0"))
                                                   (builtin "One Step Simplification" (formula "98"))
                                                   (rule "false_right" (formula "98"))
                                                   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "36") (term "0,0") (ifseqformula "18"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "applyEqReverse" (formula "43") (term "1,1,0") (ifseqformula "36"))
                                                   (rule "applyEqReverse" (formula "37") (term "1,1,0") (ifseqformula "36"))
                                                   (rule "hideAuxiliaryEq" (formula "36"))
                                                   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "17"))
                                                   (rule "andLeft" (formula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0"))
                                                   (rule "leq_literals" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ ( f_0 = arr(e1) ∨ f_0 = arr(e2) ∨ f_0 = arr(e3) ∨ f_0 = arr(e4)) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ ( f_0 = arr(e1) ∨ f_0 = arr(e2) ∨ f_0 = arr(e3) ∨ f_0 = arr(e4) ∨ f_0 = arr(e5)) TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "50"))
                                             (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "orRight" (formula "48"))
                                             (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "48")) (ifInst ""  (formula "49")))
                                             (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "47")))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "47")) (ifInst ""  (formula "46")))
                                             (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEq" (formula "45") (term "0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "false_right" (formula "45"))
                                             (rule "applyEq" (formula "50") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectArrayType" (formula "50") (term "0") (ifseqformula "44") (ifseqformula "49"))
                                             (rule "eqSymm" (formula "50"))
                                             (rule "applyEq" (formula "50") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectArrayType" (formula "50") (term "0") (ifseqformula "4") (ifseqformula "49"))
                                             (rule "eqSymm" (formula "50"))
                                             (rule "inEqSimp_contradEq7" (formula "45") (ifseqformula "15"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                             (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "45") (term "0,0"))
                                             (rule "leq_literals" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "false_right" (formula "45"))
                                             (rule "commute_or" (formula "1") (term "0,0"))
                                             (rule "commute_or_2" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradEq3" (formula "47") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "qeq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                             (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "15"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "14"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0"))
                                             (rule "add_literals" (formula "13") (term "0"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "closeFalse" (formula "13"))
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ ( f_0 = arr(e1) ∨ f_0 = arr(e2) ∨ f_0 = arr(e3) ∨ f_0 = arr(e4) ∨ f_0 = arr(e5)) FALSE"
                                             (rule "close" (formula "50") (ifseqformula "3"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: o_0 = a FALSE"
                                    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                    (rule "false_right" (formula "47"))
                                    (rule "replace_known_right" (formula "3") (term "1,1,0,0,1,0,0,0,0,0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "2") (term "1,1,0,0,0,0,0,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "45")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "1,1,0,0,0,0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")) (ifInst ""  (formula "44")) (ifInst ""  (formula "48")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   )
)
)

}
