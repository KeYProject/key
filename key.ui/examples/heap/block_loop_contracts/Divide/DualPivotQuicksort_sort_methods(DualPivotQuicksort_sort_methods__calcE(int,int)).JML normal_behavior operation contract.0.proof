\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Apr 05 11:26:30 CEST 2018
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_EXTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Thu Apr 05 11:26:30 CEST 2018
name=DualPivotQuicksort_sort_methods[DualPivotQuicksort_sort_methods\\:\\:calcE(int,int)].JML normal_behavior operation contract.0
contract=DualPivotQuicksort_sort_methods[DualPivotQuicksort_sort_methods\\:\\:calcE(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "Flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "5527")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "left,right,exc,heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "0,1,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "5") (term "0"))
(rule "polySimp_addComm0" (formula "5") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "3"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "elementOfUnion" (formula "6") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "6") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "6") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "6") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "6") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "6") (term "1,0,0,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "6") (term "0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "6") (term "1,0,0,0,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_calcE,savedHeapBefore_calcE"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "length_1"))
(rule "compound_addition_1" (formula "6") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
(rule "assignmentSubtractionInt" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "translateJavaSubInt" (formula "6") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "6") (term "0,1,0"))
(rule "polySimp_addComm0" (formula "6") (term "0,1,0"))
(rule "assignmentAdditionInt" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
(rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
(rule "polySimp_addComm0" (formula "6") (term "0,0,1,0"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "seventh"))
(rule "compound_addition_1" (formula "6") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_1"))
(rule "compound_addition_2" (formula "6") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_2"))
(rule "remove_parentheses_right" (formula "6") (term "1"))
(rule "assignmentDivisionInt" (formula "6"))
(branch "Case 1"
   (builtin "One Step Simplification" (formula "6"))
   (rule "translateJavaDivInt" (formula "6") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
   (rule "remove_parentheses_right" (formula "6") (term "1"))
   (rule "assignmentDivisionInt" (formula "6"))
   (branch "Case 1"
      (builtin "One Step Simplification" (formula "6"))
      (rule "translateJavaDivInt" (formula "6") (term "0,1,0"))
      (rule "assignmentAdditionInt" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "6") (term "0,1,0"))
      (rule "assignmentAdditionInt" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0"))
      (rule "activeUseStaticFieldWriteAccess" (formula "6") (term "1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "6") (term "1"))
      (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_4"))
      (rule "compound_division_1" (formula "6") (term "1") (inst "#v=x_5"))
      (rule "variableDeclarationAssign" (formula "6") (term "1"))
      (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_5"))
      (rule "remove_parentheses_right" (formula "6") (term "1"))
      (rule "assignmentAdditionInt" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
      (rule "assignmentDivisionInt" (formula "6"))
      (branch "Case 1"
         (builtin "One Step Simplification" (formula "6"))
         (rule "translateJavaDivInt" (formula "6") (term "0,1,0"))
         (rule "assignment_write_static_attribute" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "activeUseStaticFieldWriteAccess" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_6"))
         (rule "compound_subtraction_1" (formula "6") (term "1") (inst "#v=x_7"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_7"))
         (rule "activeUseStaticFieldReadAccess" (formula "6") (term "1"))
         (rule "assignment_read_static_attribute" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "pullOutSelect" (formula "6") (term "0,1,0") (inst "selectSK=DualPivotQuicksort_sort_methods_e3_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "6") (term "0,1,0"))
         (rule "assignmentSubtractionInt" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "translateJavaSubInt" (formula "6") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "6") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "6") (term "0,1,0,1,0"))
         (rule "mul_literals" (formula "6") (term "0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0,0,1,0"))
         (rule "assignment_write_static_attribute" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "activeUseStaticFieldWriteAccess" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_8"))
         (rule "compound_subtraction_1" (formula "6") (term "1") (inst "#v=x_9"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_9"))
         (rule "activeUseStaticFieldReadAccess" (formula "6") (term "1"))
         (rule "assignment_read_static_attribute" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "pullOutSelect" (formula "6") (term "0,1,0") (inst "selectSK=DualPivotQuicksort_sort_methods_e2_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_3" (formula "6") (term "0,1,0"))
         (rule "assignmentSubtractionInt" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "translateJavaSubInt" (formula "6") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "6") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "6") (term "0,1,0,1,0"))
         (rule "mul_literals" (formula "6") (term "0,0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0"))
         (rule "polySimp_pullOutFactor3b" (formula "6") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,1,0"))
         (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
         (rule "assignment_write_static_attribute" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "activeUseStaticFieldWriteAccess" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_10"))
         (rule "compound_addition_1" (formula "6") (term "1") (inst "#v=x_11"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_11"))
         (rule "activeUseStaticFieldReadAccess" (formula "6") (term "1"))
         (rule "assignment_read_static_attribute" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0"))
         (rule "replaceKnownSelect_taclet000_0" (formula "6") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "6") (term "0,1,0"))
         (rule "assignmentAdditionInt" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
         (rule "polySimp_addComm0" (formula "6") (term "0,0,0,1,0"))
         (rule "assignment_write_static_attribute" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "activeUseStaticFieldWriteAccess" (formula "6") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_12"))
         (rule "compound_addition_1" (formula "6") (term "1") (inst "#v=x_13"))
         (rule "variableDeclarationAssign" (formula "6") (term "1"))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_13"))
         (rule "activeUseStaticFieldReadAccess" (formula "6") (term "1"))
         (rule "assignment_read_static_attribute" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "pullOutSelect" (formula "6") (term "0,1,0") (inst "selectSK=DualPivotQuicksort_sort_methods_e4_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "6") (term "0,1,0"))
         (rule "assignmentAdditionInt" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0"))
         (rule "polySimp_pullOutFactor3b" (formula "6") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
         (rule "polySimp_pullOutFactor3b" (formula "6") (term "0,0,1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
         (rule "assignment_write_static_attribute" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "methodCallEmpty" (formula "6") (term "1"))
         (rule "tryEmpty" (formula "6") (term "1"))
         (rule "emptyModality" (formula "6") (term "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,1,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,1,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,0,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,1,0,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "0,1,0,0,0,0"))
         (rule "selectOfStore" (formula "6") (term "1,0,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "1,0,0,0,0,0,0"))
         (rule "selectOfStore" (formula "6") (term "1,1,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "1,1,0,0"))
         (rule "selectOfStore" (formula "6") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "selectOfStore" (formula "6") (term "1,1,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "selectOfStore" (formula "6") (term "0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "selectOfStore" (formula "6") (term "1,1,0,0,1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "1,1,1,0,0,1"))
         (rule "selectOfStore" (formula "6") (term "2,1,1,0,0,1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "1,2,1,1,0,0,1"))
         (rule "selectOfStore" (formula "6") (term "2,2,1,1,0,0,1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "1,2,2,1,1,0,0,1"))
         (rule "selectOfStore" (formula "6") (term "2,2,2,1,1,0,0,1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "1,2,2,2,1,1,0,0,1"))
         (rule "selectOfStore" (formula "6") (term "2,2,2,2,1,1,0,0,1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "1,2,2,2,2,1,1,0,0,1"))
         (rule "selectOfStore" (formula "6") (term "0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "selectOfStore" (formula "6") (term "0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,0,1,0,0,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,1,0,0,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,3,0,0,0,1,0,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,3,0,0,0,1,0,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,0,3,0,0,1,0,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,3,0,0,1,0,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,1,1,0,0,0,0,0"))
         (rule "castDel" (formula "6") (term "1,1,0,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,3,0,0,1,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,3,0,0,1,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,3,0,0,1,1,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,3,0,0,1,1,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,0,3,0,1,1,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,3,0,1,1,0,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,3,0,0,0,1,1,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,3,0,0,0,1,1,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,0,3,0,0,1,1,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,3,0,0,1,1,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,1,0,3,0,1,1,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,1,3,0,1,1,0,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,1,0,0,0,1,0,0"))
         (rule "castDel" (formula "6") (term "0,1,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,0,1,1,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,1,1,0,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,3,0,0,0,0,0,1,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,3,0,0,0,0,0,1,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,0,3,0,0,0,0,1,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,3,0,0,0,0,1,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,1,0,3,0,0,0,1,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,1,3,0,0,0,1,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,0,3,0,0,1,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,3,0,0,1,0"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,0,1,1,1,0,0,1"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,1,1,1,0,0,1"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,1,0,1,2,1,1,0,0,1"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,1,1,2,1,1,0,0,1"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,0,1,2,2,1,1,0,0,1"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,0,0,1,1,2,2,1,1,0,0,1"))
         (rule "times_minus_one_1" (formula "6") (term "1,0,1,2,2,2,1,1,0,0,1"))
         (rule "times_minus_one_1" (formula "6") (term "1,1,2,2,2,1,1,0,0,1"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "6") (term "1,1,0,0,0,0"))
         (rule "selectOfStore" (formula "6") (term "1,1,0,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "1,1,0,0,0"))
         (rule "selectOfStore" (formula "6") (term "0,1,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "0,1,0,0,0,0,0"))
         (rule "selectOfStore" (formula "6") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "0,1,0"))
         (rule "selectOfStore" (formula "6") (term "0,1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "castDel" (formula "6") (term "0,1,0,0,0,0"))
         (rule "jdiv_axiom" (formula "6") (term "1,0,0,0,1,0,0,0,0") (userinteraction))
         (rule "ifthenelse_split" (formula "1") (term "1") (userinteraction))
         (branch "left + right ≥ 0 TRUE"
            (rule "replaceKnownSelect_taclet000_0" (formula "8") (term "1,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "8") (term "1,1,0,0,0,0"))
            (rule "castDel" (formula "8") (term "0,1,0,0,0"))
            (rule "eqSymm" (formula "8") (term "1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,2,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,0,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,0,0,1,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,1,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,1,0,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,0,1,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,1,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,0,1,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,1,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,1,1,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,1,1,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,1,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,1,2,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,1,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,0,1,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,1,2,2,2,0,1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,0,0,0,1,0,0,0"))
            (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,0,0,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_homoInEq1" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,1,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,0,0,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "1,0,0,0,1,0,0"))
            (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "applyEq" (formula "8") (term "1,2,2,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "1,0,0,1,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "1,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "1,0,0,1,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "1,0,0,1,2,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "0,1,0,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "1,0,0,1,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "polySimp_elimOne" (formula "7") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,1,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "qeq_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_0"))
            (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
            (rule "equal_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "qeq_literals" (formula "2") (term "0,1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
            (rule "polySimp_addComm1" (formula "4") (term "1"))
            (rule "polySimp_addComm1" (formula "4") (term "0,1"))
            (rule "add_literals" (formula "4") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
            (rule "applyEq" (formula "10") (term "1,2,2,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
            (rule "applyEq" (formula "10") (term "1,0,1,0,0,0") (ifseqformula "2"))
            (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
            (rule "applyEq" (formula "10") (term "0,1,0,1,1,0") (ifseqformula "2"))
            (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0"))
            (rule "applyEq" (formula "10") (term "1,0,0,1,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "10") (term "1,0,0,1,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "10") (term "1,0,0,1,2,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "10") (term "1,0,0,1,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "0,1"))
            (rule "mul_literals" (formula "4") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "9") (term "0,0"))
            (rule "mul_literals" (formula "9") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
            (rule "add_literals" (formula "9") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
            (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=add(Z(neglit(3(2(#)))), quotient_0)") (inst "elimGcdLeftDiv=left") (inst "elimGcd=Z(2(#))"))
            (rule "neg_literal" (formula "9") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
            (rule "leq_literals" (formula "9") (term "0,0"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
            (rule "add_literals" (formula "9") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
            (rule "add_literals" (formula "9") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0"))
            (rule "qeq_literals" (formula "9") (term "0"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
            (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "leq_literals" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
            (rule "times_zero_1" (formula "9") (term "0,0"))
            (rule "add_zero_left" (formula "9") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
            (rule "mul_literals" (formula "9") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "9"))
            (rule "leq_literals" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "commute_and" (formula "12") (term "0,0"))
            (rule "jdiv_axiom" (formula "12") (term "0,1,0,1,0,1,0,0,1"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0,0,2,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0,0,2,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,2,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "12"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1"))
            (rule "applyEq" (formula "13") (term "0,1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "0,1,0,1,0,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "1,0,1,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "0,1,0,1,2,2,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "0,1,0,1,2,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "jdiv_axiom" (formula "13") (term "0,1,1,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0,0,2,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0,0,2,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,2,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "13"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
            (rule "qeq_literals" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1"))
            (rule "applyEq" (formula "14") (term "0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "0,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "0,1,1,2,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "0,1,1,2,2,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "1,1,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "0,1,1,0,1,0,0,1") (ifseqformula "1"))
            (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_1"))
            (rule "equal_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "qeq_literals" (formula "2") (term "0,1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1,1,1"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
            (rule "polySimp_addComm1" (formula "4") (term "1"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
            (rule "add_literals" (formula "4") (term "0,0,0,1"))
            (rule "polySimp_addComm1" (formula "4") (term "0,1"))
            (rule "add_literals" (formula "4") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
            (rule "applyEq" (formula "17") (term "0,1,1,1,0") (ifseqformula "2"))
            (rule "polySimp_addComm1" (formula "17") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,1,1,0"))
            (rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "2"))
            (rule "polySimp_addComm1" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,1,1,0,0"))
            (rule "applyEq" (formula "17") (term "0,1,0,1,0,1,0,0,1") (ifseqformula "2"))
            (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0,0,1"))
            (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
            (rule "applyEq" (formula "17") (term "0,1,0,1,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "polySimp_addComm1" (formula "17") (term "0,1,2,2,0,1,0,0,1"))
            (rule "applyEq" (formula "17") (term "0,1,0,1,2,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "polySimp_addComm1" (formula "17") (term "0,1,2,2,2,0,1,0,0,1"))
            (rule "applyEq" (formula "17") (term "1,0,1,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "polySimp_addComm1" (formula "17") (term "0,1,2,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "polySimp_rightDist" (formula "3") (term "0,1"))
            (rule "mul_literals" (formula "3") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "polySimp_rightDist" (formula "4") (term "0,1"))
            (rule "mul_literals" (formula "4") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "16") (term "0"))
            (rule "add_literals" (formula "16") (term "1,1,0"))
            (rule "times_zero_1" (formula "16") (term "1,0"))
            (rule "add_zero_right" (formula "16") (term "0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "add_literals" (formula "16") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
            (rule "mul_literals" (formula "16") (term "1"))
            (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(4(6(#)))"))
            (rule "leq_literals" (formula "16") (term "0,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
            (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "leq_literals" (formula "16") (term "0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "8") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0"))
            (rule "polySimp_pullOutFactor3b" (formula "8") (term "0"))
            (rule "polySimp_addComm0" (formula "8") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1"))
            (rule "mul_literals" (formula "8") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
            (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(add(Z(neglit(1(3(#)))),
        mul(quotient_1, Z(neglit(2(3(#)))))),
    quotient_0)") (inst "elimGcdLeftDiv=left") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
            (rule "leq_literals" (formula "8") (term "0,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0"))
            (rule "leq_literals" (formula "8") (term "0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
            (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addComm0" (formula "6") (term "0,0"))
            (rule "polySimp_pullOutFactor3b" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1"))
            (rule "polySimp_rightDist" (formula "6") (term "1"))
            (rule "mul_literals" (formula "6") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
            (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(neglit(1(3(#)))),
    mul(quotient_1, Z(neglit(2(3(#))))))") (inst "elimGcdLeftDiv=left") (inst "elimGcd=Z(2(#))"))
            (rule "leq_literals" (formula "6") (term "0,0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "leq_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(1(#)), mul(quotient_1, Z(neglit(2(3(#)))))),
    quotient_0)") (inst "elimGcdLeftDiv=left") (inst "elimGcd=Z(2(#))"))
            (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
            (rule "leq_literals" (formula "3") (term "0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "qeq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "18"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
            (rule "add_literals" (formula "10") (term "1,1,0"))
            (rule "times_zero_1" (formula "10") (term "1,0"))
            (rule "add_zero_right" (formula "10") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "add_literals" (formula "10") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10"))
            (rule "mul_literals" (formula "10") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "20"))
            (rule "greater_literals" (formula "10") (term "0,0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "times_zero_1" (formula "10") (term "1,0"))
            (rule "leq_literals" (formula "10") (term "0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
            (rule "leq_literals" (formula "7") (term "0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "18"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1"))
            (rule "polySimp_rightDist" (formula "7") (term "1"))
            (rule "mul_literals" (formula "7") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "3"))
            (rule "times_zero_1" (formula "18") (term "0,0"))
            (rule "add_zero_left" (formula "18") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "1"))
            (rule "polySimp_rightDist" (formula "18") (term "1"))
            (rule "mul_literals" (formula "18") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
            (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_2"))
            (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
            (rule "equal_literals" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
            (rule "polySimp_addComm1" (formula "3") (term "1"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
            (rule "add_literals" (formula "3") (term "0,0,0,1"))
            (rule "polySimp_addComm1" (formula "3") (term "0,1"))
            (rule "add_literals" (formula "3") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "applyEq" (formula "26") (term "0,1,1,2,2,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "polySimp_addComm1" (formula "26") (term "1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "26") (term "0,1,2,2,2,0,1,0,0,1"))
            (rule "applyEq" (formula "26") (term "0,0,1,0,0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0,0"))
            (rule "applyEq" (formula "26") (term "0,0,0,0") (ifseqformula "1"))
            (rule "inEqSimp_commuteGeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,0"))
            (rule "applyEq" (formula "26") (term "0,1,1,2,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "polySimp_addComm1" (formula "26") (term "1,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "26") (term "0,1,2,2,0,1,0,0,1"))
            (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
            (rule "applyEq" (formula "26") (term "0,1,1,0,1,0,0,1") (ifseqformula "1"))
            (rule "polySimp_addComm1" (formula "26") (term "1,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0,0,1"))
            (rule "applyEq" (formula "26") (term "1,1,2,0,1,0,0,1") (ifseqformula "1"))
            (rule "polySimp_addComm1" (formula "26") (term "1,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "26") (term "0,1,2,0,1,0,0,1"))
            (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "polySimp_rightDist" (formula "2") (term "0,1"))
            (rule "mul_literals" (formula "2") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "polySimp_rightDist" (formula "3") (term "0,1"))
            (rule "mul_literals" (formula "3") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "0,0,1,1,0"))
            (rule "mul_literals" (formula "26") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "3"))
            (rule "polySimp_rightDist" (formula "25") (term "0,0"))
            (rule "mul_literals" (formula "25") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "25") (term "0"))
            (rule "polySimp_addComm1" (formula "25") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "25") (term "0"))
            (rule "add_literals" (formula "25") (term "1,1,0"))
            (rule "times_zero_1" (formula "25") (term "1,0"))
            (rule "add_zero_right" (formula "25") (term "0"))
            (rule "polySimp_addAssoc" (formula "25") (term "0"))
            (rule "add_literals" (formula "25") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "25"))
            (rule "mul_literals" (formula "25") (term "1"))
            (rule "elimGcdGeq_antec" (formula "25") (inst "elimGcdRightDiv=Z(5(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(#))"))
            (rule "leq_literals" (formula "25") (term "0,0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
            (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
            (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
            (rule "add_literals" (formula "25") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "25") (term "1,0,0"))
            (rule "add_zero_right" (formula "25") (term "0,0"))
            (rule "leq_literals" (formula "25") (term "0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
            (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,0"))
            (rule "polySimp_pullOutFactor3b" (formula "12") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1"))
            (rule "polySimp_rightDist" (formula "12") (term "1"))
            (rule "mul_literals" (formula "12") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
            (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=add(Z(neglit(3(#))), mul(quotient_2, Z(neglit(4(#)))))") (inst "elimGcdLeftDiv=left") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
            (rule "leq_literals" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0"))
            (rule "leq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "1,1,0"))
            (rule "times_zero_1" (formula "7") (term "1,0"))
            (rule "add_zero_right" (formula "7") (term "0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_2)") (inst "elimGcdLeftDiv=mul(quotient_1, Z(8(#)))") (inst "elimGcd=Z(8(#))"))
            (rule "leq_literals" (formula "7") (term "0,0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
            (rule "add_zero_left" (formula "7") (term "1,1"))
            (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
            (rule "add_zero_left" (formula "7") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "qeq_literals" (formula "7") (term "0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=add(add(Z(1(#)), mul(quotient_2, Z(neglit(4(#))))),
    quotient_0)") (inst "elimGcdLeftDiv=left") (inst "elimGcd=Z(2(#))"))
            (rule "leq_literals" (formula "2") (term "0,0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
            (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(neglit(7(#))), quotient_2)") (inst "elimGcdLeftDiv=mul(quotient_1, Z(8(#)))") (inst "elimGcd=Z(8(#))"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
            (rule "leq_literals" (formula "3") (term "0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0"))
            (rule "leq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "5"))
            (rule "polySimp_rightDist" (formula "19") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "19") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_pullOutFactor3b" (formula "19") (term "0"))
            (rule "polySimp_addComm0" (formula "19") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1"))
            (rule "polySimp_rightDist" (formula "19") (term "1"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
            (rule "polySimp_rightDist" (formula "19") (term "0,1"))
            (rule "mul_literals" (formula "19") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
            (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=add(add(Z(neglit(3(#))),
        mul(quotient_2, Z(neglit(4(#))))),
    quotient_0)") (inst "elimGcdLeftDiv=left") (inst "elimGcd=Z(2(#))"))
            (rule "leq_literals" (formula "19") (term "0,0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "add_literals" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0"))
            (rule "leq_literals" (formula "19") (term "0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_exactShadow2" (formula "29") (ifseqformula "9"))
            (rule "greater_literals" (formula "29") (term "0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "times_zero_1" (formula "29") (term "1,0,0"))
            (rule "times_zero_1" (formula "29") (term "0,0"))
            (rule "add_zero_left" (formula "29") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "31"))
            (rule "leq_literals" (formula "29") (term "0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "18") (term "0"))
            (rule "add_literals" (formula "18") (term "1,1,0"))
            (rule "times_zero_1" (formula "18") (term "1,0"))
            (rule "add_zero_right" (formula "18") (term "0"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "1"))
            (rule "polySimp_rightDist" (formula "18") (term "1"))
            (rule "mul_literals" (formula "18") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
            (rule "inEqSimp_subsumption5" (formula "18") (ifseqformula "3"))
            (rule "greater_literals" (formula "18") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "greater_literals" (formula "18") (term "0,0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0"))
            (rule "mul_literals" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0"))
            (rule "qeq_literals" (formula "18") (term "0"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "14") (term "0,0"))
            (rule "mul_literals" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
            (rule "polySimp_rightDist" (formula "14") (term "0,1"))
            (rule "mul_literals" (formula "14") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
            (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "8"))
            (rule "polySimp_rightDist" (formula "20") (term "0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "0,0,0"))
            (rule "mul_literals" (formula "20") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "20") (term "0"))
            (rule "add_literals" (formula "20") (term "1,1,0"))
            (rule "times_zero_1" (formula "20") (term "1,0"))
            (rule "add_zero_right" (formula "20") (term "0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "inEqSimp_subsumption2" (formula "20") (ifseqformula "9"))
            (rule "greater_literals" (formula "20") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "greater_literals" (formula "20") (term "0,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0"))
            (rule "qeq_literals" (formula "20") (term "0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
            (rule "mul_literals" (formula "16") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "27"))
            (rule "leq_literals" (formula "16") (term "0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "8"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0"))
            (rule "mul_literals" (formula "16") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1"))
            (rule "polySimp_rightDist" (formula "16") (term "1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
            (rule "polySimp_rightDist" (formula "16") (term "0,1"))
            (rule "mul_literals" (formula "16") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1"))
            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "30"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0"))
            (rule "polySimp_addComm1" (formula "17") (term "0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1"))
            (rule "polySimp_rightDist" (formula "17") (term "1"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
            (rule "mul_literals" (formula "17") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "31"))
            (rule "polySimp_rightDist" (formula "22") (term "0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "22") (term "0"))
            (rule "add_literals" (formula "22") (term "1,1,0"))
            (rule "times_zero_1" (formula "22") (term "1,0"))
            (rule "add_zero_right" (formula "22") (term "0"))
            (rule "polySimp_addComm1" (formula "22") (term "0"))
            (rule "add_literals" (formula "22") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22"))
            (rule "mul_literals" (formula "22") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "34"))
            (rule "greater_literals" (formula "22") (term "0,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "mul_literals" (formula "22") (term "1,0"))
            (rule "leq_literals" (formula "22") (term "0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "2"))
            (rule "times_zero_1" (formula "30") (term "0,0"))
            (rule "add_zero_left" (formula "30") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
            (rule "polySimp_mulComm0" (formula "30") (term "1"))
            (rule "polySimp_rightDist" (formula "30") (term "1"))
            (rule "mul_literals" (formula "30") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
            (rule "commute_and" (formula "36") (term "0,0"))
            (rule "cut_direct" (formula "36") (term "1,0,0"))
            (branch "CUT: quotient_1 ≥ quotient_2 * -1 TRUE"
               (builtin "One Step Simplification" (formula "37"))
               (rule "inEqSimp_exactShadow2" (formula "1") (ifseqformula "10"))
               (rule "greater_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor2" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,0"))
               (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "36"))
               (rule "mul_literals" (formula "1") (term "1,1,0"))
               (rule "greater_literals" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "leq_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "cut_direct" (formula "37") (term "1,0"))
               (branch "CUT: right ≥ 3 + quotient_2 * 2 + quotient_1 * 2 + quotient_0 TRUE"
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "28"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "27") (term "0"))
                  (rule "add_literals" (formula "27") (term "1,1,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0"))
                  (rule "add_zero_right" (formula "27") (term "0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "27") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_2)") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "neg_literal" (formula "27") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "27") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                  (rule "add_zero_left" (formula "27") (term "1,1"))
                  (rule "leq_literals" (formula "27") (term "0,0"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0"))
                  (rule "qeq_literals" (formula "27") (term "0"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "26") (term "0"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0"))
                  (rule "add_zero_right" (formula "26") (term "0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                  (rule "add_literals" (formula "26") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                  (rule "mul_literals" (formula "26") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                  (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=add(Z(neglit(4(1(#)))), quotient_2)") (inst "elimGcdLeftDiv=mul(quotient_1, Z(5(1(#))))") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "26") (term "0,0"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                  (rule "add_literals" (formula "26") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0"))
                  (rule "leq_literals" (formula "26") (term "0"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "mul_literals" (formula "23") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,1"))
                  (rule "mul_literals" (formula "23") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "39") (term "0,0"))
                  (rule "add_zero_left" (formula "39") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1"))
                  (rule "polySimp_rightDist" (formula "39") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                  (rule "mul_literals" (formula "39") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "3"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                  (rule "mul_literals" (formula "20") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(2(#)), mul(quotient_2, Z(3(#))))") (inst "elimGcdLeftDiv=mul(quotient_1, Z(7(1(#))))") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "2") (ifseqformula "32"))
                  (rule "greater_literals" (formula "2") (term "0,0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "inEqSimp_subsumption5" (formula "3") (ifseqformula "30"))
                  (rule "greater_literals" (formula "3") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "greater_literals" (formula "3") (term "0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "inEqSimp_subsumption4" (formula "2") (ifseqformula "32"))
                  (rule "greater_literals" (formula "2") (term "0,0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_zero_right" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "15"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0"))
                  (rule "add_zero_right" (formula "4") (term "0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "inEqSimp_subsumption5" (formula "4") (ifseqformula "31"))
                  (rule "greater_literals" (formula "4") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "greater_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "44"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0"))
                  (rule "add_zero_right" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "45"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,1,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0"))
                  (rule "add_zero_right" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "34"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,0"))
                  (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "49"))
                  (rule "greater_literals" (formula "9") (term "0,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1,0"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "34"))
                  (rule "greater_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "49"))
                  (rule "greater_literals" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1,0"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "34"))
                  (rule "times_zero_1" (formula "47") (term "0,0"))
                  (rule "add_zero_left" (formula "47") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "49"))
                  (rule "leq_literals" (formula "47") (term "0"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "true_left" (formula "47"))
                  (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(0(1(#)))), mul(quotient_2, Z(3(#))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=add(Z(neglit(8(1(#)))), quotient_2)") (inst "elimGcdLeftDiv=mul(quotient_1, Z(1(3(#))))") (inst "elimGcd=Z(2(#))"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "5") (term "0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(neglit(0(3(#)))), mul(quotient_2, Z(3(#))))") (inst "elimGcdLeftDiv=mul(quotient_1, Z(1(3(#))))") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "inEqSimp_exactShadow0" (formula "12") (ifseqformula "1"))
                  (rule "greater_literals" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "greater_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "49"))
                  (rule "mul_literals" (formula "12") (term "1,1,0"))
                  (rule "greater_literals" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow2" (formula "47") (ifseqformula "1"))
                  (rule "greater_literals" (formula "47") (term "0"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "times_zero_1" (formula "47") (term "1,0,0"))
                  (rule "times_zero_1" (formula "47") (term "0,0"))
                  (rule "add_zero_left" (formula "47") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                  (rule "mul_literals" (formula "47") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "47") (ifseqformula "49"))
                  (rule "greater_literals" (formula "47") (term "0,0"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "mul_literals" (formula "47") (term "1,0"))
                  (rule "leq_literals" (formula "47") (term "0"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "true_left" (formula "47"))
                  (rule "inEqSimp_exactShadow2" (formula "9") (ifseqformula "1"))
                  (rule "greater_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "49"))
                  (rule "greater_literals" (formula "9") (term "0,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1,0"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow0" (formula "32") (ifseqformula "1"))
                  (rule "greater_literals" (formula "32") (term "0,0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "greater_literals" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                  (rule "mul_literals" (formula "32") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "32") (ifseqformula "49"))
                  (rule "greater_literals" (formula "32") (term "0,0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "mul_literals" (formula "32") (term "1,0"))
                  (rule "leq_literals" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "inEqSimp_exactShadow0" (formula "32") (ifseqformula "18"))
                  (rule "greater_literals" (formula "32") (term "0,0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "greater_literals" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                  (rule "mul_literals" (formula "32") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "32") (ifseqformula "49"))
                  (rule "mul_literals" (formula "32") (term "1,1,0"))
                  (rule "greater_literals" (formula "32") (term "0,0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "leq_literals" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "inEqSimp_exactShadow1" (formula "32") (ifseqformula "34"))
                  (rule "greater_literals" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                  (rule "mul_literals" (formula "32") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "32") (ifseqformula "49"))
                  (rule "greater_literals" (formula "32") (term "0,0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "mul_literals" (formula "32") (term "1,0"))
                  (rule "leq_literals" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
                  (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "49"))
                  (rule "greater_literals" (formula "9") (term "0,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1,0"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "2"))
                  (rule "greater_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "49"))
                  (rule "greater_literals" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1,0"))
                  (rule "leq_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "47") (term "0,0"))
                  (rule "add_zero_left" (formula "47") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                  (rule "mul_literals" (formula "47") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "47") (ifseqformula "49"))
                  (rule "greater_literals" (formula "47") (term "0,0"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "mul_literals" (formula "47") (term "1,0"))
                  (rule "leq_literals" (formula "47") (term "0"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "true_left" (formula "47"))
                  (rule "inEqSimp_exactShadow1" (formula "32") (ifseqformula "2"))
                  (rule "greater_literals" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                  (rule "mul_literals" (formula "32") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "32") (ifseqformula "49"))
                  (rule "greater_literals" (formula "32") (term "0,0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "mul_literals" (formula "32") (term "1,0"))
                  (rule "leq_literals" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "2"))
                  (rule "greater_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "49"))
                  (rule "mul_literals" (formula "5") (term "1,1,0"))
                  (rule "greater_literals" (formula "5") (term "0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "18"))
                  (rule "greater_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "49"))
                  (rule "mul_literals" (formula "4") (term "1,1,0"))
                  (rule "greater_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "2"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "49"))
                  (rule "mul_literals" (formula "4") (term "1,1,0"))
                  (rule "greater_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_exactShadow0" (formula "4") (ifseqformula "1"))
                  (rule "greater_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "49"))
                  (rule "greater_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1,0"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_exactShadow0" (formula "5") (ifseqformula "18"))
                  (rule "greater_literals" (formula "5") (term "0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "greater_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "49"))
                  (rule "greater_literals" (formula "5") (term "0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1,0"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow1" (formula "5") (ifseqformula "34"))
                  (rule "greater_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "49"))
                  (rule "greater_literals" (formula "5") (term "0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1,0"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow0" (formula "5") (ifseqformula "1"))
                  (rule "greater_literals" (formula "5") (term "0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "greater_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "49"))
                  (rule "greater_literals" (formula "5") (term "0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1,0"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "34"))
                  (rule "greater_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "49"))
                  (rule "mul_literals" (formula "4") (term "1,1,0"))
                  (rule "greater_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "cut_direct" (formula "50") (term "0"))
                  (branch "CUT: left ≤ -3 + quotient_2 * -2 + quotient_1 * -2 + quotient_0 TRUE"
                     (builtin "One Step Simplification" (formula "51"))
                     (rule "allRight" (formula "51") (inst "sk=f_0"))
                     (rule "allRight" (formula "51") (inst "sk=o_0"))
                     (rule "orRight" (formula "51"))
                     (rule "orRight" (formula "51"))
                     (rule "orRight" (formula "51"))
                     (rule "orRight" (formula "51"))
                     (rule "orRight" (formula "51"))
                     (rule "orRight" (formula "51"))
                     (rule "replace_known_right" (formula "57") (term "0,2,0") (ifseqformula "54"))
                     (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "55")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                     (rule "closeTrue" (formula "57"))
                  )
                  (branch "CUT: left ≤ -3 + quotient_2 * -2 + quotient_1 * -2 + quotient_0 FALSE"
                     (builtin "One Step Simplification" (formula "51"))
                     (rule "false_right" (formula "51"))
                     (rule "inEqSimp_leqRight" (formula "50"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                     (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "8"))
                     (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,0,1"))
                     (rule "mul_literals" (formula "32") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "1,1,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0"))
                     (rule "add_zero_right" (formula "19") (term "0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,1,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0"))
                     (rule "add_zero_right" (formula "8") (term "0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "31") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                     (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1"))
                     (rule "add_literals" (formula "21") (term "1,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0"))
                     (rule "add_zero_right" (formula "13") (term "0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,0"))
                     (rule "times_zero_1" (formula "9") (term "0"))
                     (rule "qeq_literals" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "applyEq" (formula "37") (term "0,1,1") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,0,1,1"))
                     (rule "mul_literals" (formula "37") (term "0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "37") (term "1"))
                     (rule "polySimp_addComm0" (formula "37") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "37") (term "1"))
                     (rule "add_literals" (formula "37") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                     (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "36") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                     (rule "add_literals" (formula "36") (term "1,1,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0"))
                     (rule "add_zero_right" (formula "36") (term "0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0"))
                     (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1"))
                     (rule "add_literals" (formula "21") (term "1,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                     (rule "add_literals" (formula "21") (term "0,0,0,1"))
                     (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "34") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                     (rule "add_literals" (formula "34") (term "1,1,0"))
                     (rule "times_zero_1" (formula "34") (term "1,0"))
                     (rule "add_zero_right" (formula "34") (term "0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                     (rule "add_literals" (formula "34") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0"))
                     (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                     (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,0,1,1"))
                     (rule "mul_literals" (formula "38") (term "0,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "1"))
                     (rule "add_literals" (formula "38") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1"))
                     (rule "applyEq" (formula "47") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "47"))
                     (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "47") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "47") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "47") (term "0"))
                     (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                     (rule "add_literals" (formula "47") (term "1,1,0"))
                     (rule "times_zero_1" (formula "47") (term "1,0"))
                     (rule "add_zero_right" (formula "47") (term "0"))
                     (rule "polySimp_addAssoc" (formula "47") (term "0"))
                     (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                     (rule "add_literals" (formula "47") (term "0,0,0"))
                     (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "1"))
                     (rule "polySimp_addAssoc" (formula "50") (term "1"))
                     (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                     (rule "add_literals" (formula "50") (term "0,0,0,1"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "5") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,1,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0"))
                     (rule "add_zero_right" (formula "5") (term "0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                     (rule "add_literals" (formula "5") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0"))
                     (rule "applyEq" (formula "46") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,0"))
                     (rule "times_zero_1" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "10") (term "0,1,0,0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                     (rule "applyEq" (formula "21") (term "0,1,0,0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "mul_literals" (formula "11") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1"))
                     (rule "polySimp_rightDist" (formula "34") (term "1"))
                     (rule "mul_literals" (formula "34") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1"))
                     (rule "mul_literals" (formula "45") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1"))
                     (rule "polySimp_rightDist" (formula "44") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "44") (term "0,1"))
                     (rule "mul_literals" (formula "44") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_subsumption5" (formula "7") (ifseqformula "30"))
                     (rule "greater_literals" (formula "7") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "greater_literals" (formula "7") (term "0,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0,0"))
                     (rule "mul_literals" (formula "33") (term "0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                     (rule "add_literals" (formula "33") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0,0"))
                     (rule "add_zero_right" (formula "33") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                     (rule "add_literals" (formula "33") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0,0"))
                     (rule "add_zero_right" (formula "33") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                     (rule "add_literals" (formula "33") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0,0"))
                     (rule "add_zero_right" (formula "33") (term "0,0"))
                     (rule "qeq_literals" (formula "33") (term "0"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "true_left" (formula "33"))
                     (rule "inEqSimp_subsumption2" (formula "32") (ifseqformula "4"))
                     (rule "greater_literals" (formula "32") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "greater_literals" (formula "32") (term "0,0"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                     (rule "mul_literals" (formula "32") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0"))
                     (rule "qeq_literals" (formula "32") (term "0"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "inEqSimp_subsumption5" (formula "30") (ifseqformula "29"))
                     (rule "greater_literals" (formula "30") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "greater_literals" (formula "30") (term "0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                     (rule "mul_literals" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0"))
                     (rule "qeq_literals" (formula "30") (term "0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "30"))
                     (rule "greater_literals" (formula "4") (term "0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "elimGcdGeq_antec" (formula "38") (inst "elimGcdRightDiv=add(Z(1(1(#))), mul(quotient_2, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "38") (term "0,0"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0"))
                     (rule "add_zero_right" (formula "38") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0"))
                     (rule "add_zero_right" (formula "38") (term "0,0"))
                     (rule "leq_literals" (formula "38") (term "0"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "38"))
                     (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "qeq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_2)") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_2)") (inst "elimGcdLeftDiv=mul(quotient_1, Z(5(1(#))))") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "14") (term "0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                     (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0"))
                     (rule "qeq_literals" (formula "14") (term "0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=mul(quotient_1, Z(neglit(1(#))))"))
                     (rule "equal_literals" (formula "26") (term "0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,1,1,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,1,1,1,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0,0,1,1,1,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,1,1,1,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=mul(quotient_2, Z(neglit(1(#))))"))
                     (rule "equal_literals" (formula "26") (term "0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,1,1,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,1,1,1,0"))
                     (rule "add_literals" (formula "26") (term "1,1,0,0,0,1,1,1,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,1,1,1,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "polyDiv_pullOut" (formula "26") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                     (rule "equal_literals" (formula "26") (term "0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,1,1,1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,1,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,1,1,1,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "29"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,0"))
                     (rule "times_zero_1" (formula "7") (term "0"))
                     (rule "leq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "6"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "30") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq0" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0"))
                     (rule "add_zero_right" (formula "11") (term "0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0"))
                     (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "6"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0"))
                     (rule "polySimp_pullOutFactor3" (formula "12") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "25") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                     (rule "add_literals" (formula "25") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0"))
                     (rule "applyEq" (formula "40") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "40"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "40") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "40") (term "0"))
                     (rule "add_literals" (formula "40") (term "1,1,0"))
                     (rule "times_zero_1" (formula "40") (term "1,0"))
                     (rule "add_zero_right" (formula "40") (term "0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0"))
                     (rule "add_literals" (formula "40") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                     (rule "add_literals" (formula "40") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                     (rule "add_literals" (formula "40") (term "1,1,0,0"))
                     (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "6"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0"))
                     (rule "polySimp_pullOutFactor3" (formula "18") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,1,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0"))
                     (rule "add_zero_right" (formula "10") (term "0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq0" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,1,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0"))
                     (rule "add_zero_right" (formula "17") (term "0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq0" (formula "29"))
                     (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                     (rule "add_literals" (formula "29") (term "1,0"))
                     (rule "times_zero_1" (formula "29") (term "0"))
                     (rule "qeq_literals" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "6"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0"))
                     (rule "polySimp_pullOutFactor3" (formula "13") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                     (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "6"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "26") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "26") (term "0,0"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                     (rule "add_literals" (formula "16") (term "1,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0"))
                     (rule "add_zero_right" (formula "16") (term "0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0"))
                     (rule "add_literals" (formula "16") (term "1,1,0"))
                     (rule "polySimp_pullOutFactor3" (formula "16") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                     (rule "mul_literals" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                     (rule "applyEq" (formula "7") (term "1,0,0") (ifseqformula "6"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "polySimp_pullOutFactor3" (formula "7") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "39"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1"))
                     (rule "polySimp_rightDist" (formula "17") (term "1"))
                     (rule "mul_literals" (formula "17") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1"))
                     (rule "polySimp_rightDist" (formula "16") (term "1"))
                     (rule "mul_literals" (formula "16") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                     (rule "inEqSimp_subsumption6" (formula "39") (ifseqformula "36"))
                     (rule "greater_literals" (formula "39") (term "0,0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                     (rule "add_literals" (formula "39") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0"))
                     (rule "qeq_literals" (formula "39") (term "0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "true_left" (formula "39"))
                     (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "8"))
                     (rule "greater_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_subsumption5" (formula "16") (ifseqformula "26"))
                     (rule "greater_literals" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "greater_literals" (formula "16") (term "0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                     (rule "mul_literals" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0"))
                     (rule "qeq_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "30"))
                     (rule "greater_literals" (formula "23") (term "0,0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "mul_literals" (formula "23") (term "1,0"))
                     (rule "leq_literals" (formula "23") (term "0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "inEqSimp_subsumption2" (formula "15") (ifseqformula "13"))
                     (rule "greater_literals" (formula "15") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "greater_literals" (formula "15") (term "0,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0"))
                     (rule "qeq_literals" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_subsumption4" (formula "10") (ifseqformula "24"))
                     (rule "greater_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0"))
                     (rule "qeq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "polyDiv_pullOut" (formula "7") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "7") (term "0,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,1,1,1,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,1,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "polyDiv_pullOut" (formula "21") (term "0") (inst "polyDivCoeff=quotient_0"))
                     (rule "equal_literals" (formula "21") (term "0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "21"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "polyDiv_pullOut" (formula "21") (term "0") (inst "polyDivCoeff=quotient_1"))
                     (rule "equal_literals" (formula "21") (term "0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0"))
                     (rule "polySimp_homoEq" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "polyDiv_pullOut" (formula "21") (term "0") (inst "polyDivCoeff=quotient_2"))
                     (rule "equal_literals" (formula "21") (term "0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0"))
                     (rule "div_literals" (formula "21") (term "0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "2"))
                     (rule "greater_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "mul_literals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "inEqSimp_contradInEq5" (formula "8") (ifseqformula "33"))
                     (rule "greater_literals" (formula "8") (term "0,0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1,0"))
                     (rule "qeq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "closeFalse" (formula "8"))
                  )
               )
               (branch "CUT: right ≥ 3 + quotient_2 * 2 + quotient_1 * 2 + quotient_0 FALSE"
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "false_right" (formula "38"))
                  (rule "inEqSimp_geqRight" (formula "37"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0,1"))
                  (rule "mul_literals" (formula "27") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                  (rule "mul_literals" (formula "40") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "40") (term "0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                  (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "1"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0,1"))
                  (rule "mul_literals" (formula "23") (term "0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                  (rule "mul_literals" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,1"))
                  (rule "mul_literals" (formula "22") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                  (rule "mul_literals" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1"))
                  (rule "polySimp_rightDist" (formula "19") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                  (rule "mul_literals" (formula "19") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "39") (term "0,0"))
                  (rule "add_zero_left" (formula "39") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1"))
                  (rule "polySimp_rightDist" (formula "39") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                  (rule "mul_literals" (formula "39") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "29") (term "0"))
                  (rule "add_literals" (formula "29") (term "1,1,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0"))
                  (rule "add_zero_right" (formula "29") (term "0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                  (rule "mul_literals" (formula "29") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                  (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcdRightDiv=add(Z(neglit(3(#))), quotient_2)") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "29") (term "0,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0"))
                  (rule "add_zero_right" (formula "29") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0"))
                  (rule "add_zero_right" (formula "29") (term "0,0"))
                  (rule "leq_literals" (formula "29") (term "0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "28") (term "0"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0"))
                  (rule "add_zero_right" (formula "28") (term "0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                  (rule "add_literals" (formula "28") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1"))
                  (rule "polySimp_rightDist" (formula "28") (term "1"))
                  (rule "mul_literals" (formula "28") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                  (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcdRightDiv=add(Z(neglit(7(1(#)))), mul(quotient_2, Z(3(#))))") (inst "elimGcdLeftDiv=mul(quotient_1, Z(7(1(#))))") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "28") (term "0,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0"))
                  (rule "leq_literals" (formula "28") (term "0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "31") (term "0"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0"))
                  (rule "add_zero_right" (formula "31") (term "0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=add(Z(3(#)), mul(quotient_2, Z(3(#))))") (inst "elimGcdLeftDiv=mul(quotient_1, Z(1(3(#))))") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "31") (term "0,0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "neg_literal" (formula "31") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0,0"))
                  (rule "add_zero_right" (formula "31") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0,0"))
                  (rule "add_zero_right" (formula "31") (term "0,0"))
                  (rule "qeq_literals" (formula "31") (term "0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                  (rule "mul_literals" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                  (rule "mul_literals" (formula "20") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                  (rule "mul_literals" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,1"))
                  (rule "mul_literals" (formula "25") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "31") (term "0"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0"))
                  (rule "add_zero_right" (formula "31") (term "0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0"))
                  (rule "add_literals" (formula "31") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=add(Z(7(1(#))), quotient_2)") (inst "elimGcdLeftDiv=mul(quotient_1, Z(5(1(#))))") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "31") (term "0,0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "neg_literal" (formula "31") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0,0"))
                  (rule "add_zero_right" (formula "31") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0,0"))
                  (rule "add_zero_right" (formula "31") (term "0,0"))
                  (rule "qeq_literals" (formula "31") (term "0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "50"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "mul_literals" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,1"))
                  (rule "mul_literals" (formula "21") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "51"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                  (rule "mul_literals" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,1"))
                  (rule "mul_literals" (formula "27") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "52"))
                  (rule "times_zero_1" (formula "48") (term "0,0"))
                  (rule "add_zero_left" (formula "48") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "48") (term "0,1"))
                  (rule "mul_literals" (formula "48") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "13"))
                  (rule "times_zero_1" (formula "49") (term "0,0"))
                  (rule "add_zero_left" (formula "49") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                  (rule "mul_literals" (formula "49") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "54"))
                  (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "0,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "37") (term "0"))
                  (rule "add_literals" (formula "37") (term "1,1,0"))
                  (rule "times_zero_1" (formula "37") (term "1,0"))
                  (rule "add_zero_right" (formula "37") (term "0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                  (rule "add_literals" (formula "37") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1"))
                  (rule "polySimp_rightDist" (formula "37") (term "1"))
                  (rule "mul_literals" (formula "37") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "55"))
                  (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "0,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "34") (term "0"))
                  (rule "add_literals" (formula "34") (term "1,1,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0"))
                  (rule "add_zero_right" (formula "34") (term "0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "34") (term "0"))
                  (rule "add_literals" (formula "34") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1"))
                  (rule "polySimp_rightDist" (formula "34") (term "1"))
                  (rule "mul_literals" (formula "34") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                  (rule "elimGcdGeq_antec" (formula "34") (inst "elimGcdRightDiv=add(Z(7(#)), mul(quotient_2, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(quotient_1, Z(7(1(#))))") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "34") (term "0,0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0"))
                  (rule "leq_literals" (formula "34") (term "0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "elimGcdGeq_antec" (formula "38") (inst "elimGcdRightDiv=add(Z(1(2(#))), mul(quotient_2, Z(neglit(3(#)))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "38") (term "0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                  (rule "add_literals" (formula "38") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                  (rule "add_literals" (formula "38") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0"))
                  (rule "leq_literals" (formula "38") (term "0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "29") (term "0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                  (rule "add_literals" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "29") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,1"))
                  (rule "mul_literals" (formula "29") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0"))
                  (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "41") (term "0"))
                  (rule "add_literals" (formula "41") (term "1,1,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0"))
                  (rule "add_zero_right" (formula "41") (term "0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0"))
                  (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0"))
                  (rule "add_literals" (formula "41") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1"))
                  (rule "polySimp_rightDist" (formula "41") (term "1"))
                  (rule "mul_literals" (formula "41") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "30") (term "0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0"))
                  (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1"))
                  (rule "polySimp_rightDist" (formula "30") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,1"))
                  (rule "mul_literals" (formula "30") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "31") (term "0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1"))
                  (rule "polySimp_rightDist" (formula "31") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,1"))
                  (rule "mul_literals" (formula "31") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "60"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "32") (term "0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,1"))
                  (rule "mul_literals" (formula "32") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1"))
                  (rule "inEqSimp_subsumption6" (formula "32") (ifseqformula "55"))
                  (rule "greater_literals" (formula "32") (term "0,0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "32") (term "1,0,0"))
                  (rule "add_zero_right" (formula "32") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "32") (term "1,0,0"))
                  (rule "add_zero_right" (formula "32") (term "0,0"))
                  (rule "qeq_literals" (formula "32") (term "0"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "13"))
                  (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "44") (term "0"))
                  (rule "add_literals" (formula "44") (term "1,1,0"))
                  (rule "times_zero_1" (formula "44") (term "1,0"))
                  (rule "add_zero_right" (formula "44") (term "0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "44") (term "0"))
                  (rule "add_literals" (formula "44") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                  (rule "add_literals" (formula "44") (term "1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                  (rule "inEqSimp_subsumption2" (formula "36") (ifseqformula "44"))
                  (rule "greater_literals" (formula "36") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "36"))
                  (rule "greater_literals" (formula "36") (term "0,0"))
                  (builtin "One Step Simplification" (formula "36"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                  (rule "mul_literals" (formula "36") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                  (rule "add_literals" (formula "36") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "36") (term "1,0,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0"))
                  (rule "qeq_literals" (formula "36") (term "0"))
                  (builtin "One Step Simplification" (formula "36"))
                  (rule "true_left" (formula "36"))
                  (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "44") (term "0"))
                  (rule "add_literals" (formula "44") (term "1,1,0"))
                  (rule "times_zero_1" (formula "44") (term "1,0"))
                  (rule "add_zero_right" (formula "44") (term "0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                  (rule "add_literals" (formula "44") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                  (rule "add_literals" (formula "44") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1"))
                  (rule "polySimp_rightDist" (formula "44") (term "1"))
                  (rule "mul_literals" (formula "44") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "58"))
                  (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "45") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "45") (term "0"))
                  (rule "add_literals" (formula "45") (term "1,1,0"))
                  (rule "times_zero_1" (formula "45") (term "1,0"))
                  (rule "add_zero_right" (formula "45") (term "0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                  (rule "add_literals" (formula "45") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1"))
                  (rule "polySimp_rightDist" (formula "45") (term "1"))
                  (rule "mul_literals" (formula "45") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "32") (term "0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0"))
                  (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "0,1"))
                  (rule "mul_literals" (formula "32") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "60"))
                  (rule "polySimp_rightDist" (formula "33") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "33") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "33") (term "0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1"))
                  (rule "polySimp_rightDist" (formula "33") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "33") (term "0,1"))
                  (rule "mul_literals" (formula "33") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "48") (term "0"))
                  (rule "add_literals" (formula "48") (term "1,1,0"))
                  (rule "times_zero_1" (formula "48") (term "1,0"))
                  (rule "add_zero_right" (formula "48") (term "0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "48") (term "0"))
                  (rule "add_literals" (formula "48") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "65"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "49") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "49") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "49") (term "0"))
                  (rule "add_literals" (formula "49") (term "1,1,0"))
                  (rule "times_zero_1" (formula "49") (term "1,0"))
                  (rule "add_zero_right" (formula "49") (term "0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "49") (term "0"))
                  (rule "add_literals" (formula "49") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                  (rule "add_literals" (formula "49") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                  (rule "add_literals" (formula "49") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1"))
                  (rule "mul_literals" (formula "49") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                  (rule "inEqSimp_subsumption2" (formula "48") (ifseqformula "45"))
                  (rule "greater_literals" (formula "48") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "greater_literals" (formula "48") (term "0,0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                  (rule "mul_literals" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                  (rule "add_literals" (formula "48") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "48") (term "1,0,0"))
                  (rule "add_zero_right" (formula "48") (term "0,0"))
                  (rule "qeq_literals" (formula "48") (term "0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "true_left" (formula "48"))
                  (rule "inEqSimp_subsumption5" (formula "48") (ifseqformula "47"))
                  (rule "greater_literals" (formula "48") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "greater_literals" (formula "48") (term "0,0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                  (rule "mul_literals" (formula "48") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                  (rule "mul_literals" (formula "48") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                  (rule "polySimp_pullOutFactor1" (formula "48") (term "0,0"))
                  (rule "add_literals" (formula "48") (term "1,0,0"))
                  (rule "times_zero_1" (formula "48") (term "0,0"))
                  (rule "qeq_literals" (formula "48") (term "0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "true_left" (formula "48"))
                  (rule "inEqSimp_subsumption5" (formula "46") (ifseqformula "44"))
                  (rule "greater_literals" (formula "46") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "46"))
                  (rule "greater_literals" (formula "46") (term "0,0"))
                  (builtin "One Step Simplification" (formula "46"))
                  (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                  (rule "mul_literals" (formula "46") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                  (rule "add_literals" (formula "46") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                  (rule "add_literals" (formula "46") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "46") (term "1,0,0"))
                  (rule "add_zero_right" (formula "46") (term "0,0"))
                  (rule "qeq_literals" (formula "46") (term "0"))
                  (builtin "One Step Simplification" (formula "46"))
                  (rule "true_left" (formula "46"))
                  (rule "inEqSimp_exactShadow2" (formula "40") (ifseqformula "41"))
                  (rule "greater_literals" (formula "40") (term "0"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                  (rule "mul_literals" (formula "40") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0"))
                  (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "40") (term "0"))
                  (rule "add_literals" (formula "40") (term "1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                  (rule "inEqSimp_contradInEq5" (formula "40") (ifseqformula "63"))
                  (rule "greater_literals" (formula "40") (term "0,0"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "mul_literals" (formula "40") (term "1,0"))
                  (rule "qeq_literals" (formula "40") (term "0"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "closeFalse" (formula "40"))
               )
            )
            (branch "CUT: quotient_1 ≥ quotient_2 * -1 FALSE"
               (builtin "One Step Simplification" (formula "37"))
               (rule "false_right" (formula "37"))
               (rule "inEqSimp_geqRight" (formula "36"))
               (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "inEqSimp_exactShadow1" (formula "4") (ifseqformula "1"))
               (rule "greater_literals" (formula "4") (term "0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "polySimp_rightDist" (formula "4") (term "0,0"))
               (rule "mul_literals" (formula "4") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
               (rule "inEqSimp_contradInEq5" (formula "4") (ifseqformula "36"))
               (rule "greater_literals" (formula "4") (term "0,0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1,0"))
               (rule "qeq_literals" (formula "4") (term "0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "closeFalse" (formula "4"))
            )
         )
         (branch "left + right ≥ 0 FALSE"
            (rule "replaceKnownSelect_taclet000_0" (formula "8") (term "1,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "8") (term "1,1,0,0,0,0"))
            (rule "castDel" (formula "8") (term "0,1,0,0,0"))
            (rule "eqSymm" (formula "8") (term "1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "0,0,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "8") (term "1,0,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,0,0,1,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,0,1,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,0,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,1,1,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,1,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,1,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,1,0,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,1,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,0,1,1,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,1,1,0,0,0,0,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,0"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,1,2,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,0,1,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,1,1,2,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,0,1,0,1,0,0,1"))
            (rule "polySimp_elimNeg" (formula "8") (term "1,0,0,0,1,1,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1"))
            (rule "inEqSimp_geqRight" (formula "7"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,1,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,0,0,0,1,0,0,0"))
            (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,0,0,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_homoInEq1" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "1,0,0,0,1,0,0"))
            (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,0,0,0,1,0,0,0"))
            (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "applyEq" (formula "8") (term "1,2,2,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "1,0,0,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "1,0,0,1,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "1,0,0,1,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "1,0,0,1,2,2,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "8") (term "0,1,0,0,0,0,0,0") (ifseqformula "2"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0,0,0"))
            (rule "applyEq" (formula "8") (term "1,0,0,1,2,0,1,0,0,1") (ifseqformula "2"))
            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
            (rule "polySimp_elimOne" (formula "7") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,1,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "qeq_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1,0,0,0") (inst "polyDivCoeff=mul(right, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,1,0,0,0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,1,0,0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0"))
            (rule "polyDiv_pullOut" (formula "2") (term "0,1") (inst "polyDivCoeff=mul(right, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "2") (term "0,0,1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1"))
            (rule "add_literals" (formula "2") (term "1,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
            (rule "polySimp_elimOne" (formula "2") (term "0,1"))
            (rule "polyDiv_pullOut" (formula "2") (term "0,1,1") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0,1,1"))
            (rule "equal_literals" (formula "2") (term "0,0,1,1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
            (rule "polySimp_addComm0" (formula "2") (term "1,1,1"))
            (rule "polySimp_addComm1" (formula "2") (term "0,1,1,1,1"))
            (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,1,1,1"))
            (rule "add_literals" (formula "2") (term "1,0,0,1,1,1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,1,1,1,1"))
            (rule "polySimp_rightDist" (formula "2") (term "1,1"))
            (rule "polySimp_mulAssoc" (formula "2") (term "0,1,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "0,1,1"))
            (rule "polySimp_addAssoc" (formula "2") (term "1"))
            (rule "polySimp_addComm0" (formula "2") (term "0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1,0,0,0") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0,1,0,1,0,0,0"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,1,0,0,0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,1,0,1,0,0,0"))
            (rule "add_literals" (formula "7") (term "1,0,0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,1,0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,0,1,0,0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,0,1,0,0,0"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,0,1,0,1,0,0,1") (inst "polyDivCoeff=mul(right, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,0,1,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,0,1,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,0,0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,0,1,0,1,0,0,1") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,0,1,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,1,0,0,1,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,0,0,0,1,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,1,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,1,0,0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "1,0,1,1,0") (inst "polyDivCoeff=mul(right, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,1,0,1,1,0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,1,0,1,1,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "7") (term "1,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,1,1,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,1,1,0"))
            (rule "polyDiv_pullOut" (formula "7") (term "1,0,1,1,0") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,1,0,1,1,0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "7") (term "1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0,1,1,0,1,1,0"))
            (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,1,1,0,1,1,0"))
            (rule "add_literals" (formula "7") (term "1,0,0,1,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "7") (term "0,0,1,1,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,0"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,0,1,2,2,2,0,1,0,0,1") (inst "polyDivCoeff=mul(right, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,0,1,2,2,2,0,1,0,0,1") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,0,0,0,1,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,2,2,2,0,1,0,0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,0,1,2,2,0,1,0,0,1") (inst "polyDivCoeff=mul(right, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,2,2,0,1,0,0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,0,1,2,2,0,1,0,0,1") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,0,0,0,1,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,2,2,0,1,0,0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,0,1,2,0,1,0,0,1") (inst "polyDivCoeff=mul(right, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,0,1,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,0,1,2,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,2,0,1,0,0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,0,1,2,0,1,0,0,1") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
            (rule "equal_literals" (formula "7") (term "0,0,1,0,0,1,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,1,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,1,0,0,1,2,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,0,0,0,1,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,2,0,1,0,0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,2,2,2,2,0,1,0,0,1") (inst "polyDivCoeff=mul(right, Z(neglit(1(#))))"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0,1,2,2,2,2,0,1,0,0,1"))
            (rule "equal_literals" (formula "7") (term "0,0,1,2,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,2,2,2,2,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,2,2,2,2,0,1,0,0,1"))
            (rule "polyDiv_pullOut" (formula "7") (term "0,1,1,2,2,2,2,0,1,0,0,1") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "equal_literals" (formula "7") (term "0,0,1,1,2,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,1,1,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,1,1,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "add_literals" (formula "7") (term "1,0,0,1,1,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,0,1,1,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "7") (term "1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "7") (term "0,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "7") (term "0,1,1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "7") (term "1,2,2,2,2,0,1,0,0,1"))
            (rule "polySimp_addComm0" (formula "7") (term "0,1,2,2,2,2,0,1,0,0,1"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
            (rule "mul_literals" (formula "6") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "inEqSimp_contradInEq5" (formula "6") (ifseqformula "5"))
            (rule "greater_literals" (formula "6") (term "0,0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "times_zero_1" (formula "6") (term "1,0"))
            (rule "qeq_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "closeFalse" (formula "6"))
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "6"))
         (rule "equal_literals" (formula "6") (term "0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "closeTrue" (formula "6"))
      )
   )
   (branch "Case 2"
      (builtin "One Step Simplification" (formula "6"))
      (rule "equal_literals" (formula "6") (term "0"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "closeTrue" (formula "6"))
   )
)
(branch "Case 2"
   (builtin "One Step Simplification" (formula "6"))
   (rule "equal_literals" (formula "6") (term "0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "closeTrue" (formula "6"))
)
)

}
